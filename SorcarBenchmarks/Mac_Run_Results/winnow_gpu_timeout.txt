#################
Tue May 11 20:57:15 UTC 2021
KEY=awinnow
OUTPUT=/root/Docker/winnow_gpu_timeout.txt
[TRACE] Using prover: /root/Docker/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/root/Docker/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a winnow
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/errorLimit:1
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/AMD_SDK/HistogramAtomics/kernel1/kernel.bpl.ice2.bpl
--------------------
Parsing /root/Docker/benchmarks/BenchmarksCompiled/awinnow/AMD_SDK/HistogramAtomics/kernel1/kernel.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /root/Docker/z3/bin/z3
#parameters: 69
Generating VC of $histogramKernel
Verifying $histogramKernel: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.17773
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/AMD_SDK/HistogramAtomics/kernel1/kernel.bpl.ice2.bpl
Total learner time was 00:00:00.1189850
Verifying $histogramKernel: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool) : bool
{
  0 + (if b0000 then 0 else 27000) + (if b0001 then 0 else 27000) + (if b0002 then 0 else 27000) + (if b0003 then 0 else 27000) + (if b0004 then 0 else 27000) + (if b0005 then 0 else 27000) + (if b0006 then 0 else 27000) + (if b0007 then 0 else 27000) + (if b0008 then 0 else 27000) + (if b0009 then 0 else 27000) + (if b0010 then 0 else 27000) + (if b0011 then 0 else 27000) + (if b0012 then 0 else 27000) + (if b0013 then 0 else 27000) + (if b0014 then 0 else 27000) + (if b0015 then 0 else 27000) + (if b0016 then 0 else 27000) + (if b0017 then 0 else 27000) + (if b0018 then 0 else 27000) + (if b0019 then 0 else 27000) + (if b0020 then 0 else 27000) + (if b0021 then 0 else 27000) + (if b0022 then 0 else 27000) + (if b0023 then 0 else 27000) + (if b0024 then 0 else 27000) + (if b0025 then 0 else 27000) + (if b0026 then 0 else 27000) + (if b0027 then 0 else 27000) + (if b0028 then 0 else 27000) + (if b0029 then 0 else 27000) + (if b0030 then 0 else 27000) + (if b0031 then 0 else 27000) + (if b0032 then 0 else 27000) + (if b0033 then 0 else 27000) + (if b0034 then 0 else 27000) + (if b0035 then 0 else 27000) + (if b0036 then 0 else 27000) + (if b0037 then 0 else 27000) + (if b0038 then 0 else 27000) + (if b0039 then 0 else 27000) + (if b0040 then 0 else 27000) + (if b0041 then 0 else 27000) + (if b0042 then 0 else 27000) + (if b0043 then 0 else 27000) + (if b0044 then 0 else 27000) + (if b0045 then 0 else 27000) + (if b0046 then 0 else 27000) + (if b0047 then 0 else 27000) + (if b0048 then 0 else 27000) + (if b0049 then 0 else 27000) + (if b0050 then 0 else 27000) + (if b0051 then 0 else 27000) + (if b0052 then 0 else 27000) + (if b0053 then 0 else 27000) + (if b0054 then 0 else 27000) + (if b0055 then 0 else 27000) + (if b0056 then 0 else 27000) + (if b0057 then 0 else 27000) + (if b0058 then 0 else 27000) + (if b0059 then 0 else 27000) + (if b0060 then 0 else 27000) + (if b0061 then 0 else 27000) + (if b0062 then 0 else 27000) + (if b0063 then 0 else 27000) + (if b0064 then 0 else 27000) + (if b0065 then 0 else 27000) + (if b0066 then 0 else 27000) + (if b0067 then 0 else 27000) + (if b0068 then 0 else 27000) < 441
}
Prover Time taken = 220.829824
Added Horn clause: 0 && 0 => 1
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/AMD_SDK/HistogramAtomics/kernel1/kernel.bpl.ice2.bpl
Total learner time was 00:00:00.1194430
Verifying $histogramKernel: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool) : bool
{
  0 + (if b0000 then 0 else 27000) + (if b0001 then 0 else 27000) + (if b0002 then 0 else 27000) + (if b0003 then 0 else 27000) + (if b0004 then 0 else 27000) + (if b0005 then 0 else 27000) + (if b0006 then 0 else 27000) + (if b0007 then 0 else 27000) + (if b0008 then 0 else 27000) + (if b0009 then 0 else 27000) + (if b0010 then 0 else 27000) + (if b0011 then 0 else 27000) + (if b0012 then 0 else 27000) + (if b0013 then 0 else 27000) + (if b0014 then 0 else 27000) + (if b0015 then 0 else 27000) + (if b0016 then 0 else 27000) + (if b0017 then 0 else 27000) + (if b0018 then 0 else 27000) + (if b0019 then 0 else 27000) + (if b0020 then 0 else 27000) + (if b0022 then 0 else 27000) + (if b0024 then 0 else 27000) + (if b0025 then 0 else 27000) + (if b0026 then 0 else 27000) + (if b0028 then 0 else 27000) + (if b0030 then 0 else 27000) + (if b0032 then 0 else 27000) + (if b0034 then 0 else 27000) + (if b0036 then 0 else 27000) + (if b0038 then 0 else 27000) + (if b0040 then 0 else 27000) + (if b0042 then 0 else 27000) + (if b0044 then 0 else 27000) + (if b0045 then 0 else 27000) + (if b0048 then 0 else 27000) + (if b0050 then 0 else 27000) + (if b0052 then 0 else 27000) + (if b0054 then 0 else 27000) + (if b0056 then 0 else 27000) + (if b0057 then 0 else 27000) + (if b0060 then 0 else 27000) + (if b0062 then 0 else 27000) + (if b0063 then 0 else 27000) + (if b0064 then 0 else 27000) + (if b0066 then 0 else 27000) + (if b0068 then 0 else 27000) < 441
}
Prover Time taken = 80.408133
Added Horn clause: 0 && 0 => 2
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/AMD_SDK/HistogramAtomics/kernel1/kernel.bpl.ice2.bpl
Total learner time was 00:00:00.1211610
Verifying $histogramKernel: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool) : bool
{
  0 + (if b0000 then 0 else 27000) + (if b0001 then 0 else 27000) + (if b0002 then 0 else 27000) + (if b0003 then 0 else 27000) + (if b0004 then 0 else 27000) + (if b0005 then 0 else 27000) + (if b0006 then 0 else 27000) + (if b0007 then 0 else 27000) + (if b0008 then 0 else 27000) + (if b0009 then 0 else 27000) + (if b0010 then 0 else 27000) + (if b0011 then 0 else 27000) + (if b0012 then 0 else 27000) + (if b0013 then 0 else 27000) + (if b0014 then 0 else 27000) + (if b0015 then 0 else 27000) + (if b0016 then 0 else 27000) + (if b0017 then 0 else 27000) + (if b0018 then 0 else 27000) + (if b0019 then 0 else 27000) + (if b0020 then 0 else 27000) + (if b0022 then 0 else 27000) + (if b0026 then 0 else 27000) + (if b0028 then 0 else 27000) + (if b0032 then 0 else 27000) + (if b0036 then 0 else 27000) + (if b0040 then 0 else 27000) + (if b0044 then 0 else 27000) + (if b0048 then 0 else 27000) + (if b0050 then 0 else 27000) + (if b0052 then 0 else 27000) + (if b0054 then 0 else 27000) + (if b0056 then 0 else 27000) + (if b0060 then 0 else 27000) + (if b0062 then 0 else 27000) + (if b0064 then 0 else 27000) + (if b0068 then 0 else 27000) < 441
}
Prover Time taken = 187.923412
Added Horn clause: 0 && 0 => 3
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/AMD_SDK/HistogramAtomics/kernel1/kernel.bpl.ice2.bpl
Total learner time was 00:00:00.1207810
Verifying $histogramKernel: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool) : bool
{
  0 + (if b0000 then 0 else 27000) + (if b0001 then 0 else 27000) + (if b0002 then 0 else 27000) + (if b0003 then 0 else 27000) + (if b0004 then 0 else 27000) + (if b0005 then 0 else 27000) + (if b0006 then 0 else 27000) + (if b0007 then 0 else 27000) + (if b0008 then 0 else 27000) + (if b0009 then 0 else 27000) + (if b0010 then 0 else 27000) + (if b0011 then 0 else 27000) + (if b0013 then 0 else 27000) + (if b0015 then 0 else 27000) + (if b0016 then 0 else 27000) + (if b0017 then 0 else 27000) + (if b0018 then 0 else 27000) + (if b0019 then 0 else 27000) + (if b0020 then 0 else 27000) + (if b0022 then 0 else 27000) + (if b0026 then 0 else 27000) + (if b0028 then 0 else 27000) + (if b0032 then 0 else 27000) + (if b0036 then 0 else 27000) + (if b0040 then 0 else 27000) + (if b0044 then 0 else 27000) + (if b0048 then 0 else 27000) + (if b0050 then 0 else 27000) + (if b0052 then 0 else 27000) + (if b0054 then 0 else 27000) + (if b0056 then 0 else 27000) + (if b0060 then 0 else 27000) + (if b0062 then 0 else 27000) + (if b0064 then 0 else 27000) + (if b0068 then 0 else 27000) < 441
}
Prover Time taken = 164.999156
Added Horn clause: 0 && 0 => 4
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/AMD_SDK/HistogramAtomics/kernel1/kernel.bpl.ice2.bpl
Total learner time was 00:00:00.1197250
Verifying $histogramKernel: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool) : bool
{
  0 + (if b0000 then 0 else 27000) + (if b0001 then 0 else 27000) + (if b0002 then 0 else 27000) + (if b0003 then 0 else 27000) + (if b0004 then 0 else 27000) + (if b0005 then 0 else 27000) + (if b0006 then 0 else 27000) + (if b0007 then 0 else 27000) + (if b0008 then 0 else 27000) + (if b0009 then 0 else 27000) + (if b0010 then 0 else 27000) + (if b0011 then 0 else 27000) + (if b0013 then 0 else 27000) + (if b0015 then 0 else 27000) + (if b0016 then 0 else 27000) + (if b0017 then 0 else 27000) + (if b0018 then 0 else 27000) + (if b0019 then 0 else 27000) + (if b0020 then 0 else 27000) + (if b0022 then 0 else 27000) + (if b0026 then 0 else 27000) + (if b0032 then 0 else 27000) + (if b0036 then 0 else 27000) + (if b0040 then 0 else 27000) + (if b0048 then 0 else 27000) + (if b0062 then 0 else 27000) + (if b0068 then 0 else 27000) < 441
}
Prover Time taken = 129.808826
Added Horn clause: 0 && 0 => 5
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/AMD_SDK/HistogramAtomics/kernel1/kernel.bpl.ice2.bpl
Total learner time was 00:00:00.1214440
Verifying $histogramKernel: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool) : bool
{
  0 + (if b0000 then 0 else 27000) + (if b0001 then 0 else 27000) + (if b0002 then 0 else 27000) + (if b0003 then 0 else 27000) + (if b0004 then 0 else 27000) + (if b0005 then 0 else 27000) + (if b0006 then 0 else 27000) + (if b0007 then 0 else 27000) + (if b0008 then 0 else 27000) + (if b0009 then 0 else 27000) + (if b0010 then 0 else 27000) + (if b0011 then 0 else 27000) + (if b0013 then 0 else 27000) + (if b0015 then 0 else 27000) + (if b0016 then 0 else 27000) + (if b0017 then 0 else 27000) + (if b0018 then 0 else 27000) + (if b0019 then 0 else 27000) + (if b0020 then 0 else 27000) + (if b0026 then 0 else 27000) + (if b0036 then 0 else 27000) + (if b0040 then 0 else 27000) + (if b0048 then 0 else 27000) + (if b0062 then 0 else 27000) < 441
}
Prover Time taken = 200.02496
Added Horn clause: 0 && 0 => 6
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/AMD_SDK/HistogramAtomics/kernel1/kernel.bpl.ice2.bpl
Total learner time was 00:00:00.1208560
Verifying $histogramKernel: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool) : bool
{
  0 + (if b0000 then 0 else 27000) + (if b0001 then 0 else 27000) + (if b0002 then 0 else 27000) + (if b0003 then 0 else 27000) + (if b0004 then 0 else 27000) + (if b0005 then 0 else 27000) + (if b0006 then 0 else 27000) + (if b0007 then 0 else 27000) + (if b0008 then 0 else 27000) + (if b0009 then 0 else 27000) + (if b0010 then 0 else 27000) + (if b0011 then 0 else 27000) + (if b0013 then 0 else 27000) + (if b0015 then 0 else 27000) + (if b0016 then 0 else 27000) + (if b0017 then 0 else 27000) + (if b0018 then 0 else 27000) + (if b0019 then 0 else 27000) + (if b0020 then 0 else 27000) + (if b0040 then 0 else 27000) + (if b0048 then 0 else 27000) + (if b0062 then 0 else 27000) < 441
}
Prover Time taken = 157.08701
Added Horn clause: 0 && 0 => 7
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/AMD_SDK/HistogramAtomics/kernel1/kernel.bpl.ice2.bpl
Total learner time was 00:00:00.1199900
Verifying $histogramKernel: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool) : bool
{
  0 + (if b0000 then 0 else 27000) + (if b0001 then 0 else 27000) + (if b0002 then 0 else 27000) + (if b0003 then 0 else 27000) + (if b0004 then 0 else 27000) + (if b0005 then 0 else 27000) + (if b0006 then 0 else 27000) + (if b0007 then 0 else 27000) + (if b0008 then 0 else 27000) + (if b0009 then 0 else 27000) + (if b0010 then 0 else 27000) + (if b0011 then 0 else 27000) + (if b0013 then 0 else 27000) + (if b0015 then 0 else 27000) + (if b0016 then 0 else 27000) + (if b0017 then 0 else 27000) + (if b0018 then 0 else 27000) + (if b0019 then 0 else 27000) + (if b0020 then 0 else 27000) + (if b0040 then 0 else 27000) < 441
}
Command exited with non-zero status 124
2.54user 3.22system 19:58.61elapsed 0%CPU (0avgtext+0avgdata 58696maxresident)k
0inputs+392outputs (1major+31986minor)pagefaults 0swaps
FILE:AMD_SDK/HistogramAtomics/kernel1/kernel.bpl.ice2.bpl
#################
Tue May 11 21:17:13 UTC 2021
KEY=awinnow
OUTPUT=/root/Docker/winnow_gpu_timeout.txt
[TRACE] Using prover: /root/Docker/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/root/Docker/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a winnow
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/errorLimit:1
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/2_Graphics/Mandelbrot/_Mandelbrot1.bpl.ice2.bpl
--------------------
Parsing /root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/2_Graphics/Mandelbrot/_Mandelbrot1.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /root/Docker/z3/bin/z3
#parameters: 256
Generating VC of $_Z11Mandelbrot1IfEvP6uchar4iiiT_S2_S2_S2_S2_S0_iiiib
Verifying $_Z11Mandelbrot1IfEvP6uchar4iiiT_S2_S2_S2_S2_S0_iiiib: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool, b0228: bool, b0229: bool, b0230: bool, b0231: bool, b0232: bool, b0233: bool, b0234: bool, b0235: bool, b0236: bool, b0237: bool, b0238: bool, b0239: bool, b0240: bool, b0241: bool, b0242: bool, b0243: bool, b0244: bool, b0245: bool, b0246: bool, b0247: bool, b0248: bool, b0249: bool, b0250: bool, b0251: bool, b0252: bool, b0253: bool, b0254: bool, b0255: bool) : bool
{
  false
}
Added: my_inv:1,1,0,1,0,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.240811
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/2_Graphics/Mandelbrot/_Mandelbrot1.bpl.ice2.bpl
Total learner time was 00:00:00.1217050
Verifying $_Z11Mandelbrot1IfEvP6uchar4iiiT_S2_S2_S2_S2_S0_iiiib: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool, b0228: bool, b0229: bool, b0230: bool, b0231: bool, b0232: bool, b0233: bool, b0234: bool, b0235: bool, b0236: bool, b0237: bool, b0238: bool, b0239: bool, b0240: bool, b0241: bool, b0242: bool, b0243: bool, b0244: bool, b0245: bool, b0246: bool, b0247: bool, b0248: bool, b0249: bool, b0250: bool, b0251: bool, b0252: bool, b0253: bool, b0254: bool, b0255: bool) : bool
{
  0 + (if b0000 then 0 else 102000) + (if b0001 then 0 else 102000) + (if b0003 then 0 else 102000) + (if b0005 then 0 else 102000) + (if b0007 then 0 else 102000) + (if b0009 then 0 else 102000) + (if b0010 then 0 else 102000) + (if b0011 then 0 else 102000) + (if b0012 then 0 else 102000) + (if b0013 then 0 else 102000) + (if b0014 then 0 else 102000) + (if b0015 then 0 else 102000) + (if b0016 then 0 else 102000) + (if b0017 then 0 else 102000) + (if b0018 then 0 else 102000) + (if b0019 then 0 else 102000) + (if b0020 then 0 else 102000) + (if b0021 then 0 else 102000) + (if b0022 then 0 else 102000) + (if b0023 then 0 else 102000) + (if b0024 then 0 else 102000) + (if b0025 then 0 else 102000) + (if b0026 then 0 else 102000) + (if b0027 then 0 else 102000) + (if b0028 then 0 else 102000) + (if b0029 then 0 else 102000) + (if b0030 then 0 else 102000) + (if b0031 then 0 else 102000) + (if b0032 then 0 else 102000) + (if b0033 then 0 else 102000) + (if b0034 then 0 else 102000) + (if b0035 then 0 else 102000) + (if b0036 then 0 else 102000) + (if b0037 then 0 else 102000) + (if b0038 then 0 else 102000) + (if b0039 then 0 else 102000) + (if b0040 then 0 else 102000) + (if b0041 then 0 else 102000) + (if b0042 then 0 else 102000) + (if b0043 then 0 else 102000) + (if b0044 then 0 else 102000) + (if b0045 then 0 else 102000) + (if b0046 then 0 else 102000) + (if b0047 then 0 else 102000) + (if b0048 then 0 else 102000) + (if b0049 then 0 else 102000) + (if b0050 then 0 else 102000) + (if b0051 then 0 else 102000) + (if b0052 then 0 else 102000) + (if b0053 then 0 else 102000) + (if b0054 then 0 else 102000) + (if b0055 then 0 else 102000) + (if b0056 then 0 else 102000) + (if b0057 then 0 else 102000) + (if b0058 then 0 else 102000) + (if b0059 then 0 else 102000) + (if b0060 then 0 else 102000) + (if b0061 then 0 else 102000) + (if b0062 then 0 else 102000) + (if b0063 then 0 else 102000) + (if b0064 then 0 else 102000) + (if b0065 then 0 else 102000) + (if b0066 then 0 else 102000) + (if b0067 then 0 else 102000) + (if b0068 then 0 else 102000) + (if b0069 then 0 else 102000) + (if b0070 then 0 else 102000) + (if b0071 then 0 else 102000) + (if b0072 then 0 else 102000) + (if b0073 then 0 else 102000) + (if b0074 then 0 else 102000) + (if b0075 then 0 else 102000) + (if b0076 then 0 else 102000) + (if b0077 then 0 else 102000) + (if b0078 then 0 else 102000) + (if b0079 then 0 else 102000) + (if b0080 then 0 else 102000) + (if b0081 then 0 else 102000) + (if b0082 then 0 else 102000) + (if b0083 then 0 else 102000) + (if b0084 then 0 else 102000) + (if b0085 then 0 else 102000) + (if b0086 then 0 else 102000) + (if b0087 then 0 else 102000) + (if b0088 then 0 else 102000) + (if b0089 then 0 else 102000) + (if b0090 then 0 else 102000) + (if b0091 then 0 else 102000) + (if b0092 then 0 else 102000) + (if b0093 then 0 else 102000) + (if b0094 then 0 else 102000) + (if b0095 then 0 else 102000) + (if b0096 then 0 else 102000) + (if b0097 then 0 else 102000) + (if b0098 then 0 else 102000) + (if b0099 then 0 else 102000) + (if b0100 then 0 else 102000) + (if b0101 then 0 else 102000) + (if b0102 then 0 else 102000) + (if b0103 then 0 else 102000) + (if b0104 then 0 else 102000) + (if b0105 then 0 else 102000) + (if b0106 then 0 else 102000) + (if b0107 then 0 else 102000) + (if b0108 then 0 else 102000) + (if b0109 then 0 else 102000) + (if b0110 then 0 else 102000) + (if b0111 then 0 else 102000) + (if b0112 then 0 else 102000) + (if b0113 then 0 else 102000) + (if b0114 then 0 else 102000) + (if b0115 then 0 else 102000) + (if b0116 then 0 else 102000) + (if b0117 then 0 else 102000) + (if b0118 then 0 else 102000) + (if b0119 then 0 else 102000) + (if b0120 then 0 else 102000) + (if b0121 then 0 else 102000) + (if b0122 then 0 else 102000) + (if b0123 then 0 else 102000) + (if b0124 then 0 else 102000) + (if b0125 then 0 else 102000) + (if b0126 then 0 else 102000) + (if b0127 then 0 else 102000) + (if b0128 then 0 else 102000) + (if b0129 then 0 else 102000) + (if b0130 then 0 else 102000) + (if b0131 then 0 else 102000) + (if b0132 then 0 else 102000) + (if b0133 then 0 else 102000) + (if b0134 then 0 else 102000) + (if b0135 then 0 else 102000) + (if b0136 then 0 else 102000) + (if b0137 then 0 else 102000) + (if b0138 then 0 else 102000) + (if b0139 then 0 else 102000) + (if b0140 then 0 else 102000) + (if b0141 then 0 else 102000) + (if b0142 then 0 else 102000) + (if b0143 then 0 else 102000) + (if b0144 then 0 else 102000) + (if b0145 then 0 else 102000) + (if b0146 then 0 else 102000) + (if b0147 then 0 else 102000) + (if b0148 then 0 else 102000) + (if b0149 then 0 else 102000) + (if b0150 then 0 else 102000) + (if b0151 then 0 else 102000) + (if b0152 then 0 else 102000) + (if b0153 then 0 else 102000) + (if b0154 then 0 else 102000) + (if b0155 then 0 else 102000) + (if b0156 then 0 else 102000) + (if b0157 then 0 else 102000) + (if b0158 then 0 else 102000) + (if b0159 then 0 else 102000) + (if b0160 then 0 else 102000) + (if b0161 then 0 else 102000) + (if b0162 then 0 else 102000) + (if b0163 then 0 else 102000) + (if b0164 then 0 else 102000) + (if b0165 then 0 else 102000) + (if b0166 then 0 else 102000) + (if b0167 then 0 else 102000) + (if b0168 then 0 else 102000) + (if b0169 then 0 else 102000) + (if b0170 then 0 else 102000) + (if b0171 then 0 else 102000) + (if b0172 then 0 else 102000) + (if b0173 then 0 else 102000) + (if b0174 then 0 else 102000) + (if b0175 then 0 else 102000) + (if b0176 then 0 else 102000) + (if b0177 then 0 else 102000) + (if b0178 then 0 else 102000) + (if b0179 then 0 else 102000) + (if b0180 then 0 else 102000) + (if b0181 then 0 else 102000) + (if b0182 then 0 else 102000) + (if b0183 then 0 else 102000) + (if b0184 then 0 else 102000) + (if b0185 then 0 else 102000) + (if b0186 then 0 else 102000) + (if b0187 then 0 else 102000) + (if b0188 then 0 else 102000) + (if b0189 then 0 else 102000) + (if b0190 then 0 else 102000) + (if b0191 then 0 else 102000) + (if b0192 then 0 else 102000) + (if b0193 then 0 else 102000) + (if b0194 then 0 else 102000) + (if b0195 then 0 else 102000) + (if b0196 then 0 else 102000) + (if b0197 then 0 else 102000) + (if b0198 then 0 else 102000) + (if b0199 then 0 else 102000) + (if b0200 then 0 else 102000) + (if b0201 then 0 else 102000) + (if b0202 then 0 else 102000) + (if b0203 then 0 else 102000) + (if b0204 then 0 else 102000) + (if b0205 then 0 else 102000) + (if b0206 then 0 else 102000) + (if b0207 then 0 else 102000) + (if b0208 then 0 else 102000) + (if b0209 then 0 else 102000) + (if b0210 then 0 else 102000) + (if b0211 then 0 else 102000) + (if b0212 then 0 else 102000) + (if b0213 then 0 else 102000) + (if b0214 then 0 else 102000) + (if b0215 then 0 else 102000) + (if b0216 then 0 else 102000) + (if b0217 then 0 else 102000) + (if b0218 then 0 else 102000) + (if b0219 then 0 else 102000) + (if b0220 then 0 else 102000) + (if b0221 then 0 else 102000) + (if b0222 then 0 else 102000) + (if b0223 then 0 else 102000) + (if b0224 then 0 else 102000) + (if b0225 then 0 else 102000) + (if b0226 then 0 else 102000) + (if b0227 then 0 else 102000) + (if b0228 then 0 else 102000) + (if b0229 then 0 else 102000) + (if b0230 then 0 else 102000) + (if b0231 then 0 else 102000) + (if b0232 then 0 else 102000) + (if b0233 then 0 else 102000) + (if b0234 then 0 else 102000) + (if b0235 then 0 else 102000) + (if b0236 then 0 else 102000) + (if b0237 then 0 else 102000) + (if b0238 then 0 else 102000) + (if b0239 then 0 else 102000) + (if b0240 then 0 else 102000) + (if b0241 then 0 else 102000) + (if b0242 then 0 else 102000) + (if b0243 then 0 else 102000) + (if b0244 then 0 else 102000) + (if b0245 then 0 else 102000) + (if b0246 then 0 else 102000) + (if b0247 then 0 else 102000) + (if b0248 then 0 else 102000) + (if b0249 then 0 else 102000) + (if b0250 then 0 else 102000) + (if b0251 then 0 else 102000) + (if b0252 then 0 else 102000) + (if b0253 then 0 else 102000) + (if b0254 then 0 else 102000) + (if b0255 then 0 else 102000) < 441
}
Added: my_inv:1,0,1,0,1,1,1,0,1,1,1,1,1,0,1,0,1,0,1,1,0,1,1,1,1,0,1,1,1,1,0,0,1,1,0,0,0,0,0,1,1,1,0,0,0,0,0,1,0,0,0,1,0,0,1,1,0,0,0,1,0,1,0,0,1,0,1,0,0,1,1,1,1,0,0,0,0,1,1,1,0,0,0,1,1,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1,0,1,0,0,0,0,0,0,1,0,0,0,1,1,1,1,0,0,0,0,1,1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,1,0,1,0,0,1,0,1,1,1,1,1,0,0,0,0,0,0,1,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,1,1,0,1,0,1,0,0,0,0,0,0,0,0,0,0,1,1,1,0,1,1,0,0,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 16.681878
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/2_Graphics/Mandelbrot/_Mandelbrot1.bpl.ice2.bpl
Total learner time was 00:00:00.1304470
Verifying $_Z11Mandelbrot1IfEvP6uchar4iiiT_S2_S2_S2_S2_S0_iiiib: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool, b0228: bool, b0229: bool, b0230: bool, b0231: bool, b0232: bool, b0233: bool, b0234: bool, b0235: bool, b0236: bool, b0237: bool, b0238: bool, b0239: bool, b0240: bool, b0241: bool, b0242: bool, b0243: bool, b0244: bool, b0245: bool, b0246: bool, b0247: bool, b0248: bool, b0249: bool, b0250: bool, b0251: bool, b0252: bool, b0253: bool, b0254: bool, b0255: bool) : bool
{
  0 + (if b0000 then 0 else 102000) + (if b0005 then 0 else 102000) + (if b0009 then 0 else 102000) + (if b0010 then 0 else 102000) + (if b0011 then 0 else 102000) + (if b0012 then 0 else 102000) + (if b0014 then 0 else 102000) + (if b0016 then 0 else 102000) + (if b0018 then 0 else 102000) + (if b0019 then 0 else 102000) + (if b0021 then 0 else 102000) + (if b0022 then 0 else 102000) + (if b0023 then 0 else 102000) + (if b0024 then 0 else 102000) + (if b0026 then 0 else 102000) + (if b0027 then 0 else 102000) + (if b0028 then 0 else 102000) + (if b0029 then 0 else 102000) + (if b0032 then 0 else 102000) + (if b0033 then 0 else 102000) + (if b0039 then 0 else 102000) + (if b0040 then 0 else 102000) + (if b0041 then 0 else 102000) + (if b0047 then 0 else 102000) + (if b0051 then 0 else 102000) + (if b0054 then 0 else 102000) + (if b0055 then 0 else 102000) + (if b0059 then 0 else 102000) + (if b0061 then 0 else 102000) + (if b0064 then 0 else 102000) + (if b0066 then 0 else 102000) + (if b0069 then 0 else 102000) + (if b0070 then 0 else 102000) + (if b0071 then 0 else 102000) + (if b0072 then 0 else 102000) + (if b0077 then 0 else 102000) + (if b0078 then 0 else 102000) + (if b0079 then 0 else 102000) + (if b0083 then 0 else 102000) + (if b0084 then 0 else 102000) + (if b0088 then 0 else 102000) + (if b0089 then 0 else 102000) + (if b0090 then 0 else 102000) + (if b0102 then 0 else 102000) + (if b0103 then 0 else 102000) + (if b0105 then 0 else 102000) + (if b0107 then 0 else 102000) + (if b0114 then 0 else 102000) + (if b0118 then 0 else 102000) + (if b0119 then 0 else 102000) + (if b0120 then 0 else 102000) + (if b0121 then 0 else 102000) + (if b0126 then 0 else 102000) + (if b0127 then 0 else 102000) + (if b0129 then 0 else 102000) + (if b0130 then 0 else 102000) + (if b0147 then 0 else 102000) + (if b0148 then 0 else 102000) + (if b0151 then 0 else 102000) + (if b0153 then 0 else 102000) + (if b0156 then 0 else 102000) + (if b0158 then 0 else 102000) + (if b0159 then 0 else 102000) + (if b0160 then 0 else 102000) + (if b0161 then 0 else 102000) + (if b0162 then 0 else 102000) + (if b0169 then 0 else 102000) + (if b0171 then 0 else 102000) + (if b0174 then 0 else 102000) + (if b0187 then 0 else 102000) + (if b0190 then 0 else 102000) + (if b0191 then 0 else 102000) + (if b0192 then 0 else 102000) + (if b0193 then 0 else 102000) + (if b0195 then 0 else 102000) + (if b0197 then 0 else 102000) + (if b0208 then 0 else 102000) + (if b0209 then 0 else 102000) + (if b0210 then 0 else 102000) + (if b0212 then 0 else 102000) + (if b0213 then 0 else 102000) + (if b0216 then 0 else 102000) + (if b0223 then 0 else 102000) + (if b0228 then 0 else 102000) + (if b0238 then 0 else 102000) + (if b0239 then 0 else 102000) + (if b0240 then 0 else 102000) + (if b0241 then 0 else 102000) + (if b0242 then 0 else 102000) + (if b0243 then 0 else 102000) + (if b0244 then 0 else 102000) + (if b0245 then 0 else 102000) + (if b0246 then 0 else 102000) + (if b0247 then 0 else 102000) + (if b0248 then 0 else 102000) + (if b0249 then 0 else 102000) + (if b0250 then 0 else 102000) + (if b0251 then 0 else 102000) + (if b0252 then 0 else 102000) + (if b0253 then 0 else 102000) + (if b0254 then 0 else 102000) + (if b0255 then 0 else 102000) < 441
}
Added: my_inv:1,1,0,1,0,0,1,1,0,1,1,1,0,1,0,1,0,1,0,0,1,0,0,1,0,1,1,0,1,0,1,1,0,0,1,1,1,1,1,0,1,0,1,1,1,1,1,0,1,1,1,0,1,1,0,0,1,1,1,0,1,1,1,1,1,1,0,1,1,0,1,1,1,1,1,1,1,1,0,0,1,1,1,0,0,1,1,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,0,1,1,1,1,0,0,1,1,1,1,1,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,0,1,0,1,1,1,1,0,1,1,0,0,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,0,1,1,0,1,0,1,0,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,0,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 12.498425
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/2_Graphics/Mandelbrot/_Mandelbrot1.bpl.ice2.bpl
Total learner time was 00:00:00.1212660
Verifying $_Z11Mandelbrot1IfEvP6uchar4iiiT_S2_S2_S2_S2_S0_iiiib: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool, b0228: bool, b0229: bool, b0230: bool, b0231: bool, b0232: bool, b0233: bool, b0234: bool, b0235: bool, b0236: bool, b0237: bool, b0238: bool, b0239: bool, b0240: bool, b0241: bool, b0242: bool, b0243: bool, b0244: bool, b0245: bool, b0246: bool, b0247: bool, b0248: bool, b0249: bool, b0250: bool, b0251: bool, b0252: bool, b0253: bool, b0254: bool, b0255: bool) : bool
{
  0 + (if b0000 then 0 else 102000) + (if b0009 then 0 else 102000) + (if b0010 then 0 else 102000) + (if b0011 then 0 else 102000) + (if b0023 then 0 else 102000) + (if b0026 then 0 else 102000) + (if b0028 then 0 else 102000) + (if b0040 then 0 else 102000) + (if b0061 then 0 else 102000) + (if b0064 then 0 else 102000) + (if b0070 then 0 else 102000) + (if b0071 then 0 else 102000) + (if b0072 then 0 else 102000) + (if b0077 then 0 else 102000) + (if b0089 then 0 else 102000) + (if b0102 then 0 else 102000) + (if b0103 then 0 else 102000) + (if b0105 then 0 else 102000) + (if b0118 then 0 else 102000) + (if b0121 then 0 else 102000) + (if b0126 then 0 else 102000) + (if b0130 then 0 else 102000) + (if b0156 then 0 else 102000) + (if b0159 then 0 else 102000) + (if b0160 then 0 else 102000) + (if b0171 then 0 else 102000) + (if b0174 then 0 else 102000) + (if b0191 then 0 else 102000) + (if b0192 then 0 else 102000) + (if b0210 then 0 else 102000) + (if b0212 then 0 else 102000) + (if b0213 then 0 else 102000) + (if b0216 then 0 else 102000) + (if b0228 then 0 else 102000) + (if b0239 then 0 else 102000) + (if b0240 then 0 else 102000) + (if b0241 then 0 else 102000) + (if b0242 then 0 else 102000) + (if b0243 then 0 else 102000) + (if b0244 then 0 else 102000) + (if b0245 then 0 else 102000) + (if b0246 then 0 else 102000) + (if b0247 then 0 else 102000) + (if b0248 then 0 else 102000) + (if b0249 then 0 else 102000) + (if b0250 then 0 else 102000) + (if b0251 then 0 else 102000) + (if b0252 then 0 else 102000) + (if b0253 then 0 else 102000) + (if b0254 then 0 else 102000) + (if b0255 then 0 else 102000) < 441
}
Added: my_inv:1,1,0,1,0,1,0,1,0,1,1,0,1,1,1,1,1,1,1,1,1,1,1,0,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,0,1,0,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,0,1,1,1,1,0,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,0,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 22.869723
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/2_Graphics/Mandelbrot/_Mandelbrot1.bpl.ice2.bpl
Total learner time was 00:00:00.1228520
Verifying $_Z11Mandelbrot1IfEvP6uchar4iiiT_S2_S2_S2_S2_S0_iiiib: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool, b0228: bool, b0229: bool, b0230: bool, b0231: bool, b0232: bool, b0233: bool, b0234: bool, b0235: bool, b0236: bool, b0237: bool, b0238: bool, b0239: bool, b0240: bool, b0241: bool, b0242: bool, b0243: bool, b0244: bool, b0245: bool, b0246: bool, b0247: bool, b0248: bool, b0249: bool, b0250: bool, b0251: bool, b0252: bool, b0253: bool, b0254: bool, b0255: bool) : bool
{
  0 + (if b0000 then 0 else 102000) + (if b0009 then 0 else 102000) + (if b0010 then 0 else 102000) + (if b0028 then 0 else 102000) + (if b0040 then 0 else 102000) + (if b0064 then 0 else 102000) + (if b0071 then 0 else 102000) + (if b0103 then 0 else 102000) + (if b0171 then 0 else 102000) + (if b0174 then 0 else 102000) + (if b0191 then 0 else 102000) + (if b0192 then 0 else 102000) + (if b0213 then 0 else 102000) + (if b0228 then 0 else 102000) + (if b0239 then 0 else 102000) + (if b0240 then 0 else 102000) + (if b0241 then 0 else 102000) + (if b0242 then 0 else 102000) + (if b0243 then 0 else 102000) + (if b0244 then 0 else 102000) + (if b0245 then 0 else 102000) + (if b0246 then 0 else 102000) + (if b0247 then 0 else 102000) + (if b0248 then 0 else 102000) + (if b0249 then 0 else 102000) + (if b0250 then 0 else 102000) + (if b0251 then 0 else 102000) + (if b0252 then 0 else 102000) + (if b0253 then 0 else 102000) + (if b0254 then 0 else 102000) + (if b0255 then 0 else 102000) < 441
}
Added: my_inv:1,1,0,1,0,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 13.375016
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/2_Graphics/Mandelbrot/_Mandelbrot1.bpl.ice2.bpl
Total learner time was 00:00:00.1209340
Verifying $_Z11Mandelbrot1IfEvP6uchar4iiiT_S2_S2_S2_S2_S0_iiiib: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool, b0228: bool, b0229: bool, b0230: bool, b0231: bool, b0232: bool, b0233: bool, b0234: bool, b0235: bool, b0236: bool, b0237: bool, b0238: bool, b0239: bool, b0240: bool, b0241: bool, b0242: bool, b0243: bool, b0244: bool, b0245: bool, b0246: bool, b0247: bool, b0248: bool, b0249: bool, b0250: bool, b0251: bool, b0252: bool, b0253: bool, b0254: bool, b0255: bool) : bool
{
  0 + (if b0000 then 0 else 102000) + (if b0009 then 0 else 102000) + (if b0010 then 0 else 102000) + (if b0040 then 0 else 102000) + (if b0103 then 0 else 102000) + (if b0191 then 0 else 102000) + (if b0213 then 0 else 102000) + (if b0228 then 0 else 102000) + (if b0240 then 0 else 102000) + (if b0241 then 0 else 102000) + (if b0242 then 0 else 102000) + (if b0243 then 0 else 102000) + (if b0244 then 0 else 102000) + (if b0245 then 0 else 102000) + (if b0246 then 0 else 102000) + (if b0247 then 0 else 102000) + (if b0248 then 0 else 102000) + (if b0249 then 0 else 102000) + (if b0250 then 0 else 102000) + (if b0251 then 0 else 102000) + (if b0252 then 0 else 102000) + (if b0253 then 0 else 102000) + (if b0254 then 0 else 102000) + (if b0255 then 0 else 102000) < 441
}
Added: my_inv:1,1,0,1,0,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 18.939574
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/2_Graphics/Mandelbrot/_Mandelbrot1.bpl.ice2.bpl
Total learner time was 00:00:00.1221500
Verifying $_Z11Mandelbrot1IfEvP6uchar4iiiT_S2_S2_S2_S2_S0_iiiib: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool, b0228: bool, b0229: bool, b0230: bool, b0231: bool, b0232: bool, b0233: bool, b0234: bool, b0235: bool, b0236: bool, b0237: bool, b0238: bool, b0239: bool, b0240: bool, b0241: bool, b0242: bool, b0243: bool, b0244: bool, b0245: bool, b0246: bool, b0247: bool, b0248: bool, b0249: bool, b0250: bool, b0251: bool, b0252: bool, b0253: bool, b0254: bool, b0255: bool) : bool
{
  0 + (if b0000 then 0 else 102000) + (if b0009 then 0 else 102000) + (if b0010 then 0 else 102000) + (if b0103 then 0 else 102000) + (if b0191 then 0 else 102000) + (if b0213 then 0 else 102000) + (if b0228 then 0 else 102000) + (if b0240 then 0 else 102000) + (if b0241 then 0 else 102000) + (if b0242 then 0 else 102000) + (if b0243 then 0 else 102000) + (if b0244 then 0 else 102000) + (if b0245 then 0 else 102000) + (if b0246 then 0 else 102000) + (if b0247 then 0 else 102000) + (if b0248 then 0 else 102000) + (if b0249 then 0 else 102000) + (if b0250 then 0 else 102000) + (if b0251 then 0 else 102000) + (if b0252 then 0 else 102000) + (if b0253 then 0 else 102000) + (if b0254 then 0 else 102000) + (if b0255 then 0 else 102000) < 441
}
Added: my_inv:1,1,0,1,0,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 11.354197
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/2_Graphics/Mandelbrot/_Mandelbrot1.bpl.ice2.bpl
Total learner time was 00:00:00.1235540
Verifying $_Z11Mandelbrot1IfEvP6uchar4iiiT_S2_S2_S2_S2_S0_iiiib: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool, b0228: bool, b0229: bool, b0230: bool, b0231: bool, b0232: bool, b0233: bool, b0234: bool, b0235: bool, b0236: bool, b0237: bool, b0238: bool, b0239: bool, b0240: bool, b0241: bool, b0242: bool, b0243: bool, b0244: bool, b0245: bool, b0246: bool, b0247: bool, b0248: bool, b0249: bool, b0250: bool, b0251: bool, b0252: bool, b0253: bool, b0254: bool, b0255: bool) : bool
{
  0 + (if b0000 then 0 else 102000) + (if b0009 then 0 else 102000) + (if b0010 then 0 else 102000) + (if b0103 then 0 else 102000) + (if b0228 then 0 else 102000) + (if b0240 then 0 else 102000) + (if b0241 then 0 else 102000) + (if b0242 then 0 else 102000) + (if b0243 then 0 else 102000) + (if b0244 then 0 else 102000) + (if b0245 then 0 else 102000) + (if b0246 then 0 else 102000) + (if b0247 then 0 else 102000) + (if b0248 then 0 else 102000) + (if b0249 then 0 else 102000) + (if b0250 then 0 else 102000) + (if b0251 then 0 else 102000) + (if b0252 then 0 else 102000) + (if b0253 then 0 else 102000) + (if b0254 then 0 else 102000) + (if b0255 then 0 else 102000) < 441
}
Added: my_inv:1,1,0,1,0,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 6.141301
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/2_Graphics/Mandelbrot/_Mandelbrot1.bpl.ice2.bpl
Total learner time was 00:00:00.1214990
Verifying $_Z11Mandelbrot1IfEvP6uchar4iiiT_S2_S2_S2_S2_S0_iiiib: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool, b0228: bool, b0229: bool, b0230: bool, b0231: bool, b0232: bool, b0233: bool, b0234: bool, b0235: bool, b0236: bool, b0237: bool, b0238: bool, b0239: bool, b0240: bool, b0241: bool, b0242: bool, b0243: bool, b0244: bool, b0245: bool, b0246: bool, b0247: bool, b0248: bool, b0249: bool, b0250: bool, b0251: bool, b0252: bool, b0253: bool, b0254: bool, b0255: bool) : bool
{
  0 + (if b0000 then 0 else 102000) + (if b0009 then 0 else 102000) + (if b0010 then 0 else 102000) + (if b0103 then 0 else 102000) + (if b0240 then 0 else 102000) + (if b0241 then 0 else 102000) + (if b0242 then 0 else 102000) + (if b0243 then 0 else 102000) + (if b0244 then 0 else 102000) + (if b0245 then 0 else 102000) + (if b0246 then 0 else 102000) + (if b0247 then 0 else 102000) + (if b0248 then 0 else 102000) + (if b0249 then 0 else 102000) + (if b0250 then 0 else 102000) + (if b0251 then 0 else 102000) + (if b0252 then 0 else 102000) + (if b0253 then 0 else 102000) + (if b0254 then 0 else 102000) + (if b0255 then 0 else 102000) < 441
}
Added: my_inv:1,1,0,1,0,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 13.692101
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/2_Graphics/Mandelbrot/_Mandelbrot1.bpl.ice2.bpl
Total learner time was 00:00:00.1222320
Verifying $_Z11Mandelbrot1IfEvP6uchar4iiiT_S2_S2_S2_S2_S0_iiiib: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool, b0228: bool, b0229: bool, b0230: bool, b0231: bool, b0232: bool, b0233: bool, b0234: bool, b0235: bool, b0236: bool, b0237: bool, b0238: bool, b0239: bool, b0240: bool, b0241: bool, b0242: bool, b0243: bool, b0244: bool, b0245: bool, b0246: bool, b0247: bool, b0248: bool, b0249: bool, b0250: bool, b0251: bool, b0252: bool, b0253: bool, b0254: bool, b0255: bool) : bool
{
  0 + (if b0000 then 0 else 102000) + (if b0009 then 0 else 102000) + (if b0010 then 0 else 102000) + (if b0240 then 0 else 102000) + (if b0241 then 0 else 102000) + (if b0242 then 0 else 102000) + (if b0243 then 0 else 102000) + (if b0244 then 0 else 102000) + (if b0245 then 0 else 102000) + (if b0246 then 0 else 102000) + (if b0247 then 0 else 102000) + (if b0248 then 0 else 102000) + (if b0249 then 0 else 102000) + (if b0250 then 0 else 102000) + (if b0251 then 0 else 102000) + (if b0252 then 0 else 102000) + (if b0253 then 0 else 102000) + (if b0254 then 0 else 102000) + (if b0255 then 0 else 102000) < 441
}
Prover Time taken = 31.676154
Added Horn clause: 9 => 10
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/2_Graphics/Mandelbrot/_Mandelbrot1.bpl.ice2.bpl
Total learner time was 00:00:00.1206930
Verifying $_Z11Mandelbrot1IfEvP6uchar4iiiT_S2_S2_S2_S2_S0_iiiib: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool, b0228: bool, b0229: bool, b0230: bool, b0231: bool, b0232: bool, b0233: bool, b0234: bool, b0235: bool, b0236: bool, b0237: bool, b0238: bool, b0239: bool, b0240: bool, b0241: bool, b0242: bool, b0243: bool, b0244: bool, b0245: bool, b0246: bool, b0247: bool, b0248: bool, b0249: bool, b0250: bool, b0251: bool, b0252: bool, b0253: bool, b0254: bool, b0255: bool) : bool
{
  0 + (if b0000 then 0 else 102000) + (if b0009 then 0 else 102000) + (if b0010 then 0 else 102000) + (if b0241 then 0 else 102000) + (if b0242 then 0 else 102000) + (if b0243 then 0 else 102000) + (if b0244 then 0 else 102000) + (if b0245 then 0 else 102000) + (if b0246 then 0 else 102000) + (if b0247 then 0 else 102000) + (if b0248 then 0 else 102000) + (if b0249 then 0 else 102000) + (if b0250 then 0 else 102000) + (if b0251 then 0 else 102000) + (if b0252 then 0 else 102000) + (if b0253 then 0 else 102000) + (if b0254 then 0 else 102000) + (if b0255 then 0 else 102000) < 441
}
Prover Time taken = 23.246496
Added Horn clause: 11 => 12
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/2_Graphics/Mandelbrot/_Mandelbrot1.bpl.ice2.bpl
Total learner time was 00:00:00.1215240
Verifying $_Z11Mandelbrot1IfEvP6uchar4iiiT_S2_S2_S2_S2_S0_iiiib: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool, b0228: bool, b0229: bool, b0230: bool, b0231: bool, b0232: bool, b0233: bool, b0234: bool, b0235: bool, b0236: bool, b0237: bool, b0238: bool, b0239: bool, b0240: bool, b0241: bool, b0242: bool, b0243: bool, b0244: bool, b0245: bool, b0246: bool, b0247: bool, b0248: bool, b0249: bool, b0250: bool, b0251: bool, b0252: bool, b0253: bool, b0254: bool, b0255: bool) : bool
{
  0 + (if b0000 then 0 else 102000) + (if b0009 then 0 else 102000) + (if b0010 then 0 else 102000) + (if b0241 then 0 else 102000) + (if b0242 then 0 else 102000) + (if b0243 then 0 else 102000) + (if b0244 then 0 else 102000) + (if b0245 then 0 else 102000) + (if b0246 then 0 else 102000) + (if b0247 then 0 else 102000) + (if b0249 then 0 else 102000) + (if b0250 then 0 else 102000) + (if b0251 then 0 else 102000) + (if b0253 then 0 else 102000) + (if b0254 then 0 else 102000) + (if b0255 then 0 else 102000) < 441
}
Prover Time taken = 35.823733
Added Horn clause: 13 => 14
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/2_Graphics/Mandelbrot/_Mandelbrot1.bpl.ice2.bpl
Total learner time was 00:00:00.1222780
Verifying $_Z11Mandelbrot1IfEvP6uchar4iiiT_S2_S2_S2_S2_S0_iiiib: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool, b0228: bool, b0229: bool, b0230: bool, b0231: bool, b0232: bool, b0233: bool, b0234: bool, b0235: bool, b0236: bool, b0237: bool, b0238: bool, b0239: bool, b0240: bool, b0241: bool, b0242: bool, b0243: bool, b0244: bool, b0245: bool, b0246: bool, b0247: bool, b0248: bool, b0249: bool, b0250: bool, b0251: bool, b0252: bool, b0253: bool, b0254: bool, b0255: bool) : bool
{
  0 + (if b0000 then 0 else 102000) + (if b0009 then 0 else 102000) + (if b0010 then 0 else 102000) + (if b0241 then 0 else 102000) + (if b0242 then 0 else 102000) + (if b0243 then 0 else 102000) + (if b0245 then 0 else 102000) + (if b0246 then 0 else 102000) + (if b0247 then 0 else 102000) + (if b0249 then 0 else 102000) + (if b0250 then 0 else 102000) + (if b0251 then 0 else 102000) + (if b0253 then 0 else 102000) + (if b0254 then 0 else 102000) + (if b0255 then 0 else 102000) < 441
}
Added: my_inv:1,1,0,0,1,0,1,0,1,1,1,0,0,1,1,0,0,0,1,1,0,0,0,1,1,0,0,0,1,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,1,1,1,0,0,0,0,0,1,0,0,1,1,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,1,1,0,0,0,0,0,0,1,0,0,0,1,1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: negative
Prover Time taken = 18.638984
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/2_Graphics/Mandelbrot/_Mandelbrot1.bpl.ice2.bpl
[0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1] -> 0 Predicated Label: 1 True Label 0 not consistent!
sorcar: sorcar.cpp:229: int main(int, char* const*): Assertion `sorcar::is_consistent(X, datapoints, horn_constraints)' failed.
The learner seems to have run into an error!

Unhandled Exception:
Microsoft.Boogie.Houdini.MLHoudiniInternalError: The learner seems to have run into an error!
  at Microsoft.Boogie.Houdini.MLHoudini.learn (System.Collections.Generic.HashSet`1[System.String]& funcsChanged) [0x000e7] in <3034164c407e4adc8ab666e7c26ee7b8>:0 
  at Microsoft.Boogie.Houdini.MLHoudini.LearnInv (System.Collections.Generic.Dictionary`2[TKey,TValue] impl2Priority) [0x00782] in <3034164c407e4adc8ab666e7c26ee7b8>:0 
  at Microsoft.Boogie.Houdini.MLHoudini.ComputeSummaries () [0x0019c] in <3034164c407e4adc8ab666e7c26ee7b8>:0 
  at Microsoft.Boogie.ExecutionEngine.RunMLHoudini (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, Microsoft.Boogie.ErrorReporterDelegate er, System.String filename) [0x00055] in <392c81a181e742f795ac4613c6efd8ce>:0 
  at Microsoft.Boogie.ExecutionEngine.RunHoudini (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, Microsoft.Boogie.ErrorReporterDelegate er, System.String filename) [0x00021] in <392c81a181e742f795ac4613c6efd8ce>:0 
  at Microsoft.Boogie.ExecutionEngine.InferAndVerify (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, System.String filename, Microsoft.Boogie.ErrorReporterDelegate er, System.String requestId) [0x00136] in <392c81a181e742f795ac4613c6efd8ce>:0 
  at Microsoft.Boogie.ExecutionEngine.ProcessFiles (System.Collections.Generic.List`1[T] fileNames, System.Boolean lookForSnapshots) [0x002bd] in <392c81a181e742f795ac4613c6efd8ce>:0 
  at Microsoft.Boogie.OnlyBoogie.Main (System.String[] args) [0x0029f] in <581a14d47152481e860a87838c548766>:0 
[ERROR] FATAL UNHANDLED EXCEPTION: Microsoft.Boogie.Houdini.MLHoudiniInternalError: The learner seems to have run into an error!
  at Microsoft.Boogie.Houdini.MLHoudini.learn (System.Collections.Generic.HashSet`1[System.String]& funcsChanged) [0x000e7] in <3034164c407e4adc8ab666e7c26ee7b8>:0 
  at Microsoft.Boogie.Houdini.MLHoudini.LearnInv (System.Collections.Generic.Dictionary`2[TKey,TValue] impl2Priority) [0x00782] in <3034164c407e4adc8ab666e7c26ee7b8>:0 
  at Microsoft.Boogie.Houdini.MLHoudini.ComputeSummaries () [0x0019c] in <3034164c407e4adc8ab666e7c26ee7b8>:0 
  at Microsoft.Boogie.ExecutionEngine.RunMLHoudini (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, Microsoft.Boogie.ErrorReporterDelegate er, System.String filename) [0x00055] in <392c81a181e742f795ac4613c6efd8ce>:0 
  at Microsoft.Boogie.ExecutionEngine.RunHoudini (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, Microsoft.Boogie.ErrorReporterDelegate er, System.String filename) [0x00021] in <392c81a181e742f795ac4613c6efd8ce>:0 
  at Microsoft.Boogie.ExecutionEngine.InferAndVerify (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, System.String filename, Microsoft.Boogie.ErrorReporterDelegate er, System.String requestId) [0x00136] in <392c81a181e742f795ac4613c6efd8ce>:0 
  at Microsoft.Boogie.ExecutionEngine.ProcessFiles (System.Collections.Generic.List`1[T] fileNames, System.Boolean lookForSnapshots) [0x002bd] in <392c81a181e742f795ac4613c6efd8ce>:0 
  at Microsoft.Boogie.OnlyBoogie.Main (System.String[] args) [0x0029f] in <581a14d47152481e860a87838c548766>:0 
Command exited with non-zero status 1
2.77user 3.17system 3:48.60elapsed 2%CPU (0avgtext+0avgdata 73332maxresident)k
0inputs+864outputs (1major+49874minor)pagefaults 0swaps
FILE:CUDA50/2_Graphics/Mandelbrot/_Mandelbrot1.bpl.ice2.bpl
#################
Tue May 11 21:21:02 UTC 2021
KEY=awinnow
OUTPUT=/root/Docker/winnow_gpu_timeout.txt
[TRACE] Using prover: /root/Docker/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/root/Docker/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a winnow
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/errorLimit:1
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/2_Graphics/Mandelbrot/_MandelbrotDS1.bpl.ice2.bpl
--------------------
Parsing /root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/2_Graphics/Mandelbrot/_MandelbrotDS1.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /root/Docker/z3/bin/z3
#parameters: 270
Generating VC of $_Z13MandelbrotDS1P6uchar4iiifffffffS_iiiib
Verifying $_Z13MandelbrotDS1P6uchar4iiifffffffS_iiiib: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool, b0228: bool, b0229: bool, b0230: bool, b0231: bool, b0232: bool, b0233: bool, b0234: bool, b0235: bool, b0236: bool, b0237: bool, b0238: bool, b0239: bool, b0240: bool, b0241: bool, b0242: bool, b0243: bool, b0244: bool, b0245: bool, b0246: bool, b0247: bool, b0248: bool, b0249: bool, b0250: bool, b0251: bool, b0252: bool, b0253: bool, b0254: bool, b0255: bool, b0256: bool, b0257: bool, b0258: bool, b0259: bool, b0260: bool, b0261: bool, b0262: bool, b0263: bool, b0264: bool, b0265: bool, b0266: bool, b0267: bool, b0268: bool, b0269: bool) : bool
{
  false
}
Added: my_inv:1,1,0,1,0,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.248682
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/2_Graphics/Mandelbrot/_MandelbrotDS1.bpl.ice2.bpl
Total learner time was 00:00:00.1254590
Verifying $_Z13MandelbrotDS1P6uchar4iiifffffffS_iiiib: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool, b0228: bool, b0229: bool, b0230: bool, b0231: bool, b0232: bool, b0233: bool, b0234: bool, b0235: bool, b0236: bool, b0237: bool, b0238: bool, b0239: bool, b0240: bool, b0241: bool, b0242: bool, b0243: bool, b0244: bool, b0245: bool, b0246: bool, b0247: bool, b0248: bool, b0249: bool, b0250: bool, b0251: bool, b0252: bool, b0253: bool, b0254: bool, b0255: bool, b0256: bool, b0257: bool, b0258: bool, b0259: bool, b0260: bool, b0261: bool, b0262: bool, b0263: bool, b0264: bool, b0265: bool, b0266: bool, b0267: bool, b0268: bool, b0269: bool) : bool
{
  0 + (if b0000 then 0 else 108000) + (if b0001 then 0 else 108000) + (if b0003 then 0 else 108000) + (if b0005 then 0 else 108000) + (if b0007 then 0 else 108000) + (if b0009 then 0 else 108000) + (if b0010 then 0 else 108000) + (if b0011 then 0 else 108000) + (if b0012 then 0 else 108000) + (if b0013 then 0 else 108000) + (if b0014 then 0 else 108000) + (if b0015 then 0 else 108000) + (if b0016 then 0 else 108000) + (if b0017 then 0 else 108000) + (if b0018 then 0 else 108000) + (if b0019 then 0 else 108000) + (if b0020 then 0 else 108000) + (if b0021 then 0 else 108000) + (if b0022 then 0 else 108000) + (if b0023 then 0 else 108000) + (if b0024 then 0 else 108000) + (if b0025 then 0 else 108000) + (if b0026 then 0 else 108000) + (if b0027 then 0 else 108000) + (if b0028 then 0 else 108000) + (if b0029 then 0 else 108000) + (if b0030 then 0 else 108000) + (if b0031 then 0 else 108000) + (if b0032 then 0 else 108000) + (if b0033 then 0 else 108000) + (if b0034 then 0 else 108000) + (if b0035 then 0 else 108000) + (if b0036 then 0 else 108000) + (if b0037 then 0 else 108000) + (if b0038 then 0 else 108000) + (if b0039 then 0 else 108000) + (if b0040 then 0 else 108000) + (if b0041 then 0 else 108000) + (if b0042 then 0 else 108000) + (if b0043 then 0 else 108000) + (if b0044 then 0 else 108000) + (if b0045 then 0 else 108000) + (if b0046 then 0 else 108000) + (if b0047 then 0 else 108000) + (if b0048 then 0 else 108000) + (if b0049 then 0 else 108000) + (if b0050 then 0 else 108000) + (if b0051 then 0 else 108000) + (if b0052 then 0 else 108000) + (if b0053 then 0 else 108000) + (if b0054 then 0 else 108000) + (if b0055 then 0 else 108000) + (if b0056 then 0 else 108000) + (if b0057 then 0 else 108000) + (if b0058 then 0 else 108000) + (if b0059 then 0 else 108000) + (if b0060 then 0 else 108000) + (if b0061 then 0 else 108000) + (if b0062 then 0 else 108000) + (if b0063 then 0 else 108000) + (if b0064 then 0 else 108000) + (if b0065 then 0 else 108000) + (if b0066 then 0 else 108000) + (if b0067 then 0 else 108000) + (if b0068 then 0 else 108000) + (if b0069 then 0 else 108000) + (if b0070 then 0 else 108000) + (if b0071 then 0 else 108000) + (if b0072 then 0 else 108000) + (if b0073 then 0 else 108000) + (if b0074 then 0 else 108000) + (if b0075 then 0 else 108000) + (if b0076 then 0 else 108000) + (if b0077 then 0 else 108000) + (if b0078 then 0 else 108000) + (if b0079 then 0 else 108000) + (if b0080 then 0 else 108000) + (if b0081 then 0 else 108000) + (if b0082 then 0 else 108000) + (if b0083 then 0 else 108000) + (if b0084 then 0 else 108000) + (if b0085 then 0 else 108000) + (if b0086 then 0 else 108000) + (if b0087 then 0 else 108000) + (if b0088 then 0 else 108000) + (if b0089 then 0 else 108000) + (if b0090 then 0 else 108000) + (if b0091 then 0 else 108000) + (if b0092 then 0 else 108000) + (if b0093 then 0 else 108000) + (if b0094 then 0 else 108000) + (if b0095 then 0 else 108000) + (if b0096 then 0 else 108000) + (if b0097 then 0 else 108000) + (if b0098 then 0 else 108000) + (if b0099 then 0 else 108000) + (if b0100 then 0 else 108000) + (if b0101 then 0 else 108000) + (if b0102 then 0 else 108000) + (if b0103 then 0 else 108000) + (if b0104 then 0 else 108000) + (if b0105 then 0 else 108000) + (if b0106 then 0 else 108000) + (if b0107 then 0 else 108000) + (if b0108 then 0 else 108000) + (if b0109 then 0 else 108000) + (if b0110 then 0 else 108000) + (if b0111 then 0 else 108000) + (if b0112 then 0 else 108000) + (if b0113 then 0 else 108000) + (if b0114 then 0 else 108000) + (if b0115 then 0 else 108000) + (if b0116 then 0 else 108000) + (if b0117 then 0 else 108000) + (if b0118 then 0 else 108000) + (if b0119 then 0 else 108000) + (if b0120 then 0 else 108000) + (if b0121 then 0 else 108000) + (if b0122 then 0 else 108000) + (if b0123 then 0 else 108000) + (if b0124 then 0 else 108000) + (if b0125 then 0 else 108000) + (if b0126 then 0 else 108000) + (if b0127 then 0 else 108000) + (if b0128 then 0 else 108000) + (if b0129 then 0 else 108000) + (if b0130 then 0 else 108000) + (if b0131 then 0 else 108000) + (if b0132 then 0 else 108000) + (if b0133 then 0 else 108000) + (if b0134 then 0 else 108000) + (if b0135 then 0 else 108000) + (if b0136 then 0 else 108000) + (if b0137 then 0 else 108000) + (if b0138 then 0 else 108000) + (if b0139 then 0 else 108000) + (if b0140 then 0 else 108000) + (if b0141 then 0 else 108000) + (if b0142 then 0 else 108000) + (if b0143 then 0 else 108000) + (if b0144 then 0 else 108000) + (if b0145 then 0 else 108000) + (if b0146 then 0 else 108000) + (if b0147 then 0 else 108000) + (if b0148 then 0 else 108000) + (if b0149 then 0 else 108000) + (if b0150 then 0 else 108000) + (if b0151 then 0 else 108000) + (if b0152 then 0 else 108000) + (if b0153 then 0 else 108000) + (if b0154 then 0 else 108000) + (if b0155 then 0 else 108000) + (if b0156 then 0 else 108000) + (if b0157 then 0 else 108000) + (if b0158 then 0 else 108000) + (if b0159 then 0 else 108000) + (if b0160 then 0 else 108000) + (if b0161 then 0 else 108000) + (if b0162 then 0 else 108000) + (if b0163 then 0 else 108000) + (if b0164 then 0 else 108000) + (if b0165 then 0 else 108000) + (if b0166 then 0 else 108000) + (if b0167 then 0 else 108000) + (if b0168 then 0 else 108000) + (if b0169 then 0 else 108000) + (if b0170 then 0 else 108000) + (if b0171 then 0 else 108000) + (if b0172 then 0 else 108000) + (if b0173 then 0 else 108000) + (if b0174 then 0 else 108000) + (if b0175 then 0 else 108000) + (if b0176 then 0 else 108000) + (if b0177 then 0 else 108000) + (if b0178 then 0 else 108000) + (if b0179 then 0 else 108000) + (if b0180 then 0 else 108000) + (if b0181 then 0 else 108000) + (if b0182 then 0 else 108000) + (if b0183 then 0 else 108000) + (if b0184 then 0 else 108000) + (if b0185 then 0 else 108000) + (if b0186 then 0 else 108000) + (if b0187 then 0 else 108000) + (if b0188 then 0 else 108000) + (if b0189 then 0 else 108000) + (if b0190 then 0 else 108000) + (if b0191 then 0 else 108000) + (if b0192 then 0 else 108000) + (if b0193 then 0 else 108000) + (if b0194 then 0 else 108000) + (if b0195 then 0 else 108000) + (if b0196 then 0 else 108000) + (if b0197 then 0 else 108000) + (if b0198 then 0 else 108000) + (if b0199 then 0 else 108000) + (if b0200 then 0 else 108000) + (if b0201 then 0 else 108000) + (if b0202 then 0 else 108000) + (if b0203 then 0 else 108000) + (if b0204 then 0 else 108000) + (if b0205 then 0 else 108000) + (if b0206 then 0 else 108000) + (if b0207 then 0 else 108000) + (if b0208 then 0 else 108000) + (if b0209 then 0 else 108000) + (if b0210 then 0 else 108000) + (if b0211 then 0 else 108000) + (if b0212 then 0 else 108000) + (if b0213 then 0 else 108000) + (if b0214 then 0 else 108000) + (if b0215 then 0 else 108000) + (if b0216 then 0 else 108000) + (if b0217 then 0 else 108000) + (if b0218 then 0 else 108000) + (if b0219 then 0 else 108000) + (if b0220 then 0 else 108000) + (if b0221 then 0 else 108000) + (if b0222 then 0 else 108000) + (if b0223 then 0 else 108000) + (if b0224 then 0 else 108000) + (if b0225 then 0 else 108000) + (if b0226 then 0 else 108000) + (if b0227 then 0 else 108000) + (if b0228 then 0 else 108000) + (if b0229 then 0 else 108000) + (if b0230 then 0 else 108000) + (if b0231 then 0 else 108000) + (if b0232 then 0 else 108000) + (if b0233 then 0 else 108000) + (if b0234 then 0 else 108000) + (if b0235 then 0 else 108000) + (if b0236 then 0 else 108000) + (if b0237 then 0 else 108000) + (if b0238 then 0 else 108000) + (if b0239 then 0 else 108000) + (if b0240 then 0 else 108000) + (if b0241 then 0 else 108000) + (if b0242 then 0 else 108000) + (if b0243 then 0 else 108000) + (if b0244 then 0 else 108000) + (if b0245 then 0 else 108000) + (if b0246 then 0 else 108000) + (if b0247 then 0 else 108000) + (if b0248 then 0 else 108000) + (if b0249 then 0 else 108000) + (if b0250 then 0 else 108000) + (if b0251 then 0 else 108000) + (if b0252 then 0 else 108000) + (if b0253 then 0 else 108000) + (if b0254 then 0 else 108000) + (if b0255 then 0 else 108000) + (if b0256 then 0 else 108000) + (if b0257 then 0 else 108000) + (if b0258 then 0 else 108000) + (if b0259 then 0 else 108000) + (if b0260 then 0 else 108000) + (if b0261 then 0 else 108000) + (if b0262 then 0 else 108000) + (if b0263 then 0 else 108000) + (if b0264 then 0 else 108000) + (if b0265 then 0 else 108000) + (if b0266 then 0 else 108000) + (if b0267 then 0 else 108000) + (if b0268 then 0 else 108000) + (if b0269 then 0 else 108000) < 441
}
Added: my_inv:1,0,1,0,1,0,1,0,1,1,1,1,1,1,0,1,0,1,0,1,0,1,0,0,1,1,0,1,1,0,0,0,0,0,0,1,0,1,0,1,0,1,0,1,0,0,1,0,0,1,0,0,0,1,1,0,0,0,1,0,1,1,1,1,0,0,1,1,0,0,1,0,1,1,1,0,1,1,1,1,0,0,0,0,0,0,1,0,0,0,0,1,1,0,0,0,0,1,0,1,0,1,0,1,0,0,0,1,0,1,1,1,1,0,0,1,0,1,1,0,1,1,0,0,0,0,1,0,0,0,1,0,1,1,1,1,0,1,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,0,1,0,0,0,1,0,1,0,1,1,0,0,1,1,1,0,0,0,1,0,0,0,1,1,0,0,0,0,1,1,0,0,0,0,0,0,1,1,1,1,1,0,1,1,1,0,0,0,0,0,0,1,0,0,0,0,0,1,1,0,0,0,0,0,0,1,0,1,1,0,1,1,1,0,0,1,1,1,1,1,0,1,0,0,1,0,0,1,0,0,1,0,0,0,0,0,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 42.36023
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/2_Graphics/Mandelbrot/_MandelbrotDS1.bpl.ice2.bpl
Total learner time was 00:00:00.1248720
Verifying $_Z13MandelbrotDS1P6uchar4iiifffffffS_iiiib: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool, b0228: bool, b0229: bool, b0230: bool, b0231: bool, b0232: bool, b0233: bool, b0234: bool, b0235: bool, b0236: bool, b0237: bool, b0238: bool, b0239: bool, b0240: bool, b0241: bool, b0242: bool, b0243: bool, b0244: bool, b0245: bool, b0246: bool, b0247: bool, b0248: bool, b0249: bool, b0250: bool, b0251: bool, b0252: bool, b0253: bool, b0254: bool, b0255: bool, b0256: bool, b0257: bool, b0258: bool, b0259: bool, b0260: bool, b0261: bool, b0262: bool, b0263: bool, b0264: bool, b0265: bool, b0266: bool, b0267: bool, b0268: bool, b0269: bool) : bool
{
  0 + (if b0000 then 0 else 108000) + (if b0009 then 0 else 108000) + (if b0010 then 0 else 108000) + (if b0011 then 0 else 108000) + (if b0012 then 0 else 108000) + (if b0013 then 0 else 108000) + (if b0015 then 0 else 108000) + (if b0017 then 0 else 108000) + (if b0019 then 0 else 108000) + (if b0021 then 0 else 108000) + (if b0024 then 0 else 108000) + (if b0025 then 0 else 108000) + (if b0027 then 0 else 108000) + (if b0028 then 0 else 108000) + (if b0035 then 0 else 108000) + (if b0037 then 0 else 108000) + (if b0039 then 0 else 108000) + (if b0041 then 0 else 108000) + (if b0043 then 0 else 108000) + (if b0046 then 0 else 108000) + (if b0049 then 0 else 108000) + (if b0053 then 0 else 108000) + (if b0054 then 0 else 108000) + (if b0058 then 0 else 108000) + (if b0060 then 0 else 108000) + (if b0061 then 0 else 108000) + (if b0062 then 0 else 108000) + (if b0063 then 0 else 108000) + (if b0066 then 0 else 108000) + (if b0067 then 0 else 108000) + (if b0070 then 0 else 108000) + (if b0072 then 0 else 108000) + (if b0073 then 0 else 108000) + (if b0074 then 0 else 108000) + (if b0076 then 0 else 108000) + (if b0077 then 0 else 108000) + (if b0078 then 0 else 108000) + (if b0079 then 0 else 108000) + (if b0086 then 0 else 108000) + (if b0091 then 0 else 108000) + (if b0092 then 0 else 108000) + (if b0097 then 0 else 108000) + (if b0099 then 0 else 108000) + (if b0101 then 0 else 108000) + (if b0103 then 0 else 108000) + (if b0107 then 0 else 108000) + (if b0109 then 0 else 108000) + (if b0110 then 0 else 108000) + (if b0111 then 0 else 108000) + (if b0112 then 0 else 108000) + (if b0115 then 0 else 108000) + (if b0117 then 0 else 108000) + (if b0118 then 0 else 108000) + (if b0120 then 0 else 108000) + (if b0121 then 0 else 108000) + (if b0126 then 0 else 108000) + (if b0130 then 0 else 108000) + (if b0132 then 0 else 108000) + (if b0133 then 0 else 108000) + (if b0134 then 0 else 108000) + (if b0135 then 0 else 108000) + (if b0137 then 0 else 108000) + (if b0142 then 0 else 108000) + (if b0148 then 0 else 108000) + (if b0150 then 0 else 108000) + (if b0154 then 0 else 108000) + (if b0158 then 0 else 108000) + (if b0160 then 0 else 108000) + (if b0162 then 0 else 108000) + (if b0163 then 0 else 108000) + (if b0166 then 0 else 108000) + (if b0167 then 0 else 108000) + (if b0168 then 0 else 108000) + (if b0172 then 0 else 108000) + (if b0176 then 0 else 108000) + (if b0177 then 0 else 108000) + (if b0182 then 0 else 108000) + (if b0183 then 0 else 108000) + (if b0190 then 0 else 108000) + (if b0191 then 0 else 108000) + (if b0192 then 0 else 108000) + (if b0193 then 0 else 108000) + (if b0194 then 0 else 108000) + (if b0196 then 0 else 108000) + (if b0197 then 0 else 108000) + (if b0198 then 0 else 108000) + (if b0205 then 0 else 108000) + (if b0211 then 0 else 108000) + (if b0212 then 0 else 108000) + (if b0219 then 0 else 108000) + (if b0221 then 0 else 108000) + (if b0222 then 0 else 108000) + (if b0224 then 0 else 108000) + (if b0225 then 0 else 108000) + (if b0226 then 0 else 108000) + (if b0229 then 0 else 108000) + (if b0230 then 0 else 108000) + (if b0231 then 0 else 108000) + (if b0232 then 0 else 108000) + (if b0233 then 0 else 108000) + (if b0235 then 0 else 108000) + (if b0238 then 0 else 108000) + (if b0241 then 0 else 108000) + (if b0244 then 0 else 108000) + (if b0250 then 0 else 108000) + (if b0252 then 0 else 108000) + (if b0254 then 0 else 108000) + (if b0255 then 0 else 108000) + (if b0256 then 0 else 108000) + (if b0257 then 0 else 108000) + (if b0258 then 0 else 108000) + (if b0259 then 0 else 108000) + (if b0260 then 0 else 108000) + (if b0261 then 0 else 108000) + (if b0262 then 0 else 108000) + (if b0263 then 0 else 108000) + (if b0264 then 0 else 108000) + (if b0265 then 0 else 108000) + (if b0266 then 0 else 108000) + (if b0267 then 0 else 108000) + (if b0268 then 0 else 108000) + (if b0269 then 0 else 108000) < 441
}
Added: my_inv:1,1,0,1,0,1,0,1,0,1,1,0,0,0,1,0,1,0,1,0,1,0,1,1,0,0,1,0,1,1,1,1,1,1,1,1,1,0,1,1,1,0,1,0,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,0,0,1,0,1,1,0,0,1,1,0,1,0,1,1,1,1,0,0,1,1,1,1,1,1,1,0,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,0,1,1,1,1,0,1,1,1,1,0,1,1,0,0,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,0,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,0,1,0,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,0,1,1,0,0,1,0,0,0,1,1,1,1,1,1,0,1,1,1,1,1,0,1,1,1,1,1,1,1,0,1,1,1,1,0,0,0,1,1,1,1,0,0,0,1,0,1,1,1,1,1,1,1,1,0,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 5.660502
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/2_Graphics/Mandelbrot/_MandelbrotDS1.bpl.ice2.bpl
Total learner time was 00:00:00.1217900
Verifying $_Z13MandelbrotDS1P6uchar4iiifffffffS_iiiib: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool, b0228: bool, b0229: bool, b0230: bool, b0231: bool, b0232: bool, b0233: bool, b0234: bool, b0235: bool, b0236: bool, b0237: bool, b0238: bool, b0239: bool, b0240: bool, b0241: bool, b0242: bool, b0243: bool, b0244: bool, b0245: bool, b0246: bool, b0247: bool, b0248: bool, b0249: bool, b0250: bool, b0251: bool, b0252: bool, b0253: bool, b0254: bool, b0255: bool, b0256: bool, b0257: bool, b0258: bool, b0259: bool, b0260: bool, b0261: bool, b0262: bool, b0263: bool, b0264: bool, b0265: bool, b0266: bool, b0267: bool, b0268: bool, b0269: bool) : bool
{
  0 + (if b0000 then 0 else 108000) + (if b0009 then 0 else 108000) + (if b0010 then 0 else 108000) + (if b0028 then 0 else 108000) + (if b0035 then 0 else 108000) + (if b0039 then 0 else 108000) + (if b0046 then 0 else 108000) + (if b0049 then 0 else 108000) + (if b0058 then 0 else 108000) + (if b0062 then 0 else 108000) + (if b0073 then 0 else 108000) + (if b0074 then 0 else 108000) + (if b0076 then 0 else 108000) + (if b0079 then 0 else 108000) + (if b0092 then 0 else 108000) + (if b0097 then 0 else 108000) + (if b0099 then 0 else 108000) + (if b0101 then 0 else 108000) + (if b0109 then 0 else 108000) + (if b0110 then 0 else 108000) + (if b0111 then 0 else 108000) + (if b0115 then 0 else 108000) + (if b0118 then 0 else 108000) + (if b0126 then 0 else 108000) + (if b0130 then 0 else 108000) + (if b0133 then 0 else 108000) + (if b0134 then 0 else 108000) + (if b0135 then 0 else 108000) + (if b0148 then 0 else 108000) + (if b0150 then 0 else 108000) + (if b0162 then 0 else 108000) + (if b0163 then 0 else 108000) + (if b0168 then 0 else 108000) + (if b0172 then 0 else 108000) + (if b0176 then 0 else 108000) + (if b0177 then 0 else 108000) + (if b0183 then 0 else 108000) + (if b0191 then 0 else 108000) + (if b0192 then 0 else 108000) + (if b0212 then 0 else 108000) + (if b0221 then 0 else 108000) + (if b0222 then 0 else 108000) + (if b0229 then 0 else 108000) + (if b0230 then 0 else 108000) + (if b0238 then 0 else 108000) + (if b0241 then 0 else 108000) + (if b0252 then 0 else 108000) + (if b0254 then 0 else 108000) + (if b0255 then 0 else 108000) + (if b0256 then 0 else 108000) + (if b0257 then 0 else 108000) + (if b0258 then 0 else 108000) + (if b0259 then 0 else 108000) + (if b0260 then 0 else 108000) + (if b0261 then 0 else 108000) + (if b0262 then 0 else 108000) + (if b0263 then 0 else 108000) + (if b0264 then 0 else 108000) + (if b0265 then 0 else 108000) + (if b0266 then 0 else 108000) + (if b0267 then 0 else 108000) + (if b0268 then 0 else 108000) + (if b0269 then 0 else 108000) < 441
}
Added: my_inv:1,1,0,1,0,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,0,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,0,1,0,1,1,1,1,1,1,1,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,0,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 7.175343
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/2_Graphics/Mandelbrot/_MandelbrotDS1.bpl.ice2.bpl
Total learner time was 00:00:00.1221660
Verifying $_Z13MandelbrotDS1P6uchar4iiifffffffS_iiiib: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool, b0228: bool, b0229: bool, b0230: bool, b0231: bool, b0232: bool, b0233: bool, b0234: bool, b0235: bool, b0236: bool, b0237: bool, b0238: bool, b0239: bool, b0240: bool, b0241: bool, b0242: bool, b0243: bool, b0244: bool, b0245: bool, b0246: bool, b0247: bool, b0248: bool, b0249: bool, b0250: bool, b0251: bool, b0252: bool, b0253: bool, b0254: bool, b0255: bool, b0256: bool, b0257: bool, b0258: bool, b0259: bool, b0260: bool, b0261: bool, b0262: bool, b0263: bool, b0264: bool, b0265: bool, b0266: bool, b0267: bool, b0268: bool, b0269: bool) : bool
{
  0 + (if b0000 then 0 else 108000) + (if b0009 then 0 else 108000) + (if b0010 then 0 else 108000) + (if b0039 then 0 else 108000) + (if b0046 then 0 else 108000) + (if b0058 then 0 else 108000) + (if b0062 then 0 else 108000) + (if b0097 then 0 else 108000) + (if b0115 then 0 else 108000) + (if b0118 then 0 else 108000) + (if b0126 then 0 else 108000) + (if b0133 then 0 else 108000) + (if b0135 then 0 else 108000) + (if b0162 then 0 else 108000) + (if b0163 then 0 else 108000) + (if b0183 then 0 else 108000) + (if b0192 then 0 else 108000) + (if b0222 then 0 else 108000) + (if b0229 then 0 else 108000) + (if b0241 then 0 else 108000) + (if b0254 then 0 else 108000) + (if b0255 then 0 else 108000) + (if b0256 then 0 else 108000) + (if b0257 then 0 else 108000) + (if b0258 then 0 else 108000) + (if b0259 then 0 else 108000) + (if b0260 then 0 else 108000) + (if b0261 then 0 else 108000) + (if b0262 then 0 else 108000) + (if b0263 then 0 else 108000) + (if b0264 then 0 else 108000) + (if b0265 then 0 else 108000) + (if b0266 then 0 else 108000) + (if b0267 then 0 else 108000) + (if b0268 then 0 else 108000) + (if b0269 then 0 else 108000) < 441
}
Added: my_inv:1,1,0,1,0,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 8.614153
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/2_Graphics/Mandelbrot/_MandelbrotDS1.bpl.ice2.bpl
Total learner time was 00:00:00.1204610
Verifying $_Z13MandelbrotDS1P6uchar4iiifffffffS_iiiib: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool, b0228: bool, b0229: bool, b0230: bool, b0231: bool, b0232: bool, b0233: bool, b0234: bool, b0235: bool, b0236: bool, b0237: bool, b0238: bool, b0239: bool, b0240: bool, b0241: bool, b0242: bool, b0243: bool, b0244: bool, b0245: bool, b0246: bool, b0247: bool, b0248: bool, b0249: bool, b0250: bool, b0251: bool, b0252: bool, b0253: bool, b0254: bool, b0255: bool, b0256: bool, b0257: bool, b0258: bool, b0259: bool, b0260: bool, b0261: bool, b0262: bool, b0263: bool, b0264: bool, b0265: bool, b0266: bool, b0267: bool, b0268: bool, b0269: bool) : bool
{
  0 + (if b0000 then 0 else 108000) + (if b0009 then 0 else 108000) + (if b0010 then 0 else 108000) + (if b0058 then 0 else 108000) + (if b0062 then 0 else 108000) + (if b0115 then 0 else 108000) + (if b0118 then 0 else 108000) + (if b0135 then 0 else 108000) + (if b0183 then 0 else 108000) + (if b0229 then 0 else 108000) + (if b0241 then 0 else 108000) + (if b0254 then 0 else 108000) + (if b0255 then 0 else 108000) + (if b0256 then 0 else 108000) + (if b0257 then 0 else 108000) + (if b0258 then 0 else 108000) + (if b0259 then 0 else 108000) + (if b0260 then 0 else 108000) + (if b0261 then 0 else 108000) + (if b0262 then 0 else 108000) + (if b0263 then 0 else 108000) + (if b0264 then 0 else 108000) + (if b0265 then 0 else 108000) + (if b0266 then 0 else 108000) + (if b0267 then 0 else 108000) + (if b0268 then 0 else 108000) + (if b0269 then 0 else 108000) < 441
}
Added: my_inv:1,1,0,1,0,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 15.055957
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/2_Graphics/Mandelbrot/_MandelbrotDS1.bpl.ice2.bpl
Total learner time was 00:00:00.1231810
Verifying $_Z13MandelbrotDS1P6uchar4iiifffffffS_iiiib: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool, b0228: bool, b0229: bool, b0230: bool, b0231: bool, b0232: bool, b0233: bool, b0234: bool, b0235: bool, b0236: bool, b0237: bool, b0238: bool, b0239: bool, b0240: bool, b0241: bool, b0242: bool, b0243: bool, b0244: bool, b0245: bool, b0246: bool, b0247: bool, b0248: bool, b0249: bool, b0250: bool, b0251: bool, b0252: bool, b0253: bool, b0254: bool, b0255: bool, b0256: bool, b0257: bool, b0258: bool, b0259: bool, b0260: bool, b0261: bool, b0262: bool, b0263: bool, b0264: bool, b0265: bool, b0266: bool, b0267: bool, b0268: bool, b0269: bool) : bool
{
  0 + (if b0000 then 0 else 108000) + (if b0009 then 0 else 108000) + (if b0010 then 0 else 108000) + (if b0062 then 0 else 108000) + (if b0229 then 0 else 108000) + (if b0241 then 0 else 108000) + (if b0254 then 0 else 108000) + (if b0255 then 0 else 108000) + (if b0256 then 0 else 108000) + (if b0257 then 0 else 108000) + (if b0258 then 0 else 108000) + (if b0259 then 0 else 108000) + (if b0260 then 0 else 108000) + (if b0261 then 0 else 108000) + (if b0262 then 0 else 108000) + (if b0263 then 0 else 108000) + (if b0264 then 0 else 108000) + (if b0265 then 0 else 108000) + (if b0266 then 0 else 108000) + (if b0267 then 0 else 108000) + (if b0268 then 0 else 108000) + (if b0269 then 0 else 108000) < 441
}
Added: my_inv:1,1,0,1,0,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 8.410008
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/2_Graphics/Mandelbrot/_MandelbrotDS1.bpl.ice2.bpl
Total learner time was 00:00:00.1212000
Verifying $_Z13MandelbrotDS1P6uchar4iiifffffffS_iiiib: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool, b0228: bool, b0229: bool, b0230: bool, b0231: bool, b0232: bool, b0233: bool, b0234: bool, b0235: bool, b0236: bool, b0237: bool, b0238: bool, b0239: bool, b0240: bool, b0241: bool, b0242: bool, b0243: bool, b0244: bool, b0245: bool, b0246: bool, b0247: bool, b0248: bool, b0249: bool, b0250: bool, b0251: bool, b0252: bool, b0253: bool, b0254: bool, b0255: bool, b0256: bool, b0257: bool, b0258: bool, b0259: bool, b0260: bool, b0261: bool, b0262: bool, b0263: bool, b0264: bool, b0265: bool, b0266: bool, b0267: bool, b0268: bool, b0269: bool) : bool
{
  0 + (if b0000 then 0 else 108000) + (if b0009 then 0 else 108000) + (if b0010 then 0 else 108000) + (if b0062 then 0 else 108000) + (if b0254 then 0 else 108000) + (if b0255 then 0 else 108000) + (if b0256 then 0 else 108000) + (if b0257 then 0 else 108000) + (if b0258 then 0 else 108000) + (if b0259 then 0 else 108000) + (if b0260 then 0 else 108000) + (if b0261 then 0 else 108000) + (if b0262 then 0 else 108000) + (if b0263 then 0 else 108000) + (if b0264 then 0 else 108000) + (if b0265 then 0 else 108000) + (if b0266 then 0 else 108000) + (if b0267 then 0 else 108000) + (if b0268 then 0 else 108000) + (if b0269 then 0 else 108000) < 441
}
Added: my_inv:1,1,0,1,0,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 4.274585
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/2_Graphics/Mandelbrot/_MandelbrotDS1.bpl.ice2.bpl
Total learner time was 00:00:00.0906200
Verifying $_Z13MandelbrotDS1P6uchar4iiifffffffS_iiiib: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool, b0228: bool, b0229: bool, b0230: bool, b0231: bool, b0232: bool, b0233: bool, b0234: bool, b0235: bool, b0236: bool, b0237: bool, b0238: bool, b0239: bool, b0240: bool, b0241: bool, b0242: bool, b0243: bool, b0244: bool, b0245: bool, b0246: bool, b0247: bool, b0248: bool, b0249: bool, b0250: bool, b0251: bool, b0252: bool, b0253: bool, b0254: bool, b0255: bool, b0256: bool, b0257: bool, b0258: bool, b0259: bool, b0260: bool, b0261: bool, b0262: bool, b0263: bool, b0264: bool, b0265: bool, b0266: bool, b0267: bool, b0268: bool, b0269: bool) : bool
{
  0 + (if b0000 then 0 else 108000) + (if b0009 then 0 else 108000) + (if b0010 then 0 else 108000) + (if b0254 then 0 else 108000) + (if b0255 then 0 else 108000) + (if b0256 then 0 else 108000) + (if b0257 then 0 else 108000) + (if b0258 then 0 else 108000) + (if b0259 then 0 else 108000) + (if b0260 then 0 else 108000) + (if b0261 then 0 else 108000) + (if b0262 then 0 else 108000) + (if b0263 then 0 else 108000) + (if b0264 then 0 else 108000) + (if b0265 then 0 else 108000) + (if b0266 then 0 else 108000) + (if b0267 then 0 else 108000) + (if b0268 then 0 else 108000) + (if b0269 then 0 else 108000) < 441
}
Prover Time taken = 14.098099
Added Horn clause: 8 => 9
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/2_Graphics/Mandelbrot/_MandelbrotDS1.bpl.ice2.bpl
Total learner time was 00:00:00.1220790
Verifying $_Z13MandelbrotDS1P6uchar4iiifffffffS_iiiib: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool, b0228: bool, b0229: bool, b0230: bool, b0231: bool, b0232: bool, b0233: bool, b0234: bool, b0235: bool, b0236: bool, b0237: bool, b0238: bool, b0239: bool, b0240: bool, b0241: bool, b0242: bool, b0243: bool, b0244: bool, b0245: bool, b0246: bool, b0247: bool, b0248: bool, b0249: bool, b0250: bool, b0251: bool, b0252: bool, b0253: bool, b0254: bool, b0255: bool, b0256: bool, b0257: bool, b0258: bool, b0259: bool, b0260: bool, b0261: bool, b0262: bool, b0263: bool, b0264: bool, b0265: bool, b0266: bool, b0267: bool, b0268: bool, b0269: bool) : bool
{
  0 + (if b0000 then 0 else 108000) + (if b0009 then 0 else 108000) + (if b0010 then 0 else 108000) + (if b0255 then 0 else 108000) + (if b0256 then 0 else 108000) + (if b0257 then 0 else 108000) + (if b0258 then 0 else 108000) + (if b0259 then 0 else 108000) + (if b0260 then 0 else 108000) + (if b0261 then 0 else 108000) + (if b0262 then 0 else 108000) + (if b0263 then 0 else 108000) + (if b0264 then 0 else 108000) + (if b0265 then 0 else 108000) + (if b0266 then 0 else 108000) + (if b0267 then 0 else 108000) + (if b0268 then 0 else 108000) + (if b0269 then 0 else 108000) < 441
}
Prover Time taken = 42.829031
Added Horn clause: 10 => 11
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/2_Graphics/Mandelbrot/_MandelbrotDS1.bpl.ice2.bpl
Total learner time was 00:00:00.1228910
Verifying $_Z13MandelbrotDS1P6uchar4iiifffffffS_iiiib: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool, b0228: bool, b0229: bool, b0230: bool, b0231: bool, b0232: bool, b0233: bool, b0234: bool, b0235: bool, b0236: bool, b0237: bool, b0238: bool, b0239: bool, b0240: bool, b0241: bool, b0242: bool, b0243: bool, b0244: bool, b0245: bool, b0246: bool, b0247: bool, b0248: bool, b0249: bool, b0250: bool, b0251: bool, b0252: bool, b0253: bool, b0254: bool, b0255: bool, b0256: bool, b0257: bool, b0258: bool, b0259: bool, b0260: bool, b0261: bool, b0262: bool, b0263: bool, b0264: bool, b0265: bool, b0266: bool, b0267: bool, b0268: bool, b0269: bool) : bool
{
  0 + (if b0000 then 0 else 108000) + (if b0009 then 0 else 108000) + (if b0010 then 0 else 108000) + (if b0255 then 0 else 108000) + (if b0256 then 0 else 108000) + (if b0257 then 0 else 108000) + (if b0258 then 0 else 108000) + (if b0259 then 0 else 108000) + (if b0260 then 0 else 108000) + (if b0261 then 0 else 108000) + (if b0262 then 0 else 108000) + (if b0263 then 0 else 108000) + (if b0264 then 0 else 108000) + (if b0265 then 0 else 108000) + (if b0267 then 0 else 108000) + (if b0268 then 0 else 108000) + (if b0269 then 0 else 108000) < 441
}
Prover Time taken = 42.785139
Added Horn clause: 12 => 13
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/2_Graphics/Mandelbrot/_MandelbrotDS1.bpl.ice2.bpl
Total learner time was 00:00:00.1251690
Verifying $_Z13MandelbrotDS1P6uchar4iiifffffffS_iiiib: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool, b0228: bool, b0229: bool, b0230: bool, b0231: bool, b0232: bool, b0233: bool, b0234: bool, b0235: bool, b0236: bool, b0237: bool, b0238: bool, b0239: bool, b0240: bool, b0241: bool, b0242: bool, b0243: bool, b0244: bool, b0245: bool, b0246: bool, b0247: bool, b0248: bool, b0249: bool, b0250: bool, b0251: bool, b0252: bool, b0253: bool, b0254: bool, b0255: bool, b0256: bool, b0257: bool, b0258: bool, b0259: bool, b0260: bool, b0261: bool, b0262: bool, b0263: bool, b0264: bool, b0265: bool, b0266: bool, b0267: bool, b0268: bool, b0269: bool) : bool
{
  0 + (if b0000 then 0 else 108000) + (if b0009 then 0 else 108000) + (if b0010 then 0 else 108000) + (if b0255 then 0 else 108000) + (if b0256 then 0 else 108000) + (if b0257 then 0 else 108000) + (if b0258 then 0 else 108000) + (if b0259 then 0 else 108000) + (if b0260 then 0 else 108000) + (if b0261 then 0 else 108000) + (if b0263 then 0 else 108000) + (if b0264 then 0 else 108000) + (if b0265 then 0 else 108000) + (if b0267 then 0 else 108000) + (if b0268 then 0 else 108000) + (if b0269 then 0 else 108000) < 441
}
Prover Time taken = 27.499931
Added Horn clause: 14 => 15
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/2_Graphics/Mandelbrot/_MandelbrotDS1.bpl.ice2.bpl
Total learner time was 00:00:00.1218620
Verifying $_Z13MandelbrotDS1P6uchar4iiifffffffS_iiiib: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool, b0228: bool, b0229: bool, b0230: bool, b0231: bool, b0232: bool, b0233: bool, b0234: bool, b0235: bool, b0236: bool, b0237: bool, b0238: bool, b0239: bool, b0240: bool, b0241: bool, b0242: bool, b0243: bool, b0244: bool, b0245: bool, b0246: bool, b0247: bool, b0248: bool, b0249: bool, b0250: bool, b0251: bool, b0252: bool, b0253: bool, b0254: bool, b0255: bool, b0256: bool, b0257: bool, b0258: bool, b0259: bool, b0260: bool, b0261: bool, b0262: bool, b0263: bool, b0264: bool, b0265: bool, b0266: bool, b0267: bool, b0268: bool, b0269: bool) : bool
{
  0 + (if b0000 then 0 else 108000) + (if b0009 then 0 else 108000) + (if b0010 then 0 else 108000) + (if b0255 then 0 else 108000) + (if b0256 then 0 else 108000) + (if b0257 then 0 else 108000) + (if b0259 then 0 else 108000) + (if b0260 then 0 else 108000) + (if b0261 then 0 else 108000) + (if b0263 then 0 else 108000) + (if b0264 then 0 else 108000) + (if b0265 then 0 else 108000) + (if b0267 then 0 else 108000) + (if b0268 then 0 else 108000) + (if b0269 then 0 else 108000) < 441
}
Added: my_inv:1,0,1,0,1,0,1,0,1,1,1,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,1,1,0,0,1,1,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,1,1,1,1,0,1,1,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,0,0,0,0,0,0,0,0,0,1,1,1,0,1,1,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,0,0,1,1,0,0,0,0,0,1,0,1,1,1,0,1,0,1,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,1,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: negative
Prover Time taken = 20.764794
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/2_Graphics/Mandelbrot/_MandelbrotDS1.bpl.ice2.bpl
[0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1] -> 0 Predicated Label: 1 True Label 0 not consistent!
sorcar: sorcar.cpp:229: int main(int, char* const*): Assertion `sorcar::is_consistent(X, datapoints, horn_constraints)' failed.
The learner seems to have run into an error!

Unhandled Exception:
Microsoft.Boogie.Houdini.MLHoudiniInternalError: The learner seems to have run into an error!
  at Microsoft.Boogie.Houdini.MLHoudini.learn (System.Collections.Generic.HashSet`1[System.String]& funcsChanged) [0x000e7] in <3034164c407e4adc8ab666e7c26ee7b8>:0 
  at Microsoft.Boogie.Houdini.MLHoudini.LearnInv (System.Collections.Generic.Dictionary`2[TKey,TValue] impl2Priority) [0x00782] in <3034164c407e4adc8ab666e7c26ee7b8>:0 
  at Microsoft.Boogie.Houdini.MLHoudini.ComputeSummaries () [0x0019c] in <3034164c407e4adc8ab666e7c26ee7b8>:0 
  at Microsoft.Boogie.ExecutionEngine.RunMLHoudini (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, Microsoft.Boogie.ErrorReporterDelegate er, System.String filename) [0x00055] in <392c81a181e742f795ac4613c6efd8ce>:0 
  at Microsoft.Boogie.ExecutionEngine.RunHoudini (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, Microsoft.Boogie.ErrorReporterDelegate er, System.String filename) [0x00021] in <392c81a181e742f795ac4613c6efd8ce>:0 
  at Microsoft.Boogie.ExecutionEngine.InferAndVerify (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, System.String filename, Microsoft.Boogie.ErrorReporterDelegate er, System.String requestId) [0x00136] in <392c81a181e742f795ac4613c6efd8ce>:0 
  at Microsoft.Boogie.ExecutionEngine.ProcessFiles (System.Collections.Generic.List`1[T] fileNames, System.Boolean lookForSnapshots) [0x002bd] in <392c81a181e742f795ac4613c6efd8ce>:0 
  at Microsoft.Boogie.OnlyBoogie.Main (System.String[] args) [0x0029f] in <581a14d47152481e860a87838c548766>:0 
[ERROR] FATAL UNHANDLED EXCEPTION: Microsoft.Boogie.Houdini.MLHoudiniInternalError: The learner seems to have run into an error!
  at Microsoft.Boogie.Houdini.MLHoudini.learn (System.Collections.Generic.HashSet`1[System.String]& funcsChanged) [0x000e7] in <3034164c407e4adc8ab666e7c26ee7b8>:0 
  at Microsoft.Boogie.Houdini.MLHoudini.LearnInv (System.Collections.Generic.Dictionary`2[TKey,TValue] impl2Priority) [0x00782] in <3034164c407e4adc8ab666e7c26ee7b8>:0 
  at Microsoft.Boogie.Houdini.MLHoudini.ComputeSummaries () [0x0019c] in <3034164c407e4adc8ab666e7c26ee7b8>:0 
  at Microsoft.Boogie.ExecutionEngine.RunMLHoudini (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, Microsoft.Boogie.ErrorReporterDelegate er, System.String filename) [0x00055] in <392c81a181e742f795ac4613c6efd8ce>:0 
  at Microsoft.Boogie.ExecutionEngine.RunHoudini (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, Microsoft.Boogie.ErrorReporterDelegate er, System.String filename) [0x00021] in <392c81a181e742f795ac4613c6efd8ce>:0 
  at Microsoft.Boogie.ExecutionEngine.InferAndVerify (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, System.String filename, Microsoft.Boogie.ErrorReporterDelegate er, System.String requestId) [0x00136] in <392c81a181e742f795ac4613c6efd8ce>:0 
  at Microsoft.Boogie.ExecutionEngine.ProcessFiles (System.Collections.Generic.List`1[T] fileNames, System.Boolean lookForSnapshots) [0x002bd] in <392c81a181e742f795ac4613c6efd8ce>:0 
  at Microsoft.Boogie.OnlyBoogie.Main (System.String[] args) [0x0029f] in <581a14d47152481e860a87838c548766>:0 
Command exited with non-zero status 1
2.94user 3.25system 4:03.30elapsed 2%CPU (0avgtext+0avgdata 72792maxresident)k
0inputs+904outputs (1major+49455minor)pagefaults 0swaps
FILE:CUDA50/2_Graphics/Mandelbrot/_MandelbrotDS1.bpl.ice2.bpl
#################
Tue May 11 21:25:05 UTC 2021
KEY=awinnow
OUTPUT=/root/Docker/winnow_gpu_timeout.txt
[TRACE] Using prover: /root/Docker/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/root/Docker/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a winnow
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/errorLimit:1
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/2_Graphics/marchingCubes/_generateTriangles.bpl.ice2.bpl
--------------------
Parsing /root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/2_Graphics/marchingCubes/_generateTriangles.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /root/Docker/z3/bin/z3
#parameters: 5
Generating VC of $_Z17generateTrianglesP6float4S0_PjS1_5uint3S2_S2_6float3fjj
Verifying $_Z17generateTrianglesP6float4S0_PjS1_5uint3S2_S2_6float3fjj: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1: positive
Prover Time taken = 1116.835616
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/2_Graphics/marchingCubes/_generateTriangles.bpl.ice2.bpl
Total learner time was 00:00:00.1184050
Verifying $_Z17generateTrianglesP6float4S0_PjS1_5uint3S2_S2_6float3fjj: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool) : bool
{
  0 + (if b0000 then 0 else 2000) + (if b0001 then 0 else 2000) + (if b0002 then 0 else 2000) + (if b0003 then 0 else 2000) + (if b0004 then 0 else 2000) < 441
}
Command exited with non-zero status 124
2.36user 2.56system 19:58.62elapsed 0%CPU (0avgtext+0avgdata 76056maxresident)k
0inputs+48outputs (1major+23128minor)pagefaults 0swaps
FILE:CUDA50/2_Graphics/marchingCubes/_generateTriangles.bpl.ice2.bpl
#################
Tue May 11 21:45:04 UTC 2021
KEY=awinnow
OUTPUT=/root/Docker/winnow_gpu_timeout.txt
[TRACE] Using prover: /root/Docker/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/root/Docker/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a winnow
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/errorLimit:1
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/2_Graphics/marchingCubes/_generateTriangles2.bpl.ice2.bpl
--------------------
Parsing /root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/2_Graphics/marchingCubes/_generateTriangles2.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /root/Docker/z3/bin/z3
#parameters: 6
Generating VC of $_Z18generateTriangles2P6float4S0_PjS1_Ph5uint3S3_S3_6float3fjj
Verifying $_Z18generateTriangles2P6float4S0_PjS1_Ph5uint3S3_S3_6float3fjj: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1: positive
Prover Time taken = 219.275009
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/2_Graphics/marchingCubes/_generateTriangles2.bpl.ice2.bpl
Total learner time was 00:00:00.1167970
Verifying $_Z18generateTriangles2P6float4S0_PjS1_Ph5uint3S3_S3_6float3fjj: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool) : bool
{
  0 + (if b0000 then 0 else 2000) + (if b0001 then 0 else 2000) + (if b0002 then 0 else 2000) + (if b0003 then 0 else 2000) + (if b0004 then 0 else 2000) + (if b0005 then 0 else 2000) < 441
}
Overwrote: my_inv:1,1,1,1,1,1: negative
Prover Time taken = 559.255011
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/2_Graphics/marchingCubes/_generateTriangles2.bpl.ice2.bpl
[0, 1, 1, 1, 1, 1, 1] -> 0 Predicated Label: 1 True Label 0 not consistent!
sorcar: sorcar.cpp:229: int main(int, char* const*): Assertion `sorcar::is_consistent(X, datapoints, horn_constraints)' failed.
The learner seems to have run into an error!

Unhandled Exception:
Microsoft.Boogie.Houdini.MLHoudiniInternalError: The learner seems to have run into an error!
  at Microsoft.Boogie.Houdini.MLHoudini.learn (System.Collections.Generic.HashSet`1[System.String]& funcsChanged) [0x000e7] in <3034164c407e4adc8ab666e7c26ee7b8>:0 
  at Microsoft.Boogie.Houdini.MLHoudini.LearnInv (System.Collections.Generic.Dictionary`2[TKey,TValue] impl2Priority) [0x00782] in <3034164c407e4adc8ab666e7c26ee7b8>:0 
  at Microsoft.Boogie.Houdini.MLHoudini.ComputeSummaries () [0x0019c] in <3034164c407e4adc8ab666e7c26ee7b8>:0 
  at Microsoft.Boogie.ExecutionEngine.RunMLHoudini (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, Microsoft.Boogie.ErrorReporterDelegate er, System.String filename) [0x00055] in <392c81a181e742f795ac4613c6efd8ce>:0 
  at Microsoft.Boogie.ExecutionEngine.RunHoudini (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, Microsoft.Boogie.ErrorReporterDelegate er, System.String filename) [0x00021] in <392c81a181e742f795ac4613c6efd8ce>:0 
  at Microsoft.Boogie.ExecutionEngine.InferAndVerify (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, System.String filename, Microsoft.Boogie.ErrorReporterDelegate er, System.String requestId) [0x00136] in <392c81a181e742f795ac4613c6efd8ce>:0 
  at Microsoft.Boogie.ExecutionEngine.ProcessFiles (System.Collections.Generic.List`1[T] fileNames, System.Boolean lookForSnapshots) [0x002bd] in <392c81a181e742f795ac4613c6efd8ce>:0 
  at Microsoft.Boogie.OnlyBoogie.Main (System.String[] args) [0x0029f] in <581a14d47152481e860a87838c548766>:0 
[ERROR] FATAL UNHANDLED EXCEPTION: Microsoft.Boogie.Houdini.MLHoudiniInternalError: The learner seems to have run into an error!
  at Microsoft.Boogie.Houdini.MLHoudini.learn (System.Collections.Generic.HashSet`1[System.String]& funcsChanged) [0x000e7] in <3034164c407e4adc8ab666e7c26ee7b8>:0 
  at Microsoft.Boogie.Houdini.MLHoudini.LearnInv (System.Collections.Generic.Dictionary`2[TKey,TValue] impl2Priority) [0x00782] in <3034164c407e4adc8ab666e7c26ee7b8>:0 
  at Microsoft.Boogie.Houdini.MLHoudini.ComputeSummaries () [0x0019c] in <3034164c407e4adc8ab666e7c26ee7b8>:0 
  at Microsoft.Boogie.ExecutionEngine.RunMLHoudini (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, Microsoft.Boogie.ErrorReporterDelegate er, System.String filename) [0x00055] in <392c81a181e742f795ac4613c6efd8ce>:0 
  at Microsoft.Boogie.ExecutionEngine.RunHoudini (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, Microsoft.Boogie.ErrorReporterDelegate er, System.String filename) [0x00021] in <392c81a181e742f795ac4613c6efd8ce>:0 
  at Microsoft.Boogie.ExecutionEngine.InferAndVerify (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, System.String filename, Microsoft.Boogie.ErrorReporterDelegate er, System.String requestId) [0x00136] in <392c81a181e742f795ac4613c6efd8ce>:0 
  at Microsoft.Boogie.ExecutionEngine.ProcessFiles (System.Collections.Generic.List`1[T] fileNames, System.Boolean lookForSnapshots) [0x002bd] in <392c81a181e742f795ac4613c6efd8ce>:0 
  at Microsoft.Boogie.OnlyBoogie.Main (System.String[] args) [0x0029f] in <581a14d47152481e860a87838c548766>:0 
Command exited with non-zero status 1
1.89user 2.05system 13:00.34elapsed 0%CPU (0avgtext+0avgdata 77128maxresident)k
0inputs+64outputs (1major+23801minor)pagefaults 0swaps
FILE:CUDA50/2_Graphics/marchingCubes/_generateTriangles2.bpl.ice2.bpl
#################
Tue May 11 21:58:04 UTC 2021
KEY=awinnow
OUTPUT=/root/Docker/winnow_gpu_timeout.txt
[TRACE] Using prover: /root/Docker/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/root/Docker/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a winnow
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/errorLimit:1
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/3_Imaging/dct8x8/CUDAkernel2DCT.bpl.ice2.bpl
--------------------
Parsing /root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/3_Imaging/dct8x8/CUDAkernel2DCT.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /root/Docker/z3/bin/z3
#parameters: 31
Generating VC of $_Z14CUDAkernel2DCTPfS_i
Verifying $_Z14CUDAkernel2DCTPfS_i: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.170839
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/3_Imaging/dct8x8/CUDAkernel2DCT.bpl.ice2.bpl
Total learner time was 00:00:00.1159120
Verifying $_Z14CUDAkernel2DCTPfS_i: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool) : bool
{
  0 + (if b0000 then 0 else 12000) + (if b0001 then 0 else 12000) + (if b0002 then 0 else 12000) + (if b0003 then 0 else 12000) + (if b0004 then 0 else 12000) + (if b0005 then 0 else 12000) + (if b0006 then 0 else 12000) + (if b0007 then 0 else 12000) + (if b0008 then 0 else 12000) + (if b0009 then 0 else 12000) + (if b0010 then 0 else 12000) + (if b0011 then 0 else 12000) + (if b0012 then 0 else 12000) + (if b0013 then 0 else 12000) + (if b0014 then 0 else 12000) + (if b0015 then 0 else 12000) + (if b0016 then 0 else 12000) + (if b0017 then 0 else 12000) + (if b0018 then 0 else 12000) + (if b0019 then 0 else 12000) + (if b0020 then 0 else 12000) + (if b0021 then 0 else 12000) + (if b0022 then 0 else 12000) + (if b0023 then 0 else 12000) + (if b0024 then 0 else 12000) + (if b0025 then 0 else 12000) + (if b0026 then 0 else 12000) + (if b0027 then 0 else 12000) + (if b0028 then 0 else 12000) + (if b0029 then 0 else 12000) + (if b0030 then 0 else 12000) < 441
}
Prover Time taken = 197.955764
Added Horn clause: 0 => 1
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/3_Imaging/dct8x8/CUDAkernel2DCT.bpl.ice2.bpl
Total learner time was 00:00:00.1205240
Verifying $_Z14CUDAkernel2DCTPfS_i: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool) : bool
{
  0 + (if b0001 then 0 else 12000) + (if b0003 then 0 else 12000) + (if b0004 then 0 else 12000) + (if b0005 then 0 else 12000) + (if b0006 then 0 else 12000) + (if b0007 then 0 else 12000) + (if b0008 then 0 else 12000) + (if b0009 then 0 else 12000) + (if b0010 then 0 else 12000) + (if b0011 then 0 else 12000) + (if b0012 then 0 else 12000) + (if b0013 then 0 else 12000) + (if b0014 then 0 else 12000) + (if b0015 then 0 else 12000) + (if b0016 then 0 else 12000) + (if b0017 then 0 else 12000) + (if b0018 then 0 else 12000) + (if b0019 then 0 else 12000) + (if b0020 then 0 else 12000) + (if b0021 then 0 else 12000) + (if b0022 then 0 else 12000) + (if b0023 then 0 else 12000) + (if b0024 then 0 else 12000) + (if b0025 then 0 else 12000) + (if b0026 then 0 else 12000) + (if b0027 then 0 else 12000) + (if b0028 then 0 else 12000) + (if b0029 then 0 else 12000) + (if b0030 then 0 else 12000) < 441
}
Prover Time taken = 364.338435
Added Horn clause: 1 => 2
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/3_Imaging/dct8x8/CUDAkernel2DCT.bpl.ice2.bpl
Total learner time was 00:00:00.1149820
Verifying $_Z14CUDAkernel2DCTPfS_i: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool) : bool
{
  0 + (if b0001 then 0 else 12000) + (if b0003 then 0 else 12000) + (if b0004 then 0 else 12000) + (if b0005 then 0 else 12000) + (if b0006 then 0 else 12000) + (if b0007 then 0 else 12000) + (if b0008 then 0 else 12000) + (if b0009 then 0 else 12000) + (if b0010 then 0 else 12000) + (if b0011 then 0 else 12000) + (if b0012 then 0 else 12000) + (if b0013 then 0 else 12000) + (if b0015 then 0 else 12000) + (if b0017 then 0 else 12000) + (if b0018 then 0 else 12000) + (if b0019 then 0 else 12000) + (if b0020 then 0 else 12000) + (if b0021 then 0 else 12000) + (if b0022 then 0 else 12000) + (if b0023 then 0 else 12000) + (if b0024 then 0 else 12000) + (if b0025 then 0 else 12000) + (if b0026 then 0 else 12000) + (if b0027 then 0 else 12000) + (if b0028 then 0 else 12000) + (if b0029 then 0 else 12000) + (if b0030 then 0 else 12000) < 441
}
Command exited with non-zero status 124
2.36user 2.44system 19:58.65elapsed 0%CPU (0avgtext+0avgdata 69196maxresident)k
0inputs+128outputs (1major+26913minor)pagefaults 0swaps
FILE:CUDA50/3_Imaging/dct8x8/CUDAkernel2DCT.bpl.ice2.bpl
#################
Tue May 11 22:18:03 UTC 2021
KEY=awinnow
OUTPUT=/root/Docker/winnow_gpu_timeout.txt
[TRACE] Using prover: /root/Docker/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/root/Docker/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a winnow
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/errorLimit:1
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/3_Imaging/dct8x8/CUDAkernel2IDCT.bpl.ice2.bpl
--------------------
Parsing /root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/3_Imaging/dct8x8/CUDAkernel2IDCT.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /root/Docker/z3/bin/z3
#parameters: 31
Generating VC of $_Z15CUDAkernel2IDCTPfS_i
Verifying $_Z15CUDAkernel2IDCTPfS_i: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.171054
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/3_Imaging/dct8x8/CUDAkernel2IDCT.bpl.ice2.bpl
Total learner time was 00:00:00.1152670
Verifying $_Z15CUDAkernel2IDCTPfS_i: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool) : bool
{
  0 + (if b0000 then 0 else 12000) + (if b0001 then 0 else 12000) + (if b0002 then 0 else 12000) + (if b0003 then 0 else 12000) + (if b0004 then 0 else 12000) + (if b0005 then 0 else 12000) + (if b0006 then 0 else 12000) + (if b0007 then 0 else 12000) + (if b0008 then 0 else 12000) + (if b0009 then 0 else 12000) + (if b0010 then 0 else 12000) + (if b0011 then 0 else 12000) + (if b0012 then 0 else 12000) + (if b0013 then 0 else 12000) + (if b0014 then 0 else 12000) + (if b0015 then 0 else 12000) + (if b0016 then 0 else 12000) + (if b0017 then 0 else 12000) + (if b0018 then 0 else 12000) + (if b0019 then 0 else 12000) + (if b0020 then 0 else 12000) + (if b0021 then 0 else 12000) + (if b0022 then 0 else 12000) + (if b0023 then 0 else 12000) + (if b0024 then 0 else 12000) + (if b0025 then 0 else 12000) + (if b0026 then 0 else 12000) + (if b0027 then 0 else 12000) + (if b0028 then 0 else 12000) + (if b0029 then 0 else 12000) + (if b0030 then 0 else 12000) < 441
}
Prover Time taken = 130.278888
Added Horn clause: 0 => 1
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/3_Imaging/dct8x8/CUDAkernel2IDCT.bpl.ice2.bpl
Total learner time was 00:00:00.1194410
Verifying $_Z15CUDAkernel2IDCTPfS_i: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool) : bool
{
  0 + (if b0001 then 0 else 12000) + (if b0003 then 0 else 12000) + (if b0004 then 0 else 12000) + (if b0005 then 0 else 12000) + (if b0006 then 0 else 12000) + (if b0007 then 0 else 12000) + (if b0008 then 0 else 12000) + (if b0009 then 0 else 12000) + (if b0010 then 0 else 12000) + (if b0011 then 0 else 12000) + (if b0012 then 0 else 12000) + (if b0013 then 0 else 12000) + (if b0014 then 0 else 12000) + (if b0015 then 0 else 12000) + (if b0016 then 0 else 12000) + (if b0017 then 0 else 12000) + (if b0018 then 0 else 12000) + (if b0019 then 0 else 12000) + (if b0020 then 0 else 12000) + (if b0021 then 0 else 12000) + (if b0022 then 0 else 12000) + (if b0023 then 0 else 12000) + (if b0024 then 0 else 12000) + (if b0025 then 0 else 12000) + (if b0026 then 0 else 12000) + (if b0027 then 0 else 12000) + (if b0028 then 0 else 12000) + (if b0029 then 0 else 12000) + (if b0030 then 0 else 12000) < 441
}
Command exited with non-zero status 124
2.28user 2.45system 19:58.62elapsed 0%CPU (0avgtext+0avgdata 76908maxresident)k
0inputs+88outputs (1major+25536minor)pagefaults 0swaps
FILE:CUDA50/3_Imaging/dct8x8/CUDAkernel2IDCT.bpl.ice2.bpl
#################
Tue May 11 22:38:02 UTC 2021
KEY=awinnow
OUTPUT=/root/Docker/winnow_gpu_timeout.txt
[TRACE] Using prover: /root/Docker/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/root/Docker/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a winnow
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/errorLimit:1
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/3_Imaging/dct8x8/CUDAkernelShortDCT.bpl.ice2.bpl
--------------------
Parsing /root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/3_Imaging/dct8x8/CUDAkernelShortDCT.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /root/Docker/z3/bin/z3
#parameters: 24
Generating VC of $_Z18CUDAkernelShortDCTPsi
Verifying $_Z18CUDAkernelShortDCTPsi: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.166326
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/3_Imaging/dct8x8/CUDAkernelShortDCT.bpl.ice2.bpl
Total learner time was 00:00:00.1208390
Verifying $_Z18CUDAkernelShortDCTPsi: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool) : bool
{
  0 + (if b0000 then 0 else 9000) + (if b0001 then 0 else 9000) + (if b0002 then 0 else 9000) + (if b0003 then 0 else 9000) + (if b0004 then 0 else 9000) + (if b0005 then 0 else 9000) + (if b0006 then 0 else 9000) + (if b0007 then 0 else 9000) + (if b0008 then 0 else 9000) + (if b0009 then 0 else 9000) + (if b0010 then 0 else 9000) + (if b0011 then 0 else 9000) + (if b0012 then 0 else 9000) + (if b0013 then 0 else 9000) + (if b0014 then 0 else 9000) + (if b0015 then 0 else 9000) + (if b0016 then 0 else 9000) + (if b0017 then 0 else 9000) + (if b0018 then 0 else 9000) + (if b0019 then 0 else 9000) + (if b0020 then 0 else 9000) + (if b0021 then 0 else 9000) + (if b0022 then 0 else 9000) + (if b0023 then 0 else 9000) < 441
}
Command exited with non-zero status 124
2.10user 2.32system 19:58.62elapsed 0%CPU (0avgtext+0avgdata 69408maxresident)k
0inputs+48outputs (1major+21509minor)pagefaults 0swaps
FILE:CUDA50/3_Imaging/dct8x8/CUDAkernelShortDCT.bpl.ice2.bpl
#################
Tue May 11 22:58:00 UTC 2021
KEY=awinnow
OUTPUT=/root/Docker/winnow_gpu_timeout.txt
[TRACE] Using prover: /root/Docker/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/root/Docker/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a winnow
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/errorLimit:1
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/3_Imaging/dct8x8/CUDAkernelShortIDCT.bpl.ice2.bpl
--------------------
Parsing /root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/3_Imaging/dct8x8/CUDAkernelShortIDCT.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /root/Docker/z3/bin/z3
#parameters: 24
Generating VC of $_Z19CUDAkernelShortIDCTPsi
Verifying $_Z19CUDAkernelShortIDCTPsi: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.168719
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/3_Imaging/dct8x8/CUDAkernelShortIDCT.bpl.ice2.bpl
Total learner time was 00:00:00.1195850
Verifying $_Z19CUDAkernelShortIDCTPsi: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool) : bool
{
  0 + (if b0000 then 0 else 9000) + (if b0001 then 0 else 9000) + (if b0002 then 0 else 9000) + (if b0003 then 0 else 9000) + (if b0004 then 0 else 9000) + (if b0005 then 0 else 9000) + (if b0006 then 0 else 9000) + (if b0007 then 0 else 9000) + (if b0008 then 0 else 9000) + (if b0009 then 0 else 9000) + (if b0010 then 0 else 9000) + (if b0011 then 0 else 9000) + (if b0012 then 0 else 9000) + (if b0013 then 0 else 9000) + (if b0014 then 0 else 9000) + (if b0015 then 0 else 9000) + (if b0016 then 0 else 9000) + (if b0017 then 0 else 9000) + (if b0018 then 0 else 9000) + (if b0019 then 0 else 9000) + (if b0020 then 0 else 9000) + (if b0021 then 0 else 9000) + (if b0022 then 0 else 9000) + (if b0023 then 0 else 9000) < 441
}
Command exited with non-zero status 124
2.10user 2.32system 19:58.62elapsed 0%CPU (0avgtext+0avgdata 69268maxresident)k
0inputs+48outputs (1major+21562minor)pagefaults 0swaps
FILE:CUDA50/3_Imaging/dct8x8/CUDAkernelShortIDCT.bpl.ice2.bpl
#################
Tue May 11 23:17:59 UTC 2021
KEY=awinnow
OUTPUT=/root/Docker/winnow_gpu_timeout.txt
[TRACE] Using prover: /root/Docker/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/root/Docker/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a winnow
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/errorLimit:1
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/3_Imaging/histogram/histogram64.bpl.ice2.bpl
--------------------
Parsing /root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/3_Imaging/histogram/histogram64.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /root/Docker/z3/bin/z3
#parameters: 18
Generating VC of $_Z17histogram64KernelPjP5uint4j
Verifying $_Z17histogram64KernelPjP5uint4j: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.165807
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/3_Imaging/histogram/histogram64.bpl.ice2.bpl
Total learner time was 00:00:00.1168200
Verifying $_Z17histogram64KernelPjP5uint4j: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool) : bool
{
  0 + (if b0000 then 0 else 7000) + (if b0001 then 0 else 7000) + (if b0002 then 0 else 7000) + (if b0003 then 0 else 7000) + (if b0004 then 0 else 7000) + (if b0005 then 0 else 7000) + (if b0006 then 0 else 7000) + (if b0007 then 0 else 7000) + (if b0008 then 0 else 7000) + (if b0009 then 0 else 7000) + (if b0010 then 0 else 7000) + (if b0011 then 0 else 7000) + (if b0012 then 0 else 7000) + (if b0013 then 0 else 7000) + (if b0014 then 0 else 7000) + (if b0015 then 0 else 7000) + (if b0016 then 0 else 7000) + (if b0017 then 0 else 7000) < 441
}
Prover Time taken = 159.549305
Added Horn clause: 0 => 1
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/3_Imaging/histogram/histogram64.bpl.ice2.bpl
Total learner time was 00:00:00.1156460
Verifying $_Z17histogram64KernelPjP5uint4j: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool) : bool
{
  0 + (if b0001 then 0 else 7000) + (if b0003 then 0 else 7000) + (if b0004 then 0 else 7000) + (if b0005 then 0 else 7000) + (if b0006 then 0 else 7000) + (if b0007 then 0 else 7000) + (if b0008 then 0 else 7000) + (if b0009 then 0 else 7000) + (if b0010 then 0 else 7000) + (if b0011 then 0 else 7000) + (if b0012 then 0 else 7000) + (if b0013 then 0 else 7000) + (if b0014 then 0 else 7000) + (if b0015 then 0 else 7000) + (if b0016 then 0 else 7000) + (if b0017 then 0 else 7000) < 441
}
Prover Time taken = 119.096849
Added Horn clause: 1 && 0 && 0 => 2
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/3_Imaging/histogram/histogram64.bpl.ice2.bpl
Total learner time was 00:00:00.1171560
Verifying $_Z17histogram64KernelPjP5uint4j: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool) : bool
{
  0 + (if b0001 then 0 else 7000) + (if b0003 then 0 else 7000) + (if b0004 then 0 else 7000) + (if b0005 then 0 else 7000) + (if b0006 then 0 else 7000) + (if b0007 then 0 else 7000) + (if b0008 then 0 else 7000) + (if b0009 then 0 else 7000) + (if b0011 then 0 else 7000) + (if b0013 then 0 else 7000) + (if b0014 then 0 else 7000) + (if b0015 then 0 else 7000) + (if b0016 then 0 else 7000) + (if b0017 then 0 else 7000) < 441
}
Prover Time taken = 335.492927
Added Horn clause: 1 && 0 => 3
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/3_Imaging/histogram/histogram64.bpl.ice2.bpl
Total learner time was 00:00:00.1230420
Verifying $_Z17histogram64KernelPjP5uint4j: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool) : bool
{
  0 + (if b0001 then 0 else 7000) + (if b0003 then 0 else 7000) + (if b0006 then 0 else 7000) + (if b0008 then 0 else 7000) + (if b0009 then 0 else 7000) + (if b0011 then 0 else 7000) + (if b0013 then 0 else 7000) + (if b0014 then 0 else 7000) + (if b0015 then 0 else 7000) + (if b0016 then 0 else 7000) + (if b0017 then 0 else 7000) < 441
}
Prover Time taken = 179.315075
Added Horn clause: 1 && 3 => 4
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/3_Imaging/histogram/histogram64.bpl.ice2.bpl
Total learner time was 00:00:00.1189860
Verifying $_Z17histogram64KernelPjP5uint4j: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool) : bool
{
  0 + (if b0001 then 0 else 7000) + (if b0003 then 0 else 7000) + (if b0008 then 0 else 7000) + (if b0009 then 0 else 7000) + (if b0011 then 0 else 7000) + (if b0013 then 0 else 7000) + (if b0014 then 0 else 7000) + (if b0015 then 0 else 7000) + (if b0016 then 0 else 7000) + (if b0017 then 0 else 7000) < 441
}
Prover Time taken = 193.119293
Added Horn clause: 1 && 4 => 5
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/3_Imaging/histogram/histogram64.bpl.ice2.bpl
Total learner time was 00:00:00.1202770
Verifying $_Z17histogram64KernelPjP5uint4j: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool) : bool
{
  0 + (if b0001 then 0 else 7000) + (if b0003 then 0 else 7000) + (if b0009 then 0 else 7000) + (if b0011 then 0 else 7000) + (if b0013 then 0 else 7000) + (if b0014 then 0 else 7000) + (if b0015 then 0 else 7000) + (if b0016 then 0 else 7000) + (if b0017 then 0 else 7000) < 441
}
Prover Time taken = 2.636178
Prover time = 989.38
Number of prover queries = 7
Learner time = 0.71
Number of learner queries = 6
Total time: 990.21
Number of positive examples:1
Number of negative examples:0
Number of Horn clauses:5
verified

Boogie program verifier finished with 1 verified, 0 errors
2.23user 2.76system 16:31.63elapsed 0%CPU (0avgtext+0avgdata 61876maxresident)k
0inputs+256outputs (1major+34460minor)pagefaults 0swaps
FILE:CUDA50/3_Imaging/histogram/histogram64.bpl.ice2.bpl
#################
Tue May 11 23:34:31 UTC 2021
KEY=awinnow
OUTPUT=/root/Docker/winnow_gpu_timeout.txt
[TRACE] Using prover: /root/Docker/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/root/Docker/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a winnow
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/errorLimit:1
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/3_Imaging/postProcessGL/postProcessGL.bpl.ice2.bpl
--------------------
Parsing /root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/3_Imaging/postProcessGL/postProcessGL.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /root/Docker/z3/bin/z3
#parameters: 10
Generating VC of $_Z11cudaProcessPjiiiiff
Verifying $_Z11cudaProcessPjiiiiff: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool) : bool
{
  false
}
Command exited with non-zero status 124
1.94user 2.18system 19:58.62elapsed 0%CPU (0avgtext+0avgdata 66900maxresident)k
0inputs+16outputs (1major+17645minor)pagefaults 0swaps
FILE:CUDA50/3_Imaging/postProcessGL/postProcessGL.bpl.ice2.bpl
#################
Tue May 11 23:54:29 UTC 2021
KEY=awinnow
OUTPUT=/root/Docker/winnow_gpu_timeout.txt
[TRACE] Using prover: /root/Docker/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/root/Docker/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a winnow
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/errorLimit:1
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/eigenvalues/_bisect_kernel_large.bpl.ice2.bpl
--------------------
Parsing /root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/eigenvalues/_bisect_kernel_large.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /root/Docker/z3/bin/z3
#parameters: 529
Generating VC of $_Z17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_
Verifying $_Z17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool, b0228: bool, b0229: bool, b0230: bool, b0231: bool, b0232: bool, b0233: bool, b0234: bool, b0235: bool, b0236: bool, b0237: bool, b0238: bool, b0239: bool, b0240: bool, b0241: bool, b0242: bool, b0243: bool, b0244: bool, b0245: bool, b0246: bool, b0247: bool, b0248: bool, b0249: bool, b0250: bool, b0251: bool, b0252: bool, b0253: bool, b0254: bool, b0255: bool, b0256: bool, b0257: bool, b0258: bool, b0259: bool, b0260: bool, b0261: bool, b0262: bool, b0263: bool, b0264: bool, b0265: bool, b0266: bool, b0267: bool, b0268: bool, b0269: bool, b0270: bool, b0271: bool, b0272: bool, b0273: bool, b0274: bool, b0275: bool, b0276: bool, b0277: bool, b0278: bool, b0279: bool, b0280: bool, b0281: bool, b0282: bool, b0283: bool, b0284: bool, b0285: bool, b0286: bool, b0287: bool, b0288: bool, b0289: bool, b0290: bool, b0291: bool, b0292: bool, b0293: bool, b0294: bool, b0295: bool, b0296: bool, b0297: bool, b0298: bool, b0299: bool, b0300: bool, b0301: bool, b0302: bool, b0303: bool, b0304: bool, b0305: bool, b0306: bool, b0307: bool, b0308: bool, b0309: bool, b0310: bool, b0311: bool, b0312: bool, b0313: bool, b0314: bool, b0315: bool, b0316: bool, b0317: bool, b0318: bool, b0319: bool, b0320: bool, b0321: bool, b0322: bool, b0323: bool, b0324: bool, b0325: bool, b0326: bool, b0327: bool, b0328: bool, b0329: bool, b0330: bool, b0331: bool, b0332: bool, b0333: bool, b0334: bool, b0335: bool, b0336: bool, b0337: bool, b0338: bool, b0339: bool, b0340: bool, b0341: bool, b0342: bool, b0343: bool, b0344: bool, b0345: bool, b0346: bool, b0347: bool, b0348: bool, b0349: bool, b0350: bool, b0351: bool, b0352: bool, b0353: bool, b0354: bool, b0355: bool, b0356: bool, b0357: bool, b0358: bool, b0359: bool, b0360: bool, b0361: bool, b0362: bool, b0363: bool, b0364: bool, b0365: bool, b0366: bool, b0367: bool, b0368: bool, b0369: bool, b0370: bool, b0371: bool, b0372: bool, b0373: bool, b0374: bool, b0375: bool, b0376: bool, b0377: bool, b0378: bool, b0379: bool, b0380: bool, b0381: bool, b0382: bool, b0383: bool, b0384: bool, b0385: bool, b0386: bool, b0387: bool, b0388: bool, b0389: bool, b0390: bool, b0391: bool, b0392: bool, b0393: bool, b0394: bool, b0395: bool, b0396: bool, b0397: bool, b0398: bool, b0399: bool, b0400: bool, b0401: bool, b0402: bool, b0403: bool, b0404: bool, b0405: bool, b0406: bool, b0407: bool, b0408: bool, b0409: bool, b0410: bool, b0411: bool, b0412: bool, b0413: bool, b0414: bool, b0415: bool, b0416: bool, b0417: bool, b0418: bool, b0419: bool, b0420: bool, b0421: bool, b0422: bool, b0423: bool, b0424: bool, b0425: bool, b0426: bool, b0427: bool, b0428: bool, b0429: bool, b0430: bool, b0431: bool, b0432: bool, b0433: bool, b0434: bool, b0435: bool, b0436: bool, b0437: bool, b0438: bool, b0439: bool, b0440: bool, b0441: bool, b0442: bool, b0443: bool, b0444: bool, b0445: bool, b0446: bool, b0447: bool, b0448: bool, b0449: bool, b0450: bool, b0451: bool, b0452: bool, b0453: bool, b0454: bool, b0455: bool, b0456: bool, b0457: bool, b0458: bool, b0459: bool, b0460: bool, b0461: bool, b0462: bool, b0463: bool, b0464: bool, b0465: bool, b0466: bool, b0467: bool, b0468: bool, b0469: bool, b0470: bool, b0471: bool, b0472: bool, b0473: bool, b0474: bool, b0475: bool, b0476: bool, b0477: bool, b0478: bool, b0479: bool, b0480: bool, b0481: bool, b0482: bool, b0483: bool, b0484: bool, b0485: bool, b0486: bool, b0487: bool, b0488: bool, b0489: bool, b0490: bool, b0491: bool, b0492: bool, b0493: bool, b0494: bool, b0495: bool, b0496: bool, b0497: bool, b0498: bool, b0499: bool, b0500: bool, b0501: bool, b0502: bool, b0503: bool, b0504: bool, b0505: bool, b0506: bool, b0507: bool, b0508: bool, b0509: bool, b0510: bool, b0511: bool, b0512: bool, b0513: bool, b0514: bool, b0515: bool, b0516: bool, b0517: bool, b0518: bool, b0519: bool, b0520: bool, b0521: bool, b0522: bool, b0523: bool, b0524: bool, b0525: bool, b0526: bool, b0527: bool, b0528: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 1.252832
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/eigenvalues/_bisect_kernel_large.bpl.ice2.bpl
Total learner time was 00:00:00.1269350
Verifying $_Z17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool, b0228: bool, b0229: bool, b0230: bool, b0231: bool, b0232: bool, b0233: bool, b0234: bool, b0235: bool, b0236: bool, b0237: bool, b0238: bool, b0239: bool, b0240: bool, b0241: bool, b0242: bool, b0243: bool, b0244: bool, b0245: bool, b0246: bool, b0247: bool, b0248: bool, b0249: bool, b0250: bool, b0251: bool, b0252: bool, b0253: bool, b0254: bool, b0255: bool, b0256: bool, b0257: bool, b0258: bool, b0259: bool, b0260: bool, b0261: bool, b0262: bool, b0263: bool, b0264: bool, b0265: bool, b0266: bool, b0267: bool, b0268: bool, b0269: bool, b0270: bool, b0271: bool, b0272: bool, b0273: bool, b0274: bool, b0275: bool, b0276: bool, b0277: bool, b0278: bool, b0279: bool, b0280: bool, b0281: bool, b0282: bool, b0283: bool, b0284: bool, b0285: bool, b0286: bool, b0287: bool, b0288: bool, b0289: bool, b0290: bool, b0291: bool, b0292: bool, b0293: bool, b0294: bool, b0295: bool, b0296: bool, b0297: bool, b0298: bool, b0299: bool, b0300: bool, b0301: bool, b0302: bool, b0303: bool, b0304: bool, b0305: bool, b0306: bool, b0307: bool, b0308: bool, b0309: bool, b0310: bool, b0311: bool, b0312: bool, b0313: bool, b0314: bool, b0315: bool, b0316: bool, b0317: bool, b0318: bool, b0319: bool, b0320: bool, b0321: bool, b0322: bool, b0323: bool, b0324: bool, b0325: bool, b0326: bool, b0327: bool, b0328: bool, b0329: bool, b0330: bool, b0331: bool, b0332: bool, b0333: bool, b0334: bool, b0335: bool, b0336: bool, b0337: bool, b0338: bool, b0339: bool, b0340: bool, b0341: bool, b0342: bool, b0343: bool, b0344: bool, b0345: bool, b0346: bool, b0347: bool, b0348: bool, b0349: bool, b0350: bool, b0351: bool, b0352: bool, b0353: bool, b0354: bool, b0355: bool, b0356: bool, b0357: bool, b0358: bool, b0359: bool, b0360: bool, b0361: bool, b0362: bool, b0363: bool, b0364: bool, b0365: bool, b0366: bool, b0367: bool, b0368: bool, b0369: bool, b0370: bool, b0371: bool, b0372: bool, b0373: bool, b0374: bool, b0375: bool, b0376: bool, b0377: bool, b0378: bool, b0379: bool, b0380: bool, b0381: bool, b0382: bool, b0383: bool, b0384: bool, b0385: bool, b0386: bool, b0387: bool, b0388: bool, b0389: bool, b0390: bool, b0391: bool, b0392: bool, b0393: bool, b0394: bool, b0395: bool, b0396: bool, b0397: bool, b0398: bool, b0399: bool, b0400: bool, b0401: bool, b0402: bool, b0403: bool, b0404: bool, b0405: bool, b0406: bool, b0407: bool, b0408: bool, b0409: bool, b0410: bool, b0411: bool, b0412: bool, b0413: bool, b0414: bool, b0415: bool, b0416: bool, b0417: bool, b0418: bool, b0419: bool, b0420: bool, b0421: bool, b0422: bool, b0423: bool, b0424: bool, b0425: bool, b0426: bool, b0427: bool, b0428: bool, b0429: bool, b0430: bool, b0431: bool, b0432: bool, b0433: bool, b0434: bool, b0435: bool, b0436: bool, b0437: bool, b0438: bool, b0439: bool, b0440: bool, b0441: bool, b0442: bool, b0443: bool, b0444: bool, b0445: bool, b0446: bool, b0447: bool, b0448: bool, b0449: bool, b0450: bool, b0451: bool, b0452: bool, b0453: bool, b0454: bool, b0455: bool, b0456: bool, b0457: bool, b0458: bool, b0459: bool, b0460: bool, b0461: bool, b0462: bool, b0463: bool, b0464: bool, b0465: bool, b0466: bool, b0467: bool, b0468: bool, b0469: bool, b0470: bool, b0471: bool, b0472: bool, b0473: bool, b0474: bool, b0475: bool, b0476: bool, b0477: bool, b0478: bool, b0479: bool, b0480: bool, b0481: bool, b0482: bool, b0483: bool, b0484: bool, b0485: bool, b0486: bool, b0487: bool, b0488: bool, b0489: bool, b0490: bool, b0491: bool, b0492: bool, b0493: bool, b0494: bool, b0495: bool, b0496: bool, b0497: bool, b0498: bool, b0499: bool, b0500: bool, b0501: bool, b0502: bool, b0503: bool, b0504: bool, b0505: bool, b0506: bool, b0507: bool, b0508: bool, b0509: bool, b0510: bool, b0511: bool, b0512: bool, b0513: bool, b0514: bool, b0515: bool, b0516: bool, b0517: bool, b0518: bool, b0519: bool, b0520: bool, b0521: bool, b0522: bool, b0523: bool, b0524: bool, b0525: bool, b0526: bool, b0527: bool, b0528: bool) : bool
{
  0 + (if b0000 then 0 else 211000) + (if b0001 then 0 else 211000) + (if b0002 then 0 else 211000) + (if b0003 then 0 else 211000) + (if b0004 then 0 else 211000) + (if b0005 then 0 else 211000) + (if b0006 then 0 else 211000) + (if b0007 then 0 else 211000) + (if b0008 then 0 else 211000) + (if b0009 then 0 else 211000) + (if b0010 then 0 else 211000) + (if b0011 then 0 else 211000) + (if b0012 then 0 else 211000) + (if b0013 then 0 else 211000) + (if b0014 then 0 else 211000) + (if b0015 then 0 else 211000) + (if b0016 then 0 else 211000) + (if b0017 then 0 else 211000) + (if b0018 then 0 else 211000) + (if b0019 then 0 else 211000) + (if b0020 then 0 else 211000) + (if b0021 then 0 else 211000) + (if b0022 then 0 else 211000) + (if b0023 then 0 else 211000) + (if b0024 then 0 else 211000) + (if b0025 then 0 else 211000) + (if b0026 then 0 else 211000) + (if b0027 then 0 else 211000) + (if b0028 then 0 else 211000) + (if b0029 then 0 else 211000) + (if b0030 then 0 else 211000) + (if b0031 then 0 else 211000) + (if b0032 then 0 else 211000) + (if b0033 then 0 else 211000) + (if b0034 then 0 else 211000) + (if b0035 then 0 else 211000) + (if b0036 then 0 else 211000) + (if b0037 then 0 else 211000) + (if b0038 then 0 else 211000) + (if b0039 then 0 else 211000) + (if b0040 then 0 else 211000) + (if b0041 then 0 else 211000) + (if b0042 then 0 else 211000) + (if b0043 then 0 else 211000) + (if b0044 then 0 else 211000) + (if b0045 then 0 else 211000) + (if b0046 then 0 else 211000) + (if b0047 then 0 else 211000) + (if b0048 then 0 else 211000) + (if b0049 then 0 else 211000) + (if b0050 then 0 else 211000) + (if b0051 then 0 else 211000) + (if b0052 then 0 else 211000) + (if b0053 then 0 else 211000) + (if b0054 then 0 else 211000) + (if b0055 then 0 else 211000) + (if b0056 then 0 else 211000) + (if b0057 then 0 else 211000) + (if b0058 then 0 else 211000) + (if b0059 then 0 else 211000) + (if b0060 then 0 else 211000) + (if b0061 then 0 else 211000) + (if b0062 then 0 else 211000) + (if b0063 then 0 else 211000) + (if b0064 then 0 else 211000) + (if b0065 then 0 else 211000) + (if b0066 then 0 else 211000) + (if b0067 then 0 else 211000) + (if b0068 then 0 else 211000) + (if b0069 then 0 else 211000) + (if b0070 then 0 else 211000) + (if b0071 then 0 else 211000) + (if b0072 then 0 else 211000) + (if b0073 then 0 else 211000) + (if b0074 then 0 else 211000) + (if b0075 then 0 else 211000) + (if b0076 then 0 else 211000) + (if b0077 then 0 else 211000) + (if b0078 then 0 else 211000) + (if b0079 then 0 else 211000) + (if b0080 then 0 else 211000) + (if b0081 then 0 else 211000) + (if b0082 then 0 else 211000) + (if b0083 then 0 else 211000) + (if b0084 then 0 else 211000) + (if b0085 then 0 else 211000) + (if b0086 then 0 else 211000) + (if b0087 then 0 else 211000) + (if b0088 then 0 else 211000) + (if b0089 then 0 else 211000) + (if b0090 then 0 else 211000) + (if b0091 then 0 else 211000) + (if b0092 then 0 else 211000) + (if b0093 then 0 else 211000) + (if b0094 then 0 else 211000) + (if b0095 then 0 else 211000) + (if b0096 then 0 else 211000) + (if b0097 then 0 else 211000) + (if b0098 then 0 else 211000) + (if b0099 then 0 else 211000) + (if b0100 then 0 else 211000) + (if b0102 then 0 else 211000) + (if b0104 then 0 else 211000) + (if b0106 then 0 else 211000) + (if b0108 then 0 else 211000) + (if b0110 then 0 else 211000) + (if b0112 then 0 else 211000) + (if b0114 then 0 else 211000) + (if b0116 then 0 else 211000) + (if b0118 then 0 else 211000) + (if b0120 then 0 else 211000) + (if b0122 then 0 else 211000) + (if b0124 then 0 else 211000) + (if b0125 then 0 else 211000) + (if b0126 then 0 else 211000) + (if b0127 then 0 else 211000) + (if b0128 then 0 else 211000) + (if b0129 then 0 else 211000) + (if b0130 then 0 else 211000) + (if b0131 then 0 else 211000) + (if b0132 then 0 else 211000) + (if b0133 then 0 else 211000) + (if b0134 then 0 else 211000) + (if b0135 then 0 else 211000) + (if b0136 then 0 else 211000) + (if b0137 then 0 else 211000) + (if b0138 then 0 else 211000) + (if b0139 then 0 else 211000) + (if b0140 then 0 else 211000) + (if b0141 then 0 else 211000) + (if b0142 then 0 else 211000) + (if b0143 then 0 else 211000) + (if b0144 then 0 else 211000) + (if b0145 then 0 else 211000) + (if b0146 then 0 else 211000) + (if b0147 then 0 else 211000) + (if b0148 then 0 else 211000) + (if b0149 then 0 else 211000) + (if b0150 then 0 else 211000) + (if b0151 then 0 else 211000) + (if b0152 then 0 else 211000) + (if b0153 then 0 else 211000) + (if b0154 then 0 else 211000) + (if b0155 then 0 else 211000) + (if b0156 then 0 else 211000) + (if b0157 then 0 else 211000) + (if b0158 then 0 else 211000) + (if b0159 then 0 else 211000) + (if b0160 then 0 else 211000) + (if b0161 then 0 else 211000) + (if b0162 then 0 else 211000) + (if b0163 then 0 else 211000) + (if b0164 then 0 else 211000) + (if b0165 then 0 else 211000) + (if b0166 then 0 else 211000) + (if b0167 then 0 else 211000) + (if b0168 then 0 else 211000) + (if b0169 then 0 else 211000) + (if b0170 then 0 else 211000) + (if b0171 then 0 else 211000) + (if b0172 then 0 else 211000) + (if b0173 then 0 else 211000) + (if b0174 then 0 else 211000) + (if b0175 then 0 else 211000) + (if b0176 then 0 else 211000) + (if b0177 then 0 else 211000) + (if b0178 then 0 else 211000) + (if b0179 then 0 else 211000) + (if b0180 then 0 else 211000) + (if b0181 then 0 else 211000) + (if b0182 then 0 else 211000) + (if b0183 then 0 else 211000) + (if b0184 then 0 else 211000) + (if b0185 then 0 else 211000) + (if b0186 then 0 else 211000) + (if b0187 then 0 else 211000) + (if b0188 then 0 else 211000) + (if b0189 then 0 else 211000) + (if b0190 then 0 else 211000) + (if b0191 then 0 else 211000) + (if b0192 then 0 else 211000) + (if b0193 then 0 else 211000) + (if b0194 then 0 else 211000) + (if b0195 then 0 else 211000) + (if b0196 then 0 else 211000) + (if b0197 then 0 else 211000) + (if b0198 then 0 else 211000) + (if b0199 then 0 else 211000) + (if b0200 then 0 else 211000) + (if b0201 then 0 else 211000) + (if b0202 then 0 else 211000) + (if b0203 then 0 else 211000) + (if b0204 then 0 else 211000) + (if b0205 then 0 else 211000) + (if b0206 then 0 else 211000) + (if b0207 then 0 else 211000) + (if b0208 then 0 else 211000) + (if b0209 then 0 else 211000) + (if b0210 then 0 else 211000) + (if b0211 then 0 else 211000) + (if b0212 then 0 else 211000) + (if b0213 then 0 else 211000) + (if b0214 then 0 else 211000) + (if b0215 then 0 else 211000) + (if b0216 then 0 else 211000) + (if b0217 then 0 else 211000) + (if b0218 then 0 else 211000) + (if b0219 then 0 else 211000) + (if b0220 then 0 else 211000) + (if b0221 then 0 else 211000) + (if b0222 then 0 else 211000) + (if b0223 then 0 else 211000) + (if b0224 then 0 else 211000) + (if b0225 then 0 else 211000) + (if b0226 then 0 else 211000) + (if b0227 then 0 else 211000) + (if b0228 then 0 else 211000) + (if b0229 then 0 else 211000) + (if b0230 then 0 else 211000) + (if b0231 then 0 else 211000) + (if b0232 then 0 else 211000) + (if b0233 then 0 else 211000) + (if b0234 then 0 else 211000) + (if b0235 then 0 else 211000) + (if b0236 then 0 else 211000) + (if b0237 then 0 else 211000) + (if b0238 then 0 else 211000) + (if b0239 then 0 else 211000) + (if b0240 then 0 else 211000) + (if b0241 then 0 else 211000) + (if b0242 then 0 else 211000) + (if b0243 then 0 else 211000) + (if b0244 then 0 else 211000) + (if b0245 then 0 else 211000) + (if b0246 then 0 else 211000) + (if b0247 then 0 else 211000) + (if b0248 then 0 else 211000) + (if b0249 then 0 else 211000) + (if b0250 then 0 else 211000) + (if b0251 then 0 else 211000) + (if b0252 then 0 else 211000) + (if b0253 then 0 else 211000) + (if b0254 then 0 else 211000) + (if b0255 then 0 else 211000) + (if b0256 then 0 else 211000) + (if b0257 then 0 else 211000) + (if b0258 then 0 else 211000) + (if b0259 then 0 else 211000) + (if b0260 then 0 else 211000) + (if b0261 then 0 else 211000) + (if b0262 then 0 else 211000) + (if b0263 then 0 else 211000) + (if b0264 then 0 else 211000) + (if b0265 then 0 else 211000) + (if b0266 then 0 else 211000) + (if b0267 then 0 else 211000) + (if b0268 then 0 else 211000) + (if b0269 then 0 else 211000) + (if b0270 then 0 else 211000) + (if b0271 then 0 else 211000) + (if b0272 then 0 else 211000) + (if b0273 then 0 else 211000) + (if b0274 then 0 else 211000) + (if b0275 then 0 else 211000) + (if b0276 then 0 else 211000) + (if b0277 then 0 else 211000) + (if b0278 then 0 else 211000) + (if b0279 then 0 else 211000) + (if b0280 then 0 else 211000) + (if b0281 then 0 else 211000) + (if b0282 then 0 else 211000) + (if b0283 then 0 else 211000) + (if b0284 then 0 else 211000) + (if b0285 then 0 else 211000) + (if b0286 then 0 else 211000) + (if b0287 then 0 else 211000) + (if b0288 then 0 else 211000) + (if b0289 then 0 else 211000) + (if b0290 then 0 else 211000) + (if b0291 then 0 else 211000) + (if b0292 then 0 else 211000) + (if b0293 then 0 else 211000) + (if b0294 then 0 else 211000) + (if b0295 then 0 else 211000) + (if b0296 then 0 else 211000) + (if b0297 then 0 else 211000) + (if b0298 then 0 else 211000) + (if b0299 then 0 else 211000) + (if b0300 then 0 else 211000) + (if b0301 then 0 else 211000) + (if b0302 then 0 else 211000) + (if b0303 then 0 else 211000) + (if b0304 then 0 else 211000) + (if b0305 then 0 else 211000) + (if b0306 then 0 else 211000) + (if b0307 then 0 else 211000) + (if b0308 then 0 else 211000) + (if b0309 then 0 else 211000) + (if b0310 then 0 else 211000) + (if b0311 then 0 else 211000) + (if b0312 then 0 else 211000) + (if b0313 then 0 else 211000) + (if b0314 then 0 else 211000) + (if b0315 then 0 else 211000) + (if b0316 then 0 else 211000) + (if b0317 then 0 else 211000) + (if b0318 then 0 else 211000) + (if b0319 then 0 else 211000) + (if b0320 then 0 else 211000) + (if b0321 then 0 else 211000) + (if b0322 then 0 else 211000) + (if b0323 then 0 else 211000) + (if b0324 then 0 else 211000) + (if b0325 then 0 else 211000) + (if b0326 then 0 else 211000) + (if b0327 then 0 else 211000) + (if b0328 then 0 else 211000) + (if b0329 then 0 else 211000) + (if b0330 then 0 else 211000) + (if b0331 then 0 else 211000) + (if b0332 then 0 else 211000) + (if b0333 then 0 else 211000) + (if b0334 then 0 else 211000) + (if b0335 then 0 else 211000) + (if b0336 then 0 else 211000) + (if b0337 then 0 else 211000) + (if b0338 then 0 else 211000) + (if b0339 then 0 else 211000) + (if b0340 then 0 else 211000) + (if b0341 then 0 else 211000) + (if b0342 then 0 else 211000) + (if b0343 then 0 else 211000) + (if b0344 then 0 else 211000) + (if b0345 then 0 else 211000) + (if b0346 then 0 else 211000) + (if b0347 then 0 else 211000) + (if b0348 then 0 else 211000) + (if b0349 then 0 else 211000) + (if b0350 then 0 else 211000) + (if b0351 then 0 else 211000) + (if b0352 then 0 else 211000) + (if b0353 then 0 else 211000) + (if b0354 then 0 else 211000) + (if b0355 then 0 else 211000) + (if b0356 then 0 else 211000) + (if b0357 then 0 else 211000) + (if b0358 then 0 else 211000) + (if b0359 then 0 else 211000) + (if b0360 then 0 else 211000) + (if b0361 then 0 else 211000) + (if b0362 then 0 else 211000) + (if b0363 then 0 else 211000) + (if b0364 then 0 else 211000) + (if b0365 then 0 else 211000) + (if b0366 then 0 else 211000) + (if b0367 then 0 else 211000) + (if b0368 then 0 else 211000) + (if b0369 then 0 else 211000) + (if b0370 then 0 else 211000) + (if b0371 then 0 else 211000) + (if b0372 then 0 else 211000) + (if b0373 then 0 else 211000) + (if b0374 then 0 else 211000) + (if b0375 then 0 else 211000) + (if b0376 then 0 else 211000) + (if b0377 then 0 else 211000) + (if b0378 then 0 else 211000) + (if b0379 then 0 else 211000) + (if b0380 then 0 else 211000) + (if b0381 then 0 else 211000) + (if b0382 then 0 else 211000) + (if b0383 then 0 else 211000) + (if b0384 then 0 else 211000) + (if b0385 then 0 else 211000) + (if b0386 then 0 else 211000) + (if b0387 then 0 else 211000) + (if b0388 then 0 else 211000) + (if b0389 then 0 else 211000) + (if b0390 then 0 else 211000) + (if b0391 then 0 else 211000) + (if b0392 then 0 else 211000) + (if b0393 then 0 else 211000) + (if b0394 then 0 else 211000) + (if b0395 then 0 else 211000) + (if b0396 then 0 else 211000) + (if b0397 then 0 else 211000) + (if b0398 then 0 else 211000) + (if b0399 then 0 else 211000) + (if b0400 then 0 else 211000) + (if b0401 then 0 else 211000) + (if b0402 then 0 else 211000) + (if b0403 then 0 else 211000) + (if b0404 then 0 else 211000) + (if b0405 then 0 else 211000) + (if b0406 then 0 else 211000) + (if b0407 then 0 else 211000) + (if b0408 then 0 else 211000) + (if b0409 then 0 else 211000) + (if b0410 then 0 else 211000) + (if b0411 then 0 else 211000) + (if b0412 then 0 else 211000) + (if b0413 then 0 else 211000) + (if b0414 then 0 else 211000) + (if b0415 then 0 else 211000) + (if b0416 then 0 else 211000) + (if b0417 then 0 else 211000) + (if b0418 then 0 else 211000) + (if b0419 then 0 else 211000) + (if b0420 then 0 else 211000) + (if b0421 then 0 else 211000) + (if b0422 then 0 else 211000) + (if b0423 then 0 else 211000) + (if b0424 then 0 else 211000) + (if b0425 then 0 else 211000) + (if b0426 then 0 else 211000) + (if b0427 then 0 else 211000) + (if b0428 then 0 else 211000) + (if b0429 then 0 else 211000) + (if b0430 then 0 else 211000) + (if b0431 then 0 else 211000) + (if b0432 then 0 else 211000) + (if b0433 then 0 else 211000) + (if b0434 then 0 else 211000) + (if b0435 then 0 else 211000) + (if b0436 then 0 else 211000) + (if b0437 then 0 else 211000) + (if b0438 then 0 else 211000) + (if b0439 then 0 else 211000) + (if b0440 then 0 else 211000) + (if b0441 then 0 else 211000) + (if b0442 then 0 else 211000) + (if b0443 then 0 else 211000) + (if b0444 then 0 else 211000) + (if b0445 then 0 else 211000) + (if b0446 then 0 else 211000) + (if b0447 then 0 else 211000) + (if b0448 then 0 else 211000) + (if b0449 then 0 else 211000) + (if b0450 then 0 else 211000) + (if b0451 then 0 else 211000) + (if b0452 then 0 else 211000) + (if b0453 then 0 else 211000) + (if b0454 then 0 else 211000) + (if b0455 then 0 else 211000) + (if b0456 then 0 else 211000) + (if b0457 then 0 else 211000) + (if b0458 then 0 else 211000) + (if b0459 then 0 else 211000) + (if b0460 then 0 else 211000) + (if b0461 then 0 else 211000) + (if b0462 then 0 else 211000) + (if b0463 then 0 else 211000) + (if b0464 then 0 else 211000) + (if b0465 then 0 else 211000) + (if b0466 then 0 else 211000) + (if b0467 then 0 else 211000) + (if b0468 then 0 else 211000) + (if b0469 then 0 else 211000) + (if b0470 then 0 else 211000) + (if b0471 then 0 else 211000) + (if b0472 then 0 else 211000) + (if b0473 then 0 else 211000) + (if b0474 then 0 else 211000) + (if b0475 then 0 else 211000) + (if b0476 then 0 else 211000) + (if b0477 then 0 else 211000) + (if b0478 then 0 else 211000) + (if b0479 then 0 else 211000) + (if b0480 then 0 else 211000) + (if b0481 then 0 else 211000) + (if b0482 then 0 else 211000) + (if b0483 then 0 else 211000) + (if b0484 then 0 else 211000) + (if b0485 then 0 else 211000) + (if b0486 then 0 else 211000) + (if b0487 then 0 else 211000) + (if b0488 then 0 else 211000) + (if b0489 then 0 else 211000) + (if b0490 then 0 else 211000) + (if b0491 then 0 else 211000) + (if b0492 then 0 else 211000) + (if b0493 then 0 else 211000) + (if b0494 then 0 else 211000) + (if b0495 then 0 else 211000) + (if b0496 then 0 else 211000) + (if b0497 then 0 else 211000) + (if b0498 then 0 else 211000) + (if b0499 then 0 else 211000) + (if b0500 then 0 else 211000) + (if b0501 then 0 else 211000) + (if b0502 then 0 else 211000) + (if b0503 then 0 else 211000) + (if b0504 then 0 else 211000) + (if b0505 then 0 else 211000) + (if b0506 then 0 else 211000) + (if b0507 then 0 else 211000) + (if b0508 then 0 else 211000) + (if b0509 then 0 else 211000) + (if b0510 then 0 else 211000) + (if b0511 then 0 else 211000) + (if b0512 then 0 else 211000) + (if b0513 then 0 else 211000) + (if b0514 then 0 else 211000) + (if b0515 then 0 else 211000) + (if b0516 then 0 else 211000) + (if b0517 then 0 else 211000) + (if b0518 then 0 else 211000) + (if b0519 then 0 else 211000) + (if b0520 then 0 else 211000) + (if b0521 then 0 else 211000) + (if b0522 then 0 else 211000) + (if b0523 then 0 else 211000) + (if b0524 then 0 else 211000) + (if b0525 then 0 else 211000) + (if b0526 then 0 else 211000) + (if b0527 then 0 else 211000) + (if b0528 then 0 else 211000) < 441
}
Command exited with non-zero status 124
5.02user 2.35system 19:58.65elapsed 0%CPU (0avgtext+0avgdata 284616maxresident)k
0inputs+144outputs (1major+94365minor)pagefaults 0swaps
FILE:CUDA50/6_Advanced/eigenvalues/_bisect_kernel_large.bpl.ice2.bpl
#################
Wed May 12 00:14:28 UTC 2021
KEY=awinnow
OUTPUT=/root/Docker/winnow_gpu_timeout.txt
[TRACE] Using prover: /root/Docker/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/root/Docker/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a winnow
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/errorLimit:1
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/eigenvalues/_bisect_kernel_large_multi.bpl.ice2.bpl
--------------------
Parsing /root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/eigenvalues/_bisect_kernel_large_multi.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /root/Docker/z3/bin/z3
#parameters: 327
Generating VC of $_Z31bisectKernelLarge_MultIntervalsPfS_jPjS0_S_S_S0_S0_S_S0_f
Verifying $_Z31bisectKernelLarge_MultIntervalsPfS_jPjS0_S_S_S0_S0_S_S0_f: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool, b0228: bool, b0229: bool, b0230: bool, b0231: bool, b0232: bool, b0233: bool, b0234: bool, b0235: bool, b0236: bool, b0237: bool, b0238: bool, b0239: bool, b0240: bool, b0241: bool, b0242: bool, b0243: bool, b0244: bool, b0245: bool, b0246: bool, b0247: bool, b0248: bool, b0249: bool, b0250: bool, b0251: bool, b0252: bool, b0253: bool, b0254: bool, b0255: bool, b0256: bool, b0257: bool, b0258: bool, b0259: bool, b0260: bool, b0261: bool, b0262: bool, b0263: bool, b0264: bool, b0265: bool, b0266: bool, b0267: bool, b0268: bool, b0269: bool, b0270: bool, b0271: bool, b0272: bool, b0273: bool, b0274: bool, b0275: bool, b0276: bool, b0277: bool, b0278: bool, b0279: bool, b0280: bool, b0281: bool, b0282: bool, b0283: bool, b0284: bool, b0285: bool, b0286: bool, b0287: bool, b0288: bool, b0289: bool, b0290: bool, b0291: bool, b0292: bool, b0293: bool, b0294: bool, b0295: bool, b0296: bool, b0297: bool, b0298: bool, b0299: bool, b0300: bool, b0301: bool, b0302: bool, b0303: bool, b0304: bool, b0305: bool, b0306: bool, b0307: bool, b0308: bool, b0309: bool, b0310: bool, b0311: bool, b0312: bool, b0313: bool, b0314: bool, b0315: bool, b0316: bool, b0317: bool, b0318: bool, b0319: bool, b0320: bool, b0321: bool, b0322: bool, b0323: bool, b0324: bool, b0325: bool, b0326: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 1.634026
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/eigenvalues/_bisect_kernel_large_multi.bpl.ice2.bpl
Total learner time was 00:00:00.1395060
Verifying $_Z31bisectKernelLarge_MultIntervalsPfS_jPjS0_S_S_S0_S0_S_S0_f: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool, b0228: bool, b0229: bool, b0230: bool, b0231: bool, b0232: bool, b0233: bool, b0234: bool, b0235: bool, b0236: bool, b0237: bool, b0238: bool, b0239: bool, b0240: bool, b0241: bool, b0242: bool, b0243: bool, b0244: bool, b0245: bool, b0246: bool, b0247: bool, b0248: bool, b0249: bool, b0250: bool, b0251: bool, b0252: bool, b0253: bool, b0254: bool, b0255: bool, b0256: bool, b0257: bool, b0258: bool, b0259: bool, b0260: bool, b0261: bool, b0262: bool, b0263: bool, b0264: bool, b0265: bool, b0266: bool, b0267: bool, b0268: bool, b0269: bool, b0270: bool, b0271: bool, b0272: bool, b0273: bool, b0274: bool, b0275: bool, b0276: bool, b0277: bool, b0278: bool, b0279: bool, b0280: bool, b0281: bool, b0282: bool, b0283: bool, b0284: bool, b0285: bool, b0286: bool, b0287: bool, b0288: bool, b0289: bool, b0290: bool, b0291: bool, b0292: bool, b0293: bool, b0294: bool, b0295: bool, b0296: bool, b0297: bool, b0298: bool, b0299: bool, b0300: bool, b0301: bool, b0302: bool, b0303: bool, b0304: bool, b0305: bool, b0306: bool, b0307: bool, b0308: bool, b0309: bool, b0310: bool, b0311: bool, b0312: bool, b0313: bool, b0314: bool, b0315: bool, b0316: bool, b0317: bool, b0318: bool, b0319: bool, b0320: bool, b0321: bool, b0322: bool, b0323: bool, b0324: bool, b0325: bool, b0326: bool) : bool
{
  0 + (if b0000 then 0 else 130000) + (if b0001 then 0 else 130000) + (if b0002 then 0 else 130000) + (if b0003 then 0 else 130000) + (if b0004 then 0 else 130000) + (if b0005 then 0 else 130000) + (if b0006 then 0 else 130000) + (if b0007 then 0 else 130000) + (if b0008 then 0 else 130000) + (if b0009 then 0 else 130000) + (if b0010 then 0 else 130000) + (if b0011 then 0 else 130000) + (if b0012 then 0 else 130000) + (if b0013 then 0 else 130000) + (if b0014 then 0 else 130000) + (if b0015 then 0 else 130000) + (if b0016 then 0 else 130000) + (if b0017 then 0 else 130000) + (if b0018 then 0 else 130000) + (if b0019 then 0 else 130000) + (if b0020 then 0 else 130000) + (if b0021 then 0 else 130000) + (if b0022 then 0 else 130000) + (if b0023 then 0 else 130000) + (if b0024 then 0 else 130000) + (if b0025 then 0 else 130000) + (if b0026 then 0 else 130000) + (if b0027 then 0 else 130000) + (if b0028 then 0 else 130000) + (if b0029 then 0 else 130000) + (if b0030 then 0 else 130000) + (if b0031 then 0 else 130000) + (if b0032 then 0 else 130000) + (if b0033 then 0 else 130000) + (if b0034 then 0 else 130000) + (if b0035 then 0 else 130000) + (if b0036 then 0 else 130000) + (if b0037 then 0 else 130000) + (if b0038 then 0 else 130000) + (if b0039 then 0 else 130000) + (if b0040 then 0 else 130000) + (if b0041 then 0 else 130000) + (if b0042 then 0 else 130000) + (if b0043 then 0 else 130000) + (if b0044 then 0 else 130000) + (if b0045 then 0 else 130000) + (if b0046 then 0 else 130000) + (if b0047 then 0 else 130000) + (if b0048 then 0 else 130000) + (if b0049 then 0 else 130000) + (if b0050 then 0 else 130000) + (if b0051 then 0 else 130000) + (if b0052 then 0 else 130000) + (if b0053 then 0 else 130000) + (if b0054 then 0 else 130000) + (if b0055 then 0 else 130000) + (if b0057 then 0 else 130000) + (if b0059 then 0 else 130000) + (if b0061 then 0 else 130000) + (if b0063 then 0 else 130000) + (if b0065 then 0 else 130000) + (if b0067 then 0 else 130000) + (if b0069 then 0 else 130000) + (if b0071 then 0 else 130000) + (if b0073 then 0 else 130000) + (if b0075 then 0 else 130000) + (if b0077 then 0 else 130000) + (if b0079 then 0 else 130000) + (if b0080 then 0 else 130000) + (if b0081 then 0 else 130000) + (if b0082 then 0 else 130000) + (if b0083 then 0 else 130000) + (if b0084 then 0 else 130000) + (if b0085 then 0 else 130000) + (if b0086 then 0 else 130000) + (if b0087 then 0 else 130000) + (if b0088 then 0 else 130000) + (if b0089 then 0 else 130000) + (if b0090 then 0 else 130000) + (if b0091 then 0 else 130000) + (if b0092 then 0 else 130000) + (if b0093 then 0 else 130000) + (if b0094 then 0 else 130000) + (if b0095 then 0 else 130000) + (if b0096 then 0 else 130000) + (if b0097 then 0 else 130000) + (if b0098 then 0 else 130000) + (if b0099 then 0 else 130000) + (if b0100 then 0 else 130000) + (if b0101 then 0 else 130000) + (if b0102 then 0 else 130000) + (if b0103 then 0 else 130000) + (if b0104 then 0 else 130000) + (if b0105 then 0 else 130000) + (if b0106 then 0 else 130000) + (if b0107 then 0 else 130000) + (if b0108 then 0 else 130000) + (if b0109 then 0 else 130000) + (if b0110 then 0 else 130000) + (if b0111 then 0 else 130000) + (if b0112 then 0 else 130000) + (if b0113 then 0 else 130000) + (if b0114 then 0 else 130000) + (if b0115 then 0 else 130000) + (if b0116 then 0 else 130000) + (if b0117 then 0 else 130000) + (if b0118 then 0 else 130000) + (if b0119 then 0 else 130000) + (if b0120 then 0 else 130000) + (if b0121 then 0 else 130000) + (if b0122 then 0 else 130000) + (if b0123 then 0 else 130000) + (if b0124 then 0 else 130000) + (if b0125 then 0 else 130000) + (if b0126 then 0 else 130000) + (if b0127 then 0 else 130000) + (if b0128 then 0 else 130000) + (if b0129 then 0 else 130000) + (if b0130 then 0 else 130000) + (if b0131 then 0 else 130000) + (if b0132 then 0 else 130000) + (if b0133 then 0 else 130000) + (if b0134 then 0 else 130000) + (if b0135 then 0 else 130000) + (if b0136 then 0 else 130000) + (if b0137 then 0 else 130000) + (if b0138 then 0 else 130000) + (if b0139 then 0 else 130000) + (if b0140 then 0 else 130000) + (if b0141 then 0 else 130000) + (if b0142 then 0 else 130000) + (if b0143 then 0 else 130000) + (if b0144 then 0 else 130000) + (if b0145 then 0 else 130000) + (if b0146 then 0 else 130000) + (if b0147 then 0 else 130000) + (if b0148 then 0 else 130000) + (if b0149 then 0 else 130000) + (if b0150 then 0 else 130000) + (if b0151 then 0 else 130000) + (if b0152 then 0 else 130000) + (if b0153 then 0 else 130000) + (if b0154 then 0 else 130000) + (if b0155 then 0 else 130000) + (if b0156 then 0 else 130000) + (if b0157 then 0 else 130000) + (if b0158 then 0 else 130000) + (if b0159 then 0 else 130000) + (if b0160 then 0 else 130000) + (if b0161 then 0 else 130000) + (if b0162 then 0 else 130000) + (if b0163 then 0 else 130000) + (if b0164 then 0 else 130000) + (if b0165 then 0 else 130000) + (if b0166 then 0 else 130000) + (if b0167 then 0 else 130000) + (if b0168 then 0 else 130000) + (if b0169 then 0 else 130000) + (if b0170 then 0 else 130000) + (if b0171 then 0 else 130000) + (if b0172 then 0 else 130000) + (if b0173 then 0 else 130000) + (if b0174 then 0 else 130000) + (if b0175 then 0 else 130000) + (if b0176 then 0 else 130000) + (if b0177 then 0 else 130000) + (if b0178 then 0 else 130000) + (if b0179 then 0 else 130000) + (if b0180 then 0 else 130000) + (if b0181 then 0 else 130000) + (if b0182 then 0 else 130000) + (if b0183 then 0 else 130000) + (if b0184 then 0 else 130000) + (if b0185 then 0 else 130000) + (if b0186 then 0 else 130000) + (if b0187 then 0 else 130000) + (if b0188 then 0 else 130000) + (if b0189 then 0 else 130000) + (if b0190 then 0 else 130000) + (if b0191 then 0 else 130000) + (if b0192 then 0 else 130000) + (if b0193 then 0 else 130000) + (if b0194 then 0 else 130000) + (if b0195 then 0 else 130000) + (if b0196 then 0 else 130000) + (if b0197 then 0 else 130000) + (if b0198 then 0 else 130000) + (if b0199 then 0 else 130000) + (if b0200 then 0 else 130000) + (if b0201 then 0 else 130000) + (if b0202 then 0 else 130000) + (if b0203 then 0 else 130000) + (if b0204 then 0 else 130000) + (if b0205 then 0 else 130000) + (if b0206 then 0 else 130000) + (if b0207 then 0 else 130000) + (if b0208 then 0 else 130000) + (if b0209 then 0 else 130000) + (if b0210 then 0 else 130000) + (if b0211 then 0 else 130000) + (if b0212 then 0 else 130000) + (if b0213 then 0 else 130000) + (if b0214 then 0 else 130000) + (if b0215 then 0 else 130000) + (if b0216 then 0 else 130000) + (if b0217 then 0 else 130000) + (if b0218 then 0 else 130000) + (if b0219 then 0 else 130000) + (if b0220 then 0 else 130000) + (if b0221 then 0 else 130000) + (if b0222 then 0 else 130000) + (if b0223 then 0 else 130000) + (if b0224 then 0 else 130000) + (if b0225 then 0 else 130000) + (if b0226 then 0 else 130000) + (if b0227 then 0 else 130000) + (if b0228 then 0 else 130000) + (if b0229 then 0 else 130000) + (if b0230 then 0 else 130000) + (if b0231 then 0 else 130000) + (if b0232 then 0 else 130000) + (if b0233 then 0 else 130000) + (if b0234 then 0 else 130000) + (if b0235 then 0 else 130000) + (if b0236 then 0 else 130000) + (if b0237 then 0 else 130000) + (if b0238 then 0 else 130000) + (if b0239 then 0 else 130000) + (if b0240 then 0 else 130000) + (if b0241 then 0 else 130000) + (if b0242 then 0 else 130000) + (if b0243 then 0 else 130000) + (if b0244 then 0 else 130000) + (if b0245 then 0 else 130000) + (if b0246 then 0 else 130000) + (if b0247 then 0 else 130000) + (if b0248 then 0 else 130000) + (if b0249 then 0 else 130000) + (if b0250 then 0 else 130000) + (if b0251 then 0 else 130000) + (if b0252 then 0 else 130000) + (if b0253 then 0 else 130000) + (if b0254 then 0 else 130000) + (if b0255 then 0 else 130000) + (if b0256 then 0 else 130000) + (if b0257 then 0 else 130000) + (if b0258 then 0 else 130000) + (if b0259 then 0 else 130000) + (if b0260 then 0 else 130000) + (if b0261 then 0 else 130000) + (if b0262 then 0 else 130000) + (if b0263 then 0 else 130000) + (if b0264 then 0 else 130000) + (if b0265 then 0 else 130000) + (if b0266 then 0 else 130000) + (if b0267 then 0 else 130000) + (if b0268 then 0 else 130000) + (if b0269 then 0 else 130000) + (if b0270 then 0 else 130000) + (if b0271 then 0 else 130000) + (if b0272 then 0 else 130000) + (if b0273 then 0 else 130000) + (if b0274 then 0 else 130000) + (if b0275 then 0 else 130000) + (if b0276 then 0 else 130000) + (if b0277 then 0 else 130000) + (if b0278 then 0 else 130000) + (if b0279 then 0 else 130000) + (if b0280 then 0 else 130000) + (if b0281 then 0 else 130000) + (if b0282 then 0 else 130000) + (if b0283 then 0 else 130000) + (if b0284 then 0 else 130000) + (if b0285 then 0 else 130000) + (if b0286 then 0 else 130000) + (if b0287 then 0 else 130000) + (if b0288 then 0 else 130000) + (if b0289 then 0 else 130000) + (if b0290 then 0 else 130000) + (if b0291 then 0 else 130000) + (if b0292 then 0 else 130000) + (if b0293 then 0 else 130000) + (if b0294 then 0 else 130000) + (if b0295 then 0 else 130000) + (if b0296 then 0 else 130000) + (if b0297 then 0 else 130000) + (if b0298 then 0 else 130000) + (if b0299 then 0 else 130000) + (if b0300 then 0 else 130000) + (if b0301 then 0 else 130000) + (if b0302 then 0 else 130000) + (if b0303 then 0 else 130000) + (if b0304 then 0 else 130000) + (if b0305 then 0 else 130000) + (if b0306 then 0 else 130000) + (if b0307 then 0 else 130000) + (if b0308 then 0 else 130000) + (if b0309 then 0 else 130000) + (if b0310 then 0 else 130000) + (if b0311 then 0 else 130000) + (if b0312 then 0 else 130000) + (if b0313 then 0 else 130000) + (if b0314 then 0 else 130000) + (if b0315 then 0 else 130000) + (if b0316 then 0 else 130000) + (if b0317 then 0 else 130000) + (if b0318 then 0 else 130000) + (if b0319 then 0 else 130000) + (if b0320 then 0 else 130000) + (if b0321 then 0 else 130000) + (if b0322 then 0 else 130000) + (if b0323 then 0 else 130000) + (if b0324 then 0 else 130000) + (if b0325 then 0 else 130000) + (if b0326 then 0 else 130000) < 441
}
Command exited with non-zero status 124
3.36user 2.52system 19:58.63elapsed 0%CPU (0avgtext+0avgdata 131196maxresident)k
36408inputs+104outputs (213major+43743minor)pagefaults 0swaps
FILE:CUDA50/6_Advanced/eigenvalues/_bisect_kernel_large_multi.bpl.ice2.bpl
#################
Wed May 12 00:34:26 UTC 2021
KEY=awinnow
OUTPUT=/root/Docker/winnow_gpu_timeout.txt
[TRACE] Using prover: /root/Docker/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/root/Docker/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a winnow
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/errorLimit:1
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/eigenvalues/_bisect_kernel_small.bpl.ice2.bpl
--------------------
Parsing /root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/eigenvalues/_bisect_kernel_small.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /root/Docker/z3/bin/z3
#parameters: 267
Generating VC of $_Z12bisectKernelPfS_jS_S_PjS0_ffjjf
Verifying $_Z12bisectKernelPfS_jS_S_PjS0_ffjjf: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool, b0228: bool, b0229: bool, b0230: bool, b0231: bool, b0232: bool, b0233: bool, b0234: bool, b0235: bool, b0236: bool, b0237: bool, b0238: bool, b0239: bool, b0240: bool, b0241: bool, b0242: bool, b0243: bool, b0244: bool, b0245: bool, b0246: bool, b0247: bool, b0248: bool, b0249: bool, b0250: bool, b0251: bool, b0252: bool, b0253: bool, b0254: bool, b0255: bool, b0256: bool, b0257: bool, b0258: bool, b0259: bool, b0260: bool, b0261: bool, b0262: bool, b0263: bool, b0264: bool, b0265: bool, b0266: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 1.451406
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/eigenvalues/_bisect_kernel_small.bpl.ice2.bpl
Total learner time was 00:00:00.1209140
Verifying $_Z12bisectKernelPfS_jS_S_PjS0_ffjjf: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool, b0228: bool, b0229: bool, b0230: bool, b0231: bool, b0232: bool, b0233: bool, b0234: bool, b0235: bool, b0236: bool, b0237: bool, b0238: bool, b0239: bool, b0240: bool, b0241: bool, b0242: bool, b0243: bool, b0244: bool, b0245: bool, b0246: bool, b0247: bool, b0248: bool, b0249: bool, b0250: bool, b0251: bool, b0252: bool, b0253: bool, b0254: bool, b0255: bool, b0256: bool, b0257: bool, b0258: bool, b0259: bool, b0260: bool, b0261: bool, b0262: bool, b0263: bool, b0264: bool, b0265: bool, b0266: bool) : bool
{
  0 + (if b0000 then 0 else 106000) + (if b0001 then 0 else 106000) + (if b0002 then 0 else 106000) + (if b0003 then 0 else 106000) + (if b0004 then 0 else 106000) + (if b0005 then 0 else 106000) + (if b0006 then 0 else 106000) + (if b0007 then 0 else 106000) + (if b0008 then 0 else 106000) + (if b0009 then 0 else 106000) + (if b0010 then 0 else 106000) + (if b0011 then 0 else 106000) + (if b0012 then 0 else 106000) + (if b0013 then 0 else 106000) + (if b0014 then 0 else 106000) + (if b0015 then 0 else 106000) + (if b0016 then 0 else 106000) + (if b0017 then 0 else 106000) + (if b0018 then 0 else 106000) + (if b0019 then 0 else 106000) + (if b0020 then 0 else 106000) + (if b0021 then 0 else 106000) + (if b0022 then 0 else 106000) + (if b0023 then 0 else 106000) + (if b0024 then 0 else 106000) + (if b0025 then 0 else 106000) + (if b0026 then 0 else 106000) + (if b0027 then 0 else 106000) + (if b0028 then 0 else 106000) + (if b0029 then 0 else 106000) + (if b0030 then 0 else 106000) + (if b0031 then 0 else 106000) + (if b0032 then 0 else 106000) + (if b0033 then 0 else 106000) + (if b0034 then 0 else 106000) + (if b0035 then 0 else 106000) + (if b0036 then 0 else 106000) + (if b0038 then 0 else 106000) + (if b0040 then 0 else 106000) + (if b0042 then 0 else 106000) + (if b0044 then 0 else 106000) + (if b0046 then 0 else 106000) + (if b0048 then 0 else 106000) + (if b0050 then 0 else 106000) + (if b0052 then 0 else 106000) + (if b0054 then 0 else 106000) + (if b0056 then 0 else 106000) + (if b0058 then 0 else 106000) + (if b0060 then 0 else 106000) + (if b0061 then 0 else 106000) + (if b0062 then 0 else 106000) + (if b0063 then 0 else 106000) + (if b0064 then 0 else 106000) + (if b0065 then 0 else 106000) + (if b0066 then 0 else 106000) + (if b0067 then 0 else 106000) + (if b0068 then 0 else 106000) + (if b0069 then 0 else 106000) + (if b0070 then 0 else 106000) + (if b0071 then 0 else 106000) + (if b0072 then 0 else 106000) + (if b0073 then 0 else 106000) + (if b0074 then 0 else 106000) + (if b0075 then 0 else 106000) + (if b0076 then 0 else 106000) + (if b0077 then 0 else 106000) + (if b0078 then 0 else 106000) + (if b0079 then 0 else 106000) + (if b0080 then 0 else 106000) + (if b0081 then 0 else 106000) + (if b0082 then 0 else 106000) + (if b0083 then 0 else 106000) + (if b0084 then 0 else 106000) + (if b0085 then 0 else 106000) + (if b0086 then 0 else 106000) + (if b0087 then 0 else 106000) + (if b0088 then 0 else 106000) + (if b0089 then 0 else 106000) + (if b0090 then 0 else 106000) + (if b0091 then 0 else 106000) + (if b0092 then 0 else 106000) + (if b0093 then 0 else 106000) + (if b0094 then 0 else 106000) + (if b0095 then 0 else 106000) + (if b0096 then 0 else 106000) + (if b0097 then 0 else 106000) + (if b0098 then 0 else 106000) + (if b0099 then 0 else 106000) + (if b0100 then 0 else 106000) + (if b0101 then 0 else 106000) + (if b0102 then 0 else 106000) + (if b0103 then 0 else 106000) + (if b0104 then 0 else 106000) + (if b0105 then 0 else 106000) + (if b0106 then 0 else 106000) + (if b0107 then 0 else 106000) + (if b0108 then 0 else 106000) + (if b0109 then 0 else 106000) + (if b0110 then 0 else 106000) + (if b0111 then 0 else 106000) + (if b0112 then 0 else 106000) + (if b0113 then 0 else 106000) + (if b0114 then 0 else 106000) + (if b0115 then 0 else 106000) + (if b0116 then 0 else 106000) + (if b0117 then 0 else 106000) + (if b0118 then 0 else 106000) + (if b0119 then 0 else 106000) + (if b0120 then 0 else 106000) + (if b0121 then 0 else 106000) + (if b0122 then 0 else 106000) + (if b0123 then 0 else 106000) + (if b0124 then 0 else 106000) + (if b0125 then 0 else 106000) + (if b0126 then 0 else 106000) + (if b0127 then 0 else 106000) + (if b0128 then 0 else 106000) + (if b0129 then 0 else 106000) + (if b0130 then 0 else 106000) + (if b0131 then 0 else 106000) + (if b0132 then 0 else 106000) + (if b0133 then 0 else 106000) + (if b0134 then 0 else 106000) + (if b0135 then 0 else 106000) + (if b0136 then 0 else 106000) + (if b0137 then 0 else 106000) + (if b0138 then 0 else 106000) + (if b0139 then 0 else 106000) + (if b0140 then 0 else 106000) + (if b0141 then 0 else 106000) + (if b0142 then 0 else 106000) + (if b0143 then 0 else 106000) + (if b0144 then 0 else 106000) + (if b0145 then 0 else 106000) + (if b0146 then 0 else 106000) + (if b0147 then 0 else 106000) + (if b0148 then 0 else 106000) + (if b0149 then 0 else 106000) + (if b0150 then 0 else 106000) + (if b0151 then 0 else 106000) + (if b0152 then 0 else 106000) + (if b0153 then 0 else 106000) + (if b0154 then 0 else 106000) + (if b0155 then 0 else 106000) + (if b0156 then 0 else 106000) + (if b0157 then 0 else 106000) + (if b0158 then 0 else 106000) + (if b0159 then 0 else 106000) + (if b0160 then 0 else 106000) + (if b0161 then 0 else 106000) + (if b0162 then 0 else 106000) + (if b0163 then 0 else 106000) + (if b0164 then 0 else 106000) + (if b0165 then 0 else 106000) + (if b0166 then 0 else 106000) + (if b0167 then 0 else 106000) + (if b0168 then 0 else 106000) + (if b0169 then 0 else 106000) + (if b0170 then 0 else 106000) + (if b0171 then 0 else 106000) + (if b0172 then 0 else 106000) + (if b0173 then 0 else 106000) + (if b0174 then 0 else 106000) + (if b0175 then 0 else 106000) + (if b0176 then 0 else 106000) + (if b0177 then 0 else 106000) + (if b0178 then 0 else 106000) + (if b0179 then 0 else 106000) + (if b0180 then 0 else 106000) + (if b0181 then 0 else 106000) + (if b0182 then 0 else 106000) + (if b0183 then 0 else 106000) + (if b0184 then 0 else 106000) + (if b0185 then 0 else 106000) + (if b0186 then 0 else 106000) + (if b0187 then 0 else 106000) + (if b0188 then 0 else 106000) + (if b0189 then 0 else 106000) + (if b0190 then 0 else 106000) + (if b0191 then 0 else 106000) + (if b0192 then 0 else 106000) + (if b0193 then 0 else 106000) + (if b0194 then 0 else 106000) + (if b0195 then 0 else 106000) + (if b0196 then 0 else 106000) + (if b0197 then 0 else 106000) + (if b0198 then 0 else 106000) + (if b0199 then 0 else 106000) + (if b0200 then 0 else 106000) + (if b0201 then 0 else 106000) + (if b0202 then 0 else 106000) + (if b0203 then 0 else 106000) + (if b0204 then 0 else 106000) + (if b0205 then 0 else 106000) + (if b0206 then 0 else 106000) + (if b0207 then 0 else 106000) + (if b0208 then 0 else 106000) + (if b0209 then 0 else 106000) + (if b0210 then 0 else 106000) + (if b0211 then 0 else 106000) + (if b0212 then 0 else 106000) + (if b0213 then 0 else 106000) + (if b0214 then 0 else 106000) + (if b0215 then 0 else 106000) + (if b0216 then 0 else 106000) + (if b0217 then 0 else 106000) + (if b0218 then 0 else 106000) + (if b0219 then 0 else 106000) + (if b0220 then 0 else 106000) + (if b0221 then 0 else 106000) + (if b0222 then 0 else 106000) + (if b0223 then 0 else 106000) + (if b0224 then 0 else 106000) + (if b0225 then 0 else 106000) + (if b0226 then 0 else 106000) + (if b0227 then 0 else 106000) + (if b0228 then 0 else 106000) + (if b0229 then 0 else 106000) + (if b0230 then 0 else 106000) + (if b0231 then 0 else 106000) + (if b0232 then 0 else 106000) + (if b0233 then 0 else 106000) + (if b0234 then 0 else 106000) + (if b0235 then 0 else 106000) + (if b0236 then 0 else 106000) + (if b0237 then 0 else 106000) + (if b0238 then 0 else 106000) + (if b0239 then 0 else 106000) + (if b0240 then 0 else 106000) + (if b0241 then 0 else 106000) + (if b0242 then 0 else 106000) + (if b0243 then 0 else 106000) + (if b0244 then 0 else 106000) + (if b0245 then 0 else 106000) + (if b0246 then 0 else 106000) + (if b0247 then 0 else 106000) + (if b0248 then 0 else 106000) + (if b0249 then 0 else 106000) + (if b0250 then 0 else 106000) + (if b0251 then 0 else 106000) + (if b0252 then 0 else 106000) + (if b0253 then 0 else 106000) + (if b0254 then 0 else 106000) + (if b0255 then 0 else 106000) + (if b0256 then 0 else 106000) + (if b0257 then 0 else 106000) + (if b0258 then 0 else 106000) + (if b0259 then 0 else 106000) + (if b0260 then 0 else 106000) + (if b0261 then 0 else 106000) + (if b0262 then 0 else 106000) + (if b0263 then 0 else 106000) + (if b0264 then 0 else 106000) + (if b0265 then 0 else 106000) + (if b0266 then 0 else 106000) < 441
}
Command exited with non-zero status 124
2.89user 2.29system 19:58.63elapsed 0%CPU (0avgtext+0avgdata 112676maxresident)k
864inputs+96outputs (2major+33318minor)pagefaults 0swaps
FILE:CUDA50/6_Advanced/eigenvalues/_bisect_kernel_small.bpl.ice2.bpl
#################
Wed May 12 00:54:25 UTC 2021
KEY=awinnow
OUTPUT=/root/Docker/winnow_gpu_timeout.txt
[TRACE] Using prover: /root/Docker/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/root/Docker/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a winnow
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/errorLimit:1
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FDTD3d/kernel.bpl.ice2.bpl
--------------------
Parsing /root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FDTD3d/kernel.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /root/Docker/z3/bin/z3
#parameters: 26
Generating VC of $_Z23FiniteDifferencesKernelPfPKfiii
Verifying $_Z23FiniteDifferencesKernelPfPKfiii: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.211967
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FDTD3d/kernel.bpl.ice2.bpl
Total learner time was 00:00:00.1400640
Verifying $_Z23FiniteDifferencesKernelPfPKfiii: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool) : bool
{
  0 + (if b0000 then 0 else 10000) + (if b0001 then 0 else 10000) + (if b0002 then 0 else 10000) + (if b0003 then 0 else 10000) + (if b0004 then 0 else 10000) + (if b0005 then 0 else 10000) + (if b0006 then 0 else 10000) + (if b0007 then 0 else 10000) + (if b0008 then 0 else 10000) + (if b0009 then 0 else 10000) + (if b0010 then 0 else 10000) + (if b0011 then 0 else 10000) + (if b0012 then 0 else 10000) + (if b0013 then 0 else 10000) + (if b0014 then 0 else 10000) + (if b0015 then 0 else 10000) + (if b0016 then 0 else 10000) + (if b0017 then 0 else 10000) + (if b0018 then 0 else 10000) + (if b0019 then 0 else 10000) + (if b0020 then 0 else 10000) + (if b0021 then 0 else 10000) + (if b0022 then 0 else 10000) + (if b0023 then 0 else 10000) + (if b0024 then 0 else 10000) + (if b0025 then 0 else 10000) < 441
}
Prover Time taken = 3.098112
Added Horn clause: 0 => 1
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FDTD3d/kernel.bpl.ice2.bpl
Total learner time was 00:00:00.1448590
Verifying $_Z23FiniteDifferencesKernelPfPKfiii: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool) : bool
{
  0 + (if b0002 then 0 else 10000) + (if b0003 then 0 else 10000) + (if b0005 then 0 else 10000) + (if b0007 then 0 else 10000) + (if b0008 then 0 else 10000) + (if b0009 then 0 else 10000) + (if b0010 then 0 else 10000) + (if b0011 then 0 else 10000) + (if b0012 then 0 else 10000) + (if b0013 then 0 else 10000) + (if b0014 then 0 else 10000) + (if b0015 then 0 else 10000) + (if b0016 then 0 else 10000) + (if b0017 then 0 else 10000) + (if b0018 then 0 else 10000) + (if b0019 then 0 else 10000) + (if b0020 then 0 else 10000) + (if b0021 then 0 else 10000) + (if b0022 then 0 else 10000) + (if b0023 then 0 else 10000) + (if b0024 then 0 else 10000) + (if b0025 then 0 else 10000) < 441
}
Prover Time taken = 1.999846
Added Horn clause: 1 => 2
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FDTD3d/kernel.bpl.ice2.bpl
Total learner time was 00:00:00.1498710
Verifying $_Z23FiniteDifferencesKernelPfPKfiii: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool) : bool
{
  0 + (if b0003 then 0 else 10000) + (if b0007 then 0 else 10000) + (if b0008 then 0 else 10000) + (if b0009 then 0 else 10000) + (if b0010 then 0 else 10000) + (if b0011 then 0 else 10000) + (if b0012 then 0 else 10000) + (if b0013 then 0 else 10000) + (if b0014 then 0 else 10000) + (if b0015 then 0 else 10000) + (if b0016 then 0 else 10000) + (if b0017 then 0 else 10000) + (if b0018 then 0 else 10000) + (if b0019 then 0 else 10000) + (if b0020 then 0 else 10000) + (if b0021 then 0 else 10000) + (if b0022 then 0 else 10000) + (if b0023 then 0 else 10000) + (if b0024 then 0 else 10000) + (if b0025 then 0 else 10000) < 441
}
Prover Time taken = 3.116377
Added Horn clause: 2 && 0 && 0 => 3
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FDTD3d/kernel.bpl.ice2.bpl
Total learner time was 00:00:00.1500550
Verifying $_Z23FiniteDifferencesKernelPfPKfiii: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool) : bool
{
  0 + (if b0003 then 0 else 10000) + (if b0007 then 0 else 10000) + (if b0008 then 0 else 10000) + (if b0009 then 0 else 10000) + (if b0010 then 0 else 10000) + (if b0011 then 0 else 10000) + (if b0012 then 0 else 10000) + (if b0013 then 0 else 10000) + (if b0014 then 0 else 10000) + (if b0016 then 0 else 10000) + (if b0018 then 0 else 10000) + (if b0019 then 0 else 10000) + (if b0020 then 0 else 10000) + (if b0021 then 0 else 10000) + (if b0022 then 0 else 10000) + (if b0023 then 0 else 10000) + (if b0024 then 0 else 10000) + (if b0025 then 0 else 10000) < 441
}
Prover Time taken = 2.048217
Added Horn clause: 2 && 0 && 3 => 4
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FDTD3d/kernel.bpl.ice2.bpl
Total learner time was 00:00:00.1517390
Verifying $_Z23FiniteDifferencesKernelPfPKfiii: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool) : bool
{
  0 + (if b0003 then 0 else 10000) + (if b0009 then 0 else 10000) + (if b0011 then 0 else 10000) + (if b0013 then 0 else 10000) + (if b0014 then 0 else 10000) + (if b0016 then 0 else 10000) + (if b0018 then 0 else 10000) + (if b0019 then 0 else 10000) + (if b0020 then 0 else 10000) + (if b0021 then 0 else 10000) + (if b0022 then 0 else 10000) + (if b0023 then 0 else 10000) + (if b0024 then 0 else 10000) + (if b0025 then 0 else 10000) < 441
}
Prover Time taken = 10.237825
Added Horn clause: 2 && 4 && 3 => 5
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FDTD3d/kernel.bpl.ice2.bpl
Total learner time was 00:00:00.1541760
Verifying $_Z23FiniteDifferencesKernelPfPKfiii: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool) : bool
{
  0 + (if b0003 then 0 else 10000) + (if b0009 then 0 else 10000) + (if b0011 then 0 else 10000) + (if b0013 then 0 else 10000) + (if b0014 then 0 else 10000) + (if b0016 then 0 else 10000) + (if b0018 then 0 else 10000) + (if b0021 then 0 else 10000) + (if b0022 then 0 else 10000) + (if b0023 then 0 else 10000) + (if b0024 then 0 else 10000) + (if b0025 then 0 else 10000) < 441
}
Prover Time taken = 5.270755
Added Horn clause: 6 && 4 && 0 => 7
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FDTD3d/kernel.bpl.ice2.bpl
Total learner time was 00:00:00.1490320
Verifying $_Z23FiniteDifferencesKernelPfPKfiii: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool) : bool
{
  0 + (if b0003 then 0 else 10000) + (if b0009 then 0 else 10000) + (if b0011 then 0 else 10000) + (if b0013 then 0 else 10000) + (if b0014 then 0 else 10000) + (if b0016 then 0 else 10000) + (if b0018 then 0 else 10000) + (if b0021 then 0 else 10000) + (if b0022 then 0 else 10000) + (if b0023 then 0 else 10000) + (if b0024 then 0 else 10000) < 441
}
Prover Time taken = 11.85922
Added Horn clause: 6 && 8 && 7 => 9
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FDTD3d/kernel.bpl.ice2.bpl
Total learner time was 00:00:00.1469460
Verifying $_Z23FiniteDifferencesKernelPfPKfiii: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool) : bool
{
  0 + (if b0003 then 0 else 10000) + (if b0009 then 0 else 10000) + (if b0011 then 0 else 10000) + (if b0013 then 0 else 10000) + (if b0014 then 0 else 10000) + (if b0016 then 0 else 10000) + (if b0018 then 0 else 10000) + (if b0022 then 0 else 10000) + (if b0024 then 0 else 10000) < 441
}
Prover Time taken = 543.989339
Prover time = 581.83
Number of prover queries = 9
Learner time = 1.19
Number of learner queries = 8
Total time: 583.20
Number of positive examples:1
Number of negative examples:0
Number of Horn clauses:7
verified

Boogie program verifier finished with 1 verified, 0 errors
2.31user 2.78system 9:44.93elapsed 0%CPU (0avgtext+0avgdata 55692maxresident)k
744inputs+288outputs (4major+30723minor)pagefaults 0swaps
FILE:CUDA50/6_Advanced/FDTD3d/kernel.bpl.ice2.bpl
#################
Wed May 12 01:04:10 UTC 2021
KEY=awinnow
OUTPUT=/root/Docker/winnow_gpu_timeout.txt
[TRACE] Using prover: /root/Docker/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/root/Docker/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a winnow
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/errorLimit:1
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl
--------------------
Parsing /root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(557,11): Error: undeclared identifier: _b20
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(558,11): Error: undeclared identifier: _b21
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(559,11): Error: undeclared identifier: _b22
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(560,11): Error: undeclared identifier: _b23
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(561,11): Error: undeclared identifier: _b24
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(562,11): Error: undeclared identifier: _b25
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(563,11): Error: undeclared identifier: _b26
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(564,11): Error: undeclared identifier: _b27
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(565,11): Error: undeclared identifier: _b28
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(566,11): Error: undeclared identifier: _b29
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(567,11): Error: undeclared identifier: _b30
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(568,11): Error: undeclared identifier: _b31
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(569,11): Error: undeclared identifier: _b32
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(570,11): Error: undeclared identifier: _b33
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(571,11): Error: undeclared identifier: _b34
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(572,11): Error: undeclared identifier: _b35
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(573,11): Error: undeclared identifier: _b36
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(574,11): Error: undeclared identifier: _b37
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(575,11): Error: undeclared identifier: _b38
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(576,11): Error: undeclared identifier: _b39
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(577,11): Error: undeclared identifier: _b40
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(578,11): Error: undeclared identifier: _b41
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(579,11): Error: undeclared identifier: _b42
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(580,11): Error: undeclared identifier: _b43
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(581,11): Error: undeclared identifier: _b44
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(582,11): Error: undeclared identifier: _b45
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(583,11): Error: undeclared identifier: _b46
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(584,11): Error: undeclared identifier: _b47
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(585,11): Error: undeclared identifier: _b48
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(586,11): Error: undeclared identifier: _b49
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(587,11): Error: undeclared identifier: _b50
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(588,11): Error: undeclared identifier: _b51
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(589,11): Error: undeclared identifier: _b52
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(590,11): Error: undeclared identifier: _b53
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(591,11): Error: undeclared identifier: _b54
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(592,11): Error: undeclared identifier: _b55
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(593,11): Error: undeclared identifier: _b56
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(594,11): Error: undeclared identifier: _b57
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(595,11): Error: undeclared identifier: _b58
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(596,11): Error: undeclared identifier: _b59
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(597,11): Error: undeclared identifier: _b60
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(598,11): Error: undeclared identifier: _b61
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(599,11): Error: undeclared identifier: _b62
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(600,11): Error: undeclared identifier: _b63
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(601,11): Error: undeclared identifier: _b64
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(602,11): Error: undeclared identifier: _b65
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(603,11): Error: undeclared identifier: _b66
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(604,11): Error: undeclared identifier: _b67
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(605,11): Error: undeclared identifier: _b68
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(606,11): Error: undeclared identifier: _b69
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(607,11): Error: undeclared identifier: _b70
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(611,10): Error: undeclared identifier: _b71
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(612,10): Error: undeclared identifier: _b72
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(613,10): Error: undeclared identifier: _b73
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(614,10): Error: undeclared identifier: _b74
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(615,10): Error: undeclared identifier: _b75
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(616,10): Error: undeclared identifier: _b76
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(617,10): Error: undeclared identifier: _b77
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(618,10): Error: undeclared identifier: _b78
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(619,10): Error: undeclared identifier: _b79
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(620,10): Error: undeclared identifier: _b80
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(621,10): Error: undeclared identifier: _b81
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(622,10): Error: undeclared identifier: _b82
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(623,10): Error: undeclared identifier: _b83
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(624,10): Error: undeclared identifier: _b84
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(625,10): Error: undeclared identifier: _b85
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(626,10): Error: undeclared identifier: _b86
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(627,10): Error: undeclared identifier: _b87
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(628,10): Error: undeclared identifier: _b88
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(629,10): Error: undeclared identifier: _b89
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(630,10): Error: undeclared identifier: _b90
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(631,10): Error: undeclared identifier: _b91
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(632,10): Error: undeclared identifier: _b92
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(633,10): Error: undeclared identifier: _b93
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(634,10): Error: undeclared identifier: _b94
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(635,10): Error: undeclared identifier: _b95
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(636,10): Error: undeclared identifier: _b96
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(637,10): Error: undeclared identifier: _b97
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(638,10): Error: undeclared identifier: _b98
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(639,10): Error: undeclared identifier: _b99
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(640,10): Error: undeclared identifier: _b100
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(641,10): Error: undeclared identifier: _b101
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(752,11): Error: undeclared identifier: _b102
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(753,11): Error: undeclared identifier: _b103
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(754,11): Error: undeclared identifier: _b104
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(755,11): Error: undeclared identifier: _b105
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(756,11): Error: undeclared identifier: _b106
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(757,11): Error: undeclared identifier: _b107
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(758,11): Error: undeclared identifier: _b108
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(759,11): Error: undeclared identifier: _b109
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(760,11): Error: undeclared identifier: _b110
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(761,11): Error: undeclared identifier: _b111
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(762,11): Error: undeclared identifier: _b112
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(763,11): Error: undeclared identifier: _b113
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(764,11): Error: undeclared identifier: _b114
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(765,11): Error: undeclared identifier: _b115
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(766,11): Error: undeclared identifier: _b116
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(767,11): Error: undeclared identifier: _b117
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(768,11): Error: undeclared identifier: _b118
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(769,11): Error: undeclared identifier: _b119
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(770,11): Error: undeclared identifier: _b120
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(771,11): Error: undeclared identifier: _b121
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(772,11): Error: undeclared identifier: _b122
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(773,11): Error: undeclared identifier: _b123
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(774,11): Error: undeclared identifier: _b124
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(775,11): Error: undeclared identifier: _b125
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(776,11): Error: undeclared identifier: _b126
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(777,11): Error: undeclared identifier: _b127
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(778,11): Error: undeclared identifier: _b128
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(779,11): Error: undeclared identifier: _b129
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(780,11): Error: undeclared identifier: _b130
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(781,11): Error: undeclared identifier: _b131
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(782,11): Error: undeclared identifier: _b132
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(783,11): Error: undeclared identifier: _b133
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(784,11): Error: undeclared identifier: _b134
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(785,11): Error: undeclared identifier: _b135
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(786,11): Error: undeclared identifier: _b136
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(787,11): Error: undeclared identifier: _b137
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(788,11): Error: undeclared identifier: _b138
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(789,11): Error: undeclared identifier: _b139
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(790,11): Error: undeclared identifier: _b140
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(791,11): Error: undeclared identifier: _b141
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(792,11): Error: undeclared identifier: _b142
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(793,11): Error: undeclared identifier: _b143
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(794,11): Error: undeclared identifier: _b144
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(795,11): Error: undeclared identifier: _b145
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(796,11): Error: undeclared identifier: _b146
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(797,11): Error: undeclared identifier: _b147
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(798,11): Error: undeclared identifier: _b148
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(799,11): Error: undeclared identifier: _b149
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(800,11): Error: undeclared identifier: _b150
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(801,11): Error: undeclared identifier: _b151
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(802,11): Error: undeclared identifier: _b152
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(806,10): Error: undeclared identifier: _b153
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(807,10): Error: undeclared identifier: _b154
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(808,10): Error: undeclared identifier: _b155
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(809,10): Error: undeclared identifier: _b156
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(810,10): Error: undeclared identifier: _b157
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(811,10): Error: undeclared identifier: _b158
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(812,10): Error: undeclared identifier: _b159
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(813,10): Error: undeclared identifier: _b160
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(814,10): Error: undeclared identifier: _b161
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(815,10): Error: undeclared identifier: _b162
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(816,10): Error: undeclared identifier: _b163
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(817,10): Error: undeclared identifier: _b164
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(818,10): Error: undeclared identifier: _b165
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(819,10): Error: undeclared identifier: _b166
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(820,10): Error: undeclared identifier: _b167
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(821,10): Error: undeclared identifier: _b168
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(822,10): Error: undeclared identifier: _b169
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(823,10): Error: undeclared identifier: _b170
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(824,10): Error: undeclared identifier: _b171
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(825,10): Error: undeclared identifier: _b172
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(826,10): Error: undeclared identifier: _b173
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(827,10): Error: undeclared identifier: _b174
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(828,10): Error: undeclared identifier: _b175
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(829,10): Error: undeclared identifier: _b176
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(830,10): Error: undeclared identifier: _b177
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(831,10): Error: undeclared identifier: _b178
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(832,10): Error: undeclared identifier: _b179
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(833,10): Error: undeclared identifier: _b180
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(834,10): Error: undeclared identifier: _b181
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(835,10): Error: undeclared identifier: _b182
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(836,10): Error: undeclared identifier: _b183
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(937,11): Error: undeclared identifier: _b184
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(938,11): Error: undeclared identifier: _b185
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(939,11): Error: undeclared identifier: _b186
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(940,11): Error: undeclared identifier: _b187
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(941,11): Error: undeclared identifier: _b188
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(942,11): Error: undeclared identifier: _b189
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(943,11): Error: undeclared identifier: _b190
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(944,11): Error: undeclared identifier: _b191
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(945,11): Error: undeclared identifier: _b192
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(946,11): Error: undeclared identifier: _b193
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(947,11): Error: undeclared identifier: _b194
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(948,11): Error: undeclared identifier: _b195
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(949,11): Error: undeclared identifier: _b196
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(950,11): Error: undeclared identifier: _b197
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(951,11): Error: undeclared identifier: _b198
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(952,11): Error: undeclared identifier: _b199
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(953,11): Error: undeclared identifier: _b200
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(954,11): Error: undeclared identifier: _b201
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(955,11): Error: undeclared identifier: _b202
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(956,11): Error: undeclared identifier: _b203
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(957,11): Error: undeclared identifier: _b204
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(958,11): Error: undeclared identifier: _b205
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(959,11): Error: undeclared identifier: _b206
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(960,11): Error: undeclared identifier: _b207
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(961,11): Error: undeclared identifier: _b208
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(962,11): Error: undeclared identifier: _b209
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(963,11): Error: undeclared identifier: _b210
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(964,11): Error: undeclared identifier: _b211
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(965,11): Error: undeclared identifier: _b212
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(966,11): Error: undeclared identifier: _b213
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(967,11): Error: undeclared identifier: _b214
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(968,11): Error: undeclared identifier: _b215
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(969,11): Error: undeclared identifier: _b216
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(970,11): Error: undeclared identifier: _b217
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(971,11): Error: undeclared identifier: _b218
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(975,10): Error: undeclared identifier: _b219
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(976,10): Error: undeclared identifier: _b220
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(977,10): Error: undeclared identifier: _b221
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(978,10): Error: undeclared identifier: _b222
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(979,10): Error: undeclared identifier: _b223
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(980,10): Error: undeclared identifier: _b224
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(981,10): Error: undeclared identifier: _b225
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(982,10): Error: undeclared identifier: _b226
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(983,10): Error: undeclared identifier: _b227
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(984,10): Error: undeclared identifier: _b228
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(985,10): Error: undeclared identifier: _b229
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(986,10): Error: undeclared identifier: _b230
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(987,10): Error: undeclared identifier: _b231
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(988,10): Error: undeclared identifier: _b232
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(989,10): Error: undeclared identifier: _b233
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(990,10): Error: undeclared identifier: _b234
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(991,10): Error: undeclared identifier: _b235
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(992,10): Error: undeclared identifier: _b236
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(993,10): Error: undeclared identifier: _b237
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(994,10): Error: undeclared identifier: _b238
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(995,10): Error: undeclared identifier: _b239
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(996,10): Error: undeclared identifier: _b240
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(997,10): Error: undeclared identifier: _b241
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(998,10): Error: undeclared identifier: _b242
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(999,10): Error: undeclared identifier: _b243
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(1000,10): Error: undeclared identifier: _b244
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(1001,10): Error: undeclared identifier: _b245
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(1002,10): Error: undeclared identifier: _b246
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(1003,10): Error: undeclared identifier: _b247
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(1004,10): Error: undeclared identifier: _b248
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(1005,10): Error: undeclared identifier: _b249
230 name resolution errors detected in /root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl
0.23user 0.29system 0:00.53elapsed 100%CPU (0avgtext+0avgdata 33768maxresident)k
384inputs+0outputs (1major+5600minor)pagefaults 0swaps
FILE:CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl
#################
Wed May 12 01:04:11 UTC 2021
KEY=awinnow
OUTPUT=/root/Docker/winnow_gpu_timeout.txt
[TRACE] Using prover: /root/Docker/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/root/Docker/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a winnow
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/errorLimit:1
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl
--------------------
Parsing /root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(423,11): Error: undeclared identifier: _b7
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(424,11): Error: undeclared identifier: _b8
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(425,11): Error: undeclared identifier: _b9
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(426,11): Error: undeclared identifier: _b10
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(427,11): Error: undeclared identifier: _b11
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(428,11): Error: undeclared identifier: _b12
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(429,11): Error: undeclared identifier: _b13
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(430,11): Error: undeclared identifier: _b14
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(431,11): Error: undeclared identifier: _b15
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(432,11): Error: undeclared identifier: _b16
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(433,11): Error: undeclared identifier: _b17
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(434,11): Error: undeclared identifier: _b18
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(435,11): Error: undeclared identifier: _b19
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(436,11): Error: undeclared identifier: _b20
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(437,11): Error: undeclared identifier: _b21
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(438,11): Error: undeclared identifier: _b22
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(439,11): Error: undeclared identifier: _b23
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(440,11): Error: undeclared identifier: _b24
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(441,11): Error: undeclared identifier: _b25
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(442,11): Error: undeclared identifier: _b26
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(443,11): Error: undeclared identifier: _b27
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(444,11): Error: undeclared identifier: _b28
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(445,11): Error: undeclared identifier: _b29
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(446,11): Error: undeclared identifier: _b30
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(447,11): Error: undeclared identifier: _b31
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(448,11): Error: undeclared identifier: _b32
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(449,11): Error: undeclared identifier: _b33
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(450,11): Error: undeclared identifier: _b34
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(451,11): Error: undeclared identifier: _b35
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(452,11): Error: undeclared identifier: _b36
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(453,11): Error: undeclared identifier: _b37
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(454,11): Error: undeclared identifier: _b38
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(455,11): Error: undeclared identifier: _b39
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(456,11): Error: undeclared identifier: _b40
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(457,11): Error: undeclared identifier: _b41
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(458,11): Error: undeclared identifier: _b42
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(459,11): Error: undeclared identifier: _b43
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(460,11): Error: undeclared identifier: _b44
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(461,11): Error: undeclared identifier: _b45
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(462,10): Error: undeclared identifier: _b46
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(463,10): Error: undeclared identifier: _b47
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(464,10): Error: undeclared identifier: _b48
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(465,10): Error: undeclared identifier: _b49
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(466,10): Error: undeclared identifier: _b50
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(467,10): Error: undeclared identifier: _b51
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(468,10): Error: undeclared identifier: _b52
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(469,10): Error: undeclared identifier: _b53
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(470,10): Error: undeclared identifier: _b54
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(471,10): Error: undeclared identifier: _b55
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(472,10): Error: undeclared identifier: _b56
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(473,10): Error: undeclared identifier: _b57
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(474,10): Error: undeclared identifier: _b58
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(475,10): Error: undeclared identifier: _b59
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(476,10): Error: undeclared identifier: _b60
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(477,10): Error: undeclared identifier: _b61
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(478,10): Error: undeclared identifier: _b62
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(479,10): Error: undeclared identifier: _b63
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(480,10): Error: undeclared identifier: _b64
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(588,11): Error: undeclared identifier: _b65
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(589,11): Error: undeclared identifier: _b66
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(590,11): Error: undeclared identifier: _b67
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(591,11): Error: undeclared identifier: _b68
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(592,11): Error: undeclared identifier: _b69
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(593,11): Error: undeclared identifier: _b70
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(594,11): Error: undeclared identifier: _b71
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(595,11): Error: undeclared identifier: _b72
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(596,11): Error: undeclared identifier: _b73
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(597,11): Error: undeclared identifier: _b74
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(598,11): Error: undeclared identifier: _b75
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(599,11): Error: undeclared identifier: _b76
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(600,11): Error: undeclared identifier: _b77
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(601,11): Error: undeclared identifier: _b78
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(602,11): Error: undeclared identifier: _b79
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(603,11): Error: undeclared identifier: _b80
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(604,11): Error: undeclared identifier: _b81
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(605,11): Error: undeclared identifier: _b82
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(606,11): Error: undeclared identifier: _b83
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(607,11): Error: undeclared identifier: _b84
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(608,11): Error: undeclared identifier: _b85
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(609,11): Error: undeclared identifier: _b86
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(610,11): Error: undeclared identifier: _b87
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(611,11): Error: undeclared identifier: _b88
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(612,11): Error: undeclared identifier: _b89
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(613,11): Error: undeclared identifier: _b90
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(614,11): Error: undeclared identifier: _b91
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(615,11): Error: undeclared identifier: _b92
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(616,11): Error: undeclared identifier: _b93
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(617,11): Error: undeclared identifier: _b94
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(618,11): Error: undeclared identifier: _b95
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(619,11): Error: undeclared identifier: _b96
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(620,11): Error: undeclared identifier: _b97
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(621,11): Error: undeclared identifier: _b98
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(622,11): Error: undeclared identifier: _b99
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(623,11): Error: undeclared identifier: _b100
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(624,11): Error: undeclared identifier: _b101
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(625,11): Error: undeclared identifier: _b102
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(626,11): Error: undeclared identifier: _b103
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(627,10): Error: undeclared identifier: _b104
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(628,10): Error: undeclared identifier: _b105
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(629,10): Error: undeclared identifier: _b106
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(630,10): Error: undeclared identifier: _b107
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(631,10): Error: undeclared identifier: _b108
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(632,10): Error: undeclared identifier: _b109
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(633,10): Error: undeclared identifier: _b110
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(634,10): Error: undeclared identifier: _b111
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(635,10): Error: undeclared identifier: _b112
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(636,10): Error: undeclared identifier: _b113
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(637,10): Error: undeclared identifier: _b114
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(638,10): Error: undeclared identifier: _b115
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(639,10): Error: undeclared identifier: _b116
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(640,10): Error: undeclared identifier: _b117
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(641,10): Error: undeclared identifier: _b118
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(642,10): Error: undeclared identifier: _b119
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(643,10): Error: undeclared identifier: _b120
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(644,10): Error: undeclared identifier: _b121
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(645,10): Error: undeclared identifier: _b122
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(743,11): Error: undeclared identifier: _b123
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(744,11): Error: undeclared identifier: _b124
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(745,11): Error: undeclared identifier: _b125
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(746,11): Error: undeclared identifier: _b126
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(747,11): Error: undeclared identifier: _b127
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(748,11): Error: undeclared identifier: _b128
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(749,11): Error: undeclared identifier: _b129
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(750,11): Error: undeclared identifier: _b130
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(751,11): Error: undeclared identifier: _b131
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(752,11): Error: undeclared identifier: _b132
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(753,11): Error: undeclared identifier: _b133
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(754,11): Error: undeclared identifier: _b134
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(755,11): Error: undeclared identifier: _b135
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(756,11): Error: undeclared identifier: _b136
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(757,11): Error: undeclared identifier: _b137
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(758,11): Error: undeclared identifier: _b138
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(759,11): Error: undeclared identifier: _b139
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(760,11): Error: undeclared identifier: _b140
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(761,11): Error: undeclared identifier: _b141
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(762,11): Error: undeclared identifier: _b142
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(763,11): Error: undeclared identifier: _b143
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(764,11): Error: undeclared identifier: _b144
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(765,11): Error: undeclared identifier: _b145
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(766,10): Error: undeclared identifier: _b146
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(767,10): Error: undeclared identifier: _b147
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(768,10): Error: undeclared identifier: _b148
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(769,10): Error: undeclared identifier: _b149
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(770,10): Error: undeclared identifier: _b150
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(771,10): Error: undeclared identifier: _b151
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(772,10): Error: undeclared identifier: _b152
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(773,10): Error: undeclared identifier: _b153
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(774,10): Error: undeclared identifier: _b154
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(775,10): Error: undeclared identifier: _b155
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(776,10): Error: undeclared identifier: _b156
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(777,10): Error: undeclared identifier: _b157
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(778,10): Error: undeclared identifier: _b158
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(779,10): Error: undeclared identifier: _b159
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(780,10): Error: undeclared identifier: _b160
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(781,10): Error: undeclared identifier: _b161
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(782,10): Error: undeclared identifier: _b162
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(783,10): Error: undeclared identifier: _b163
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(784,10): Error: undeclared identifier: _b164
158 name resolution errors detected in /root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl
0.20user 0.28system 0:00.49elapsed 99%CPU (0avgtext+0avgdata 31664maxresident)k
208inputs+0outputs (1major+5091minor)pagefaults 0swaps
FILE:CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl
#################
Wed May 12 01:04:11 UTC 2021
KEY=awinnow
OUTPUT=/root/Docker/winnow_gpu_timeout.txt
[TRACE] Using prover: /root/Docker/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/root/Docker/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a winnow
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/errorLimit:1
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/mergeSort/_bitonicMergeElementaryIntervalsKernel.bpl.ice2.bpl
--------------------
Parsing /root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/mergeSort/_bitonicMergeElementaryIntervalsKernel.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /root/Docker/z3/bin/z3
#parameters: 12
Generating VC of $_Z37bitonicMergeElementaryIntervalsKernelILj1EEvPjS0_S0_S0_S0_S0_jj
Verifying $_Z37bitonicMergeElementaryIntervalsKernelILj1EEvPjS0_S0_S0_S0_S0_jj: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 7.9165
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/mergeSort/_bitonicMergeElementaryIntervalsKernel.bpl.ice2.bpl
Total learner time was 00:00:00.1213200
Verifying $_Z37bitonicMergeElementaryIntervalsKernelILj1EEvPjS0_S0_S0_S0_S0_jj: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool) : bool
{
  0 + (if b0000 then 0 else 4000) + (if b0001 then 0 else 4000) + (if b0002 then 0 else 4000) + (if b0003 then 0 else 4000) + (if b0004 then 0 else 4000) + (if b0005 then 0 else 4000) + (if b0006 then 0 else 4000) + (if b0007 then 0 else 4000) + (if b0008 then 0 else 4000) + (if b0009 then 0 else 4000) + (if b0010 then 0 else 4000) + (if b0011 then 0 else 4000) < 441
}
Prover Time taken = 84.571454
Added Horn clause: 0 => 1
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/mergeSort/_bitonicMergeElementaryIntervalsKernel.bpl.ice2.bpl
Total learner time was 00:00:00.1182240
Verifying $_Z37bitonicMergeElementaryIntervalsKernelILj1EEvPjS0_S0_S0_S0_S0_jj: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool) : bool
{
  0 + (if b0000 then 0 else 4000) + (if b0002 then 0 else 4000) + (if b0004 then 0 else 4000) + (if b0005 then 0 else 4000) + (if b0006 then 0 else 4000) + (if b0007 then 0 else 4000) + (if b0008 then 0 else 4000) + (if b0009 then 0 else 4000) + (if b0010 then 0 else 4000) + (if b0011 then 0 else 4000) < 441
}
Prover Time taken = 129.761838
Added Horn clause: 1 => 2
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/mergeSort/_bitonicMergeElementaryIntervalsKernel.bpl.ice2.bpl
Total learner time was 00:00:00.1235430
Verifying $_Z37bitonicMergeElementaryIntervalsKernelILj1EEvPjS0_S0_S0_S0_S0_jj: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool) : bool
{
  0 + (if b0000 then 0 else 4000) + (if b0002 then 0 else 4000) + (if b0004 then 0 else 4000) + (if b0006 then 0 else 4000) + (if b0007 then 0 else 4000) + (if b0008 then 0 else 4000) + (if b0009 then 0 else 4000) + (if b0010 then 0 else 4000) + (if b0011 then 0 else 4000) < 441
}
Overwrote: my_inv:1,0,1,0,1,0,1,1,1,1,1,1: negative
Prover Time taken = 98.00269
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/mergeSort/_bitonicMergeElementaryIntervalsKernel.bpl.ice2.bpl
[0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1] -> 0 Predicated Label: 1 True Label 0 not consistent!
sorcar: sorcar.cpp:229: int main(int, char* const*): Assertion `sorcar::is_consistent(X, datapoints, horn_constraints)' failed.
The learner seems to have run into an error!

Unhandled Exception:
Microsoft.Boogie.Houdini.MLHoudiniInternalError: The learner seems to have run into an error!
  at Microsoft.Boogie.Houdini.MLHoudini.learn (System.Collections.Generic.HashSet`1[System.String]& funcsChanged) [0x000e7] in <3034164c407e4adc8ab666e7c26ee7b8>:0 
  at Microsoft.Boogie.Houdini.MLHoudini.LearnInv (System.Collections.Generic.Dictionary`2[TKey,TValue] impl2Priority) [0x00782] in <3034164c407e4adc8ab666e7c26ee7b8>:0 
  at Microsoft.Boogie.Houdini.MLHoudini.ComputeSummaries () [0x0019c] in <3034164c407e4adc8ab666e7c26ee7b8>:0 
  at Microsoft.Boogie.ExecutionEngine.RunMLHoudini (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, Microsoft.Boogie.ErrorReporterDelegate er, System.String filename) [0x00055] in <392c81a181e742f795ac4613c6efd8ce>:0 
  at Microsoft.Boogie.ExecutionEngine.RunHoudini (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, Microsoft.Boogie.ErrorReporterDelegate er, System.String filename) [0x00021] in <392c81a181e742f795ac4613c6efd8ce>:0 
  at Microsoft.Boogie.ExecutionEngine.InferAndVerify (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, System.String filename, Microsoft.Boogie.ErrorReporterDelegate er, System.String requestId) [0x00136] in <392c81a181e742f795ac4613c6efd8ce>:0 
  at Microsoft.Boogie.ExecutionEngine.ProcessFiles (System.Collections.Generic.List`1[T] fileNames, System.Boolean lookForSnapshots) [0x002bd] in <392c81a181e742f795ac4613c6efd8ce>:0 
  at Microsoft.Boogie.OnlyBoogie.Main (System.String[] args) [0x0029f] in <581a14d47152481e860a87838c548766>:0 
[ERROR] FATAL UNHANDLED EXCEPTION: Microsoft.Boogie.Houdini.MLHoudiniInternalError: The learner seems to have run into an error!
  at Microsoft.Boogie.Houdini.MLHoudini.learn (System.Collections.Generic.HashSet`1[System.String]& funcsChanged) [0x000e7] in <3034164c407e4adc8ab666e7c26ee7b8>:0 
  at Microsoft.Boogie.Houdini.MLHoudini.LearnInv (System.Collections.Generic.Dictionary`2[TKey,TValue] impl2Priority) [0x00782] in <3034164c407e4adc8ab666e7c26ee7b8>:0 
  at Microsoft.Boogie.Houdini.MLHoudini.ComputeSummaries () [0x0019c] in <3034164c407e4adc8ab666e7c26ee7b8>:0 
  at Microsoft.Boogie.ExecutionEngine.RunMLHoudini (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, Microsoft.Boogie.ErrorReporterDelegate er, System.String filename) [0x00055] in <392c81a181e742f795ac4613c6efd8ce>:0 
  at Microsoft.Boogie.ExecutionEngine.RunHoudini (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, Microsoft.Boogie.ErrorReporterDelegate er, System.String filename) [0x00021] in <392c81a181e742f795ac4613c6efd8ce>:0 
  at Microsoft.Boogie.ExecutionEngine.InferAndVerify (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, System.String filename, Microsoft.Boogie.ErrorReporterDelegate er, System.String requestId) [0x00136] in <392c81a181e742f795ac4613c6efd8ce>:0 
  at Microsoft.Boogie.ExecutionEngine.ProcessFiles (System.Collections.Generic.List`1[T] fileNames, System.Boolean lookForSnapshots) [0x002bd] in <392c81a181e742f795ac4613c6efd8ce>:0 
  at Microsoft.Boogie.OnlyBoogie.Main (System.String[] args) [0x0029f] in <581a14d47152481e860a87838c548766>:0 
Command exited with non-zero status 1
1.51user 1.77system 5:22.28elapsed 1%CPU (0avgtext+0avgdata 62756maxresident)k
432inputs+152outputs (1major+24790minor)pagefaults 0swaps
FILE:CUDA50/6_Advanced/mergeSort/_bitonicMergeElementaryIntervalsKernel.bpl.ice2.bpl
#################
Wed May 12 01:09:33 UTC 2021
KEY=awinnow
OUTPUT=/root/Docker/winnow_gpu_timeout.txt
[TRACE] Using prover: /root/Docker/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/root/Docker/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a winnow
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/errorLimit:1
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/mergeSort/_mergeElementaryIntervalsKernel.bpl.ice2.bpl
--------------------
Parsing /root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/mergeSort/_mergeElementaryIntervalsKernel.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /root/Docker/z3/bin/z3
#parameters: 32
Generating VC of $_Z30mergeElementaryIntervalsKernelILj1EEvPjS0_S0_S0_S0_S0_jj
Verifying $_Z30mergeElementaryIntervalsKernelILj1EEvPjS0_S0_S0_S0_S0_jj: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,0,1,1,1,1: positive
Prover Time taken = 10.092683
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/mergeSort/_mergeElementaryIntervalsKernel.bpl.ice2.bpl
Total learner time was 00:00:00.1186970
Verifying $_Z30mergeElementaryIntervalsKernelILj1EEvPjS0_S0_S0_S0_S0_jj: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool) : bool
{
  0 + (if b0000 then 0 else 12000) + (if b0001 then 0 else 12000) + (if b0002 then 0 else 12000) + (if b0003 then 0 else 12000) + (if b0004 then 0 else 12000) + (if b0005 then 0 else 12000) + (if b0006 then 0 else 12000) + (if b0007 then 0 else 12000) + (if b0008 then 0 else 12000) + (if b0009 then 0 else 12000) + (if b0010 then 0 else 12000) + (if b0011 then 0 else 12000) + (if b0012 then 0 else 12000) + (if b0013 then 0 else 12000) + (if b0014 then 0 else 12000) + (if b0015 then 0 else 12000) + (if b0016 then 0 else 12000) + (if b0017 then 0 else 12000) + (if b0018 then 0 else 12000) + (if b0019 then 0 else 12000) + (if b0020 then 0 else 12000) + (if b0021 then 0 else 12000) + (if b0022 then 0 else 12000) + (if b0023 then 0 else 12000) + (if b0024 then 0 else 12000) + (if b0026 then 0 else 12000) + (if b0028 then 0 else 12000) + (if b0029 then 0 else 12000) + (if b0030 then 0 else 12000) + (if b0031 then 0 else 12000) < 441
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1: positive
Prover Time taken = 24.467095
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/mergeSort/_mergeElementaryIntervalsKernel.bpl.ice2.bpl
Total learner time was 00:00:00.1202760
Verifying $_Z30mergeElementaryIntervalsKernelILj1EEvPjS0_S0_S0_S0_S0_jj: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool) : bool
{
  0 + (if b0000 then 0 else 12000) + (if b0001 then 0 else 12000) + (if b0002 then 0 else 12000) + (if b0003 then 0 else 12000) + (if b0004 then 0 else 12000) + (if b0005 then 0 else 12000) + (if b0006 then 0 else 12000) + (if b0007 then 0 else 12000) + (if b0008 then 0 else 12000) + (if b0009 then 0 else 12000) + (if b0010 then 0 else 12000) + (if b0011 then 0 else 12000) + (if b0012 then 0 else 12000) + (if b0013 then 0 else 12000) + (if b0014 then 0 else 12000) + (if b0015 then 0 else 12000) + (if b0016 then 0 else 12000) + (if b0017 then 0 else 12000) + (if b0018 then 0 else 12000) + (if b0019 then 0 else 12000) + (if b0020 then 0 else 12000) + (if b0021 then 0 else 12000) + (if b0022 then 0 else 12000) + (if b0023 then 0 else 12000) + (if b0026 then 0 else 12000) + (if b0028 then 0 else 12000) + (if b0029 then 0 else 12000) + (if b0030 then 0 else 12000) + (if b0031 then 0 else 12000) < 441
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1: positive
Prover Time taken = 12.586552
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/mergeSort/_mergeElementaryIntervalsKernel.bpl.ice2.bpl
Total learner time was 00:00:00.1185640
Verifying $_Z30mergeElementaryIntervalsKernelILj1EEvPjS0_S0_S0_S0_S0_jj: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool) : bool
{
  0 + (if b0000 then 0 else 12000) + (if b0001 then 0 else 12000) + (if b0002 then 0 else 12000) + (if b0003 then 0 else 12000) + (if b0004 then 0 else 12000) + (if b0005 then 0 else 12000) + (if b0006 then 0 else 12000) + (if b0007 then 0 else 12000) + (if b0008 then 0 else 12000) + (if b0009 then 0 else 12000) + (if b0010 then 0 else 12000) + (if b0011 then 0 else 12000) + (if b0012 then 0 else 12000) + (if b0013 then 0 else 12000) + (if b0014 then 0 else 12000) + (if b0015 then 0 else 12000) + (if b0016 then 0 else 12000) + (if b0017 then 0 else 12000) + (if b0018 then 0 else 12000) + (if b0019 then 0 else 12000) + (if b0020 then 0 else 12000) + (if b0021 then 0 else 12000) + (if b0022 then 0 else 12000) + (if b0023 then 0 else 12000) + (if b0028 then 0 else 12000) + (if b0029 then 0 else 12000) + (if b0030 then 0 else 12000) + (if b0031 then 0 else 12000) < 441
}
Prover Time taken = 19.68667
Added Horn clause: 3 && 4 => 5
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/mergeSort/_mergeElementaryIntervalsKernel.bpl.ice2.bpl
Total learner time was 00:00:00.1195040
Verifying $_Z30mergeElementaryIntervalsKernelILj1EEvPjS0_S0_S0_S0_S0_jj: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool) : bool
{
  0 + (if b0000 then 0 else 12000) + (if b0001 then 0 else 12000) + (if b0002 then 0 else 12000) + (if b0003 then 0 else 12000) + (if b0004 then 0 else 12000) + (if b0005 then 0 else 12000) + (if b0006 then 0 else 12000) + (if b0007 then 0 else 12000) + (if b0008 then 0 else 12000) + (if b0009 then 0 else 12000) + (if b0010 then 0 else 12000) + (if b0011 then 0 else 12000) + (if b0012 then 0 else 12000) + (if b0013 then 0 else 12000) + (if b0014 then 0 else 12000) + (if b0015 then 0 else 12000) + (if b0016 then 0 else 12000) + (if b0017 then 0 else 12000) + (if b0018 then 0 else 12000) + (if b0019 then 0 else 12000) + (if b0020 then 0 else 12000) + (if b0021 then 0 else 12000) + (if b0022 then 0 else 12000) + (if b0023 then 0 else 12000) + (if b0028 then 0 else 12000) + (if b0029 then 0 else 12000) + (if b0031 then 0 else 12000) < 441
}
Prover Time taken = 12.469197
Added Horn clause: 3 && 4 => 6
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/mergeSort/_mergeElementaryIntervalsKernel.bpl.ice2.bpl
Total learner time was 00:00:00.1194110
Verifying $_Z30mergeElementaryIntervalsKernelILj1EEvPjS0_S0_S0_S0_S0_jj: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool) : bool
{
  0 + (if b0000 then 0 else 12000) + (if b0001 then 0 else 12000) + (if b0002 then 0 else 12000) + (if b0003 then 0 else 12000) + (if b0004 then 0 else 12000) + (if b0005 then 0 else 12000) + (if b0006 then 0 else 12000) + (if b0007 then 0 else 12000) + (if b0008 then 0 else 12000) + (if b0009 then 0 else 12000) + (if b0010 then 0 else 12000) + (if b0011 then 0 else 12000) + (if b0012 then 0 else 12000) + (if b0014 then 0 else 12000) + (if b0017 then 0 else 12000) + (if b0019 then 0 else 12000) + (if b0020 then 0 else 12000) + (if b0021 then 0 else 12000) + (if b0022 then 0 else 12000) + (if b0023 then 0 else 12000) + (if b0028 then 0 else 12000) + (if b0029 then 0 else 12000) + (if b0031 then 0 else 12000) < 441
}
Prover Time taken = 19.878363
Added Horn clause: 7 && 8 => 9
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/mergeSort/_mergeElementaryIntervalsKernel.bpl.ice2.bpl
Total learner time was 00:00:00.1193490
Verifying $_Z30mergeElementaryIntervalsKernelILj1EEvPjS0_S0_S0_S0_S0_jj: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool) : bool
{
  0 + (if b0000 then 0 else 12000) + (if b0001 then 0 else 12000) + (if b0002 then 0 else 12000) + (if b0003 then 0 else 12000) + (if b0004 then 0 else 12000) + (if b0005 then 0 else 12000) + (if b0006 then 0 else 12000) + (if b0007 then 0 else 12000) + (if b0008 then 0 else 12000) + (if b0009 then 0 else 12000) + (if b0010 then 0 else 12000) + (if b0011 then 0 else 12000) + (if b0012 then 0 else 12000) + (if b0014 then 0 else 12000) + (if b0017 then 0 else 12000) + (if b0019 then 0 else 12000) + (if b0020 then 0 else 12000) + (if b0021 then 0 else 12000) + (if b0022 then 0 else 12000) + (if b0023 then 0 else 12000) + (if b0028 then 0 else 12000) + (if b0031 then 0 else 12000) < 441
}
Prover Time taken = 13.075673
Added Horn clause: 10 && 4 => 11
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/mergeSort/_mergeElementaryIntervalsKernel.bpl.ice2.bpl
Total learner time was 00:00:00.1197050
Verifying $_Z30mergeElementaryIntervalsKernelILj1EEvPjS0_S0_S0_S0_S0_jj: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool) : bool
{
  0 + (if b0000 then 0 else 12000) + (if b0001 then 0 else 12000) + (if b0002 then 0 else 12000) + (if b0003 then 0 else 12000) + (if b0004 then 0 else 12000) + (if b0005 then 0 else 12000) + (if b0006 then 0 else 12000) + (if b0007 then 0 else 12000) + (if b0008 then 0 else 12000) + (if b0009 then 0 else 12000) + (if b0010 then 0 else 12000) + (if b0011 then 0 else 12000) + (if b0012 then 0 else 12000) + (if b0014 then 0 else 12000) + (if b0017 then 0 else 12000) + (if b0019 then 0 else 12000) + (if b0020 then 0 else 12000) + (if b0021 then 0 else 12000) + (if b0022 then 0 else 12000) + (if b0023 then 0 else 12000) < 441
}
Prover Time taken = 18.512065
Added Horn clause: 12 && 6 => 13
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/mergeSort/_mergeElementaryIntervalsKernel.bpl.ice2.bpl
Total learner time was 00:00:00.1219280
Verifying $_Z30mergeElementaryIntervalsKernelILj1EEvPjS0_S0_S0_S0_S0_jj: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool) : bool
{
  0 + (if b0000 then 0 else 12000) + (if b0001 then 0 else 12000) + (if b0002 then 0 else 12000) + (if b0003 then 0 else 12000) + (if b0004 then 0 else 12000) + (if b0005 then 0 else 12000) + (if b0006 then 0 else 12000) + (if b0007 then 0 else 12000) + (if b0008 then 0 else 12000) + (if b0009 then 0 else 12000) + (if b0010 then 0 else 12000) + (if b0011 then 0 else 12000) + (if b0012 then 0 else 12000) + (if b0014 then 0 else 12000) + (if b0019 then 0 else 12000) + (if b0020 then 0 else 12000) + (if b0021 then 0 else 12000) + (if b0022 then 0 else 12000) + (if b0023 then 0 else 12000) < 441
}
Added Horn clause: 2 && 4 && 14 && 4 => 
Prover Time taken = 28.366858
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/mergeSort/_mergeElementaryIntervalsKernel.bpl.ice2.bpl
terminate called after throwing an instance of 'std::runtime_error'
  what():  No consistent conjunction exists
The learner seems to have run into an error!

Unhandled Exception:
Microsoft.Boogie.Houdini.MLHoudiniInternalError: The learner seems to have run into an error!
  at Microsoft.Boogie.Houdini.MLHoudini.learn (System.Collections.Generic.HashSet`1[System.String]& funcsChanged) [0x000e7] in <3034164c407e4adc8ab666e7c26ee7b8>:0 
  at Microsoft.Boogie.Houdini.MLHoudini.LearnInv (System.Collections.Generic.Dictionary`2[TKey,TValue] impl2Priority) [0x00782] in <3034164c407e4adc8ab666e7c26ee7b8>:0 
  at Microsoft.Boogie.Houdini.MLHoudini.ComputeSummaries () [0x0019c] in <3034164c407e4adc8ab666e7c26ee7b8>:0 
  at Microsoft.Boogie.ExecutionEngine.RunMLHoudini (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, Microsoft.Boogie.ErrorReporterDelegate er, System.String filename) [0x00055] in <392c81a181e742f795ac4613c6efd8ce>:0 
  at Microsoft.Boogie.ExecutionEngine.RunHoudini (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, Microsoft.Boogie.ErrorReporterDelegate er, System.String filename) [0x00021] in <392c81a181e742f795ac4613c6efd8ce>:0 
  at Microsoft.Boogie.ExecutionEngine.InferAndVerify (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, System.String filename, Microsoft.Boogie.ErrorReporterDelegate er, System.String requestId) [0x00136] in <392c81a181e742f795ac4613c6efd8ce>:0 
  at Microsoft.Boogie.ExecutionEngine.ProcessFiles (System.Collections.Generic.List`1[T] fileNames, System.Boolean lookForSnapshots) [0x002bd] in <392c81a181e742f795ac4613c6efd8ce>:0 
  at Microsoft.Boogie.OnlyBoogie.Main (System.String[] args) [0x0029f] in <581a14d47152481e860a87838c548766>:0 
[ERROR] FATAL UNHANDLED EXCEPTION: Microsoft.Boogie.Houdini.MLHoudiniInternalError: The learner seems to have run into an error!
  at Microsoft.Boogie.Houdini.MLHoudini.learn (System.Collections.Generic.HashSet`1[System.String]& funcsChanged) [0x000e7] in <3034164c407e4adc8ab666e7c26ee7b8>:0 
  at Microsoft.Boogie.Houdini.MLHoudini.LearnInv (System.Collections.Generic.Dictionary`2[TKey,TValue] impl2Priority) [0x00782] in <3034164c407e4adc8ab666e7c26ee7b8>:0 
  at Microsoft.Boogie.Houdini.MLHoudini.ComputeSummaries () [0x0019c] in <3034164c407e4adc8ab666e7c26ee7b8>:0 
  at Microsoft.Boogie.ExecutionEngine.RunMLHoudini (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, Microsoft.Boogie.ErrorReporterDelegate er, System.String filename) [0x00055] in <392c81a181e742f795ac4613c6efd8ce>:0 
  at Microsoft.Boogie.ExecutionEngine.RunHoudini (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, Microsoft.Boogie.ErrorReporterDelegate er, System.String filename) [0x00021] in <392c81a181e742f795ac4613c6efd8ce>:0 
  at Microsoft.Boogie.ExecutionEngine.InferAndVerify (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, System.String filename, Microsoft.Boogie.ErrorReporterDelegate er, System.String requestId) [0x00136] in <392c81a181e742f795ac4613c6efd8ce>:0 
  at Microsoft.Boogie.ExecutionEngine.ProcessFiles (System.Collections.Generic.List`1[T] fileNames, System.Boolean lookForSnapshots) [0x002bd] in <392c81a181e742f795ac4613c6efd8ce>:0 
  at Microsoft.Boogie.OnlyBoogie.Main (System.String[] args) [0x0029f] in <581a14d47152481e860a87838c548766>:0 
Command exited with non-zero status 1
1.84user 2.02system 2:41.88elapsed 2%CPU (0avgtext+0avgdata 71340maxresident)k
576inputs+304outputs (2major+36696minor)pagefaults 0swaps
FILE:CUDA50/6_Advanced/mergeSort/_mergeElementaryIntervalsKernel.bpl.ice2.bpl
#################
Wed May 12 01:12:15 UTC 2021
KEY=awinnow
OUTPUT=/root/Docker/winnow_gpu_timeout.txt
[TRACE] Using prover: /root/Docker/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/root/Docker/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a winnow
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/errorLimit:1
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/mergeSort/_mergeSortSharedKernel.bpl.ice2.bpl
--------------------
Parsing /root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/mergeSort/_mergeSortSharedKernel.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /root/Docker/z3/bin/z3
#parameters: 32
Generating VC of $_Z21mergeSortSharedKernelILj1EEvPjS0_S0_S0_j
Verifying $_Z21mergeSortSharedKernelILj1EEvPjS0_S0_S0_j: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,0,1,1,1,1,1,1: positive
Prover Time taken = 0.194216
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/mergeSort/_mergeSortSharedKernel.bpl.ice2.bpl
Total learner time was 00:00:00.1169680
Verifying $_Z21mergeSortSharedKernelILj1EEvPjS0_S0_S0_j: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool) : bool
{
  0 + (if b0000 then 0 else 12000) + (if b0001 then 0 else 12000) + (if b0002 then 0 else 12000) + (if b0003 then 0 else 12000) + (if b0004 then 0 else 12000) + (if b0005 then 0 else 12000) + (if b0006 then 0 else 12000) + (if b0007 then 0 else 12000) + (if b0008 then 0 else 12000) + (if b0009 then 0 else 12000) + (if b0010 then 0 else 12000) + (if b0011 then 0 else 12000) + (if b0012 then 0 else 12000) + (if b0013 then 0 else 12000) + (if b0014 then 0 else 12000) + (if b0015 then 0 else 12000) + (if b0016 then 0 else 12000) + (if b0017 then 0 else 12000) + (if b0018 then 0 else 12000) + (if b0019 then 0 else 12000) + (if b0020 then 0 else 12000) + (if b0021 then 0 else 12000) + (if b0022 then 0 else 12000) + (if b0024 then 0 else 12000) + (if b0026 then 0 else 12000) + (if b0027 then 0 else 12000) + (if b0028 then 0 else 12000) + (if b0029 then 0 else 12000) + (if b0030 then 0 else 12000) + (if b0031 then 0 else 12000) < 441
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1: positive
Prover Time taken = 3.41366
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/mergeSort/_mergeSortSharedKernel.bpl.ice2.bpl
Total learner time was 00:00:00.1185200
Verifying $_Z21mergeSortSharedKernelILj1EEvPjS0_S0_S0_j: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool) : bool
{
  0 + (if b0000 then 0 else 12000) + (if b0001 then 0 else 12000) + (if b0002 then 0 else 12000) + (if b0003 then 0 else 12000) + (if b0004 then 0 else 12000) + (if b0005 then 0 else 12000) + (if b0006 then 0 else 12000) + (if b0007 then 0 else 12000) + (if b0008 then 0 else 12000) + (if b0009 then 0 else 12000) + (if b0010 then 0 else 12000) + (if b0011 then 0 else 12000) + (if b0012 then 0 else 12000) + (if b0013 then 0 else 12000) + (if b0014 then 0 else 12000) + (if b0015 then 0 else 12000) + (if b0016 then 0 else 12000) + (if b0017 then 0 else 12000) + (if b0018 then 0 else 12000) + (if b0019 then 0 else 12000) + (if b0020 then 0 else 12000) + (if b0021 then 0 else 12000) + (if b0022 then 0 else 12000) + (if b0026 then 0 else 12000) + (if b0027 then 0 else 12000) + (if b0028 then 0 else 12000) + (if b0029 then 0 else 12000) + (if b0030 then 0 else 12000) + (if b0031 then 0 else 12000) < 441
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,0,1,1,1,1,1,1: positive
Prover Time taken = 4.355891
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/mergeSort/_mergeSortSharedKernel.bpl.ice2.bpl
Total learner time was 00:00:00.1186420
Verifying $_Z21mergeSortSharedKernelILj1EEvPjS0_S0_S0_j: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool) : bool
{
  0 + (if b0000 then 0 else 12000) + (if b0001 then 0 else 12000) + (if b0002 then 0 else 12000) + (if b0003 then 0 else 12000) + (if b0004 then 0 else 12000) + (if b0005 then 0 else 12000) + (if b0006 then 0 else 12000) + (if b0007 then 0 else 12000) + (if b0008 then 0 else 12000) + (if b0009 then 0 else 12000) + (if b0010 then 0 else 12000) + (if b0011 then 0 else 12000) + (if b0012 then 0 else 12000) + (if b0013 then 0 else 12000) + (if b0014 then 0 else 12000) + (if b0015 then 0 else 12000) + (if b0016 then 0 else 12000) + (if b0017 then 0 else 12000) + (if b0018 then 0 else 12000) + (if b0019 then 0 else 12000) + (if b0020 then 0 else 12000) + (if b0021 then 0 else 12000) + (if b0026 then 0 else 12000) + (if b0027 then 0 else 12000) + (if b0028 then 0 else 12000) + (if b0029 then 0 else 12000) + (if b0030 then 0 else 12000) + (if b0031 then 0 else 12000) < 441
}
Prover Time taken = 1.711458
Added Horn clause: 3 && 3 => 4
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/mergeSort/_mergeSortSharedKernel.bpl.ice2.bpl
Total learner time was 00:00:00.1267960
Verifying $_Z21mergeSortSharedKernelILj1EEvPjS0_S0_S0_j: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool) : bool
{
  0 + (if b0000 then 0 else 12000) + (if b0001 then 0 else 12000) + (if b0002 then 0 else 12000) + (if b0003 then 0 else 12000) + (if b0004 then 0 else 12000) + (if b0006 then 0 else 12000) + (if b0009 then 0 else 12000) + (if b0011 then 0 else 12000) + (if b0012 then 0 else 12000) + (if b0013 then 0 else 12000) + (if b0014 then 0 else 12000) + (if b0015 then 0 else 12000) + (if b0016 then 0 else 12000) + (if b0017 then 0 else 12000) + (if b0018 then 0 else 12000) + (if b0019 then 0 else 12000) + (if b0020 then 0 else 12000) + (if b0021 then 0 else 12000) + (if b0026 then 0 else 12000) + (if b0027 then 0 else 12000) + (if b0028 then 0 else 12000) + (if b0030 then 0 else 12000) + (if b0031 then 0 else 12000) < 441
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,0,1,0,1,1,1,1: positive
Prover Time taken = 3.248478
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/mergeSort/_mergeSortSharedKernel.bpl.ice2.bpl
Total learner time was 00:00:00.1181650
Verifying $_Z21mergeSortSharedKernelILj1EEvPjS0_S0_S0_j: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool) : bool
{
  0 + (if b0000 then 0 else 12000) + (if b0001 then 0 else 12000) + (if b0002 then 0 else 12000) + (if b0003 then 0 else 12000) + (if b0004 then 0 else 12000) + (if b0006 then 0 else 12000) + (if b0009 then 0 else 12000) + (if b0011 then 0 else 12000) + (if b0012 then 0 else 12000) + (if b0013 then 0 else 12000) + (if b0014 then 0 else 12000) + (if b0015 then 0 else 12000) + (if b0016 then 0 else 12000) + (if b0017 then 0 else 12000) + (if b0018 then 0 else 12000) + (if b0019 then 0 else 12000) + (if b0020 then 0 else 12000) + (if b0021 then 0 else 12000) + (if b0026 then 0 else 12000) + (if b0028 then 0 else 12000) + (if b0030 then 0 else 12000) + (if b0031 then 0 else 12000) < 441
}
Prover Time taken = 5.343379
Added Horn clause: 0 && 6 && 3 => 7
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/mergeSort/_mergeSortSharedKernel.bpl.ice2.bpl
Total learner time was 00:00:00.1197340
Verifying $_Z21mergeSortSharedKernelILj1EEvPjS0_S0_S0_j: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool) : bool
{
  0 + (if b0000 then 0 else 12000) + (if b0001 then 0 else 12000) + (if b0002 then 0 else 12000) + (if b0003 then 0 else 12000) + (if b0004 then 0 else 12000) + (if b0006 then 0 else 12000) + (if b0009 then 0 else 12000) + (if b0011 then 0 else 12000) + (if b0012 then 0 else 12000) + (if b0014 then 0 else 12000) + (if b0017 then 0 else 12000) + (if b0019 then 0 else 12000) + (if b0020 then 0 else 12000) + (if b0021 then 0 else 12000) + (if b0026 then 0 else 12000) + (if b0028 then 0 else 12000) + (if b0030 then 0 else 12000) < 441
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,0,0,1,1,1,1,1: positive
Prover Time taken = 6.797945
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/mergeSort/_mergeSortSharedKernel.bpl.ice2.bpl
Total learner time was 00:00:00.1193300
Verifying $_Z21mergeSortSharedKernelILj1EEvPjS0_S0_S0_j: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool) : bool
{
  0 + (if b0000 then 0 else 12000) + (if b0001 then 0 else 12000) + (if b0002 then 0 else 12000) + (if b0003 then 0 else 12000) + (if b0004 then 0 else 12000) + (if b0006 then 0 else 12000) + (if b0009 then 0 else 12000) + (if b0011 then 0 else 12000) + (if b0012 then 0 else 12000) + (if b0014 then 0 else 12000) + (if b0017 then 0 else 12000) + (if b0019 then 0 else 12000) + (if b0020 then 0 else 12000) + (if b0021 then 0 else 12000) + (if b0028 then 0 else 12000) + (if b0030 then 0 else 12000) < 441
}
Prover Time taken = 2.823324
Added Horn clause: 9 && 6 && 7 => 10
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/mergeSort/_mergeSortSharedKernel.bpl.ice2.bpl
Total learner time was 00:00:00.1203690
Verifying $_Z21mergeSortSharedKernelILj1EEvPjS0_S0_S0_j: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool) : bool
{
  0 + (if b0001 then 0 else 12000) + (if b0003 then 0 else 12000) + (if b0004 then 0 else 12000) + (if b0006 then 0 else 12000) + (if b0009 then 0 else 12000) + (if b0011 then 0 else 12000) + (if b0012 then 0 else 12000) + (if b0014 then 0 else 12000) + (if b0017 then 0 else 12000) + (if b0019 then 0 else 12000) + (if b0020 then 0 else 12000) + (if b0021 then 0 else 12000) + (if b0028 then 0 else 12000) + (if b0030 then 0 else 12000) < 441
}
Added Horn clause: 11 && 4 && 12 => 
Prover Time taken = 1.880557
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/mergeSort/_mergeSortSharedKernel.bpl.ice2.bpl
terminate called after throwing an instance of 'std::runtime_error'
  what():  No consistent conjunction exists
The learner seems to have run into an error!

Unhandled Exception:
Microsoft.Boogie.Houdini.MLHoudiniInternalError: The learner seems to have run into an error!
  at Microsoft.Boogie.Houdini.MLHoudini.learn (System.Collections.Generic.HashSet`1[System.String]& funcsChanged) [0x000e7] in <3034164c407e4adc8ab666e7c26ee7b8>:0 
  at Microsoft.Boogie.Houdini.MLHoudini.LearnInv (System.Collections.Generic.Dictionary`2[TKey,TValue] impl2Priority) [0x00782] in <3034164c407e4adc8ab666e7c26ee7b8>:0 
  at Microsoft.Boogie.Houdini.MLHoudini.ComputeSummaries () [0x0019c] in <3034164c407e4adc8ab666e7c26ee7b8>:0 
  at Microsoft.Boogie.ExecutionEngine.RunMLHoudini (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, Microsoft.Boogie.ErrorReporterDelegate er, System.String filename) [0x00055] in <392c81a181e742f795ac4613c6efd8ce>:0 
  at Microsoft.Boogie.ExecutionEngine.RunHoudini (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, Microsoft.Boogie.ErrorReporterDelegate er, System.String filename) [0x00021] in <392c81a181e742f795ac4613c6efd8ce>:0 
  at Microsoft.Boogie.ExecutionEngine.InferAndVerify (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, System.String filename, Microsoft.Boogie.ErrorReporterDelegate er, System.String requestId) [0x00136] in <392c81a181e742f795ac4613c6efd8ce>:0 
  at Microsoft.Boogie.ExecutionEngine.ProcessFiles (System.Collections.Generic.List`1[T] fileNames, System.Boolean lookForSnapshots) [0x002bd] in <392c81a181e742f795ac4613c6efd8ce>:0 
  at Microsoft.Boogie.OnlyBoogie.Main (System.String[] args) [0x0029f] in <581a14d47152481e860a87838c548766>:0 
[ERROR] FATAL UNHANDLED EXCEPTION: Microsoft.Boogie.Houdini.MLHoudiniInternalError: The learner seems to have run into an error!
  at Microsoft.Boogie.Houdini.MLHoudini.learn (System.Collections.Generic.HashSet`1[System.String]& funcsChanged) [0x000e7] in <3034164c407e4adc8ab666e7c26ee7b8>:0 
  at Microsoft.Boogie.Houdini.MLHoudini.LearnInv (System.Collections.Generic.Dictionary`2[TKey,TValue] impl2Priority) [0x00782] in <3034164c407e4adc8ab666e7c26ee7b8>:0 
  at Microsoft.Boogie.Houdini.MLHoudini.ComputeSummaries () [0x0019c] in <3034164c407e4adc8ab666e7c26ee7b8>:0 
  at Microsoft.Boogie.ExecutionEngine.RunMLHoudini (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, Microsoft.Boogie.ErrorReporterDelegate er, System.String filename) [0x00055] in <392c81a181e742f795ac4613c6efd8ce>:0 
  at Microsoft.Boogie.ExecutionEngine.RunHoudini (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, Microsoft.Boogie.ErrorReporterDelegate er, System.String filename) [0x00021] in <392c81a181e742f795ac4613c6efd8ce>:0 
  at Microsoft.Boogie.ExecutionEngine.InferAndVerify (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, System.String filename, Microsoft.Boogie.ErrorReporterDelegate er, System.String requestId) [0x00136] in <392c81a181e742f795ac4613c6efd8ce>:0 
  at Microsoft.Boogie.ExecutionEngine.ProcessFiles (System.Collections.Generic.List`1[T] fileNames, System.Boolean lookForSnapshots) [0x002bd] in <392c81a181e742f795ac4613c6efd8ce>:0 
  at Microsoft.Boogie.OnlyBoogie.Main (System.String[] args) [0x0029f] in <581a14d47152481e860a87838c548766>:0 
Command exited with non-zero status 1
1.32user 1.83system 0:32.37elapsed 9%CPU (0avgtext+0avgdata 56736maxresident)k
160inputs+280outputs (1major+28763minor)pagefaults 0swaps
FILE:CUDA50/6_Advanced/mergeSort/_mergeSortSharedKernel.bpl.ice2.bpl
#################
Wed May 12 01:12:48 UTC 2021
KEY=awinnow
OUTPUT=/root/Docker/winnow_gpu_timeout.txt
[TRACE] Using prover: /root/Docker/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/root/Docker/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a winnow
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/errorLimit:1
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/threadFenceReduction/_reduceSinglePass.bpl.ice2.bpl
--------------------
Parsing /root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/threadFenceReduction/_reduceSinglePass.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /root/Docker/z3/bin/z3
#parameters: 11
Generating VC of $_Z16reduceSinglePassILj128ELb1EEvPKfPfj
Verifying $_Z16reduceSinglePassILj128ELb1EEvPKfPfj: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.63731
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/threadFenceReduction/_reduceSinglePass.bpl.ice2.bpl
Total learner time was 00:00:00.1228050
Verifying $_Z16reduceSinglePassILj128ELb1EEvPKfPfj: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool) : bool
{
  0 + (if b0000 then 0 else 4000) + (if b0001 then 0 else 4000) + (if b0002 then 0 else 4000) + (if b0003 then 0 else 4000) + (if b0004 then 0 else 4000) + (if b0005 then 0 else 4000) + (if b0006 then 0 else 4000) + (if b0007 then 0 else 4000) + (if b0008 then 0 else 4000) + (if b0009 then 0 else 4000) + (if b0010 then 0 else 4000) < 441
}
Added Horn clause: 0 && 0 => 
Prover Time taken = 2.538262
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/6_Advanced/threadFenceReduction/_reduceSinglePass.bpl.ice2.bpl
terminate called after throwing an instance of 'std::runtime_error'
  what():  No consistent conjunction exists
The learner seems to have run into an error!

Unhandled Exception:
Microsoft.Boogie.Houdini.MLHoudiniInternalError: The learner seems to have run into an error!
  at Microsoft.Boogie.Houdini.MLHoudini.learn (System.Collections.Generic.HashSet`1[System.String]& funcsChanged) [0x000e7] in <3034164c407e4adc8ab666e7c26ee7b8>:0 
  at Microsoft.Boogie.Houdini.MLHoudini.LearnInv (System.Collections.Generic.Dictionary`2[TKey,TValue] impl2Priority) [0x00782] in <3034164c407e4adc8ab666e7c26ee7b8>:0 
  at Microsoft.Boogie.Houdini.MLHoudini.ComputeSummaries () [0x0019c] in <3034164c407e4adc8ab666e7c26ee7b8>:0 
  at Microsoft.Boogie.ExecutionEngine.RunMLHoudini (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, Microsoft.Boogie.ErrorReporterDelegate er, System.String filename) [0x00055] in <392c81a181e742f795ac4613c6efd8ce>:0 
  at Microsoft.Boogie.ExecutionEngine.RunHoudini (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, Microsoft.Boogie.ErrorReporterDelegate er, System.String filename) [0x00021] in <392c81a181e742f795ac4613c6efd8ce>:0 
  at Microsoft.Boogie.ExecutionEngine.InferAndVerify (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, System.String filename, Microsoft.Boogie.ErrorReporterDelegate er, System.String requestId) [0x00136] in <392c81a181e742f795ac4613c6efd8ce>:0 
  at Microsoft.Boogie.ExecutionEngine.ProcessFiles (System.Collections.Generic.List`1[T] fileNames, System.Boolean lookForSnapshots) [0x002bd] in <392c81a181e742f795ac4613c6efd8ce>:0 
  at Microsoft.Boogie.OnlyBoogie.Main (System.String[] args) [0x0029f] in <581a14d47152481e860a87838c548766>:0 
[ERROR] FATAL UNHANDLED EXCEPTION: Microsoft.Boogie.Houdini.MLHoudiniInternalError: The learner seems to have run into an error!
  at Microsoft.Boogie.Houdini.MLHoudini.learn (System.Collections.Generic.HashSet`1[System.String]& funcsChanged) [0x000e7] in <3034164c407e4adc8ab666e7c26ee7b8>:0 
  at Microsoft.Boogie.Houdini.MLHoudini.LearnInv (System.Collections.Generic.Dictionary`2[TKey,TValue] impl2Priority) [0x00782] in <3034164c407e4adc8ab666e7c26ee7b8>:0 
  at Microsoft.Boogie.Houdini.MLHoudini.ComputeSummaries () [0x0019c] in <3034164c407e4adc8ab666e7c26ee7b8>:0 
  at Microsoft.Boogie.ExecutionEngine.RunMLHoudini (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, Microsoft.Boogie.ErrorReporterDelegate er, System.String filename) [0x00055] in <392c81a181e742f795ac4613c6efd8ce>:0 
  at Microsoft.Boogie.ExecutionEngine.RunHoudini (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, Microsoft.Boogie.ErrorReporterDelegate er, System.String filename) [0x00021] in <392c81a181e742f795ac4613c6efd8ce>:0 
  at Microsoft.Boogie.ExecutionEngine.InferAndVerify (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, System.String filename, Microsoft.Boogie.ErrorReporterDelegate er, System.String requestId) [0x00136] in <392c81a181e742f795ac4613c6efd8ce>:0 
  at Microsoft.Boogie.ExecutionEngine.ProcessFiles (System.Collections.Generic.List`1[T] fileNames, System.Boolean lookForSnapshots) [0x002bd] in <392c81a181e742f795ac4613c6efd8ce>:0 
  at Microsoft.Boogie.OnlyBoogie.Main (System.String[] args) [0x0029f] in <581a14d47152481e860a87838c548766>:0 
Command exited with non-zero status 1
0.93user 1.19system 0:05.00elapsed 42%CPU (0avgtext+0avgdata 58280maxresident)k
224inputs+64outputs (1major+17575minor)pagefaults 0swaps
FILE:CUDA50/6_Advanced/threadFenceReduction/_reduceSinglePass.bpl.ice2.bpl
#################
Wed May 12 01:12:53 UTC 2021
KEY=awinnow
OUTPUT=/root/Docker/winnow_gpu_timeout.txt
[TRACE] Using prover: /root/Docker/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/root/Docker/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a winnow
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/errorLimit:1
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/7_CUDALibraries/MC_SingleAsianOptionP/generatePaths.bpl.ice2.bpl
--------------------
Parsing /root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/7_CUDALibraries/MC_SingleAsianOptionP/generatePaths.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /root/Docker/z3/bin/z3
#parameters: 17
Generating VC of $_Z13generatePathsIfEvPT_P17curandStateXORWOWPK11AsianOptionIS0_Ejj
Verifying $_Z13generatePathsIfEvPT_P17curandStateXORWOWPK11AsianOptionIS0_Ejj: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.168377
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/7_CUDALibraries/MC_SingleAsianOptionP/generatePaths.bpl.ice2.bpl
Total learner time was 00:00:00.1194740
Verifying $_Z13generatePathsIfEvPT_P17curandStateXORWOWPK11AsianOptionIS0_Ejj: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool) : bool
{
  0 + (if b0000 then 0 else 6000) + (if b0001 then 0 else 6000) + (if b0002 then 0 else 6000) + (if b0003 then 0 else 6000) + (if b0004 then 0 else 6000) + (if b0005 then 0 else 6000) + (if b0006 then 0 else 6000) + (if b0007 then 0 else 6000) + (if b0008 then 0 else 6000) + (if b0009 then 0 else 6000) + (if b0010 then 0 else 6000) + (if b0011 then 0 else 6000) + (if b0012 then 0 else 6000) + (if b0013 then 0 else 6000) + (if b0014 then 0 else 6000) + (if b0015 then 0 else 6000) + (if b0016 then 0 else 6000) < 441
}
Prover Time taken = 0.209673
Added Horn clause: 0 => 1
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/7_CUDALibraries/MC_SingleAsianOptionP/generatePaths.bpl.ice2.bpl
Total learner time was 00:00:00.1187710
Verifying $_Z13generatePathsIfEvPT_P17curandStateXORWOWPK11AsianOptionIS0_Ejj: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool) : bool
{
  0 + (if b0000 then 0 else 6000) + (if b0001 then 0 else 6000) + (if b0002 then 0 else 6000) + (if b0003 then 0 else 6000) + (if b0004 then 0 else 6000) + (if b0005 then 0 else 6000) + (if b0006 then 0 else 6000) + (if b0007 then 0 else 6000) + (if b0008 then 0 else 6000) + (if b0009 then 0 else 6000) + (if b0010 then 0 else 6000) + (if b0011 then 0 else 6000) + (if b0012 then 0 else 6000) + (if b0014 then 0 else 6000) + (if b0015 then 0 else 6000) + (if b0016 then 0 else 6000) < 441
}
Prover Time taken = 0.215774
Added Horn clause: 0 && 0 && 0 => 2
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/7_CUDALibraries/MC_SingleAsianOptionP/generatePaths.bpl.ice2.bpl
Total learner time was 00:00:00.1231590
Verifying $_Z13generatePathsIfEvPT_P17curandStateXORWOWPK11AsianOptionIS0_Ejj: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool) : bool
{
  0 + (if b0002 then 0 else 6000) + (if b0004 then 0 else 6000) + (if b0005 then 0 else 6000) + (if b0006 then 0 else 6000) + (if b0007 then 0 else 6000) + (if b0008 then 0 else 6000) + (if b0009 then 0 else 6000) + (if b0010 then 0 else 6000) + (if b0011 then 0 else 6000) + (if b0012 then 0 else 6000) + (if b0014 then 0 else 6000) + (if b0015 then 0 else 6000) + (if b0016 then 0 else 6000) < 441
}
Prover Time taken = 0.241481
Added Horn clause: 3 && 0 && 0 => 4
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/7_CUDALibraries/MC_SingleAsianOptionP/generatePaths.bpl.ice2.bpl
Total learner time was 00:00:00.1175850
Verifying $_Z13generatePathsIfEvPT_P17curandStateXORWOWPK11AsianOptionIS0_Ejj: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool) : bool
{
  0 + (if b0002 then 0 else 6000) + (if b0004 then 0 else 6000) + (if b0005 then 0 else 6000) + (if b0006 then 0 else 6000) + (if b0007 then 0 else 6000) + (if b0008 then 0 else 6000) + (if b0009 then 0 else 6000) + (if b0010 then 0 else 6000) + (if b0011 then 0 else 6000) + (if b0012 then 0 else 6000) + (if b0015 then 0 else 6000) + (if b0016 then 0 else 6000) < 441
}
Prover Time taken = 0.144003
Added Horn clause: 5 => 6
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/7_CUDALibraries/MC_SingleAsianOptionP/generatePaths.bpl.ice2.bpl
Total learner time was 00:00:00.1183960
Verifying $_Z13generatePathsIfEvPT_P17curandStateXORWOWPK11AsianOptionIS0_Ejj: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool) : bool
{
  0 + (if b0002 then 0 else 6000) + (if b0004 then 0 else 6000) + (if b0005 then 0 else 6000) + (if b0006 then 0 else 6000) + (if b0007 then 0 else 6000) + (if b0008 then 0 else 6000) + (if b0009 then 0 else 6000) + (if b0010 then 0 else 6000) + (if b0011 then 0 else 6000) + (if b0012 then 0 else 6000) + (if b0016 then 0 else 6000) < 441
}
Prover Time taken = 0.255371
Added Horn clause: 0 && 0 && 0 => 7
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/CUDA50/7_CUDALibraries/MC_SingleAsianOptionP/generatePaths.bpl.ice2.bpl
Total learner time was 00:00:00.1232170
Verifying $_Z13generatePathsIfEvPT_P17curandStateXORWOWPK11AsianOptionIS0_Ejj: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool) : bool
{
  0 + (if b0002 then 0 else 6000) + (if b0004 then 0 else 6000) + (if b0005 then 0 else 6000) + (if b0008 then 0 else 6000) + (if b0010 then 0 else 6000) + (if b0011 then 0 else 6000) + (if b0012 then 0 else 6000) + (if b0016 then 0 else 6000) < 441
}
Prover Time taken = 715.321594
Prover time = 716.56
Number of prover queries = 7
Learner time = 0.72
Number of learner queries = 6
Total time: 717.41
Number of positive examples:1
Number of negative examples:0
Number of Horn clauses:5
verified

Boogie program verifier finished with 1 verified, 0 errors
1.78user 2.52system 11:58.74elapsed 0%CPU (0avgtext+0avgdata 46344maxresident)k
80inputs+216outputs (1major+20818minor)pagefaults 0swaps
FILE:CUDA50/7_CUDALibraries/MC_SingleAsianOptionP/generatePaths.bpl.ice2.bpl
#################
Wed May 12 01:24:51 UTC 2021
KEY=awinnow
OUTPUT=/root/Docker/winnow_gpu_timeout.txt
[TRACE] Using prover: /root/Docker/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/root/Docker/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a winnow
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/errorLimit:1
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/gpgpu-sim_ispass2009/AES/aesEncrypt128_kernel/kernel.bpl.ice2.bpl
--------------------
Parsing /root/Docker/benchmarks/BenchmarksCompiled/awinnow/gpgpu-sim_ispass2009/AES/aesEncrypt128_kernel/kernel.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /root/Docker/z3/bin/z3
#parameters: 5
Generating VC of $_Z13aesEncrypt128PjS_i
Verifying $_Z13aesEncrypt128PjS_i: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1: positive
Prover Time taken = 0.221696
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/gpgpu-sim_ispass2009/AES/aesEncrypt128_kernel/kernel.bpl.ice2.bpl
Total learner time was 00:00:00.1185340
Verifying $_Z13aesEncrypt128PjS_i: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool) : bool
{
  0 + (if b0000 then 0 else 2000) + (if b0001 then 0 else 2000) + (if b0002 then 0 else 2000) + (if b0003 then 0 else 2000) + (if b0004 then 0 else 2000) < 441
}
Command exited with non-zero status 124
2.16user 2.51system 19:58.62elapsed 0%CPU (0avgtext+0avgdata 78736maxresident)k
552inputs+48outputs (1major+23083minor)pagefaults 0swaps
FILE:gpgpu-sim_ispass2009/AES/aesEncrypt128_kernel/kernel.bpl.ice2.bpl
#################
Wed May 12 01:44:50 UTC 2021
KEY=awinnow
OUTPUT=/root/Docker/winnow_gpu_timeout.txt
[TRACE] Using prover: /root/Docker/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/root/Docker/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a winnow
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/errorLimit:1
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/gpgpu-sim_ispass2009/AES/aesEncrypt256_kernel/kernel.bpl.ice2.bpl
--------------------
Parsing /root/Docker/benchmarks/BenchmarksCompiled/awinnow/gpgpu-sim_ispass2009/AES/aesEncrypt256_kernel/kernel.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /root/Docker/z3/bin/z3
#parameters: 5
Generating VC of $_Z13aesEncrypt256PjS_i
Verifying $_Z13aesEncrypt256PjS_i: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1: positive
Prover Time taken = 0.21606
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/gpgpu-sim_ispass2009/AES/aesEncrypt256_kernel/kernel.bpl.ice2.bpl
Total learner time was 00:00:00.1212860
Verifying $_Z13aesEncrypt256PjS_i: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool) : bool
{
  0 + (if b0000 then 0 else 2000) + (if b0001 then 0 else 2000) + (if b0002 then 0 else 2000) + (if b0003 then 0 else 2000) + (if b0004 then 0 else 2000) < 441
}
Command exited with non-zero status 124
2.39user 2.29system 19:58.62elapsed 0%CPU (0avgtext+0avgdata 89684maxresident)k
672inputs+48outputs (1major+26005minor)pagefaults 0swaps
FILE:gpgpu-sim_ispass2009/AES/aesEncrypt256_kernel/kernel.bpl.ice2.bpl
#################
Wed May 12 02:04:49 UTC 2021
KEY=awinnow
OUTPUT=/root/Docker/winnow_gpu_timeout.txt
[TRACE] Using prover: /root/Docker/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/root/Docker/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a winnow
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/errorLimit:1
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/gpgpu-sim_ispass2009/MUM/_mummergpuKernel.bpl.ice2.bpl
--------------------
Parsing /root/Docker/benchmarks/BenchmarksCompiled/awinnow/gpgpu-sim_ispass2009/MUM/_mummergpuKernel.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /root/Docker/z3/bin/z3
#parameters: 31
Generating VC of $_Z15mummergpuKernelP10MatchCoordPcPKiS3_ii
Verifying $_Z15mummergpuKernelP10MatchCoordPcPKiS3_ii: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.200328
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/gpgpu-sim_ispass2009/MUM/_mummergpuKernel.bpl.ice2.bpl
Total learner time was 00:00:00.1179320
Verifying $_Z15mummergpuKernelP10MatchCoordPcPKiS3_ii: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool) : bool
{
  0 + (if b0000 then 0 else 12000) + (if b0001 then 0 else 12000) + (if b0002 then 0 else 12000) + (if b0003 then 0 else 12000) + (if b0004 then 0 else 12000) + (if b0005 then 0 else 12000) + (if b0006 then 0 else 12000) + (if b0007 then 0 else 12000) + (if b0008 then 0 else 12000) + (if b0009 then 0 else 12000) + (if b0010 then 0 else 12000) + (if b0011 then 0 else 12000) + (if b0012 then 0 else 12000) + (if b0013 then 0 else 12000) + (if b0014 then 0 else 12000) + (if b0015 then 0 else 12000) + (if b0016 then 0 else 12000) + (if b0017 then 0 else 12000) + (if b0018 then 0 else 12000) + (if b0019 then 0 else 12000) + (if b0020 then 0 else 12000) + (if b0021 then 0 else 12000) + (if b0022 then 0 else 12000) + (if b0023 then 0 else 12000) + (if b0024 then 0 else 12000) + (if b0025 then 0 else 12000) + (if b0026 then 0 else 12000) + (if b0027 then 0 else 12000) + (if b0028 then 0 else 12000) + (if b0029 then 0 else 12000) + (if b0030 then 0 else 12000) < 441
}
Prover Time taken = 6.764503
Added Horn clause: 0 && 0 => 1
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/gpgpu-sim_ispass2009/MUM/_mummergpuKernel.bpl.ice2.bpl
Total learner time was 00:00:00.1200500
Verifying $_Z15mummergpuKernelP10MatchCoordPcPKiS3_ii: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool) : bool
{
  0 + (if b0000 then 0 else 12000) + (if b0001 then 0 else 12000) + (if b0003 then 0 else 12000) + (if b0005 then 0 else 12000) + (if b0006 then 0 else 12000) + (if b0007 then 0 else 12000) + (if b0008 then 0 else 12000) + (if b0009 then 0 else 12000) + (if b0011 then 0 else 12000) + (if b0013 then 0 else 12000) + (if b0014 then 0 else 12000) + (if b0015 then 0 else 12000) + (if b0016 then 0 else 12000) + (if b0017 then 0 else 12000) + (if b0019 then 0 else 12000) + (if b0021 then 0 else 12000) + (if b0022 then 0 else 12000) + (if b0025 then 0 else 12000) + (if b0026 then 0 else 12000) + (if b0027 then 0 else 12000) + (if b0028 then 0 else 12000) + (if b0029 then 0 else 12000) + (if b0030 then 0 else 12000) < 441
}
Added Horn clause: 0 && 2 => 
Prover Time taken = 3.597603
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/gpgpu-sim_ispass2009/MUM/_mummergpuKernel.bpl.ice2.bpl
terminate called after throwing an instance of 'std::runtime_error'
  what():  No consistent conjunction exists
The learner seems to have run into an error!

Unhandled Exception:
Microsoft.Boogie.Houdini.MLHoudiniInternalError: The learner seems to have run into an error!
  at Microsoft.Boogie.Houdini.MLHoudini.learn (System.Collections.Generic.HashSet`1[System.String]& funcsChanged) [0x000e7] in <3034164c407e4adc8ab666e7c26ee7b8>:0 
  at Microsoft.Boogie.Houdini.MLHoudini.LearnInv (System.Collections.Generic.Dictionary`2[TKey,TValue] impl2Priority) [0x00782] in <3034164c407e4adc8ab666e7c26ee7b8>:0 
  at Microsoft.Boogie.Houdini.MLHoudini.ComputeSummaries () [0x0019c] in <3034164c407e4adc8ab666e7c26ee7b8>:0 
  at Microsoft.Boogie.ExecutionEngine.RunMLHoudini (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, Microsoft.Boogie.ErrorReporterDelegate er, System.String filename) [0x00055] in <392c81a181e742f795ac4613c6efd8ce>:0 
  at Microsoft.Boogie.ExecutionEngine.RunHoudini (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, Microsoft.Boogie.ErrorReporterDelegate er, System.String filename) [0x00021] in <392c81a181e742f795ac4613c6efd8ce>:0 
  at Microsoft.Boogie.ExecutionEngine.InferAndVerify (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, System.String filename, Microsoft.Boogie.ErrorReporterDelegate er, System.String requestId) [0x00136] in <392c81a181e742f795ac4613c6efd8ce>:0 
  at Microsoft.Boogie.ExecutionEngine.ProcessFiles (System.Collections.Generic.List`1[T] fileNames, System.Boolean lookForSnapshots) [0x002bd] in <392c81a181e742f795ac4613c6efd8ce>:0 
  at Microsoft.Boogie.OnlyBoogie.Main (System.String[] args) [0x0029f] in <581a14d47152481e860a87838c548766>:0 
[ERROR] FATAL UNHANDLED EXCEPTION: Microsoft.Boogie.Houdini.MLHoudiniInternalError: The learner seems to have run into an error!
  at Microsoft.Boogie.Houdini.MLHoudini.learn (System.Collections.Generic.HashSet`1[System.String]& funcsChanged) [0x000e7] in <3034164c407e4adc8ab666e7c26ee7b8>:0 
  at Microsoft.Boogie.Houdini.MLHoudini.LearnInv (System.Collections.Generic.Dictionary`2[TKey,TValue] impl2Priority) [0x00782] in <3034164c407e4adc8ab666e7c26ee7b8>:0 
  at Microsoft.Boogie.Houdini.MLHoudini.ComputeSummaries () [0x0019c] in <3034164c407e4adc8ab666e7c26ee7b8>:0 
  at Microsoft.Boogie.ExecutionEngine.RunMLHoudini (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, Microsoft.Boogie.ErrorReporterDelegate er, System.String filename) [0x00055] in <392c81a181e742f795ac4613c6efd8ce>:0 
  at Microsoft.Boogie.ExecutionEngine.RunHoudini (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, Microsoft.Boogie.ErrorReporterDelegate er, System.String filename) [0x00021] in <392c81a181e742f795ac4613c6efd8ce>:0 
  at Microsoft.Boogie.ExecutionEngine.InferAndVerify (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, System.String filename, Microsoft.Boogie.ErrorReporterDelegate er, System.String requestId) [0x00136] in <392c81a181e742f795ac4613c6efd8ce>:0 
  at Microsoft.Boogie.ExecutionEngine.ProcessFiles (System.Collections.Generic.List`1[T] fileNames, System.Boolean lookForSnapshots) [0x002bd] in <392c81a181e742f795ac4613c6efd8ce>:0 
  at Microsoft.Boogie.OnlyBoogie.Main (System.String[] args) [0x0029f] in <581a14d47152481e860a87838c548766>:0 
Command exited with non-zero status 1
1.09user 1.25system 0:12.55elapsed 18%CPU (0avgtext+0avgdata 63532maxresident)k
328inputs+104outputs (1major+21908minor)pagefaults 0swaps
FILE:gpgpu-sim_ispass2009/MUM/_mummergpuKernel.bpl.ice2.bpl
#################
Wed May 12 02:05:01 UTC 2021
KEY=awinnow
OUTPUT=/root/Docker/winnow_gpu_timeout.txt
[TRACE] Using prover: /root/Docker/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/root/Docker/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a winnow
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/errorLimit:1
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/gpgpu-sim_ispass2009/MUM/_mummergpuRCKernel.bpl.ice2.bpl
--------------------
Parsing /root/Docker/benchmarks/BenchmarksCompiled/awinnow/gpgpu-sim_ispass2009/MUM/_mummergpuRCKernel.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /root/Docker/z3/bin/z3
#parameters: 16
Generating VC of $_Z17mummergpuRCKernelP10MatchCoordPcPKiS3_ii
Verifying $_Z17mummergpuRCKernelP10MatchCoordPcPKiS3_ii: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.196309
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/gpgpu-sim_ispass2009/MUM/_mummergpuRCKernel.bpl.ice2.bpl
Total learner time was 00:00:00.1201140
Verifying $_Z17mummergpuRCKernelP10MatchCoordPcPKiS3_ii: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool) : bool
{
  0 + (if b0000 then 0 else 6000) + (if b0001 then 0 else 6000) + (if b0002 then 0 else 6000) + (if b0003 then 0 else 6000) + (if b0004 then 0 else 6000) + (if b0005 then 0 else 6000) + (if b0006 then 0 else 6000) + (if b0007 then 0 else 6000) + (if b0008 then 0 else 6000) + (if b0009 then 0 else 6000) + (if b0010 then 0 else 6000) + (if b0011 then 0 else 6000) + (if b0012 then 0 else 6000) + (if b0013 then 0 else 6000) + (if b0014 then 0 else 6000) + (if b0015 then 0 else 6000) < 441
}
Added: my_inv:1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 11.183275
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/gpgpu-sim_ispass2009/MUM/_mummergpuRCKernel.bpl.ice2.bpl
Total learner time was 00:00:00.1192560
Verifying $_Z17mummergpuRCKernelP10MatchCoordPcPKiS3_ii: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool) : bool
{
  0 + (if b0000 then 0 else 6000) + (if b0001 then 0 else 6000) + (if b0003 then 0 else 6000) + (if b0004 then 0 else 6000) + (if b0005 then 0 else 6000) + (if b0006 then 0 else 6000) + (if b0007 then 0 else 6000) + (if b0008 then 0 else 6000) + (if b0009 then 0 else 6000) + (if b0010 then 0 else 6000) + (if b0011 then 0 else 6000) + (if b0012 then 0 else 6000) + (if b0013 then 0 else 6000) + (if b0014 then 0 else 6000) + (if b0015 then 0 else 6000) < 441
}
Prover Time taken = 3.057827
Added Horn clause: 0 && 0 => 2
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/gpgpu-sim_ispass2009/MUM/_mummergpuRCKernel.bpl.ice2.bpl
Total learner time was 00:00:00.1191790
Verifying $_Z17mummergpuRCKernelP10MatchCoordPcPKiS3_ii: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool) : bool
{
  0 + (if b0000 then 0 else 6000) + (if b0003 then 0 else 6000) + (if b0005 then 0 else 6000) + (if b0007 then 0 else 6000) + (if b0010 then 0 else 6000) + (if b0011 then 0 else 6000) + (if b0012 then 0 else 6000) + (if b0013 then 0 else 6000) + (if b0014 then 0 else 6000) + (if b0015 then 0 else 6000) < 441
}
Added Horn clause: 0 && 2 => 
Prover Time taken = 9.009225
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/gpgpu-sim_ispass2009/MUM/_mummergpuRCKernel.bpl.ice2.bpl
terminate called after throwing an instance of 'std::runtime_error'
  what():  No consistent conjunction exists
The learner seems to have run into an error!

Unhandled Exception:
Microsoft.Boogie.Houdini.MLHoudiniInternalError: The learner seems to have run into an error!
  at Microsoft.Boogie.Houdini.MLHoudini.learn (System.Collections.Generic.HashSet`1[System.String]& funcsChanged) [0x000e7] in <3034164c407e4adc8ab666e7c26ee7b8>:0 
  at Microsoft.Boogie.Houdini.MLHoudini.LearnInv (System.Collections.Generic.Dictionary`2[TKey,TValue] impl2Priority) [0x00782] in <3034164c407e4adc8ab666e7c26ee7b8>:0 
  at Microsoft.Boogie.Houdini.MLHoudini.ComputeSummaries () [0x0019c] in <3034164c407e4adc8ab666e7c26ee7b8>:0 
  at Microsoft.Boogie.ExecutionEngine.RunMLHoudini (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, Microsoft.Boogie.ErrorReporterDelegate er, System.String filename) [0x00055] in <392c81a181e742f795ac4613c6efd8ce>:0 
  at Microsoft.Boogie.ExecutionEngine.RunHoudini (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, Microsoft.Boogie.ErrorReporterDelegate er, System.String filename) [0x00021] in <392c81a181e742f795ac4613c6efd8ce>:0 
  at Microsoft.Boogie.ExecutionEngine.InferAndVerify (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, System.String filename, Microsoft.Boogie.ErrorReporterDelegate er, System.String requestId) [0x00136] in <392c81a181e742f795ac4613c6efd8ce>:0 
  at Microsoft.Boogie.ExecutionEngine.ProcessFiles (System.Collections.Generic.List`1[T] fileNames, System.Boolean lookForSnapshots) [0x002bd] in <392c81a181e742f795ac4613c6efd8ce>:0 
  at Microsoft.Boogie.OnlyBoogie.Main (System.String[] args) [0x0029f] in <581a14d47152481e860a87838c548766>:0 
[ERROR] FATAL UNHANDLED EXCEPTION: Microsoft.Boogie.Houdini.MLHoudiniInternalError: The learner seems to have run into an error!
  at Microsoft.Boogie.Houdini.MLHoudini.learn (System.Collections.Generic.HashSet`1[System.String]& funcsChanged) [0x000e7] in <3034164c407e4adc8ab666e7c26ee7b8>:0 
  at Microsoft.Boogie.Houdini.MLHoudini.LearnInv (System.Collections.Generic.Dictionary`2[TKey,TValue] impl2Priority) [0x00782] in <3034164c407e4adc8ab666e7c26ee7b8>:0 
  at Microsoft.Boogie.Houdini.MLHoudini.ComputeSummaries () [0x0019c] in <3034164c407e4adc8ab666e7c26ee7b8>:0 
  at Microsoft.Boogie.ExecutionEngine.RunMLHoudini (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, Microsoft.Boogie.ErrorReporterDelegate er, System.String filename) [0x00055] in <392c81a181e742f795ac4613c6efd8ce>:0 
  at Microsoft.Boogie.ExecutionEngine.RunHoudini (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, Microsoft.Boogie.ErrorReporterDelegate er, System.String filename) [0x00021] in <392c81a181e742f795ac4613c6efd8ce>:0 
  at Microsoft.Boogie.ExecutionEngine.InferAndVerify (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, System.String filename, Microsoft.Boogie.ErrorReporterDelegate er, System.String requestId) [0x00136] in <392c81a181e742f795ac4613c6efd8ce>:0 
  at Microsoft.Boogie.ExecutionEngine.ProcessFiles (System.Collections.Generic.List`1[T] fileNames, System.Boolean lookForSnapshots) [0x002bd] in <392c81a181e742f795ac4613c6efd8ce>:0 
  at Microsoft.Boogie.OnlyBoogie.Main (System.String[] args) [0x0029f] in <581a14d47152481e860a87838c548766>:0 
Command exited with non-zero status 1
1.23user 1.32system 0:25.53elapsed 10%CPU (0avgtext+0avgdata 65332maxresident)k
328inputs+120outputs (1major+24583minor)pagefaults 0swaps
FILE:gpgpu-sim_ispass2009/MUM/_mummergpuRCKernel.bpl.ice2.bpl
#################
Wed May 12 02:05:27 UTC 2021
KEY=awinnow
OUTPUT=/root/Docker/winnow_gpu_timeout.txt
[TRACE] Using prover: /root/Docker/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/root/Docker/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a winnow
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/errorLimit:1
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/gpgpu-sim_ispass2009/NQU/_nqueen.bpl.ice2.bpl
--------------------
Parsing /root/Docker/benchmarks/BenchmarksCompiled/awinnow/gpgpu-sim_ispass2009/NQU/_nqueen.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /root/Docker/z3/bin/z3
#parameters: 23
Generating VC of $_Z24solve_nqueen_cuda_kerneliiPjS_S_S_i
Verifying $_Z24solve_nqueen_cuda_kerneliiPjS_S_S_i: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.215526
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/gpgpu-sim_ispass2009/NQU/_nqueen.bpl.ice2.bpl
Total learner time was 00:00:00.1192420
Verifying $_Z24solve_nqueen_cuda_kerneliiPjS_S_S_i: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool) : bool
{
  0 + (if b0000 then 0 else 9000) + (if b0001 then 0 else 9000) + (if b0002 then 0 else 9000) + (if b0003 then 0 else 9000) + (if b0004 then 0 else 9000) + (if b0005 then 0 else 9000) + (if b0006 then 0 else 9000) + (if b0007 then 0 else 9000) + (if b0008 then 0 else 9000) + (if b0009 then 0 else 9000) + (if b0010 then 0 else 9000) + (if b0011 then 0 else 9000) + (if b0012 then 0 else 9000) + (if b0013 then 0 else 9000) + (if b0014 then 0 else 9000) + (if b0015 then 0 else 9000) + (if b0016 then 0 else 9000) + (if b0017 then 0 else 9000) + (if b0018 then 0 else 9000) + (if b0019 then 0 else 9000) + (if b0020 then 0 else 9000) + (if b0021 then 0 else 9000) + (if b0022 then 0 else 9000) < 441
}
Prover Time taken = 37.616231
Added Horn clause: 0 && 0 => 1
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/gpgpu-sim_ispass2009/NQU/_nqueen.bpl.ice2.bpl
Total learner time was 00:00:00.1209210
Verifying $_Z24solve_nqueen_cuda_kerneliiPjS_S_S_i: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool) : bool
{
  0 + (if b0001 then 0 else 9000) + (if b0004 then 0 else 9000) + (if b0005 then 0 else 9000) + (if b0006 then 0 else 9000) + (if b0007 then 0 else 9000) + (if b0008 then 0 else 9000) + (if b0009 then 0 else 9000) + (if b0010 then 0 else 9000) + (if b0011 then 0 else 9000) + (if b0012 then 0 else 9000) + (if b0013 then 0 else 9000) + (if b0014 then 0 else 9000) + (if b0015 then 0 else 9000) + (if b0016 then 0 else 9000) + (if b0017 then 0 else 9000) + (if b0018 then 0 else 9000) + (if b0019 then 0 else 9000) + (if b0020 then 0 else 9000) + (if b0021 then 0 else 9000) + (if b0022 then 0 else 9000) < 441
}
Prover Time taken = 68.653723
Added Horn clause: 0 && 0 => 2
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/gpgpu-sim_ispass2009/NQU/_nqueen.bpl.ice2.bpl
Total learner time was 00:00:00.1185010
Verifying $_Z24solve_nqueen_cuda_kerneliiPjS_S_S_i: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool) : bool
{
  0 + (if b0004 then 0 else 9000) + (if b0005 then 0 else 9000) + (if b0006 then 0 else 9000) + (if b0007 then 0 else 9000) + (if b0008 then 0 else 9000) + (if b0009 then 0 else 9000) + (if b0010 then 0 else 9000) + (if b0011 then 0 else 9000) + (if b0012 then 0 else 9000) + (if b0013 then 0 else 9000) + (if b0014 then 0 else 9000) + (if b0015 then 0 else 9000) + (if b0016 then 0 else 9000) + (if b0017 then 0 else 9000) + (if b0018 then 0 else 9000) + (if b0019 then 0 else 9000) + (if b0020 then 0 else 9000) + (if b0021 then 0 else 9000) + (if b0022 then 0 else 9000) < 441
}
Added Horn clause: 0 && 2 => 
Prover Time taken = 54.065113
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/gpgpu-sim_ispass2009/NQU/_nqueen.bpl.ice2.bpl
terminate called after throwing an instance of 'std::runtime_error'
  what():  No consistent conjunction exists
The learner seems to have run into an error!

Unhandled Exception:
Microsoft.Boogie.Houdini.MLHoudiniInternalError: The learner seems to have run into an error!
  at Microsoft.Boogie.Houdini.MLHoudini.learn (System.Collections.Generic.HashSet`1[System.String]& funcsChanged) [0x000e7] in <3034164c407e4adc8ab666e7c26ee7b8>:0 
  at Microsoft.Boogie.Houdini.MLHoudini.LearnInv (System.Collections.Generic.Dictionary`2[TKey,TValue] impl2Priority) [0x00782] in <3034164c407e4adc8ab666e7c26ee7b8>:0 
  at Microsoft.Boogie.Houdini.MLHoudini.ComputeSummaries () [0x0019c] in <3034164c407e4adc8ab666e7c26ee7b8>:0 
  at Microsoft.Boogie.ExecutionEngine.RunMLHoudini (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, Microsoft.Boogie.ErrorReporterDelegate er, System.String filename) [0x00055] in <392c81a181e742f795ac4613c6efd8ce>:0 
  at Microsoft.Boogie.ExecutionEngine.RunHoudini (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, Microsoft.Boogie.ErrorReporterDelegate er, System.String filename) [0x00021] in <392c81a181e742f795ac4613c6efd8ce>:0 
  at Microsoft.Boogie.ExecutionEngine.InferAndVerify (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, System.String filename, Microsoft.Boogie.ErrorReporterDelegate er, System.String requestId) [0x00136] in <392c81a181e742f795ac4613c6efd8ce>:0 
  at Microsoft.Boogie.ExecutionEngine.ProcessFiles (System.Collections.Generic.List`1[T] fileNames, System.Boolean lookForSnapshots) [0x002bd] in <392c81a181e742f795ac4613c6efd8ce>:0 
  at Microsoft.Boogie.OnlyBoogie.Main (System.String[] args) [0x0029f] in <581a14d47152481e860a87838c548766>:0 
[ERROR] FATAL UNHANDLED EXCEPTION: Microsoft.Boogie.Houdini.MLHoudiniInternalError: The learner seems to have run into an error!
  at Microsoft.Boogie.Houdini.MLHoudini.learn (System.Collections.Generic.HashSet`1[System.String]& funcsChanged) [0x000e7] in <3034164c407e4adc8ab666e7c26ee7b8>:0 
  at Microsoft.Boogie.Houdini.MLHoudini.LearnInv (System.Collections.Generic.Dictionary`2[TKey,TValue] impl2Priority) [0x00782] in <3034164c407e4adc8ab666e7c26ee7b8>:0 
  at Microsoft.Boogie.Houdini.MLHoudini.ComputeSummaries () [0x0019c] in <3034164c407e4adc8ab666e7c26ee7b8>:0 
  at Microsoft.Boogie.ExecutionEngine.RunMLHoudini (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, Microsoft.Boogie.ErrorReporterDelegate er, System.String filename) [0x00055] in <392c81a181e742f795ac4613c6efd8ce>:0 
  at Microsoft.Boogie.ExecutionEngine.RunHoudini (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, Microsoft.Boogie.ErrorReporterDelegate er, System.String filename) [0x00021] in <392c81a181e742f795ac4613c6efd8ce>:0 
  at Microsoft.Boogie.ExecutionEngine.InferAndVerify (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, System.String filename, Microsoft.Boogie.ErrorReporterDelegate er, System.String requestId) [0x00136] in <392c81a181e742f795ac4613c6efd8ce>:0 
  at Microsoft.Boogie.ExecutionEngine.ProcessFiles (System.Collections.Generic.List`1[T] fileNames, System.Boolean lookForSnapshots) [0x002bd] in <392c81a181e742f795ac4613c6efd8ce>:0 
  at Microsoft.Boogie.OnlyBoogie.Main (System.String[] args) [0x0029f] in <581a14d47152481e860a87838c548766>:0 
Command exited with non-zero status 1
1.31user 1.56system 2:42.61elapsed 1%CPU (0avgtext+0avgdata 63564maxresident)k
360inputs+152outputs (1major+24561minor)pagefaults 0swaps
FILE:gpgpu-sim_ispass2009/NQU/_nqueen.bpl.ice2.bpl
#################
Wed May 12 02:08:09 UTC 2021
KEY=awinnow
OUTPUT=/root/Docker/winnow_gpu_timeout.txt
[TRACE] Using prover: /root/Docker/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/root/Docker/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a winnow
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/errorLimit:1
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/gpgpu-sim_ispass2009/STO/md5.bpl.ice2.bpl
--------------------
Parsing /root/Docker/benchmarks/BenchmarksCompiled/awinnow/gpgpu-sim_ispass2009/STO/md5.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /root/Docker/z3/bin/z3
#parameters: 71
Generating VC of $_Z3md5PhiiiS_
Verifying $_Z3md5PhiiiS_: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.218475
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/gpgpu-sim_ispass2009/STO/md5.bpl.ice2.bpl
Total learner time was 00:00:00.1258450
Verifying $_Z3md5PhiiiS_: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool) : bool
{
  0 + (if b0000 then 0 else 28000) + (if b0001 then 0 else 28000) + (if b0002 then 0 else 28000) + (if b0003 then 0 else 28000) + (if b0004 then 0 else 28000) + (if b0005 then 0 else 28000) + (if b0006 then 0 else 28000) + (if b0007 then 0 else 28000) + (if b0008 then 0 else 28000) + (if b0009 then 0 else 28000) + (if b0010 then 0 else 28000) + (if b0011 then 0 else 28000) + (if b0012 then 0 else 28000) + (if b0013 then 0 else 28000) + (if b0014 then 0 else 28000) + (if b0015 then 0 else 28000) + (if b0016 then 0 else 28000) + (if b0017 then 0 else 28000) + (if b0018 then 0 else 28000) + (if b0019 then 0 else 28000) + (if b0020 then 0 else 28000) + (if b0021 then 0 else 28000) + (if b0022 then 0 else 28000) + (if b0023 then 0 else 28000) + (if b0024 then 0 else 28000) + (if b0025 then 0 else 28000) + (if b0026 then 0 else 28000) + (if b0027 then 0 else 28000) + (if b0028 then 0 else 28000) + (if b0029 then 0 else 28000) + (if b0030 then 0 else 28000) + (if b0031 then 0 else 28000) + (if b0032 then 0 else 28000) + (if b0033 then 0 else 28000) + (if b0034 then 0 else 28000) + (if b0035 then 0 else 28000) + (if b0036 then 0 else 28000) + (if b0037 then 0 else 28000) + (if b0038 then 0 else 28000) + (if b0039 then 0 else 28000) + (if b0040 then 0 else 28000) + (if b0041 then 0 else 28000) + (if b0042 then 0 else 28000) + (if b0043 then 0 else 28000) + (if b0044 then 0 else 28000) + (if b0045 then 0 else 28000) + (if b0046 then 0 else 28000) + (if b0047 then 0 else 28000) + (if b0048 then 0 else 28000) + (if b0049 then 0 else 28000) + (if b0050 then 0 else 28000) + (if b0051 then 0 else 28000) + (if b0052 then 0 else 28000) + (if b0053 then 0 else 28000) + (if b0054 then 0 else 28000) + (if b0055 then 0 else 28000) + (if b0056 then 0 else 28000) + (if b0057 then 0 else 28000) + (if b0058 then 0 else 28000) + (if b0059 then 0 else 28000) + (if b0060 then 0 else 28000) + (if b0061 then 0 else 28000) + (if b0062 then 0 else 28000) + (if b0063 then 0 else 28000) + (if b0064 then 0 else 28000) + (if b0065 then 0 else 28000) + (if b0066 then 0 else 28000) + (if b0067 then 0 else 28000) + (if b0068 then 0 else 28000) + (if b0069 then 0 else 28000) + (if b0070 then 0 else 28000) < 441
}
Prover Time taken = 889.075205

Unhandled Exception:
System.IO.IOException: Write fault on path /root/Docker/boogie_horn_sorcar_false/Binaries/[Unknown]
  at System.IO.FileStream.WriteInternal (System.Byte[] src, System.Int32 offset, System.Int32 count) [0x00077] in <6649516e5b3542319fb262b421af0adb>:0 
  at System.IO.FileStream.Write (System.Byte[] array, System.Int32 offset, System.Int32 count) [0x00090] in <6649516e5b3542319fb262b421af0adb>:0 
  at System.IO.StreamWriter.Flush (System.Boolean flushStream, System.Boolean flushEncoder) [0x0007e] in <6649516e5b3542319fb262b421af0adb>:0 
  at System.IO.StreamWriter.Write (System.Char[] buffer, System.Int32 index, System.Int32 count) [0x000d3] in <6649516e5b3542319fb262b421af0adb>:0 
  at System.IO.TextWriter.WriteLine (System.String value) [0x00070] in <6649516e5b3542319fb262b421af0adb>:0 
  at Microsoft.Boogie.SMTLib.SMTLibProcess.Send (System.String cmd) [0x00073] in <2f9bfa9fd40147ea93e878084e59d91d>:0 
  at Microsoft.Boogie.SMTLib.SMTLibProcessTheoremProver.Send (System.String s, System.Boolean isCommon) [0x00033] in <2f9bfa9fd40147ea93e878084e59d91d>:0 
  at Microsoft.Boogie.SMTLib.SMTLibProcessTheoremProver.SendThisVC (System.String s) [0x00001] in <2f9bfa9fd40147ea93e878084e59d91d>:0 
  at Microsoft.Boogie.SMTLib.SMTLibProcessTheoremProver.Pop () [0x00001] in <2f9bfa9fd40147ea93e878084e59d91d>:0 
  at Microsoft.Boogie.Houdini.MLHoudini.LearnInv (System.Collections.Generic.Dictionary`2[TKey,TValue] impl2Priority) [0x00870] in <3034164c407e4adc8ab666e7c26ee7b8>:0 
  at Microsoft.Boogie.Houdini.MLHoudini.ComputeSummaries () [0x0019c] in <3034164c407e4adc8ab666e7c26ee7b8>:0 
  at Microsoft.Boogie.ExecutionEngine.RunMLHoudini (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, Microsoft.Boogie.ErrorReporterDelegate er, System.String filename) [0x00055] in <392c81a181e742f795ac4613c6efd8ce>:0 
  at Microsoft.Boogie.ExecutionEngine.RunHoudini (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, Microsoft.Boogie.ErrorReporterDelegate er, System.String filename) [0x00021] in <392c81a181e742f795ac4613c6efd8ce>:0 
  at Microsoft.Boogie.ExecutionEngine.InferAndVerify (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, System.String filename, Microsoft.Boogie.ErrorReporterDelegate er, System.String requestId) [0x00136] in <392c81a181e742f795ac4613c6efd8ce>:0 
  at Microsoft.Boogie.ExecutionEngine.ProcessFiles (System.Collections.Generic.List`1[T] fileNames, System.Boolean lookForSnapshots) [0x002bd] in <392c81a181e742f795ac4613c6efd8ce>:0 
  at Microsoft.Boogie.OnlyBoogie.Main (System.String[] args) [0x0029f] in <581a14d47152481e860a87838c548766>:0 
[ERROR] FATAL UNHANDLED EXCEPTION: System.IO.IOException: Write fault on path /root/Docker/boogie_horn_sorcar_false/Binaries/[Unknown]
  at System.IO.FileStream.WriteInternal (System.Byte[] src, System.Int32 offset, System.Int32 count) [0x00077] in <6649516e5b3542319fb262b421af0adb>:0 
  at System.IO.FileStream.Write (System.Byte[] array, System.Int32 offset, System.Int32 count) [0x00090] in <6649516e5b3542319fb262b421af0adb>:0 
  at System.IO.StreamWriter.Flush (System.Boolean flushStream, System.Boolean flushEncoder) [0x0007e] in <6649516e5b3542319fb262b421af0adb>:0 
  at System.IO.StreamWriter.Write (System.Char[] buffer, System.Int32 index, System.Int32 count) [0x000d3] in <6649516e5b3542319fb262b421af0adb>:0 
  at System.IO.TextWriter.WriteLine (System.String value) [0x00070] in <6649516e5b3542319fb262b421af0adb>:0 
  at Microsoft.Boogie.SMTLib.SMTLibProcess.Send (System.String cmd) [0x00073] in <2f9bfa9fd40147ea93e878084e59d91d>:0 
  at Microsoft.Boogie.SMTLib.SMTLibProcessTheoremProver.Send (System.String s, System.Boolean isCommon) [0x00033] in <2f9bfa9fd40147ea93e878084e59d91d>:0 
  at Microsoft.Boogie.SMTLib.SMTLibProcessTheoremProver.SendThisVC (System.String s) [0x00001] in <2f9bfa9fd40147ea93e878084e59d91d>:0 
  at Microsoft.Boogie.SMTLib.SMTLibProcessTheoremProver.Pop () [0x00001] in <2f9bfa9fd40147ea93e878084e59d91d>:0 
  at Microsoft.Boogie.Houdini.MLHoudini.LearnInv (System.Collections.Generic.Dictionary`2[TKey,TValue] impl2Priority) [0x00870] in <3034164c407e4adc8ab666e7c26ee7b8>:0 
  at Microsoft.Boogie.Houdini.MLHoudini.ComputeSummaries () [0x0019c] in <3034164c407e4adc8ab666e7c26ee7b8>:0 
  at Microsoft.Boogie.ExecutionEngine.RunMLHoudini (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, Microsoft.Boogie.ErrorReporterDelegate er, System.String filename) [0x00055] in <392c81a181e742f795ac4613c6efd8ce>:0 
  at Microsoft.Boogie.ExecutionEngine.RunHoudini (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, Microsoft.Boogie.ErrorReporterDelegate er, System.String filename) [0x00021] in <392c81a181e742f795ac4613c6efd8ce>:0 
  at Microsoft.Boogie.ExecutionEngine.InferAndVerify (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, System.String filename, Microsoft.Boogie.ErrorReporterDelegate er, System.String requestId) [0x00136] in <392c81a181e742f795ac4613c6efd8ce>:0 
  at Microsoft.Boogie.ExecutionEngine.ProcessFiles (System.Collections.Generic.List`1[T] fileNames, System.Boolean lookForSnapshots) [0x002bd] in <392c81a181e742f795ac4613c6efd8ce>:0 
  at Microsoft.Boogie.OnlyBoogie.Main (System.String[] args) [0x0029f] in <581a14d47152481e860a87838c548766>:0 
Command exited with non-zero status 1
865.21user 18.07system 14:54.60elapsed 98%CPU (0avgtext+0avgdata 1667860maxresident)k
48803600inputs+56outputs (217110major+738787minor)pagefaults 0swaps
FILE:gpgpu-sim_ispass2009/STO/md5.bpl.ice2.bpl
#################
Wed May 12 02:23:04 UTC 2021
KEY=awinnow
OUTPUT=/root/Docker/winnow_gpu_timeout.txt
[TRACE] Using prover: /root/Docker/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/root/Docker/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a winnow
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/errorLimit:1
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/gpgpu-sim_ispass2009/STO/md5_overlap.bpl.ice2.bpl
--------------------
Parsing /root/Docker/benchmarks/BenchmarksCompiled/awinnow/gpgpu-sim_ispass2009/STO/md5_overlap.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /root/Docker/z3/bin/z3
#parameters: 43
Generating VC of $_Z11md5_overlapPhiiiiS_
Verifying $_Z11md5_overlapPhiiiiS_: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,0,1,0,1,0,1,1,1,1,1,1: positive
Prover Time taken = 0.301521
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/gpgpu-sim_ispass2009/STO/md5_overlap.bpl.ice2.bpl
Total learner time was 00:00:00.1396850
Verifying $_Z11md5_overlapPhiiiiS_: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool) : bool
{
  0 + (if b0000 then 0 else 17000) + (if b0001 then 0 else 17000) + (if b0002 then 0 else 17000) + (if b0003 then 0 else 17000) + (if b0004 then 0 else 17000) + (if b0005 then 0 else 17000) + (if b0006 then 0 else 17000) + (if b0007 then 0 else 17000) + (if b0008 then 0 else 17000) + (if b0009 then 0 else 17000) + (if b0010 then 0 else 17000) + (if b0011 then 0 else 17000) + (if b0012 then 0 else 17000) + (if b0013 then 0 else 17000) + (if b0014 then 0 else 17000) + (if b0015 then 0 else 17000) + (if b0016 then 0 else 17000) + (if b0017 then 0 else 17000) + (if b0018 then 0 else 17000) + (if b0019 then 0 else 17000) + (if b0020 then 0 else 17000) + (if b0021 then 0 else 17000) + (if b0022 then 0 else 17000) + (if b0023 then 0 else 17000) + (if b0024 then 0 else 17000) + (if b0025 then 0 else 17000) + (if b0026 then 0 else 17000) + (if b0027 then 0 else 17000) + (if b0028 then 0 else 17000) + (if b0029 then 0 else 17000) + (if b0031 then 0 else 17000) + (if b0033 then 0 else 17000) + (if b0035 then 0 else 17000) + (if b0037 then 0 else 17000) + (if b0038 then 0 else 17000) + (if b0039 then 0 else 17000) + (if b0040 then 0 else 17000) + (if b0041 then 0 else 17000) + (if b0042 then 0 else 17000) < 441
}
Prover Time taken = 618.144286

Unhandled Exception:
System.IO.IOException: Write fault on path /root/Docker/boogie_horn_sorcar_false/Binaries/[Unknown]
  at System.IO.FileStream.WriteInternal (System.Byte[] src, System.Int32 offset, System.Int32 count) [0x00077] in <6649516e5b3542319fb262b421af0adb>:0 
  at System.IO.FileStream.Write (System.Byte[] array, System.Int32 offset, System.Int32 count) [0x00090] in <6649516e5b3542319fb262b421af0adb>:0 
  at System.IO.StreamWriter.Flush (System.Boolean flushStream, System.Boolean flushEncoder) [0x0007e] in <6649516e5b3542319fb262b421af0adb>:0 
  at System.IO.StreamWriter.Write (System.Char[] buffer, System.Int32 index, System.Int32 count) [0x000d3] in <6649516e5b3542319fb262b421af0adb>:0 
  at System.IO.TextWriter.WriteLine (System.String value) [0x00070] in <6649516e5b3542319fb262b421af0adb>:0 
  at Microsoft.Boogie.SMTLib.SMTLibProcess.Send (System.String cmd) [0x00073] in <2f9bfa9fd40147ea93e878084e59d91d>:0 
  at Microsoft.Boogie.SMTLib.SMTLibProcessTheoremProver.Send (System.String s, System.Boolean isCommon) [0x00033] in <2f9bfa9fd40147ea93e878084e59d91d>:0 
  at Microsoft.Boogie.SMTLib.SMTLibProcessTheoremProver.SendThisVC (System.String s) [0x00001] in <2f9bfa9fd40147ea93e878084e59d91d>:0 
  at Microsoft.Boogie.SMTLib.SMTLibProcessTheoremProver.Pop () [0x00001] in <2f9bfa9fd40147ea93e878084e59d91d>:0 
  at Microsoft.Boogie.Houdini.MLHoudini.LearnInv (System.Collections.Generic.Dictionary`2[TKey,TValue] impl2Priority) [0x00870] in <3034164c407e4adc8ab666e7c26ee7b8>:0 
  at Microsoft.Boogie.Houdini.MLHoudini.ComputeSummaries () [0x0019c] in <3034164c407e4adc8ab666e7c26ee7b8>:0 
  at Microsoft.Boogie.ExecutionEngine.RunMLHoudini (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, Microsoft.Boogie.ErrorReporterDelegate er, System.String filename) [0x00055] in <392c81a181e742f795ac4613c6efd8ce>:0 
  at Microsoft.Boogie.ExecutionEngine.RunHoudini (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, Microsoft.Boogie.ErrorReporterDelegate er, System.String filename) [0x00021] in <392c81a181e742f795ac4613c6efd8ce>:0 
  at Microsoft.Boogie.ExecutionEngine.InferAndVerify (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, System.String filename, Microsoft.Boogie.ErrorReporterDelegate er, System.String requestId) [0x00136] in <392c81a181e742f795ac4613c6efd8ce>:0 
  at Microsoft.Boogie.ExecutionEngine.ProcessFiles (System.Collections.Generic.List`1[T] fileNames, System.Boolean lookForSnapshots) [0x002bd] in <392c81a181e742f795ac4613c6efd8ce>:0 
  at Microsoft.Boogie.OnlyBoogie.Main (System.String[] args) [0x0029f] in <581a14d47152481e860a87838c548766>:0 
[ERROR] FATAL UNHANDLED EXCEPTION: System.IO.IOException: Write fault on path /root/Docker/boogie_horn_sorcar_false/Binaries/[Unknown]
  at System.IO.FileStream.WriteInternal (System.Byte[] src, System.Int32 offset, System.Int32 count) [0x00077] in <6649516e5b3542319fb262b421af0adb>:0 
  at System.IO.FileStream.Write (System.Byte[] array, System.Int32 offset, System.Int32 count) [0x00090] in <6649516e5b3542319fb262b421af0adb>:0 
  at System.IO.StreamWriter.Flush (System.Boolean flushStream, System.Boolean flushEncoder) [0x0007e] in <6649516e5b3542319fb262b421af0adb>:0 
  at System.IO.StreamWriter.Write (System.Char[] buffer, System.Int32 index, System.Int32 count) [0x000d3] in <6649516e5b3542319fb262b421af0adb>:0 
  at System.IO.TextWriter.WriteLine (System.String value) [0x00070] in <6649516e5b3542319fb262b421af0adb>:0 
  at Microsoft.Boogie.SMTLib.SMTLibProcess.Send (System.String cmd) [0x00073] in <2f9bfa9fd40147ea93e878084e59d91d>:0 
  at Microsoft.Boogie.SMTLib.SMTLibProcessTheoremProver.Send (System.String s, System.Boolean isCommon) [0x00033] in <2f9bfa9fd40147ea93e878084e59d91d>:0 
  at Microsoft.Boogie.SMTLib.SMTLibProcessTheoremProver.SendThisVC (System.String s) [0x00001] in <2f9bfa9fd40147ea93e878084e59d91d>:0 
  at Microsoft.Boogie.SMTLib.SMTLibProcessTheoremProver.Pop () [0x00001] in <2f9bfa9fd40147ea93e878084e59d91d>:0 
  at Microsoft.Boogie.Houdini.MLHoudini.LearnInv (System.Collections.Generic.Dictionary`2[TKey,TValue] impl2Priority) [0x00870] in <3034164c407e4adc8ab666e7c26ee7b8>:0 
  at Microsoft.Boogie.Houdini.MLHoudini.ComputeSummaries () [0x0019c] in <3034164c407e4adc8ab666e7c26ee7b8>:0 
  at Microsoft.Boogie.ExecutionEngine.RunMLHoudini (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, Microsoft.Boogie.ErrorReporterDelegate er, System.String filename) [0x00055] in <392c81a181e742f795ac4613c6efd8ce>:0 
  at Microsoft.Boogie.ExecutionEngine.RunHoudini (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, Microsoft.Boogie.ErrorReporterDelegate er, System.String filename) [0x00021] in <392c81a181e742f795ac4613c6efd8ce>:0 
  at Microsoft.Boogie.ExecutionEngine.InferAndVerify (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, System.String filename, Microsoft.Boogie.ErrorReporterDelegate er, System.String requestId) [0x00136] in <392c81a181e742f795ac4613c6efd8ce>:0 
  at Microsoft.Boogie.ExecutionEngine.ProcessFiles (System.Collections.Generic.List`1[T] fileNames, System.Boolean lookForSnapshots) [0x002bd] in <392c81a181e742f795ac4613c6efd8ce>:0 
  at Microsoft.Boogie.OnlyBoogie.Main (System.String[] args) [0x0029f] in <581a14d47152481e860a87838c548766>:0 
Command exited with non-zero status 1
514.18user 67.59system 10:23.74elapsed 93%CPU (0avgtext+0avgdata 1665776maxresident)k
218771320inputs+48outputs (937342major+837523minor)pagefaults 0swaps
FILE:gpgpu-sim_ispass2009/STO/md5_overlap.bpl.ice2.bpl
#################
Wed May 12 02:33:28 UTC 2021
KEY=awinnow
OUTPUT=/root/Docker/winnow_gpu_timeout.txt
[TRACE] Using prover: /root/Docker/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/root/Docker/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a winnow
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/errorLimit:1
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/gpgpu-sim_ispass2009/STO/sha1.bpl.ice2.bpl
--------------------
Parsing /root/Docker/benchmarks/BenchmarksCompiled/awinnow/gpgpu-sim_ispass2009/STO/sha1.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /root/Docker/z3/bin/z3
#parameters: 63
Generating VC of $_Z4sha1PhiiiS_
Command terminated by signal 9
18.96user 5.75system 0:20.39elapsed 121%CPU (0avgtext+0avgdata 1690752maxresident)k
901064inputs+16outputs (12306major+674107minor)pagefaults 0swaps
FILE:gpgpu-sim_ispass2009/STO/sha1.bpl.ice2.bpl
#################
Wed May 12 02:33:48 UTC 2021
KEY=awinnow
OUTPUT=/root/Docker/winnow_gpu_timeout.txt
[TRACE] Using prover: /root/Docker/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/root/Docker/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a winnow
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/errorLimit:1
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/gpgpu-sim_ispass2009/STO/sha1_overlap.bpl.ice2.bpl
--------------------
Parsing /root/Docker/benchmarks/BenchmarksCompiled/awinnow/gpgpu-sim_ispass2009/STO/sha1_overlap.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /root/Docker/z3/bin/z3
#parameters: 35
Generating VC of $_Z12sha1_overlapPhiiiiS_
Command terminated by signal 9
19.43user 5.24system 0:21.33elapsed 115%CPU (0avgtext+0avgdata 1788844maxresident)k
836128inputs+16outputs (10745major+704992minor)pagefaults 0swaps
FILE:gpgpu-sim_ispass2009/STO/sha1_overlap.bpl.ice2.bpl
#################
Wed May 12 02:34:10 UTC 2021
KEY=awinnow
OUTPUT=/root/Docker/winnow_gpu_timeout.txt
[TRACE] Using prover: /root/Docker/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/root/Docker/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a winnow
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/errorLimit:1
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/parboil/histo/histo_final/kernel.bpl.ice2.bpl
--------------------
Parsing /root/Docker/benchmarks/BenchmarksCompiled/awinnow/parboil/histo/histo_final/kernel.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /root/Docker/z3/bin/z3
#parameters: 27
Generating VC of $histo_final_kernel
Verifying $histo_final_kernel: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.182306
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/parboil/histo/histo_final/kernel.bpl.ice2.bpl
Total learner time was 00:00:00.1331900
Verifying $histo_final_kernel: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool) : bool
{
  0 + (if b0000 then 0 else 10000) + (if b0001 then 0 else 10000) + (if b0002 then 0 else 10000) + (if b0003 then 0 else 10000) + (if b0004 then 0 else 10000) + (if b0005 then 0 else 10000) + (if b0006 then 0 else 10000) + (if b0007 then 0 else 10000) + (if b0008 then 0 else 10000) + (if b0009 then 0 else 10000) + (if b0010 then 0 else 10000) + (if b0011 then 0 else 10000) + (if b0012 then 0 else 10000) + (if b0013 then 0 else 10000) + (if b0014 then 0 else 10000) + (if b0015 then 0 else 10000) + (if b0016 then 0 else 10000) + (if b0017 then 0 else 10000) + (if b0018 then 0 else 10000) + (if b0019 then 0 else 10000) + (if b0020 then 0 else 10000) + (if b0021 then 0 else 10000) + (if b0022 then 0 else 10000) + (if b0023 then 0 else 10000) + (if b0024 then 0 else 10000) + (if b0025 then 0 else 10000) + (if b0026 then 0 else 10000) < 441
}
Prover Time taken = 13.558197
Added Horn clause: 0 && 0 => 1
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/parboil/histo/histo_final/kernel.bpl.ice2.bpl
Total learner time was 00:00:00.1193050
Verifying $histo_final_kernel: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool) : bool
{
  0 + (if b0000 then 0 else 10000) + (if b0001 then 0 else 10000) + (if b0002 then 0 else 10000) + (if b0003 then 0 else 10000) + (if b0004 then 0 else 10000) + (if b0005 then 0 else 10000) + (if b0008 then 0 else 10000) + (if b0010 then 0 else 10000) + (if b0011 then 0 else 10000) + (if b0012 then 0 else 10000) + (if b0013 then 0 else 10000) + (if b0014 then 0 else 10000) + (if b0015 then 0 else 10000) + (if b0016 then 0 else 10000) + (if b0017 then 0 else 10000) + (if b0018 then 0 else 10000) + (if b0019 then 0 else 10000) + (if b0020 then 0 else 10000) + (if b0021 then 0 else 10000) + (if b0022 then 0 else 10000) + (if b0023 then 0 else 10000) + (if b0024 then 0 else 10000) + (if b0025 then 0 else 10000) + (if b0026 then 0 else 10000) < 441
}
Prover Time taken = 28.961228
Added Horn clause: 0 => 2
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/parboil/histo/histo_final/kernel.bpl.ice2.bpl
Total learner time was 00:00:00.1200170
Verifying $histo_final_kernel: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool) : bool
{
  0 + (if b0002 then 0 else 10000) + (if b0004 then 0 else 10000) + (if b0005 then 0 else 10000) + (if b0008 then 0 else 10000) + (if b0010 then 0 else 10000) + (if b0011 then 0 else 10000) + (if b0012 then 0 else 10000) + (if b0013 then 0 else 10000) + (if b0014 then 0 else 10000) + (if b0015 then 0 else 10000) + (if b0016 then 0 else 10000) + (if b0017 then 0 else 10000) + (if b0018 then 0 else 10000) + (if b0019 then 0 else 10000) + (if b0020 then 0 else 10000) + (if b0021 then 0 else 10000) + (if b0022 then 0 else 10000) + (if b0023 then 0 else 10000) + (if b0024 then 0 else 10000) + (if b0025 then 0 else 10000) + (if b0026 then 0 else 10000) < 441
}
Prover Time taken = 23.40971
Added Horn clause: 0 && 0 && 0 => 3
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/parboil/histo/histo_final/kernel.bpl.ice2.bpl
Total learner time was 00:00:00.1212730
Verifying $histo_final_kernel: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool) : bool
{
  0 + (if b0002 then 0 else 10000) + (if b0004 then 0 else 10000) + (if b0005 then 0 else 10000) + (if b0008 then 0 else 10000) + (if b0010 then 0 else 10000) + (if b0011 then 0 else 10000) + (if b0014 then 0 else 10000) + (if b0016 then 0 else 10000) + (if b0017 then 0 else 10000) + (if b0018 then 0 else 10000) + (if b0019 then 0 else 10000) + (if b0020 then 0 else 10000) + (if b0021 then 0 else 10000) + (if b0022 then 0 else 10000) + (if b0023 then 0 else 10000) + (if b0024 then 0 else 10000) + (if b0025 then 0 else 10000) + (if b0026 then 0 else 10000) < 441
}
Prover Time taken = 14.670738
Added Horn clause: 0 && 0 => 4
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/parboil/histo/histo_final/kernel.bpl.ice2.bpl
Total learner time was 00:00:00.1180700
Verifying $histo_final_kernel: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool) : bool
{
  0 + (if b0002 then 0 else 10000) + (if b0004 then 0 else 10000) + (if b0005 then 0 else 10000) + (if b0008 then 0 else 10000) + (if b0010 then 0 else 10000) + (if b0011 then 0 else 10000) + (if b0014 then 0 else 10000) + (if b0016 then 0 else 10000) + (if b0017 then 0 else 10000) + (if b0018 then 0 else 10000) + (if b0019 then 0 else 10000) + (if b0020 then 0 else 10000) + (if b0021 then 0 else 10000) + (if b0022 then 0 else 10000) + (if b0023 then 0 else 10000) + (if b0024 then 0 else 10000) + (if b0026 then 0 else 10000) < 441
}
Prover Time taken = 28.554536
Added Horn clause: 0 && 0 => 5
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/parboil/histo/histo_final/kernel.bpl.ice2.bpl
Total learner time was 00:00:00.1179930
Verifying $histo_final_kernel: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool) : bool
{
  0 + (if b0002 then 0 else 10000) + (if b0004 then 0 else 10000) + (if b0005 then 0 else 10000) + (if b0008 then 0 else 10000) + (if b0010 then 0 else 10000) + (if b0011 then 0 else 10000) + (if b0014 then 0 else 10000) + (if b0016 then 0 else 10000) + (if b0017 then 0 else 10000) + (if b0018 then 0 else 10000) + (if b0019 then 0 else 10000) + (if b0020 then 0 else 10000) + (if b0021 then 0 else 10000) + (if b0022 then 0 else 10000) + (if b0023 then 0 else 10000) + (if b0024 then 0 else 10000) < 441
}
Prover Time taken = 22.902632
Added Horn clause: 0 => 6
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/parboil/histo/histo_final/kernel.bpl.ice2.bpl
Total learner time was 00:00:00.1230990
Verifying $histo_final_kernel: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool) : bool
{
  0 + (if b0002 then 0 else 10000) + (if b0004 then 0 else 10000) + (if b0005 then 0 else 10000) + (if b0008 then 0 else 10000) + (if b0010 then 0 else 10000) + (if b0011 then 0 else 10000) + (if b0014 then 0 else 10000) + (if b0016 then 0 else 10000) + (if b0017 then 0 else 10000) + (if b0018 then 0 else 10000) + (if b0019 then 0 else 10000) + (if b0020 then 0 else 10000) + (if b0021 then 0 else 10000) + (if b0022 then 0 else 10000) + (if b0024 then 0 else 10000) < 441
}
Prover Time taken = 38.614624
Added Horn clause: 0 && 0 => 7
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/parboil/histo/histo_final/kernel.bpl.ice2.bpl
Total learner time was 00:00:00.1224640
Verifying $histo_final_kernel: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool) : bool
{
  0 + (if b0002 then 0 else 10000) + (if b0004 then 0 else 10000) + (if b0005 then 0 else 10000) + (if b0008 then 0 else 10000) + (if b0010 then 0 else 10000) + (if b0011 then 0 else 10000) + (if b0014 then 0 else 10000) + (if b0016 then 0 else 10000) + (if b0017 then 0 else 10000) + (if b0018 then 0 else 10000) + (if b0019 then 0 else 10000) + (if b0020 then 0 else 10000) + (if b0021 then 0 else 10000) + (if b0022 then 0 else 10000) < 441
}
Prover Time taken = 675.441759
Prover time = 846.30
Number of prover queries = 9
Learner time = 0.98
Number of learner queries = 8
Total time: 847.49
Number of positive examples:1
Number of negative examples:0
Number of Horn clauses:7
verified

Boogie program verifier finished with 1 verified, 0 errors
2.59user 2.82system 14:09.21elapsed 0%CPU (0avgtext+0avgdata 72176maxresident)k
57592inputs+312outputs (369major+44297minor)pagefaults 0swaps
FILE:parboil/histo/histo_final/kernel.bpl.ice2.bpl
#################
Wed May 12 02:48:19 UTC 2021
KEY=awinnow
OUTPUT=/root/Docker/winnow_gpu_timeout.txt
[TRACE] Using prover: /root/Docker/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/root/Docker/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a winnow
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/errorLimit:1
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/parboil/mri-gridding/gridding/kernel.bpl.ice2.bpl
--------------------
Parsing /root/Docker/benchmarks/BenchmarksCompiled/awinnow/parboil/mri-gridding/gridding/kernel.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /root/Docker/z3/bin/z3
#parameters: 204
Generating VC of $gridding_GPU
Verifying $gridding_GPU: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.208637
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/parboil/mri-gridding/gridding/kernel.bpl.ice2.bpl
Total learner time was 00:00:00.1204280
Verifying $gridding_GPU: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool) : bool
{
  0 + (if b0000 then 0 else 81000) + (if b0001 then 0 else 81000) + (if b0002 then 0 else 81000) + (if b0003 then 0 else 81000) + (if b0004 then 0 else 81000) + (if b0005 then 0 else 81000) + (if b0006 then 0 else 81000) + (if b0007 then 0 else 81000) + (if b0008 then 0 else 81000) + (if b0009 then 0 else 81000) + (if b0010 then 0 else 81000) + (if b0011 then 0 else 81000) + (if b0012 then 0 else 81000) + (if b0013 then 0 else 81000) + (if b0014 then 0 else 81000) + (if b0015 then 0 else 81000) + (if b0016 then 0 else 81000) + (if b0017 then 0 else 81000) + (if b0018 then 0 else 81000) + (if b0019 then 0 else 81000) + (if b0020 then 0 else 81000) + (if b0021 then 0 else 81000) + (if b0022 then 0 else 81000) + (if b0023 then 0 else 81000) + (if b0024 then 0 else 81000) + (if b0025 then 0 else 81000) + (if b0026 then 0 else 81000) + (if b0027 then 0 else 81000) + (if b0028 then 0 else 81000) + (if b0029 then 0 else 81000) + (if b0030 then 0 else 81000) + (if b0031 then 0 else 81000) + (if b0032 then 0 else 81000) + (if b0033 then 0 else 81000) + (if b0034 then 0 else 81000) + (if b0035 then 0 else 81000) + (if b0036 then 0 else 81000) + (if b0037 then 0 else 81000) + (if b0038 then 0 else 81000) + (if b0039 then 0 else 81000) + (if b0040 then 0 else 81000) + (if b0041 then 0 else 81000) + (if b0042 then 0 else 81000) + (if b0043 then 0 else 81000) + (if b0044 then 0 else 81000) + (if b0045 then 0 else 81000) + (if b0046 then 0 else 81000) + (if b0047 then 0 else 81000) + (if b0048 then 0 else 81000) + (if b0049 then 0 else 81000) + (if b0050 then 0 else 81000) + (if b0051 then 0 else 81000) + (if b0052 then 0 else 81000) + (if b0053 then 0 else 81000) + (if b0054 then 0 else 81000) + (if b0055 then 0 else 81000) + (if b0056 then 0 else 81000) + (if b0057 then 0 else 81000) + (if b0058 then 0 else 81000) + (if b0059 then 0 else 81000) + (if b0060 then 0 else 81000) + (if b0061 then 0 else 81000) + (if b0062 then 0 else 81000) + (if b0063 then 0 else 81000) + (if b0064 then 0 else 81000) + (if b0065 then 0 else 81000) + (if b0066 then 0 else 81000) + (if b0067 then 0 else 81000) + (if b0068 then 0 else 81000) + (if b0069 then 0 else 81000) + (if b0070 then 0 else 81000) + (if b0071 then 0 else 81000) + (if b0072 then 0 else 81000) + (if b0073 then 0 else 81000) + (if b0074 then 0 else 81000) + (if b0075 then 0 else 81000) + (if b0076 then 0 else 81000) + (if b0077 then 0 else 81000) + (if b0078 then 0 else 81000) + (if b0079 then 0 else 81000) + (if b0080 then 0 else 81000) + (if b0081 then 0 else 81000) + (if b0082 then 0 else 81000) + (if b0083 then 0 else 81000) + (if b0084 then 0 else 81000) + (if b0085 then 0 else 81000) + (if b0086 then 0 else 81000) + (if b0087 then 0 else 81000) + (if b0088 then 0 else 81000) + (if b0089 then 0 else 81000) + (if b0090 then 0 else 81000) + (if b0091 then 0 else 81000) + (if b0092 then 0 else 81000) + (if b0093 then 0 else 81000) + (if b0094 then 0 else 81000) + (if b0095 then 0 else 81000) + (if b0096 then 0 else 81000) + (if b0097 then 0 else 81000) + (if b0098 then 0 else 81000) + (if b0099 then 0 else 81000) + (if b0100 then 0 else 81000) + (if b0101 then 0 else 81000) + (if b0102 then 0 else 81000) + (if b0103 then 0 else 81000) + (if b0104 then 0 else 81000) + (if b0105 then 0 else 81000) + (if b0106 then 0 else 81000) + (if b0107 then 0 else 81000) + (if b0108 then 0 else 81000) + (if b0109 then 0 else 81000) + (if b0110 then 0 else 81000) + (if b0111 then 0 else 81000) + (if b0112 then 0 else 81000) + (if b0113 then 0 else 81000) + (if b0114 then 0 else 81000) + (if b0115 then 0 else 81000) + (if b0116 then 0 else 81000) + (if b0117 then 0 else 81000) + (if b0118 then 0 else 81000) + (if b0119 then 0 else 81000) + (if b0120 then 0 else 81000) + (if b0121 then 0 else 81000) + (if b0122 then 0 else 81000) + (if b0123 then 0 else 81000) + (if b0124 then 0 else 81000) + (if b0125 then 0 else 81000) + (if b0126 then 0 else 81000) + (if b0127 then 0 else 81000) + (if b0128 then 0 else 81000) + (if b0129 then 0 else 81000) + (if b0130 then 0 else 81000) + (if b0131 then 0 else 81000) + (if b0132 then 0 else 81000) + (if b0133 then 0 else 81000) + (if b0134 then 0 else 81000) + (if b0135 then 0 else 81000) + (if b0136 then 0 else 81000) + (if b0137 then 0 else 81000) + (if b0138 then 0 else 81000) + (if b0139 then 0 else 81000) + (if b0140 then 0 else 81000) + (if b0141 then 0 else 81000) + (if b0142 then 0 else 81000) + (if b0143 then 0 else 81000) + (if b0144 then 0 else 81000) + (if b0145 then 0 else 81000) + (if b0146 then 0 else 81000) + (if b0147 then 0 else 81000) + (if b0148 then 0 else 81000) + (if b0149 then 0 else 81000) + (if b0150 then 0 else 81000) + (if b0151 then 0 else 81000) + (if b0152 then 0 else 81000) + (if b0153 then 0 else 81000) + (if b0154 then 0 else 81000) + (if b0155 then 0 else 81000) + (if b0156 then 0 else 81000) + (if b0157 then 0 else 81000) + (if b0158 then 0 else 81000) + (if b0159 then 0 else 81000) + (if b0160 then 0 else 81000) + (if b0161 then 0 else 81000) + (if b0162 then 0 else 81000) + (if b0163 then 0 else 81000) + (if b0164 then 0 else 81000) + (if b0165 then 0 else 81000) + (if b0166 then 0 else 81000) + (if b0167 then 0 else 81000) + (if b0168 then 0 else 81000) + (if b0169 then 0 else 81000) + (if b0170 then 0 else 81000) + (if b0171 then 0 else 81000) + (if b0172 then 0 else 81000) + (if b0173 then 0 else 81000) + (if b0174 then 0 else 81000) + (if b0175 then 0 else 81000) + (if b0176 then 0 else 81000) + (if b0177 then 0 else 81000) + (if b0178 then 0 else 81000) + (if b0179 then 0 else 81000) + (if b0180 then 0 else 81000) + (if b0181 then 0 else 81000) + (if b0182 then 0 else 81000) + (if b0183 then 0 else 81000) + (if b0184 then 0 else 81000) + (if b0185 then 0 else 81000) + (if b0186 then 0 else 81000) + (if b0187 then 0 else 81000) + (if b0188 then 0 else 81000) + (if b0189 then 0 else 81000) + (if b0190 then 0 else 81000) + (if b0191 then 0 else 81000) + (if b0192 then 0 else 81000) + (if b0193 then 0 else 81000) + (if b0194 then 0 else 81000) + (if b0195 then 0 else 81000) + (if b0196 then 0 else 81000) + (if b0197 then 0 else 81000) + (if b0198 then 0 else 81000) + (if b0199 then 0 else 81000) + (if b0200 then 0 else 81000) + (if b0201 then 0 else 81000) + (if b0202 then 0 else 81000) + (if b0203 then 0 else 81000) < 441
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,1,1,0,0,0,1,1,1,0,1,1,1,1,0,1,0,1,1,1,1,0,1,0,0,1,0,1,0,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 3.739275
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/parboil/mri-gridding/gridding/kernel.bpl.ice2.bpl
Total learner time was 00:00:00.1206970
Verifying $gridding_GPU: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool) : bool
{
  0 + (if b0000 then 0 else 81000) + (if b0001 then 0 else 81000) + (if b0002 then 0 else 81000) + (if b0003 then 0 else 81000) + (if b0004 then 0 else 81000) + (if b0005 then 0 else 81000) + (if b0006 then 0 else 81000) + (if b0007 then 0 else 81000) + (if b0008 then 0 else 81000) + (if b0009 then 0 else 81000) + (if b0010 then 0 else 81000) + (if b0011 then 0 else 81000) + (if b0012 then 0 else 81000) + (if b0013 then 0 else 81000) + (if b0014 then 0 else 81000) + (if b0015 then 0 else 81000) + (if b0016 then 0 else 81000) + (if b0017 then 0 else 81000) + (if b0018 then 0 else 81000) + (if b0019 then 0 else 81000) + (if b0020 then 0 else 81000) + (if b0021 then 0 else 81000) + (if b0022 then 0 else 81000) + (if b0023 then 0 else 81000) + (if b0024 then 0 else 81000) + (if b0025 then 0 else 81000) + (if b0026 then 0 else 81000) + (if b0027 then 0 else 81000) + (if b0028 then 0 else 81000) + (if b0029 then 0 else 81000) + (if b0030 then 0 else 81000) + (if b0031 then 0 else 81000) + (if b0032 then 0 else 81000) + (if b0033 then 0 else 81000) + (if b0034 then 0 else 81000) + (if b0035 then 0 else 81000) + (if b0036 then 0 else 81000) + (if b0037 then 0 else 81000) + (if b0038 then 0 else 81000) + (if b0039 then 0 else 81000) + (if b0040 then 0 else 81000) + (if b0041 then 0 else 81000) + (if b0042 then 0 else 81000) + (if b0043 then 0 else 81000) + (if b0044 then 0 else 81000) + (if b0046 then 0 else 81000) + (if b0057 then 0 else 81000) + (if b0060 then 0 else 81000) + (if b0061 then 0 else 81000) + (if b0062 then 0 else 81000) + (if b0063 then 0 else 81000) + (if b0067 then 0 else 81000) + (if b0068 then 0 else 81000) + (if b0069 then 0 else 81000) + (if b0071 then 0 else 81000) + (if b0072 then 0 else 81000) + (if b0073 then 0 else 81000) + (if b0074 then 0 else 81000) + (if b0076 then 0 else 81000) + (if b0078 then 0 else 81000) + (if b0079 then 0 else 81000) + (if b0080 then 0 else 81000) + (if b0081 then 0 else 81000) + (if b0083 then 0 else 81000) + (if b0086 then 0 else 81000) + (if b0088 then 0 else 81000) + (if b0090 then 0 else 81000) + (if b0091 then 0 else 81000) + (if b0094 then 0 else 81000) + (if b0095 then 0 else 81000) + (if b0096 then 0 else 81000) + (if b0097 then 0 else 81000) + (if b0098 then 0 else 81000) + (if b0099 then 0 else 81000) + (if b0100 then 0 else 81000) + (if b0101 then 0 else 81000) + (if b0102 then 0 else 81000) + (if b0103 then 0 else 81000) + (if b0104 then 0 else 81000) + (if b0105 then 0 else 81000) + (if b0106 then 0 else 81000) + (if b0107 then 0 else 81000) + (if b0108 then 0 else 81000) + (if b0109 then 0 else 81000) + (if b0110 then 0 else 81000) + (if b0111 then 0 else 81000) + (if b0112 then 0 else 81000) + (if b0113 then 0 else 81000) + (if b0114 then 0 else 81000) + (if b0115 then 0 else 81000) + (if b0116 then 0 else 81000) + (if b0117 then 0 else 81000) + (if b0118 then 0 else 81000) + (if b0119 then 0 else 81000) + (if b0120 then 0 else 81000) + (if b0121 then 0 else 81000) + (if b0122 then 0 else 81000) + (if b0123 then 0 else 81000) + (if b0124 then 0 else 81000) + (if b0125 then 0 else 81000) + (if b0126 then 0 else 81000) + (if b0127 then 0 else 81000) + (if b0128 then 0 else 81000) + (if b0129 then 0 else 81000) + (if b0130 then 0 else 81000) + (if b0131 then 0 else 81000) + (if b0132 then 0 else 81000) + (if b0133 then 0 else 81000) + (if b0134 then 0 else 81000) + (if b0135 then 0 else 81000) + (if b0136 then 0 else 81000) + (if b0137 then 0 else 81000) + (if b0138 then 0 else 81000) + (if b0139 then 0 else 81000) + (if b0140 then 0 else 81000) + (if b0141 then 0 else 81000) + (if b0142 then 0 else 81000) + (if b0143 then 0 else 81000) + (if b0144 then 0 else 81000) + (if b0145 then 0 else 81000) + (if b0146 then 0 else 81000) + (if b0147 then 0 else 81000) + (if b0148 then 0 else 81000) + (if b0149 then 0 else 81000) + (if b0150 then 0 else 81000) + (if b0151 then 0 else 81000) + (if b0152 then 0 else 81000) + (if b0153 then 0 else 81000) + (if b0154 then 0 else 81000) + (if b0155 then 0 else 81000) + (if b0156 then 0 else 81000) + (if b0157 then 0 else 81000) + (if b0158 then 0 else 81000) + (if b0159 then 0 else 81000) + (if b0160 then 0 else 81000) + (if b0161 then 0 else 81000) + (if b0162 then 0 else 81000) + (if b0163 then 0 else 81000) + (if b0164 then 0 else 81000) + (if b0165 then 0 else 81000) + (if b0166 then 0 else 81000) + (if b0167 then 0 else 81000) + (if b0168 then 0 else 81000) + (if b0169 then 0 else 81000) + (if b0170 then 0 else 81000) + (if b0171 then 0 else 81000) + (if b0172 then 0 else 81000) + (if b0173 then 0 else 81000) + (if b0174 then 0 else 81000) + (if b0175 then 0 else 81000) + (if b0176 then 0 else 81000) + (if b0177 then 0 else 81000) + (if b0178 then 0 else 81000) + (if b0179 then 0 else 81000) + (if b0180 then 0 else 81000) + (if b0181 then 0 else 81000) + (if b0182 then 0 else 81000) + (if b0183 then 0 else 81000) + (if b0184 then 0 else 81000) + (if b0185 then 0 else 81000) + (if b0186 then 0 else 81000) + (if b0187 then 0 else 81000) + (if b0188 then 0 else 81000) + (if b0189 then 0 else 81000) + (if b0190 then 0 else 81000) + (if b0191 then 0 else 81000) + (if b0192 then 0 else 81000) + (if b0193 then 0 else 81000) + (if b0194 then 0 else 81000) + (if b0195 then 0 else 81000) + (if b0196 then 0 else 81000) + (if b0197 then 0 else 81000) + (if b0198 then 0 else 81000) + (if b0199 then 0 else 81000) + (if b0200 then 0 else 81000) + (if b0201 then 0 else 81000) + (if b0202 then 0 else 81000) + (if b0203 then 0 else 81000) < 441
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,0,1,1,0,1,0,0,1,1,1,0,1,1,1,0,0,0,0,1,0,1,1,1,1,0,1,1,1,1,0,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 4.395914
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/parboil/mri-gridding/gridding/kernel.bpl.ice2.bpl
Total learner time was 00:00:00.1184630
Verifying $gridding_GPU: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool) : bool
{
  0 + (if b0000 then 0 else 81000) + (if b0001 then 0 else 81000) + (if b0002 then 0 else 81000) + (if b0003 then 0 else 81000) + (if b0004 then 0 else 81000) + (if b0005 then 0 else 81000) + (if b0006 then 0 else 81000) + (if b0007 then 0 else 81000) + (if b0008 then 0 else 81000) + (if b0009 then 0 else 81000) + (if b0010 then 0 else 81000) + (if b0011 then 0 else 81000) + (if b0012 then 0 else 81000) + (if b0013 then 0 else 81000) + (if b0014 then 0 else 81000) + (if b0015 then 0 else 81000) + (if b0016 then 0 else 81000) + (if b0017 then 0 else 81000) + (if b0018 then 0 else 81000) + (if b0019 then 0 else 81000) + (if b0020 then 0 else 81000) + (if b0021 then 0 else 81000) + (if b0022 then 0 else 81000) + (if b0023 then 0 else 81000) + (if b0024 then 0 else 81000) + (if b0025 then 0 else 81000) + (if b0026 then 0 else 81000) + (if b0027 then 0 else 81000) + (if b0028 then 0 else 81000) + (if b0029 then 0 else 81000) + (if b0030 then 0 else 81000) + (if b0031 then 0 else 81000) + (if b0032 then 0 else 81000) + (if b0033 then 0 else 81000) + (if b0034 then 0 else 81000) + (if b0035 then 0 else 81000) + (if b0036 then 0 else 81000) + (if b0037 then 0 else 81000) + (if b0038 then 0 else 81000) + (if b0039 then 0 else 81000) + (if b0040 then 0 else 81000) + (if b0041 then 0 else 81000) + (if b0042 then 0 else 81000) + (if b0043 then 0 else 81000) + (if b0044 then 0 else 81000) + (if b0061 then 0 else 81000) + (if b0068 then 0 else 81000) + (if b0069 then 0 else 81000) + (if b0078 then 0 else 81000) + (if b0079 then 0 else 81000) + (if b0080 then 0 else 81000) + (if b0083 then 0 else 81000) + (if b0091 then 0 else 81000) + (if b0094 then 0 else 81000) + (if b0095 then 0 else 81000) + (if b0096 then 0 else 81000) + (if b0097 then 0 else 81000) + (if b0098 then 0 else 81000) + (if b0099 then 0 else 81000) + (if b0100 then 0 else 81000) + (if b0101 then 0 else 81000) + (if b0102 then 0 else 81000) + (if b0103 then 0 else 81000) + (if b0104 then 0 else 81000) + (if b0105 then 0 else 81000) + (if b0106 then 0 else 81000) + (if b0107 then 0 else 81000) + (if b0108 then 0 else 81000) + (if b0109 then 0 else 81000) + (if b0110 then 0 else 81000) + (if b0111 then 0 else 81000) + (if b0112 then 0 else 81000) + (if b0113 then 0 else 81000) + (if b0114 then 0 else 81000) + (if b0115 then 0 else 81000) + (if b0116 then 0 else 81000) + (if b0117 then 0 else 81000) + (if b0118 then 0 else 81000) + (if b0119 then 0 else 81000) + (if b0120 then 0 else 81000) + (if b0121 then 0 else 81000) + (if b0122 then 0 else 81000) + (if b0123 then 0 else 81000) + (if b0124 then 0 else 81000) + (if b0125 then 0 else 81000) + (if b0126 then 0 else 81000) + (if b0127 then 0 else 81000) + (if b0128 then 0 else 81000) + (if b0129 then 0 else 81000) + (if b0130 then 0 else 81000) + (if b0131 then 0 else 81000) + (if b0132 then 0 else 81000) + (if b0133 then 0 else 81000) + (if b0134 then 0 else 81000) + (if b0135 then 0 else 81000) + (if b0136 then 0 else 81000) + (if b0137 then 0 else 81000) + (if b0138 then 0 else 81000) + (if b0139 then 0 else 81000) + (if b0140 then 0 else 81000) + (if b0141 then 0 else 81000) + (if b0142 then 0 else 81000) + (if b0143 then 0 else 81000) + (if b0144 then 0 else 81000) + (if b0145 then 0 else 81000) + (if b0146 then 0 else 81000) + (if b0147 then 0 else 81000) + (if b0148 then 0 else 81000) + (if b0149 then 0 else 81000) + (if b0150 then 0 else 81000) + (if b0151 then 0 else 81000) + (if b0152 then 0 else 81000) + (if b0153 then 0 else 81000) + (if b0154 then 0 else 81000) + (if b0155 then 0 else 81000) + (if b0156 then 0 else 81000) + (if b0157 then 0 else 81000) + (if b0158 then 0 else 81000) + (if b0159 then 0 else 81000) + (if b0160 then 0 else 81000) + (if b0161 then 0 else 81000) + (if b0162 then 0 else 81000) + (if b0163 then 0 else 81000) + (if b0164 then 0 else 81000) + (if b0165 then 0 else 81000) + (if b0166 then 0 else 81000) + (if b0167 then 0 else 81000) + (if b0168 then 0 else 81000) + (if b0169 then 0 else 81000) + (if b0170 then 0 else 81000) + (if b0171 then 0 else 81000) + (if b0172 then 0 else 81000) + (if b0173 then 0 else 81000) + (if b0174 then 0 else 81000) + (if b0175 then 0 else 81000) + (if b0176 then 0 else 81000) + (if b0177 then 0 else 81000) + (if b0178 then 0 else 81000) + (if b0179 then 0 else 81000) + (if b0180 then 0 else 81000) + (if b0181 then 0 else 81000) + (if b0182 then 0 else 81000) + (if b0183 then 0 else 81000) + (if b0184 then 0 else 81000) + (if b0185 then 0 else 81000) + (if b0186 then 0 else 81000) + (if b0187 then 0 else 81000) + (if b0188 then 0 else 81000) + (if b0189 then 0 else 81000) + (if b0190 then 0 else 81000) + (if b0191 then 0 else 81000) + (if b0192 then 0 else 81000) + (if b0193 then 0 else 81000) + (if b0194 then 0 else 81000) + (if b0195 then 0 else 81000) + (if b0196 then 0 else 81000) + (if b0197 then 0 else 81000) + (if b0198 then 0 else 81000) + (if b0199 then 0 else 81000) + (if b0200 then 0 else 81000) + (if b0201 then 0 else 81000) + (if b0202 then 0 else 81000) + (if b0203 then 0 else 81000) < 441
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,0,0,0,1,1,0,1,1,1,1,1,1,1,0,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 11.307547
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/parboil/mri-gridding/gridding/kernel.bpl.ice2.bpl
Total learner time was 00:00:00.1191900
Verifying $gridding_GPU: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool) : bool
{
  0 + (if b0000 then 0 else 81000) + (if b0001 then 0 else 81000) + (if b0002 then 0 else 81000) + (if b0003 then 0 else 81000) + (if b0004 then 0 else 81000) + (if b0005 then 0 else 81000) + (if b0006 then 0 else 81000) + (if b0007 then 0 else 81000) + (if b0008 then 0 else 81000) + (if b0009 then 0 else 81000) + (if b0010 then 0 else 81000) + (if b0011 then 0 else 81000) + (if b0012 then 0 else 81000) + (if b0013 then 0 else 81000) + (if b0014 then 0 else 81000) + (if b0015 then 0 else 81000) + (if b0016 then 0 else 81000) + (if b0017 then 0 else 81000) + (if b0018 then 0 else 81000) + (if b0019 then 0 else 81000) + (if b0020 then 0 else 81000) + (if b0021 then 0 else 81000) + (if b0022 then 0 else 81000) + (if b0023 then 0 else 81000) + (if b0024 then 0 else 81000) + (if b0025 then 0 else 81000) + (if b0026 then 0 else 81000) + (if b0027 then 0 else 81000) + (if b0028 then 0 else 81000) + (if b0029 then 0 else 81000) + (if b0030 then 0 else 81000) + (if b0031 then 0 else 81000) + (if b0032 then 0 else 81000) + (if b0033 then 0 else 81000) + (if b0034 then 0 else 81000) + (if b0035 then 0 else 81000) + (if b0036 then 0 else 81000) + (if b0037 then 0 else 81000) + (if b0038 then 0 else 81000) + (if b0039 then 0 else 81000) + (if b0040 then 0 else 81000) + (if b0041 then 0 else 81000) + (if b0042 then 0 else 81000) + (if b0043 then 0 else 81000) + (if b0044 then 0 else 81000) + (if b0061 then 0 else 81000) + (if b0069 then 0 else 81000) + (if b0095 then 0 else 81000) + (if b0096 then 0 else 81000) + (if b0097 then 0 else 81000) + (if b0098 then 0 else 81000) + (if b0099 then 0 else 81000) + (if b0100 then 0 else 81000) + (if b0101 then 0 else 81000) + (if b0102 then 0 else 81000) + (if b0103 then 0 else 81000) + (if b0104 then 0 else 81000) + (if b0105 then 0 else 81000) + (if b0106 then 0 else 81000) + (if b0107 then 0 else 81000) + (if b0108 then 0 else 81000) + (if b0109 then 0 else 81000) + (if b0110 then 0 else 81000) + (if b0111 then 0 else 81000) + (if b0112 then 0 else 81000) + (if b0113 then 0 else 81000) + (if b0114 then 0 else 81000) + (if b0115 then 0 else 81000) + (if b0116 then 0 else 81000) + (if b0117 then 0 else 81000) + (if b0118 then 0 else 81000) + (if b0119 then 0 else 81000) + (if b0120 then 0 else 81000) + (if b0121 then 0 else 81000) + (if b0122 then 0 else 81000) + (if b0123 then 0 else 81000) + (if b0124 then 0 else 81000) + (if b0125 then 0 else 81000) + (if b0126 then 0 else 81000) + (if b0127 then 0 else 81000) + (if b0128 then 0 else 81000) + (if b0129 then 0 else 81000) + (if b0130 then 0 else 81000) + (if b0131 then 0 else 81000) + (if b0132 then 0 else 81000) + (if b0133 then 0 else 81000) + (if b0134 then 0 else 81000) + (if b0135 then 0 else 81000) + (if b0136 then 0 else 81000) + (if b0137 then 0 else 81000) + (if b0138 then 0 else 81000) + (if b0139 then 0 else 81000) + (if b0140 then 0 else 81000) + (if b0141 then 0 else 81000) + (if b0142 then 0 else 81000) + (if b0143 then 0 else 81000) + (if b0144 then 0 else 81000) + (if b0145 then 0 else 81000) + (if b0146 then 0 else 81000) + (if b0147 then 0 else 81000) + (if b0148 then 0 else 81000) + (if b0149 then 0 else 81000) + (if b0150 then 0 else 81000) + (if b0151 then 0 else 81000) + (if b0152 then 0 else 81000) + (if b0153 then 0 else 81000) + (if b0154 then 0 else 81000) + (if b0155 then 0 else 81000) + (if b0156 then 0 else 81000) + (if b0157 then 0 else 81000) + (if b0158 then 0 else 81000) + (if b0159 then 0 else 81000) + (if b0160 then 0 else 81000) + (if b0161 then 0 else 81000) + (if b0162 then 0 else 81000) + (if b0163 then 0 else 81000) + (if b0164 then 0 else 81000) + (if b0165 then 0 else 81000) + (if b0166 then 0 else 81000) + (if b0167 then 0 else 81000) + (if b0168 then 0 else 81000) + (if b0169 then 0 else 81000) + (if b0170 then 0 else 81000) + (if b0171 then 0 else 81000) + (if b0172 then 0 else 81000) + (if b0173 then 0 else 81000) + (if b0174 then 0 else 81000) + (if b0175 then 0 else 81000) + (if b0176 then 0 else 81000) + (if b0177 then 0 else 81000) + (if b0178 then 0 else 81000) + (if b0179 then 0 else 81000) + (if b0180 then 0 else 81000) + (if b0181 then 0 else 81000) + (if b0182 then 0 else 81000) + (if b0183 then 0 else 81000) + (if b0184 then 0 else 81000) + (if b0185 then 0 else 81000) + (if b0186 then 0 else 81000) + (if b0187 then 0 else 81000) + (if b0188 then 0 else 81000) + (if b0189 then 0 else 81000) + (if b0190 then 0 else 81000) + (if b0191 then 0 else 81000) + (if b0192 then 0 else 81000) + (if b0193 then 0 else 81000) + (if b0194 then 0 else 81000) + (if b0195 then 0 else 81000) + (if b0196 then 0 else 81000) + (if b0197 then 0 else 81000) + (if b0198 then 0 else 81000) + (if b0199 then 0 else 81000) + (if b0200 then 0 else 81000) + (if b0201 then 0 else 81000) + (if b0202 then 0 else 81000) + (if b0203 then 0 else 81000) < 441
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 10.682253
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/parboil/mri-gridding/gridding/kernel.bpl.ice2.bpl
Total learner time was 00:00:00.1219230
Verifying $gridding_GPU: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool) : bool
{
  0 + (if b0000 then 0 else 81000) + (if b0001 then 0 else 81000) + (if b0002 then 0 else 81000) + (if b0003 then 0 else 81000) + (if b0004 then 0 else 81000) + (if b0005 then 0 else 81000) + (if b0006 then 0 else 81000) + (if b0007 then 0 else 81000) + (if b0008 then 0 else 81000) + (if b0009 then 0 else 81000) + (if b0010 then 0 else 81000) + (if b0011 then 0 else 81000) + (if b0012 then 0 else 81000) + (if b0013 then 0 else 81000) + (if b0014 then 0 else 81000) + (if b0015 then 0 else 81000) + (if b0016 then 0 else 81000) + (if b0017 then 0 else 81000) + (if b0018 then 0 else 81000) + (if b0019 then 0 else 81000) + (if b0020 then 0 else 81000) + (if b0021 then 0 else 81000) + (if b0022 then 0 else 81000) + (if b0023 then 0 else 81000) + (if b0024 then 0 else 81000) + (if b0025 then 0 else 81000) + (if b0026 then 0 else 81000) + (if b0027 then 0 else 81000) + (if b0028 then 0 else 81000) + (if b0029 then 0 else 81000) + (if b0030 then 0 else 81000) + (if b0031 then 0 else 81000) + (if b0032 then 0 else 81000) + (if b0033 then 0 else 81000) + (if b0034 then 0 else 81000) + (if b0035 then 0 else 81000) + (if b0036 then 0 else 81000) + (if b0037 then 0 else 81000) + (if b0038 then 0 else 81000) + (if b0039 then 0 else 81000) + (if b0040 then 0 else 81000) + (if b0041 then 0 else 81000) + (if b0042 then 0 else 81000) + (if b0043 then 0 else 81000) + (if b0044 then 0 else 81000) + (if b0095 then 0 else 81000) + (if b0096 then 0 else 81000) + (if b0097 then 0 else 81000) + (if b0098 then 0 else 81000) + (if b0099 then 0 else 81000) + (if b0100 then 0 else 81000) + (if b0101 then 0 else 81000) + (if b0102 then 0 else 81000) + (if b0103 then 0 else 81000) + (if b0104 then 0 else 81000) + (if b0105 then 0 else 81000) + (if b0106 then 0 else 81000) + (if b0107 then 0 else 81000) + (if b0108 then 0 else 81000) + (if b0109 then 0 else 81000) + (if b0110 then 0 else 81000) + (if b0111 then 0 else 81000) + (if b0112 then 0 else 81000) + (if b0113 then 0 else 81000) + (if b0114 then 0 else 81000) + (if b0115 then 0 else 81000) + (if b0116 then 0 else 81000) + (if b0117 then 0 else 81000) + (if b0118 then 0 else 81000) + (if b0119 then 0 else 81000) + (if b0120 then 0 else 81000) + (if b0121 then 0 else 81000) + (if b0122 then 0 else 81000) + (if b0123 then 0 else 81000) + (if b0124 then 0 else 81000) + (if b0125 then 0 else 81000) + (if b0126 then 0 else 81000) + (if b0127 then 0 else 81000) + (if b0128 then 0 else 81000) + (if b0129 then 0 else 81000) + (if b0130 then 0 else 81000) + (if b0131 then 0 else 81000) + (if b0132 then 0 else 81000) + (if b0133 then 0 else 81000) + (if b0134 then 0 else 81000) + (if b0135 then 0 else 81000) + (if b0136 then 0 else 81000) + (if b0137 then 0 else 81000) + (if b0138 then 0 else 81000) + (if b0139 then 0 else 81000) + (if b0140 then 0 else 81000) + (if b0141 then 0 else 81000) + (if b0142 then 0 else 81000) + (if b0143 then 0 else 81000) + (if b0144 then 0 else 81000) + (if b0145 then 0 else 81000) + (if b0146 then 0 else 81000) + (if b0147 then 0 else 81000) + (if b0148 then 0 else 81000) + (if b0149 then 0 else 81000) + (if b0150 then 0 else 81000) + (if b0151 then 0 else 81000) + (if b0152 then 0 else 81000) + (if b0153 then 0 else 81000) + (if b0154 then 0 else 81000) + (if b0155 then 0 else 81000) + (if b0156 then 0 else 81000) + (if b0157 then 0 else 81000) + (if b0158 then 0 else 81000) + (if b0159 then 0 else 81000) + (if b0160 then 0 else 81000) + (if b0161 then 0 else 81000) + (if b0162 then 0 else 81000) + (if b0163 then 0 else 81000) + (if b0164 then 0 else 81000) + (if b0165 then 0 else 81000) + (if b0166 then 0 else 81000) + (if b0167 then 0 else 81000) + (if b0168 then 0 else 81000) + (if b0169 then 0 else 81000) + (if b0170 then 0 else 81000) + (if b0171 then 0 else 81000) + (if b0172 then 0 else 81000) + (if b0173 then 0 else 81000) + (if b0174 then 0 else 81000) + (if b0175 then 0 else 81000) + (if b0176 then 0 else 81000) + (if b0177 then 0 else 81000) + (if b0178 then 0 else 81000) + (if b0179 then 0 else 81000) + (if b0180 then 0 else 81000) + (if b0181 then 0 else 81000) + (if b0182 then 0 else 81000) + (if b0183 then 0 else 81000) + (if b0184 then 0 else 81000) + (if b0185 then 0 else 81000) + (if b0186 then 0 else 81000) + (if b0187 then 0 else 81000) + (if b0188 then 0 else 81000) + (if b0189 then 0 else 81000) + (if b0190 then 0 else 81000) + (if b0191 then 0 else 81000) + (if b0192 then 0 else 81000) + (if b0193 then 0 else 81000) + (if b0194 then 0 else 81000) + (if b0195 then 0 else 81000) + (if b0196 then 0 else 81000) + (if b0197 then 0 else 81000) + (if b0198 then 0 else 81000) + (if b0199 then 0 else 81000) + (if b0200 then 0 else 81000) + (if b0201 then 0 else 81000) + (if b0202 then 0 else 81000) + (if b0203 then 0 else 81000) < 441
}
Prover Time taken = 12.116702
Added Horn clause: 5 => 6
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/parboil/mri-gridding/gridding/kernel.bpl.ice2.bpl
Total learner time was 00:00:00.1248350
Verifying $gridding_GPU: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool) : bool
{
  0 + (if b0000 then 0 else 81000) + (if b0001 then 0 else 81000) + (if b0002 then 0 else 81000) + (if b0003 then 0 else 81000) + (if b0004 then 0 else 81000) + (if b0005 then 0 else 81000) + (if b0006 then 0 else 81000) + (if b0007 then 0 else 81000) + (if b0008 then 0 else 81000) + (if b0009 then 0 else 81000) + (if b0010 then 0 else 81000) + (if b0011 then 0 else 81000) + (if b0012 then 0 else 81000) + (if b0013 then 0 else 81000) + (if b0014 then 0 else 81000) + (if b0015 then 0 else 81000) + (if b0016 then 0 else 81000) + (if b0017 then 0 else 81000) + (if b0018 then 0 else 81000) + (if b0019 then 0 else 81000) + (if b0020 then 0 else 81000) + (if b0021 then 0 else 81000) + (if b0022 then 0 else 81000) + (if b0023 then 0 else 81000) + (if b0024 then 0 else 81000) + (if b0025 then 0 else 81000) + (if b0026 then 0 else 81000) + (if b0027 then 0 else 81000) + (if b0028 then 0 else 81000) + (if b0029 then 0 else 81000) + (if b0030 then 0 else 81000) + (if b0031 then 0 else 81000) + (if b0032 then 0 else 81000) + (if b0033 then 0 else 81000) + (if b0034 then 0 else 81000) + (if b0035 then 0 else 81000) + (if b0036 then 0 else 81000) + (if b0037 then 0 else 81000) + (if b0038 then 0 else 81000) + (if b0039 then 0 else 81000) + (if b0040 then 0 else 81000) + (if b0041 then 0 else 81000) + (if b0042 then 0 else 81000) + (if b0043 then 0 else 81000) + (if b0044 then 0 else 81000) + (if b0095 then 0 else 81000) + (if b0096 then 0 else 81000) + (if b0097 then 0 else 81000) + (if b0098 then 0 else 81000) + (if b0100 then 0 else 81000) + (if b0101 then 0 else 81000) + (if b0102 then 0 else 81000) + (if b0103 then 0 else 81000) + (if b0104 then 0 else 81000) + (if b0105 then 0 else 81000) + (if b0106 then 0 else 81000) + (if b0107 then 0 else 81000) + (if b0108 then 0 else 81000) + (if b0109 then 0 else 81000) + (if b0110 then 0 else 81000) + (if b0111 then 0 else 81000) + (if b0112 then 0 else 81000) + (if b0113 then 0 else 81000) + (if b0114 then 0 else 81000) + (if b0115 then 0 else 81000) + (if b0116 then 0 else 81000) + (if b0117 then 0 else 81000) + (if b0118 then 0 else 81000) + (if b0119 then 0 else 81000) + (if b0120 then 0 else 81000) + (if b0121 then 0 else 81000) + (if b0122 then 0 else 81000) + (if b0123 then 0 else 81000) + (if b0124 then 0 else 81000) + (if b0125 then 0 else 81000) + (if b0126 then 0 else 81000) + (if b0127 then 0 else 81000) + (if b0128 then 0 else 81000) + (if b0129 then 0 else 81000) + (if b0130 then 0 else 81000) + (if b0131 then 0 else 81000) + (if b0132 then 0 else 81000) + (if b0133 then 0 else 81000) + (if b0134 then 0 else 81000) + (if b0135 then 0 else 81000) + (if b0136 then 0 else 81000) + (if b0137 then 0 else 81000) + (if b0138 then 0 else 81000) + (if b0139 then 0 else 81000) + (if b0140 then 0 else 81000) + (if b0141 then 0 else 81000) + (if b0142 then 0 else 81000) + (if b0143 then 0 else 81000) + (if b0144 then 0 else 81000) + (if b0145 then 0 else 81000) + (if b0146 then 0 else 81000) + (if b0147 then 0 else 81000) + (if b0148 then 0 else 81000) + (if b0149 then 0 else 81000) + (if b0150 then 0 else 81000) + (if b0151 then 0 else 81000) + (if b0152 then 0 else 81000) + (if b0153 then 0 else 81000) + (if b0154 then 0 else 81000) + (if b0155 then 0 else 81000) + (if b0156 then 0 else 81000) + (if b0157 then 0 else 81000) + (if b0158 then 0 else 81000) + (if b0159 then 0 else 81000) + (if b0160 then 0 else 81000) + (if b0161 then 0 else 81000) + (if b0162 then 0 else 81000) + (if b0163 then 0 else 81000) + (if b0164 then 0 else 81000) + (if b0165 then 0 else 81000) + (if b0166 then 0 else 81000) + (if b0167 then 0 else 81000) + (if b0168 then 0 else 81000) + (if b0169 then 0 else 81000) + (if b0170 then 0 else 81000) + (if b0171 then 0 else 81000) + (if b0172 then 0 else 81000) + (if b0173 then 0 else 81000) + (if b0174 then 0 else 81000) + (if b0175 then 0 else 81000) + (if b0176 then 0 else 81000) + (if b0177 then 0 else 81000) + (if b0178 then 0 else 81000) + (if b0179 then 0 else 81000) + (if b0180 then 0 else 81000) + (if b0181 then 0 else 81000) + (if b0182 then 0 else 81000) + (if b0183 then 0 else 81000) + (if b0184 then 0 else 81000) + (if b0185 then 0 else 81000) + (if b0186 then 0 else 81000) + (if b0187 then 0 else 81000) + (if b0188 then 0 else 81000) + (if b0189 then 0 else 81000) + (if b0190 then 0 else 81000) + (if b0191 then 0 else 81000) + (if b0192 then 0 else 81000) + (if b0193 then 0 else 81000) + (if b0194 then 0 else 81000) + (if b0195 then 0 else 81000) + (if b0196 then 0 else 81000) + (if b0197 then 0 else 81000) + (if b0198 then 0 else 81000) + (if b0199 then 0 else 81000) + (if b0200 then 0 else 81000) + (if b0201 then 0 else 81000) + (if b0202 then 0 else 81000) + (if b0203 then 0 else 81000) < 441
}
Prover Time taken = 12.228238
Added Horn clause: 7 => 8
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/parboil/mri-gridding/gridding/kernel.bpl.ice2.bpl
Total learner time was 00:00:00.1204060
Verifying $gridding_GPU: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool) : bool
{
  0 + (if b0000 then 0 else 81000) + (if b0001 then 0 else 81000) + (if b0002 then 0 else 81000) + (if b0003 then 0 else 81000) + (if b0004 then 0 else 81000) + (if b0005 then 0 else 81000) + (if b0006 then 0 else 81000) + (if b0007 then 0 else 81000) + (if b0008 then 0 else 81000) + (if b0010 then 0 else 81000) + (if b0011 then 0 else 81000) + (if b0012 then 0 else 81000) + (if b0013 then 0 else 81000) + (if b0014 then 0 else 81000) + (if b0015 then 0 else 81000) + (if b0016 then 0 else 81000) + (if b0017 then 0 else 81000) + (if b0018 then 0 else 81000) + (if b0019 then 0 else 81000) + (if b0020 then 0 else 81000) + (if b0021 then 0 else 81000) + (if b0022 then 0 else 81000) + (if b0023 then 0 else 81000) + (if b0024 then 0 else 81000) + (if b0025 then 0 else 81000) + (if b0026 then 0 else 81000) + (if b0027 then 0 else 81000) + (if b0028 then 0 else 81000) + (if b0029 then 0 else 81000) + (if b0030 then 0 else 81000) + (if b0031 then 0 else 81000) + (if b0032 then 0 else 81000) + (if b0033 then 0 else 81000) + (if b0034 then 0 else 81000) + (if b0035 then 0 else 81000) + (if b0036 then 0 else 81000) + (if b0037 then 0 else 81000) + (if b0038 then 0 else 81000) + (if b0039 then 0 else 81000) + (if b0040 then 0 else 81000) + (if b0041 then 0 else 81000) + (if b0042 then 0 else 81000) + (if b0043 then 0 else 81000) + (if b0044 then 0 else 81000) + (if b0095 then 0 else 81000) + (if b0096 then 0 else 81000) + (if b0097 then 0 else 81000) + (if b0098 then 0 else 81000) + (if b0100 then 0 else 81000) + (if b0101 then 0 else 81000) + (if b0102 then 0 else 81000) + (if b0103 then 0 else 81000) + (if b0104 then 0 else 81000) + (if b0105 then 0 else 81000) + (if b0106 then 0 else 81000) + (if b0107 then 0 else 81000) + (if b0108 then 0 else 81000) + (if b0109 then 0 else 81000) + (if b0110 then 0 else 81000) + (if b0111 then 0 else 81000) + (if b0112 then 0 else 81000) + (if b0113 then 0 else 81000) + (if b0114 then 0 else 81000) + (if b0115 then 0 else 81000) + (if b0116 then 0 else 81000) + (if b0117 then 0 else 81000) + (if b0118 then 0 else 81000) + (if b0119 then 0 else 81000) + (if b0120 then 0 else 81000) + (if b0121 then 0 else 81000) + (if b0122 then 0 else 81000) + (if b0123 then 0 else 81000) + (if b0124 then 0 else 81000) + (if b0125 then 0 else 81000) + (if b0126 then 0 else 81000) + (if b0127 then 0 else 81000) + (if b0128 then 0 else 81000) + (if b0129 then 0 else 81000) + (if b0130 then 0 else 81000) + (if b0131 then 0 else 81000) + (if b0132 then 0 else 81000) + (if b0133 then 0 else 81000) + (if b0134 then 0 else 81000) + (if b0135 then 0 else 81000) + (if b0136 then 0 else 81000) + (if b0137 then 0 else 81000) + (if b0138 then 0 else 81000) + (if b0139 then 0 else 81000) + (if b0140 then 0 else 81000) + (if b0141 then 0 else 81000) + (if b0142 then 0 else 81000) + (if b0143 then 0 else 81000) + (if b0144 then 0 else 81000) + (if b0145 then 0 else 81000) + (if b0146 then 0 else 81000) + (if b0147 then 0 else 81000) + (if b0148 then 0 else 81000) + (if b0149 then 0 else 81000) + (if b0150 then 0 else 81000) + (if b0151 then 0 else 81000) + (if b0152 then 0 else 81000) + (if b0153 then 0 else 81000) + (if b0154 then 0 else 81000) + (if b0155 then 0 else 81000) + (if b0156 then 0 else 81000) + (if b0157 then 0 else 81000) + (if b0158 then 0 else 81000) + (if b0159 then 0 else 81000) + (if b0160 then 0 else 81000) + (if b0161 then 0 else 81000) + (if b0162 then 0 else 81000) + (if b0163 then 0 else 81000) + (if b0164 then 0 else 81000) + (if b0165 then 0 else 81000) + (if b0166 then 0 else 81000) + (if b0167 then 0 else 81000) + (if b0168 then 0 else 81000) + (if b0169 then 0 else 81000) + (if b0170 then 0 else 81000) + (if b0171 then 0 else 81000) + (if b0172 then 0 else 81000) + (if b0173 then 0 else 81000) + (if b0174 then 0 else 81000) + (if b0175 then 0 else 81000) + (if b0176 then 0 else 81000) + (if b0177 then 0 else 81000) + (if b0178 then 0 else 81000) + (if b0179 then 0 else 81000) + (if b0180 then 0 else 81000) + (if b0181 then 0 else 81000) + (if b0182 then 0 else 81000) + (if b0183 then 0 else 81000) + (if b0184 then 0 else 81000) + (if b0185 then 0 else 81000) + (if b0186 then 0 else 81000) + (if b0187 then 0 else 81000) + (if b0188 then 0 else 81000) + (if b0189 then 0 else 81000) + (if b0190 then 0 else 81000) + (if b0191 then 0 else 81000) + (if b0192 then 0 else 81000) + (if b0193 then 0 else 81000) + (if b0194 then 0 else 81000) + (if b0195 then 0 else 81000) + (if b0196 then 0 else 81000) + (if b0197 then 0 else 81000) + (if b0198 then 0 else 81000) + (if b0199 then 0 else 81000) + (if b0200 then 0 else 81000) + (if b0201 then 0 else 81000) + (if b0202 then 0 else 81000) + (if b0203 then 0 else 81000) < 441
}
Prover Time taken = 13.760136
Added Horn clause: 9 => 10
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/parboil/mri-gridding/gridding/kernel.bpl.ice2.bpl
Total learner time was 00:00:00.1227000
Verifying $gridding_GPU: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool) : bool
{
  0 + (if b0000 then 0 else 81000) + (if b0001 then 0 else 81000) + (if b0002 then 0 else 81000) + (if b0003 then 0 else 81000) + (if b0004 then 0 else 81000) + (if b0005 then 0 else 81000) + (if b0006 then 0 else 81000) + (if b0007 then 0 else 81000) + (if b0008 then 0 else 81000) + (if b0010 then 0 else 81000) + (if b0011 then 0 else 81000) + (if b0012 then 0 else 81000) + (if b0013 then 0 else 81000) + (if b0014 then 0 else 81000) + (if b0015 then 0 else 81000) + (if b0016 then 0 else 81000) + (if b0017 then 0 else 81000) + (if b0018 then 0 else 81000) + (if b0019 then 0 else 81000) + (if b0020 then 0 else 81000) + (if b0021 then 0 else 81000) + (if b0022 then 0 else 81000) + (if b0023 then 0 else 81000) + (if b0024 then 0 else 81000) + (if b0025 then 0 else 81000) + (if b0026 then 0 else 81000) + (if b0027 then 0 else 81000) + (if b0028 then 0 else 81000) + (if b0029 then 0 else 81000) + (if b0030 then 0 else 81000) + (if b0031 then 0 else 81000) + (if b0032 then 0 else 81000) + (if b0033 then 0 else 81000) + (if b0034 then 0 else 81000) + (if b0035 then 0 else 81000) + (if b0036 then 0 else 81000) + (if b0037 then 0 else 81000) + (if b0038 then 0 else 81000) + (if b0039 then 0 else 81000) + (if b0040 then 0 else 81000) + (if b0041 then 0 else 81000) + (if b0042 then 0 else 81000) + (if b0043 then 0 else 81000) + (if b0044 then 0 else 81000) + (if b0095 then 0 else 81000) + (if b0096 then 0 else 81000) + (if b0097 then 0 else 81000) + (if b0098 then 0 else 81000) + (if b0100 then 0 else 81000) + (if b0101 then 0 else 81000) + (if b0102 then 0 else 81000) + (if b0109 then 0 else 81000) + (if b0112 then 0 else 81000) + (if b0114 then 0 else 81000) + (if b0116 then 0 else 81000) + (if b0124 then 0 else 81000) + (if b0125 then 0 else 81000) + (if b0126 then 0 else 81000) + (if b0130 then 0 else 81000) + (if b0131 then 0 else 81000) + (if b0135 then 0 else 81000) + (if b0144 then 0 else 81000) + (if b0149 then 0 else 81000) + (if b0150 then 0 else 81000) + (if b0151 then 0 else 81000) + (if b0152 then 0 else 81000) + (if b0153 then 0 else 81000) + (if b0154 then 0 else 81000) + (if b0155 then 0 else 81000) + (if b0156 then 0 else 81000) + (if b0157 then 0 else 81000) + (if b0158 then 0 else 81000) + (if b0159 then 0 else 81000) + (if b0160 then 0 else 81000) + (if b0161 then 0 else 81000) + (if b0162 then 0 else 81000) + (if b0163 then 0 else 81000) + (if b0164 then 0 else 81000) + (if b0165 then 0 else 81000) + (if b0166 then 0 else 81000) + (if b0167 then 0 else 81000) + (if b0168 then 0 else 81000) + (if b0169 then 0 else 81000) + (if b0170 then 0 else 81000) + (if b0171 then 0 else 81000) + (if b0172 then 0 else 81000) + (if b0173 then 0 else 81000) + (if b0174 then 0 else 81000) + (if b0175 then 0 else 81000) + (if b0176 then 0 else 81000) + (if b0177 then 0 else 81000) + (if b0178 then 0 else 81000) + (if b0179 then 0 else 81000) + (if b0180 then 0 else 81000) + (if b0181 then 0 else 81000) + (if b0182 then 0 else 81000) + (if b0183 then 0 else 81000) + (if b0184 then 0 else 81000) + (if b0185 then 0 else 81000) + (if b0186 then 0 else 81000) + (if b0187 then 0 else 81000) + (if b0188 then 0 else 81000) + (if b0189 then 0 else 81000) + (if b0190 then 0 else 81000) + (if b0191 then 0 else 81000) + (if b0192 then 0 else 81000) + (if b0193 then 0 else 81000) + (if b0194 then 0 else 81000) + (if b0195 then 0 else 81000) + (if b0196 then 0 else 81000) + (if b0197 then 0 else 81000) + (if b0198 then 0 else 81000) + (if b0199 then 0 else 81000) + (if b0200 then 0 else 81000) + (if b0201 then 0 else 81000) + (if b0202 then 0 else 81000) + (if b0203 then 0 else 81000) < 441
}
Prover Time taken = 13.228754
Added Horn clause: 11 => 12
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/parboil/mri-gridding/gridding/kernel.bpl.ice2.bpl
Total learner time was 00:00:00.1263940
Verifying $gridding_GPU: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool) : bool
{
  0 + (if b0000 then 0 else 81000) + (if b0001 then 0 else 81000) + (if b0002 then 0 else 81000) + (if b0003 then 0 else 81000) + (if b0004 then 0 else 81000) + (if b0005 then 0 else 81000) + (if b0006 then 0 else 81000) + (if b0007 then 0 else 81000) + (if b0008 then 0 else 81000) + (if b0010 then 0 else 81000) + (if b0011 then 0 else 81000) + (if b0012 then 0 else 81000) + (if b0013 then 0 else 81000) + (if b0014 then 0 else 81000) + (if b0015 then 0 else 81000) + (if b0016 then 0 else 81000) + (if b0017 then 0 else 81000) + (if b0018 then 0 else 81000) + (if b0019 then 0 else 81000) + (if b0020 then 0 else 81000) + (if b0021 then 0 else 81000) + (if b0022 then 0 else 81000) + (if b0023 then 0 else 81000) + (if b0024 then 0 else 81000) + (if b0025 then 0 else 81000) + (if b0026 then 0 else 81000) + (if b0027 then 0 else 81000) + (if b0028 then 0 else 81000) + (if b0029 then 0 else 81000) + (if b0030 then 0 else 81000) + (if b0031 then 0 else 81000) + (if b0032 then 0 else 81000) + (if b0033 then 0 else 81000) + (if b0034 then 0 else 81000) + (if b0035 then 0 else 81000) + (if b0036 then 0 else 81000) + (if b0037 then 0 else 81000) + (if b0038 then 0 else 81000) + (if b0039 then 0 else 81000) + (if b0040 then 0 else 81000) + (if b0041 then 0 else 81000) + (if b0042 then 0 else 81000) + (if b0043 then 0 else 81000) + (if b0044 then 0 else 81000) + (if b0095 then 0 else 81000) + (if b0096 then 0 else 81000) + (if b0097 then 0 else 81000) + (if b0098 then 0 else 81000) + (if b0100 then 0 else 81000) + (if b0101 then 0 else 81000) + (if b0102 then 0 else 81000) + (if b0149 then 0 else 81000) + (if b0150 then 0 else 81000) + (if b0151 then 0 else 81000) + (if b0152 then 0 else 81000) + (if b0153 then 0 else 81000) + (if b0154 then 0 else 81000) + (if b0155 then 0 else 81000) + (if b0156 then 0 else 81000) + (if b0157 then 0 else 81000) + (if b0158 then 0 else 81000) + (if b0159 then 0 else 81000) + (if b0160 then 0 else 81000) + (if b0161 then 0 else 81000) + (if b0162 then 0 else 81000) + (if b0163 then 0 else 81000) + (if b0164 then 0 else 81000) + (if b0165 then 0 else 81000) + (if b0166 then 0 else 81000) + (if b0167 then 0 else 81000) + (if b0168 then 0 else 81000) + (if b0169 then 0 else 81000) + (if b0170 then 0 else 81000) + (if b0171 then 0 else 81000) + (if b0172 then 0 else 81000) + (if b0173 then 0 else 81000) + (if b0174 then 0 else 81000) + (if b0175 then 0 else 81000) + (if b0176 then 0 else 81000) + (if b0177 then 0 else 81000) + (if b0178 then 0 else 81000) + (if b0179 then 0 else 81000) + (if b0180 then 0 else 81000) + (if b0181 then 0 else 81000) + (if b0182 then 0 else 81000) + (if b0183 then 0 else 81000) + (if b0184 then 0 else 81000) + (if b0185 then 0 else 81000) + (if b0186 then 0 else 81000) + (if b0187 then 0 else 81000) + (if b0188 then 0 else 81000) + (if b0189 then 0 else 81000) + (if b0190 then 0 else 81000) + (if b0191 then 0 else 81000) + (if b0192 then 0 else 81000) + (if b0193 then 0 else 81000) + (if b0194 then 0 else 81000) + (if b0195 then 0 else 81000) + (if b0196 then 0 else 81000) + (if b0197 then 0 else 81000) + (if b0198 then 0 else 81000) + (if b0199 then 0 else 81000) + (if b0200 then 0 else 81000) + (if b0201 then 0 else 81000) + (if b0202 then 0 else 81000) + (if b0203 then 0 else 81000) < 441
}
Prover Time taken = 9.521804
Added Horn clause: 13 && 0 && 0 && 0 && 0 && 0 && 0 => 14
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/parboil/mri-gridding/gridding/kernel.bpl.ice2.bpl
Total learner time was 00:00:00.1197280
Verifying $gridding_GPU: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool) : bool
{
  0 + (if b0000 then 0 else 81000) + (if b0002 then 0 else 81000) + (if b0004 then 0 else 81000) + (if b0006 then 0 else 81000) + (if b0007 then 0 else 81000) + (if b0008 then 0 else 81000) + (if b0010 then 0 else 81000) + (if b0011 then 0 else 81000) + (if b0012 then 0 else 81000) + (if b0013 then 0 else 81000) + (if b0014 then 0 else 81000) + (if b0015 then 0 else 81000) + (if b0016 then 0 else 81000) + (if b0017 then 0 else 81000) + (if b0018 then 0 else 81000) + (if b0019 then 0 else 81000) + (if b0020 then 0 else 81000) + (if b0021 then 0 else 81000) + (if b0022 then 0 else 81000) + (if b0023 then 0 else 81000) + (if b0024 then 0 else 81000) + (if b0025 then 0 else 81000) + (if b0026 then 0 else 81000) + (if b0027 then 0 else 81000) + (if b0028 then 0 else 81000) + (if b0029 then 0 else 81000) + (if b0030 then 0 else 81000) + (if b0031 then 0 else 81000) + (if b0032 then 0 else 81000) + (if b0033 then 0 else 81000) + (if b0034 then 0 else 81000) + (if b0035 then 0 else 81000) + (if b0036 then 0 else 81000) + (if b0037 then 0 else 81000) + (if b0038 then 0 else 81000) + (if b0039 then 0 else 81000) + (if b0040 then 0 else 81000) + (if b0042 then 0 else 81000) + (if b0043 then 0 else 81000) + (if b0044 then 0 else 81000) + (if b0095 then 0 else 81000) + (if b0096 then 0 else 81000) + (if b0097 then 0 else 81000) + (if b0098 then 0 else 81000) + (if b0100 then 0 else 81000) + (if b0101 then 0 else 81000) + (if b0102 then 0 else 81000) + (if b0149 then 0 else 81000) + (if b0150 then 0 else 81000) + (if b0151 then 0 else 81000) + (if b0152 then 0 else 81000) + (if b0153 then 0 else 81000) + (if b0154 then 0 else 81000) + (if b0155 then 0 else 81000) + (if b0156 then 0 else 81000) + (if b0157 then 0 else 81000) + (if b0158 then 0 else 81000) + (if b0159 then 0 else 81000) + (if b0160 then 0 else 81000) + (if b0161 then 0 else 81000) + (if b0162 then 0 else 81000) + (if b0163 then 0 else 81000) + (if b0164 then 0 else 81000) + (if b0165 then 0 else 81000) + (if b0166 then 0 else 81000) + (if b0167 then 0 else 81000) + (if b0168 then 0 else 81000) + (if b0169 then 0 else 81000) + (if b0170 then 0 else 81000) + (if b0171 then 0 else 81000) + (if b0172 then 0 else 81000) + (if b0173 then 0 else 81000) + (if b0174 then 0 else 81000) + (if b0175 then 0 else 81000) + (if b0176 then 0 else 81000) + (if b0177 then 0 else 81000) + (if b0178 then 0 else 81000) + (if b0179 then 0 else 81000) + (if b0180 then 0 else 81000) + (if b0181 then 0 else 81000) + (if b0182 then 0 else 81000) + (if b0183 then 0 else 81000) + (if b0184 then 0 else 81000) + (if b0185 then 0 else 81000) + (if b0186 then 0 else 81000) + (if b0187 then 0 else 81000) + (if b0188 then 0 else 81000) + (if b0189 then 0 else 81000) + (if b0190 then 0 else 81000) + (if b0191 then 0 else 81000) + (if b0192 then 0 else 81000) + (if b0193 then 0 else 81000) + (if b0194 then 0 else 81000) + (if b0195 then 0 else 81000) + (if b0196 then 0 else 81000) + (if b0197 then 0 else 81000) + (if b0198 then 0 else 81000) + (if b0199 then 0 else 81000) + (if b0200 then 0 else 81000) + (if b0201 then 0 else 81000) + (if b0202 then 0 else 81000) + (if b0203 then 0 else 81000) < 441
}
Prover Time taken = 11.218993
Added Horn clause: 14 && 6 && 8 => 15
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/parboil/mri-gridding/gridding/kernel.bpl.ice2.bpl
Total learner time was 00:00:00.1222750
Verifying $gridding_GPU: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool) : bool
{
  0 + (if b0000 then 0 else 81000) + (if b0002 then 0 else 81000) + (if b0004 then 0 else 81000) + (if b0006 then 0 else 81000) + (if b0007 then 0 else 81000) + (if b0008 then 0 else 81000) + (if b0010 then 0 else 81000) + (if b0011 then 0 else 81000) + (if b0012 then 0 else 81000) + (if b0013 then 0 else 81000) + (if b0014 then 0 else 81000) + (if b0015 then 0 else 81000) + (if b0016 then 0 else 81000) + (if b0017 then 0 else 81000) + (if b0018 then 0 else 81000) + (if b0019 then 0 else 81000) + (if b0020 then 0 else 81000) + (if b0021 then 0 else 81000) + (if b0022 then 0 else 81000) + (if b0023 then 0 else 81000) + (if b0024 then 0 else 81000) + (if b0025 then 0 else 81000) + (if b0026 then 0 else 81000) + (if b0027 then 0 else 81000) + (if b0028 then 0 else 81000) + (if b0029 then 0 else 81000) + (if b0030 then 0 else 81000) + (if b0031 then 0 else 81000) + (if b0032 then 0 else 81000) + (if b0033 then 0 else 81000) + (if b0034 then 0 else 81000) + (if b0035 then 0 else 81000) + (if b0036 then 0 else 81000) + (if b0037 then 0 else 81000) + (if b0038 then 0 else 81000) + (if b0039 then 0 else 81000) + (if b0040 then 0 else 81000) + (if b0042 then 0 else 81000) + (if b0043 then 0 else 81000) + (if b0044 then 0 else 81000) + (if b0095 then 0 else 81000) + (if b0096 then 0 else 81000) + (if b0097 then 0 else 81000) + (if b0098 then 0 else 81000) + (if b0100 then 0 else 81000) + (if b0101 then 0 else 81000) + (if b0102 then 0 else 81000) + (if b0149 then 0 else 81000) + (if b0150 then 0 else 81000) + (if b0151 then 0 else 81000) + (if b0152 then 0 else 81000) + (if b0153 then 0 else 81000) + (if b0154 then 0 else 81000) + (if b0156 then 0 else 81000) + (if b0157 then 0 else 81000) + (if b0158 then 0 else 81000) + (if b0159 then 0 else 81000) + (if b0160 then 0 else 81000) + (if b0161 then 0 else 81000) + (if b0162 then 0 else 81000) + (if b0163 then 0 else 81000) + (if b0164 then 0 else 81000) + (if b0165 then 0 else 81000) + (if b0166 then 0 else 81000) + (if b0167 then 0 else 81000) + (if b0168 then 0 else 81000) + (if b0169 then 0 else 81000) + (if b0170 then 0 else 81000) + (if b0171 then 0 else 81000) + (if b0172 then 0 else 81000) + (if b0173 then 0 else 81000) + (if b0174 then 0 else 81000) + (if b0175 then 0 else 81000) + (if b0176 then 0 else 81000) + (if b0177 then 0 else 81000) + (if b0178 then 0 else 81000) + (if b0179 then 0 else 81000) + (if b0180 then 0 else 81000) + (if b0181 then 0 else 81000) + (if b0182 then 0 else 81000) + (if b0183 then 0 else 81000) + (if b0184 then 0 else 81000) + (if b0185 then 0 else 81000) + (if b0186 then 0 else 81000) + (if b0187 then 0 else 81000) + (if b0188 then 0 else 81000) + (if b0189 then 0 else 81000) + (if b0190 then 0 else 81000) + (if b0191 then 0 else 81000) + (if b0192 then 0 else 81000) + (if b0193 then 0 else 81000) + (if b0194 then 0 else 81000) + (if b0195 then 0 else 81000) + (if b0196 then 0 else 81000) + (if b0197 then 0 else 81000) + (if b0198 then 0 else 81000) + (if b0199 then 0 else 81000) + (if b0200 then 0 else 81000) + (if b0201 then 0 else 81000) + (if b0202 then 0 else 81000) + (if b0203 then 0 else 81000) < 441
}
Prover Time taken = 7.235475
Added Horn clause: 14 && 6 && 8 => 16
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/parboil/mri-gridding/gridding/kernel.bpl.ice2.bpl
Total learner time was 00:00:00.1237810
Verifying $gridding_GPU: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool) : bool
{
  0 + (if b0000 then 0 else 81000) + (if b0002 then 0 else 81000) + (if b0004 then 0 else 81000) + (if b0006 then 0 else 81000) + (if b0007 then 0 else 81000) + (if b0008 then 0 else 81000) + (if b0010 then 0 else 81000) + (if b0011 then 0 else 81000) + (if b0012 then 0 else 81000) + (if b0013 then 0 else 81000) + (if b0014 then 0 else 81000) + (if b0015 then 0 else 81000) + (if b0016 then 0 else 81000) + (if b0017 then 0 else 81000) + (if b0018 then 0 else 81000) + (if b0020 then 0 else 81000) + (if b0021 then 0 else 81000) + (if b0022 then 0 else 81000) + (if b0023 then 0 else 81000) + (if b0024 then 0 else 81000) + (if b0025 then 0 else 81000) + (if b0026 then 0 else 81000) + (if b0027 then 0 else 81000) + (if b0028 then 0 else 81000) + (if b0029 then 0 else 81000) + (if b0030 then 0 else 81000) + (if b0031 then 0 else 81000) + (if b0032 then 0 else 81000) + (if b0033 then 0 else 81000) + (if b0034 then 0 else 81000) + (if b0035 then 0 else 81000) + (if b0036 then 0 else 81000) + (if b0037 then 0 else 81000) + (if b0038 then 0 else 81000) + (if b0039 then 0 else 81000) + (if b0040 then 0 else 81000) + (if b0042 then 0 else 81000) + (if b0043 then 0 else 81000) + (if b0044 then 0 else 81000) + (if b0095 then 0 else 81000) + (if b0096 then 0 else 81000) + (if b0097 then 0 else 81000) + (if b0098 then 0 else 81000) + (if b0100 then 0 else 81000) + (if b0101 then 0 else 81000) + (if b0102 then 0 else 81000) + (if b0149 then 0 else 81000) + (if b0150 then 0 else 81000) + (if b0151 then 0 else 81000) + (if b0152 then 0 else 81000) + (if b0153 then 0 else 81000) + (if b0154 then 0 else 81000) + (if b0156 then 0 else 81000) + (if b0157 then 0 else 81000) + (if b0158 then 0 else 81000) + (if b0159 then 0 else 81000) + (if b0160 then 0 else 81000) + (if b0161 then 0 else 81000) + (if b0162 then 0 else 81000) + (if b0163 then 0 else 81000) + (if b0164 then 0 else 81000) + (if b0165 then 0 else 81000) + (if b0166 then 0 else 81000) + (if b0167 then 0 else 81000) + (if b0168 then 0 else 81000) + (if b0169 then 0 else 81000) + (if b0170 then 0 else 81000) + (if b0171 then 0 else 81000) + (if b0172 then 0 else 81000) + (if b0173 then 0 else 81000) + (if b0174 then 0 else 81000) + (if b0175 then 0 else 81000) + (if b0176 then 0 else 81000) + (if b0177 then 0 else 81000) + (if b0178 then 0 else 81000) + (if b0179 then 0 else 81000) + (if b0180 then 0 else 81000) + (if b0181 then 0 else 81000) + (if b0182 then 0 else 81000) + (if b0183 then 0 else 81000) + (if b0184 then 0 else 81000) + (if b0185 then 0 else 81000) + (if b0186 then 0 else 81000) + (if b0187 then 0 else 81000) + (if b0188 then 0 else 81000) + (if b0189 then 0 else 81000) + (if b0190 then 0 else 81000) + (if b0191 then 0 else 81000) + (if b0192 then 0 else 81000) + (if b0193 then 0 else 81000) + (if b0194 then 0 else 81000) + (if b0195 then 0 else 81000) + (if b0196 then 0 else 81000) + (if b0197 then 0 else 81000) + (if b0198 then 0 else 81000) + (if b0199 then 0 else 81000) + (if b0200 then 0 else 81000) + (if b0201 then 0 else 81000) + (if b0202 then 0 else 81000) + (if b0203 then 0 else 81000) < 441
}
Prover Time taken = 8.748871
Added Horn clause: 14 && 6 && 8 && 0 && 0 && 0 && 0 => 17
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/parboil/mri-gridding/gridding/kernel.bpl.ice2.bpl
Total learner time was 00:00:00.1255040
Verifying $gridding_GPU: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool) : bool
{
  0 + (if b0000 then 0 else 81000) + (if b0002 then 0 else 81000) + (if b0004 then 0 else 81000) + (if b0006 then 0 else 81000) + (if b0007 then 0 else 81000) + (if b0008 then 0 else 81000) + (if b0010 then 0 else 81000) + (if b0012 then 0 else 81000) + (if b0014 then 0 else 81000) + (if b0015 then 0 else 81000) + (if b0016 then 0 else 81000) + (if b0017 then 0 else 81000) + (if b0018 then 0 else 81000) + (if b0020 then 0 else 81000) + (if b0021 then 0 else 81000) + (if b0022 then 0 else 81000) + (if b0023 then 0 else 81000) + (if b0024 then 0 else 81000) + (if b0025 then 0 else 81000) + (if b0026 then 0 else 81000) + (if b0027 then 0 else 81000) + (if b0028 then 0 else 81000) + (if b0029 then 0 else 81000) + (if b0030 then 0 else 81000) + (if b0031 then 0 else 81000) + (if b0032 then 0 else 81000) + (if b0033 then 0 else 81000) + (if b0034 then 0 else 81000) + (if b0035 then 0 else 81000) + (if b0036 then 0 else 81000) + (if b0037 then 0 else 81000) + (if b0038 then 0 else 81000) + (if b0039 then 0 else 81000) + (if b0040 then 0 else 81000) + (if b0042 then 0 else 81000) + (if b0043 then 0 else 81000) + (if b0044 then 0 else 81000) + (if b0095 then 0 else 81000) + (if b0096 then 0 else 81000) + (if b0097 then 0 else 81000) + (if b0098 then 0 else 81000) + (if b0100 then 0 else 81000) + (if b0101 then 0 else 81000) + (if b0102 then 0 else 81000) + (if b0149 then 0 else 81000) + (if b0150 then 0 else 81000) + (if b0151 then 0 else 81000) + (if b0152 then 0 else 81000) + (if b0153 then 0 else 81000) + (if b0154 then 0 else 81000) + (if b0156 then 0 else 81000) + (if b0157 then 0 else 81000) + (if b0158 then 0 else 81000) + (if b0159 then 0 else 81000) + (if b0160 then 0 else 81000) + (if b0161 then 0 else 81000) + (if b0162 then 0 else 81000) + (if b0163 then 0 else 81000) + (if b0164 then 0 else 81000) + (if b0165 then 0 else 81000) + (if b0166 then 0 else 81000) + (if b0167 then 0 else 81000) + (if b0168 then 0 else 81000) + (if b0169 then 0 else 81000) + (if b0170 then 0 else 81000) + (if b0171 then 0 else 81000) + (if b0172 then 0 else 81000) + (if b0173 then 0 else 81000) + (if b0174 then 0 else 81000) + (if b0175 then 0 else 81000) + (if b0176 then 0 else 81000) + (if b0177 then 0 else 81000) + (if b0178 then 0 else 81000) + (if b0179 then 0 else 81000) + (if b0180 then 0 else 81000) + (if b0181 then 0 else 81000) + (if b0182 then 0 else 81000) + (if b0183 then 0 else 81000) + (if b0184 then 0 else 81000) + (if b0185 then 0 else 81000) + (if b0186 then 0 else 81000) + (if b0187 then 0 else 81000) + (if b0188 then 0 else 81000) + (if b0189 then 0 else 81000) + (if b0190 then 0 else 81000) + (if b0191 then 0 else 81000) + (if b0192 then 0 else 81000) + (if b0193 then 0 else 81000) + (if b0194 then 0 else 81000) + (if b0195 then 0 else 81000) + (if b0196 then 0 else 81000) + (if b0197 then 0 else 81000) + (if b0198 then 0 else 81000) + (if b0199 then 0 else 81000) + (if b0200 then 0 else 81000) + (if b0201 then 0 else 81000) + (if b0202 then 0 else 81000) + (if b0203 then 0 else 81000) < 441
}
Prover Time taken = 6.752883
Added Horn clause: 14 && 6 && 17 && 15 && 16 && 0 && 0 => 18
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/parboil/mri-gridding/gridding/kernel.bpl.ice2.bpl
Total learner time was 00:00:00.1203930
Verifying $gridding_GPU: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool) : bool
{
  0 + (if b0000 then 0 else 81000) + (if b0002 then 0 else 81000) + (if b0004 then 0 else 81000) + (if b0006 then 0 else 81000) + (if b0007 then 0 else 81000) + (if b0008 then 0 else 81000) + (if b0010 then 0 else 81000) + (if b0012 then 0 else 81000) + (if b0014 then 0 else 81000) + (if b0015 then 0 else 81000) + (if b0016 then 0 else 81000) + (if b0017 then 0 else 81000) + (if b0018 then 0 else 81000) + (if b0020 then 0 else 81000) + (if b0022 then 0 else 81000) + (if b0024 then 0 else 81000) + (if b0025 then 0 else 81000) + (if b0026 then 0 else 81000) + (if b0027 then 0 else 81000) + (if b0028 then 0 else 81000) + (if b0029 then 0 else 81000) + (if b0030 then 0 else 81000) + (if b0031 then 0 else 81000) + (if b0032 then 0 else 81000) + (if b0033 then 0 else 81000) + (if b0034 then 0 else 81000) + (if b0035 then 0 else 81000) + (if b0036 then 0 else 81000) + (if b0037 then 0 else 81000) + (if b0038 then 0 else 81000) + (if b0039 then 0 else 81000) + (if b0040 then 0 else 81000) + (if b0042 then 0 else 81000) + (if b0043 then 0 else 81000) + (if b0044 then 0 else 81000) + (if b0095 then 0 else 81000) + (if b0096 then 0 else 81000) + (if b0097 then 0 else 81000) + (if b0098 then 0 else 81000) + (if b0100 then 0 else 81000) + (if b0101 then 0 else 81000) + (if b0102 then 0 else 81000) + (if b0149 then 0 else 81000) + (if b0150 then 0 else 81000) + (if b0151 then 0 else 81000) + (if b0152 then 0 else 81000) + (if b0153 then 0 else 81000) + (if b0154 then 0 else 81000) + (if b0156 then 0 else 81000) + (if b0157 then 0 else 81000) + (if b0158 then 0 else 81000) + (if b0159 then 0 else 81000) + (if b0160 then 0 else 81000) + (if b0161 then 0 else 81000) + (if b0162 then 0 else 81000) + (if b0163 then 0 else 81000) + (if b0164 then 0 else 81000) + (if b0165 then 0 else 81000) + (if b0166 then 0 else 81000) + (if b0167 then 0 else 81000) + (if b0168 then 0 else 81000) + (if b0169 then 0 else 81000) + (if b0170 then 0 else 81000) + (if b0171 then 0 else 81000) + (if b0172 then 0 else 81000) + (if b0173 then 0 else 81000) + (if b0174 then 0 else 81000) + (if b0175 then 0 else 81000) + (if b0176 then 0 else 81000) + (if b0177 then 0 else 81000) + (if b0178 then 0 else 81000) + (if b0179 then 0 else 81000) + (if b0180 then 0 else 81000) + (if b0181 then 0 else 81000) + (if b0182 then 0 else 81000) + (if b0183 then 0 else 81000) + (if b0184 then 0 else 81000) + (if b0185 then 0 else 81000) + (if b0186 then 0 else 81000) + (if b0187 then 0 else 81000) + (if b0188 then 0 else 81000) + (if b0189 then 0 else 81000) + (if b0190 then 0 else 81000) + (if b0191 then 0 else 81000) + (if b0192 then 0 else 81000) + (if b0193 then 0 else 81000) + (if b0194 then 0 else 81000) + (if b0195 then 0 else 81000) + (if b0196 then 0 else 81000) + (if b0197 then 0 else 81000) + (if b0198 then 0 else 81000) + (if b0199 then 0 else 81000) + (if b0200 then 0 else 81000) + (if b0201 then 0 else 81000) + (if b0202 then 0 else 81000) + (if b0203 then 0 else 81000) < 441
}
Prover Time taken = 5.292439
Added Horn clause: 19 && 6 && 17 && 15 && 18 && 0 && 0 => 20
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/parboil/mri-gridding/gridding/kernel.bpl.ice2.bpl
Total learner time was 00:00:00.1222990
Verifying $gridding_GPU: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool) : bool
{
  0 + (if b0000 then 0 else 81000) + (if b0002 then 0 else 81000) + (if b0004 then 0 else 81000) + (if b0006 then 0 else 81000) + (if b0007 then 0 else 81000) + (if b0008 then 0 else 81000) + (if b0010 then 0 else 81000) + (if b0012 then 0 else 81000) + (if b0014 then 0 else 81000) + (if b0015 then 0 else 81000) + (if b0016 then 0 else 81000) + (if b0017 then 0 else 81000) + (if b0018 then 0 else 81000) + (if b0020 then 0 else 81000) + (if b0022 then 0 else 81000) + (if b0024 then 0 else 81000) + (if b0025 then 0 else 81000) + (if b0026 then 0 else 81000) + (if b0027 then 0 else 81000) + (if b0028 then 0 else 81000) + (if b0029 then 0 else 81000) + (if b0030 then 0 else 81000) + (if b0031 then 0 else 81000) + (if b0033 then 0 else 81000) + (if b0035 then 0 else 81000) + (if b0036 then 0 else 81000) + (if b0037 then 0 else 81000) + (if b0038 then 0 else 81000) + (if b0039 then 0 else 81000) + (if b0040 then 0 else 81000) + (if b0042 then 0 else 81000) + (if b0043 then 0 else 81000) + (if b0044 then 0 else 81000) + (if b0095 then 0 else 81000) + (if b0096 then 0 else 81000) + (if b0097 then 0 else 81000) + (if b0098 then 0 else 81000) + (if b0100 then 0 else 81000) + (if b0101 then 0 else 81000) + (if b0102 then 0 else 81000) + (if b0149 then 0 else 81000) + (if b0150 then 0 else 81000) + (if b0151 then 0 else 81000) + (if b0152 then 0 else 81000) + (if b0153 then 0 else 81000) + (if b0154 then 0 else 81000) + (if b0156 then 0 else 81000) + (if b0157 then 0 else 81000) + (if b0158 then 0 else 81000) + (if b0159 then 0 else 81000) + (if b0160 then 0 else 81000) + (if b0161 then 0 else 81000) + (if b0162 then 0 else 81000) + (if b0163 then 0 else 81000) + (if b0164 then 0 else 81000) + (if b0165 then 0 else 81000) + (if b0166 then 0 else 81000) + (if b0167 then 0 else 81000) + (if b0168 then 0 else 81000) + (if b0169 then 0 else 81000) + (if b0170 then 0 else 81000) + (if b0171 then 0 else 81000) + (if b0172 then 0 else 81000) + (if b0173 then 0 else 81000) + (if b0174 then 0 else 81000) + (if b0175 then 0 else 81000) + (if b0176 then 0 else 81000) + (if b0177 then 0 else 81000) + (if b0178 then 0 else 81000) + (if b0179 then 0 else 81000) + (if b0180 then 0 else 81000) + (if b0181 then 0 else 81000) + (if b0182 then 0 else 81000) + (if b0183 then 0 else 81000) + (if b0184 then 0 else 81000) + (if b0185 then 0 else 81000) + (if b0186 then 0 else 81000) + (if b0187 then 0 else 81000) + (if b0188 then 0 else 81000) + (if b0189 then 0 else 81000) + (if b0190 then 0 else 81000) + (if b0191 then 0 else 81000) + (if b0192 then 0 else 81000) + (if b0193 then 0 else 81000) + (if b0194 then 0 else 81000) + (if b0195 then 0 else 81000) + (if b0196 then 0 else 81000) + (if b0197 then 0 else 81000) + (if b0198 then 0 else 81000) + (if b0199 then 0 else 81000) + (if b0200 then 0 else 81000) + (if b0201 then 0 else 81000) + (if b0202 then 0 else 81000) + (if b0203 then 0 else 81000) < 441
}
Prover Time taken = 7.691852
Added Horn clause: 21 && 0 && 0 && 0 && 0 && 0 && 0 => 22
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/parboil/mri-gridding/gridding/kernel.bpl.ice2.bpl
Total learner time was 00:00:00.1216080
Verifying $gridding_GPU: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool) : bool
{
  0 + (if b0000 then 0 else 81000) + (if b0002 then 0 else 81000) + (if b0004 then 0 else 81000) + (if b0006 then 0 else 81000) + (if b0007 then 0 else 81000) + (if b0008 then 0 else 81000) + (if b0010 then 0 else 81000) + (if b0012 then 0 else 81000) + (if b0014 then 0 else 81000) + (if b0015 then 0 else 81000) + (if b0016 then 0 else 81000) + (if b0017 then 0 else 81000) + (if b0018 then 0 else 81000) + (if b0020 then 0 else 81000) + (if b0022 then 0 else 81000) + (if b0024 then 0 else 81000) + (if b0025 then 0 else 81000) + (if b0026 then 0 else 81000) + (if b0027 then 0 else 81000) + (if b0028 then 0 else 81000) + (if b0029 then 0 else 81000) + (if b0030 then 0 else 81000) + (if b0031 then 0 else 81000) + (if b0033 then 0 else 81000) + (if b0035 then 0 else 81000) + (if b0036 then 0 else 81000) + (if b0037 then 0 else 81000) + (if b0038 then 0 else 81000) + (if b0039 then 0 else 81000) + (if b0040 then 0 else 81000) + (if b0042 then 0 else 81000) + (if b0043 then 0 else 81000) + (if b0095 then 0 else 81000) + (if b0096 then 0 else 81000) + (if b0097 then 0 else 81000) + (if b0098 then 0 else 81000) + (if b0100 then 0 else 81000) + (if b0101 then 0 else 81000) + (if b0102 then 0 else 81000) + (if b0149 then 0 else 81000) + (if b0150 then 0 else 81000) + (if b0151 then 0 else 81000) + (if b0152 then 0 else 81000) + (if b0153 then 0 else 81000) + (if b0154 then 0 else 81000) + (if b0156 then 0 else 81000) + (if b0157 then 0 else 81000) + (if b0158 then 0 else 81000) + (if b0159 then 0 else 81000) + (if b0160 then 0 else 81000) + (if b0161 then 0 else 81000) + (if b0162 then 0 else 81000) + (if b0163 then 0 else 81000) + (if b0164 then 0 else 81000) + (if b0165 then 0 else 81000) + (if b0166 then 0 else 81000) + (if b0167 then 0 else 81000) + (if b0168 then 0 else 81000) + (if b0169 then 0 else 81000) + (if b0170 then 0 else 81000) + (if b0171 then 0 else 81000) + (if b0172 then 0 else 81000) + (if b0173 then 0 else 81000) + (if b0174 then 0 else 81000) + (if b0175 then 0 else 81000) + (if b0176 then 0 else 81000) + (if b0177 then 0 else 81000) + (if b0178 then 0 else 81000) + (if b0179 then 0 else 81000) + (if b0180 then 0 else 81000) + (if b0181 then 0 else 81000) + (if b0182 then 0 else 81000) + (if b0183 then 0 else 81000) + (if b0184 then 0 else 81000) + (if b0185 then 0 else 81000) + (if b0186 then 0 else 81000) + (if b0187 then 0 else 81000) + (if b0188 then 0 else 81000) + (if b0189 then 0 else 81000) + (if b0190 then 0 else 81000) + (if b0191 then 0 else 81000) + (if b0192 then 0 else 81000) + (if b0193 then 0 else 81000) + (if b0194 then 0 else 81000) + (if b0195 then 0 else 81000) + (if b0196 then 0 else 81000) + (if b0197 then 0 else 81000) + (if b0198 then 0 else 81000) + (if b0199 then 0 else 81000) + (if b0200 then 0 else 81000) + (if b0201 then 0 else 81000) + (if b0202 then 0 else 81000) + (if b0203 then 0 else 81000) < 441
}
Prover Time taken = 11.85936
Added Horn clause: 23 => 24
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/parboil/mri-gridding/gridding/kernel.bpl.ice2.bpl
Total learner time was 00:00:00.1206080
Verifying $gridding_GPU: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool) : bool
{
  0 + (if b0000 then 0 else 81000) + (if b0002 then 0 else 81000) + (if b0004 then 0 else 81000) + (if b0006 then 0 else 81000) + (if b0007 then 0 else 81000) + (if b0008 then 0 else 81000) + (if b0010 then 0 else 81000) + (if b0012 then 0 else 81000) + (if b0014 then 0 else 81000) + (if b0015 then 0 else 81000) + (if b0016 then 0 else 81000) + (if b0017 then 0 else 81000) + (if b0018 then 0 else 81000) + (if b0020 then 0 else 81000) + (if b0022 then 0 else 81000) + (if b0024 then 0 else 81000) + (if b0025 then 0 else 81000) + (if b0026 then 0 else 81000) + (if b0027 then 0 else 81000) + (if b0028 then 0 else 81000) + (if b0029 then 0 else 81000) + (if b0030 then 0 else 81000) + (if b0031 then 0 else 81000) + (if b0033 then 0 else 81000) + (if b0035 then 0 else 81000) + (if b0036 then 0 else 81000) + (if b0037 then 0 else 81000) + (if b0038 then 0 else 81000) + (if b0039 then 0 else 81000) + (if b0040 then 0 else 81000) + (if b0042 then 0 else 81000) + (if b0043 then 0 else 81000) + (if b0095 then 0 else 81000) + (if b0096 then 0 else 81000) + (if b0097 then 0 else 81000) + (if b0098 then 0 else 81000) + (if b0100 then 0 else 81000) + (if b0101 then 0 else 81000) + (if b0149 then 0 else 81000) + (if b0150 then 0 else 81000) + (if b0151 then 0 else 81000) + (if b0152 then 0 else 81000) + (if b0153 then 0 else 81000) + (if b0154 then 0 else 81000) + (if b0156 then 0 else 81000) + (if b0157 then 0 else 81000) + (if b0158 then 0 else 81000) + (if b0159 then 0 else 81000) + (if b0160 then 0 else 81000) + (if b0161 then 0 else 81000) + (if b0162 then 0 else 81000) + (if b0163 then 0 else 81000) + (if b0164 then 0 else 81000) + (if b0165 then 0 else 81000) + (if b0166 then 0 else 81000) + (if b0167 then 0 else 81000) + (if b0168 then 0 else 81000) + (if b0169 then 0 else 81000) + (if b0170 then 0 else 81000) + (if b0171 then 0 else 81000) + (if b0172 then 0 else 81000) + (if b0173 then 0 else 81000) + (if b0174 then 0 else 81000) + (if b0175 then 0 else 81000) + (if b0176 then 0 else 81000) + (if b0177 then 0 else 81000) + (if b0178 then 0 else 81000) + (if b0179 then 0 else 81000) + (if b0180 then 0 else 81000) + (if b0181 then 0 else 81000) + (if b0182 then 0 else 81000) + (if b0183 then 0 else 81000) + (if b0184 then 0 else 81000) + (if b0185 then 0 else 81000) + (if b0186 then 0 else 81000) + (if b0187 then 0 else 81000) + (if b0188 then 0 else 81000) + (if b0189 then 0 else 81000) + (if b0190 then 0 else 81000) + (if b0191 then 0 else 81000) + (if b0192 then 0 else 81000) + (if b0193 then 0 else 81000) + (if b0194 then 0 else 81000) + (if b0195 then 0 else 81000) + (if b0196 then 0 else 81000) + (if b0197 then 0 else 81000) + (if b0198 then 0 else 81000) + (if b0199 then 0 else 81000) + (if b0200 then 0 else 81000) + (if b0201 then 0 else 81000) + (if b0202 then 0 else 81000) + (if b0203 then 0 else 81000) < 441
}
Prover Time taken = 6.858732
Added Horn clause: 25 && 26 && 17 => 27
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/parboil/mri-gridding/gridding/kernel.bpl.ice2.bpl
Total learner time was 00:00:00.1202720
Verifying $gridding_GPU: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool) : bool
{
  0 + (if b0000 then 0 else 81000) + (if b0002 then 0 else 81000) + (if b0004 then 0 else 81000) + (if b0006 then 0 else 81000) + (if b0007 then 0 else 81000) + (if b0008 then 0 else 81000) + (if b0010 then 0 else 81000) + (if b0012 then 0 else 81000) + (if b0014 then 0 else 81000) + (if b0015 then 0 else 81000) + (if b0016 then 0 else 81000) + (if b0017 then 0 else 81000) + (if b0018 then 0 else 81000) + (if b0020 then 0 else 81000) + (if b0022 then 0 else 81000) + (if b0024 then 0 else 81000) + (if b0025 then 0 else 81000) + (if b0026 then 0 else 81000) + (if b0027 then 0 else 81000) + (if b0028 then 0 else 81000) + (if b0029 then 0 else 81000) + (if b0030 then 0 else 81000) + (if b0031 then 0 else 81000) + (if b0033 then 0 else 81000) + (if b0035 then 0 else 81000) + (if b0036 then 0 else 81000) + (if b0037 then 0 else 81000) + (if b0038 then 0 else 81000) + (if b0039 then 0 else 81000) + (if b0040 then 0 else 81000) + (if b0042 then 0 else 81000) + (if b0043 then 0 else 81000) + (if b0095 then 0 else 81000) + (if b0096 then 0 else 81000) + (if b0097 then 0 else 81000) + (if b0098 then 0 else 81000) + (if b0100 then 0 else 81000) + (if b0101 then 0 else 81000) + (if b0149 then 0 else 81000) + (if b0150 then 0 else 81000) + (if b0151 then 0 else 81000) + (if b0152 then 0 else 81000) + (if b0153 then 0 else 81000) + (if b0154 then 0 else 81000) + (if b0156 then 0 else 81000) + (if b0157 then 0 else 81000) + (if b0159 then 0 else 81000) + (if b0196 then 0 else 81000) + (if b0197 then 0 else 81000) + (if b0198 then 0 else 81000) + (if b0199 then 0 else 81000) + (if b0200 then 0 else 81000) + (if b0201 then 0 else 81000) + (if b0202 then 0 else 81000) + (if b0203 then 0 else 81000) < 441
}
Prover Time taken = 10.993017
Added Horn clause: 28 && 0 && 0 && 0 && 0 && 0 && 0 => 29
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/parboil/mri-gridding/gridding/kernel.bpl.ice2.bpl
Total learner time was 00:00:00.1227280
Verifying $gridding_GPU: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool) : bool
{
  0 + (if b0000 then 0 else 81000) + (if b0002 then 0 else 81000) + (if b0004 then 0 else 81000) + (if b0006 then 0 else 81000) + (if b0007 then 0 else 81000) + (if b0008 then 0 else 81000) + (if b0010 then 0 else 81000) + (if b0012 then 0 else 81000) + (if b0014 then 0 else 81000) + (if b0015 then 0 else 81000) + (if b0016 then 0 else 81000) + (if b0017 then 0 else 81000) + (if b0018 then 0 else 81000) + (if b0020 then 0 else 81000) + (if b0022 then 0 else 81000) + (if b0024 then 0 else 81000) + (if b0025 then 0 else 81000) + (if b0026 then 0 else 81000) + (if b0027 then 0 else 81000) + (if b0028 then 0 else 81000) + (if b0029 then 0 else 81000) + (if b0030 then 0 else 81000) + (if b0031 then 0 else 81000) + (if b0033 then 0 else 81000) + (if b0035 then 0 else 81000) + (if b0036 then 0 else 81000) + (if b0037 then 0 else 81000) + (if b0038 then 0 else 81000) + (if b0039 then 0 else 81000) + (if b0040 then 0 else 81000) + (if b0042 then 0 else 81000) + (if b0095 then 0 else 81000) + (if b0096 then 0 else 81000) + (if b0097 then 0 else 81000) + (if b0098 then 0 else 81000) + (if b0100 then 0 else 81000) + (if b0101 then 0 else 81000) + (if b0149 then 0 else 81000) + (if b0150 then 0 else 81000) + (if b0151 then 0 else 81000) + (if b0152 then 0 else 81000) + (if b0153 then 0 else 81000) + (if b0154 then 0 else 81000) + (if b0156 then 0 else 81000) + (if b0157 then 0 else 81000) + (if b0159 then 0 else 81000) + (if b0196 then 0 else 81000) + (if b0197 then 0 else 81000) + (if b0198 then 0 else 81000) + (if b0199 then 0 else 81000) + (if b0200 then 0 else 81000) + (if b0201 then 0 else 81000) + (if b0202 then 0 else 81000) + (if b0203 then 0 else 81000) < 441
}
Prover Time taken = 10.536762
Added Horn clause: 30 => 31
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/parboil/mri-gridding/gridding/kernel.bpl.ice2.bpl
Total learner time was 00:00:00.1216490
Verifying $gridding_GPU: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool) : bool
{
  0 + (if b0000 then 0 else 81000) + (if b0002 then 0 else 81000) + (if b0004 then 0 else 81000) + (if b0006 then 0 else 81000) + (if b0007 then 0 else 81000) + (if b0008 then 0 else 81000) + (if b0010 then 0 else 81000) + (if b0012 then 0 else 81000) + (if b0014 then 0 else 81000) + (if b0015 then 0 else 81000) + (if b0016 then 0 else 81000) + (if b0017 then 0 else 81000) + (if b0018 then 0 else 81000) + (if b0020 then 0 else 81000) + (if b0022 then 0 else 81000) + (if b0024 then 0 else 81000) + (if b0025 then 0 else 81000) + (if b0026 then 0 else 81000) + (if b0027 then 0 else 81000) + (if b0028 then 0 else 81000) + (if b0029 then 0 else 81000) + (if b0030 then 0 else 81000) + (if b0031 then 0 else 81000) + (if b0033 then 0 else 81000) + (if b0035 then 0 else 81000) + (if b0036 then 0 else 81000) + (if b0037 then 0 else 81000) + (if b0038 then 0 else 81000) + (if b0039 then 0 else 81000) + (if b0040 then 0 else 81000) + (if b0042 then 0 else 81000) + (if b0095 then 0 else 81000) + (if b0096 then 0 else 81000) + (if b0097 then 0 else 81000) + (if b0098 then 0 else 81000) + (if b0100 then 0 else 81000) + (if b0149 then 0 else 81000) + (if b0150 then 0 else 81000) + (if b0151 then 0 else 81000) + (if b0152 then 0 else 81000) + (if b0153 then 0 else 81000) + (if b0154 then 0 else 81000) + (if b0156 then 0 else 81000) + (if b0157 then 0 else 81000) + (if b0159 then 0 else 81000) + (if b0196 then 0 else 81000) + (if b0197 then 0 else 81000) + (if b0198 then 0 else 81000) + (if b0199 then 0 else 81000) + (if b0200 then 0 else 81000) + (if b0201 then 0 else 81000) + (if b0202 then 0 else 81000) + (if b0203 then 0 else 81000) < 441
}
Prover Time taken = 11.656001
Added Horn clause: 32 && 33 && 17 => 34
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/parboil/mri-gridding/gridding/kernel.bpl.ice2.bpl
Total learner time was 00:00:00.1210310
Verifying $gridding_GPU: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool) : bool
{
  0 + (if b0000 then 0 else 81000) + (if b0002 then 0 else 81000) + (if b0004 then 0 else 81000) + (if b0006 then 0 else 81000) + (if b0007 then 0 else 81000) + (if b0008 then 0 else 81000) + (if b0010 then 0 else 81000) + (if b0012 then 0 else 81000) + (if b0014 then 0 else 81000) + (if b0015 then 0 else 81000) + (if b0016 then 0 else 81000) + (if b0017 then 0 else 81000) + (if b0018 then 0 else 81000) + (if b0020 then 0 else 81000) + (if b0022 then 0 else 81000) + (if b0024 then 0 else 81000) + (if b0025 then 0 else 81000) + (if b0026 then 0 else 81000) + (if b0027 then 0 else 81000) + (if b0028 then 0 else 81000) + (if b0029 then 0 else 81000) + (if b0030 then 0 else 81000) + (if b0031 then 0 else 81000) + (if b0033 then 0 else 81000) + (if b0035 then 0 else 81000) + (if b0036 then 0 else 81000) + (if b0037 then 0 else 81000) + (if b0038 then 0 else 81000) + (if b0039 then 0 else 81000) + (if b0040 then 0 else 81000) + (if b0042 then 0 else 81000) + (if b0095 then 0 else 81000) + (if b0096 then 0 else 81000) + (if b0097 then 0 else 81000) + (if b0098 then 0 else 81000) + (if b0100 then 0 else 81000) + (if b0149 then 0 else 81000) + (if b0150 then 0 else 81000) + (if b0151 then 0 else 81000) + (if b0152 then 0 else 81000) + (if b0153 then 0 else 81000) + (if b0154 then 0 else 81000) + (if b0156 then 0 else 81000) + (if b0159 then 0 else 81000) + (if b0196 then 0 else 81000) + (if b0197 then 0 else 81000) + (if b0198 then 0 else 81000) + (if b0199 then 0 else 81000) + (if b0200 then 0 else 81000) + (if b0201 then 0 else 81000) + (if b0202 then 0 else 81000) + (if b0203 then 0 else 81000) < 441
}
Prover Time taken = 26.691371
Added Horn clause: 32 && 35 && 36 && 37 && 38 && 0 && 0 => 39
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/parboil/mri-gridding/gridding/kernel.bpl.ice2.bpl
Total learner time was 00:00:00.1220200
Verifying $gridding_GPU: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool) : bool
{
  0 + (if b0000 then 0 else 81000) + (if b0002 then 0 else 81000) + (if b0004 then 0 else 81000) + (if b0006 then 0 else 81000) + (if b0007 then 0 else 81000) + (if b0008 then 0 else 81000) + (if b0010 then 0 else 81000) + (if b0012 then 0 else 81000) + (if b0014 then 0 else 81000) + (if b0015 then 0 else 81000) + (if b0016 then 0 else 81000) + (if b0017 then 0 else 81000) + (if b0018 then 0 else 81000) + (if b0020 then 0 else 81000) + (if b0022 then 0 else 81000) + (if b0024 then 0 else 81000) + (if b0025 then 0 else 81000) + (if b0026 then 0 else 81000) + (if b0027 then 0 else 81000) + (if b0028 then 0 else 81000) + (if b0029 then 0 else 81000) + (if b0030 then 0 else 81000) + (if b0031 then 0 else 81000) + (if b0033 then 0 else 81000) + (if b0035 then 0 else 81000) + (if b0036 then 0 else 81000) + (if b0037 then 0 else 81000) + (if b0038 then 0 else 81000) + (if b0039 then 0 else 81000) + (if b0040 then 0 else 81000) + (if b0042 then 0 else 81000) + (if b0095 then 0 else 81000) + (if b0096 then 0 else 81000) + (if b0097 then 0 else 81000) + (if b0098 then 0 else 81000) + (if b0100 then 0 else 81000) + (if b0149 then 0 else 81000) + (if b0150 then 0 else 81000) + (if b0151 then 0 else 81000) + (if b0152 then 0 else 81000) + (if b0153 then 0 else 81000) + (if b0154 then 0 else 81000) + (if b0156 then 0 else 81000) + (if b0159 then 0 else 81000) + (if b0197 then 0 else 81000) + (if b0198 then 0 else 81000) + (if b0199 then 0 else 81000) + (if b0200 then 0 else 81000) + (if b0201 then 0 else 81000) + (if b0202 then 0 else 81000) + (if b0203 then 0 else 81000) < 441
}
Prover Time taken = 15.546998
Added Horn clause: 40 && 41 && 0 && 42 && 0 => 43
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/parboil/mri-gridding/gridding/kernel.bpl.ice2.bpl
Total learner time was 00:00:00.1218240
Verifying $gridding_GPU: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool) : bool
{
  0 + (if b0000 then 0 else 81000) + (if b0002 then 0 else 81000) + (if b0004 then 0 else 81000) + (if b0006 then 0 else 81000) + (if b0007 then 0 else 81000) + (if b0008 then 0 else 81000) + (if b0010 then 0 else 81000) + (if b0012 then 0 else 81000) + (if b0014 then 0 else 81000) + (if b0015 then 0 else 81000) + (if b0016 then 0 else 81000) + (if b0017 then 0 else 81000) + (if b0018 then 0 else 81000) + (if b0020 then 0 else 81000) + (if b0022 then 0 else 81000) + (if b0024 then 0 else 81000) + (if b0025 then 0 else 81000) + (if b0026 then 0 else 81000) + (if b0027 then 0 else 81000) + (if b0028 then 0 else 81000) + (if b0029 then 0 else 81000) + (if b0030 then 0 else 81000) + (if b0031 then 0 else 81000) + (if b0033 then 0 else 81000) + (if b0035 then 0 else 81000) + (if b0036 then 0 else 81000) + (if b0037 then 0 else 81000) + (if b0038 then 0 else 81000) + (if b0039 then 0 else 81000) + (if b0042 then 0 else 81000) + (if b0095 then 0 else 81000) + (if b0096 then 0 else 81000) + (if b0097 then 0 else 81000) + (if b0098 then 0 else 81000) + (if b0100 then 0 else 81000) + (if b0149 then 0 else 81000) + (if b0150 then 0 else 81000) + (if b0151 then 0 else 81000) + (if b0152 then 0 else 81000) + (if b0153 then 0 else 81000) + (if b0154 then 0 else 81000) + (if b0156 then 0 else 81000) + (if b0159 then 0 else 81000) + (if b0197 then 0 else 81000) + (if b0198 then 0 else 81000) + (if b0199 then 0 else 81000) + (if b0200 then 0 else 81000) + (if b0201 then 0 else 81000) + (if b0202 then 0 else 81000) + (if b0203 then 0 else 81000) < 441
}
Prover Time taken = 34.886595
Added Horn clause: 44 && 45 && 36 && 42 && 0 && 0 && 43 => 46
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/parboil/mri-gridding/gridding/kernel.bpl.ice2.bpl
Total learner time was 00:00:00.1263270
Verifying $gridding_GPU: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool) : bool
{
  0 + (if b0000 then 0 else 81000) + (if b0002 then 0 else 81000) + (if b0004 then 0 else 81000) + (if b0006 then 0 else 81000) + (if b0007 then 0 else 81000) + (if b0008 then 0 else 81000) + (if b0010 then 0 else 81000) + (if b0012 then 0 else 81000) + (if b0014 then 0 else 81000) + (if b0015 then 0 else 81000) + (if b0016 then 0 else 81000) + (if b0017 then 0 else 81000) + (if b0018 then 0 else 81000) + (if b0020 then 0 else 81000) + (if b0022 then 0 else 81000) + (if b0024 then 0 else 81000) + (if b0025 then 0 else 81000) + (if b0026 then 0 else 81000) + (if b0027 then 0 else 81000) + (if b0028 then 0 else 81000) + (if b0029 then 0 else 81000) + (if b0030 then 0 else 81000) + (if b0031 then 0 else 81000) + (if b0033 then 0 else 81000) + (if b0035 then 0 else 81000) + (if b0036 then 0 else 81000) + (if b0037 then 0 else 81000) + (if b0038 then 0 else 81000) + (if b0039 then 0 else 81000) + (if b0042 then 0 else 81000) + (if b0095 then 0 else 81000) + (if b0096 then 0 else 81000) + (if b0097 then 0 else 81000) + (if b0098 then 0 else 81000) + (if b0100 then 0 else 81000) + (if b0150 then 0 else 81000) + (if b0151 then 0 else 81000) + (if b0152 then 0 else 81000) + (if b0153 then 0 else 81000) + (if b0154 then 0 else 81000) + (if b0156 then 0 else 81000) + (if b0159 then 0 else 81000) + (if b0197 then 0 else 81000) + (if b0198 then 0 else 81000) + (if b0199 then 0 else 81000) + (if b0200 then 0 else 81000) + (if b0201 then 0 else 81000) + (if b0202 then 0 else 81000) + (if b0203 then 0 else 81000) < 441
}
Prover Time taken = 9.844923
Added Horn clause: 47 && 48 && 0 => 49
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/parboil/mri-gridding/gridding/kernel.bpl.ice2.bpl
Total learner time was 00:00:00.1211480
Verifying $gridding_GPU: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool) : bool
{
  0 + (if b0000 then 0 else 81000) + (if b0002 then 0 else 81000) + (if b0004 then 0 else 81000) + (if b0006 then 0 else 81000) + (if b0007 then 0 else 81000) + (if b0008 then 0 else 81000) + (if b0010 then 0 else 81000) + (if b0012 then 0 else 81000) + (if b0014 then 0 else 81000) + (if b0015 then 0 else 81000) + (if b0016 then 0 else 81000) + (if b0017 then 0 else 81000) + (if b0018 then 0 else 81000) + (if b0020 then 0 else 81000) + (if b0022 then 0 else 81000) + (if b0024 then 0 else 81000) + (if b0025 then 0 else 81000) + (if b0026 then 0 else 81000) + (if b0027 then 0 else 81000) + (if b0029 then 0 else 81000) + (if b0030 then 0 else 81000) + (if b0031 then 0 else 81000) + (if b0033 then 0 else 81000) + (if b0035 then 0 else 81000) + (if b0036 then 0 else 81000) + (if b0037 then 0 else 81000) + (if b0038 then 0 else 81000) + (if b0039 then 0 else 81000) + (if b0042 then 0 else 81000) + (if b0095 then 0 else 81000) + (if b0096 then 0 else 81000) + (if b0097 then 0 else 81000) + (if b0098 then 0 else 81000) + (if b0100 then 0 else 81000) + (if b0150 then 0 else 81000) + (if b0151 then 0 else 81000) + (if b0152 then 0 else 81000) + (if b0153 then 0 else 81000) + (if b0154 then 0 else 81000) + (if b0156 then 0 else 81000) + (if b0159 then 0 else 81000) + (if b0197 then 0 else 81000) + (if b0198 then 0 else 81000) + (if b0199 then 0 else 81000) + (if b0200 then 0 else 81000) + (if b0201 then 0 else 81000) + (if b0202 then 0 else 81000) + (if b0203 then 0 else 81000) < 441
}
Prover Time taken = 18.025937
Added Horn clause: 50 && 48 && 0 && 42 && 49 => 51
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/parboil/mri-gridding/gridding/kernel.bpl.ice2.bpl
Total learner time was 00:00:00.1219880
Verifying $gridding_GPU: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool) : bool
{
  0 + (if b0000 then 0 else 81000) + (if b0002 then 0 else 81000) + (if b0004 then 0 else 81000) + (if b0006 then 0 else 81000) + (if b0007 then 0 else 81000) + (if b0008 then 0 else 81000) + (if b0010 then 0 else 81000) + (if b0012 then 0 else 81000) + (if b0014 then 0 else 81000) + (if b0015 then 0 else 81000) + (if b0016 then 0 else 81000) + (if b0017 then 0 else 81000) + (if b0018 then 0 else 81000) + (if b0020 then 0 else 81000) + (if b0022 then 0 else 81000) + (if b0024 then 0 else 81000) + (if b0025 then 0 else 81000) + (if b0026 then 0 else 81000) + (if b0027 then 0 else 81000) + (if b0029 then 0 else 81000) + (if b0030 then 0 else 81000) + (if b0031 then 0 else 81000) + (if b0033 then 0 else 81000) + (if b0035 then 0 else 81000) + (if b0036 then 0 else 81000) + (if b0037 then 0 else 81000) + (if b0038 then 0 else 81000) + (if b0042 then 0 else 81000) + (if b0095 then 0 else 81000) + (if b0096 then 0 else 81000) + (if b0097 then 0 else 81000) + (if b0098 then 0 else 81000) + (if b0100 then 0 else 81000) + (if b0150 then 0 else 81000) + (if b0151 then 0 else 81000) + (if b0152 then 0 else 81000) + (if b0153 then 0 else 81000) + (if b0154 then 0 else 81000) + (if b0156 then 0 else 81000) + (if b0159 then 0 else 81000) + (if b0197 then 0 else 81000) + (if b0198 then 0 else 81000) + (if b0199 then 0 else 81000) + (if b0200 then 0 else 81000) + (if b0201 then 0 else 81000) + (if b0202 then 0 else 81000) + (if b0203 then 0 else 81000) < 441
}
Prover Time taken = 16.299563
Added Horn clause: 40 && 52 && 36 && 42 && 49 && 0 && 51 => 53
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/parboil/mri-gridding/gridding/kernel.bpl.ice2.bpl
Total learner time was 00:00:00.1223900
Verifying $gridding_GPU: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool) : bool
{
  0 + (if b0000 then 0 else 81000) + (if b0002 then 0 else 81000) + (if b0004 then 0 else 81000) + (if b0006 then 0 else 81000) + (if b0007 then 0 else 81000) + (if b0008 then 0 else 81000) + (if b0010 then 0 else 81000) + (if b0012 then 0 else 81000) + (if b0014 then 0 else 81000) + (if b0015 then 0 else 81000) + (if b0016 then 0 else 81000) + (if b0017 then 0 else 81000) + (if b0018 then 0 else 81000) + (if b0020 then 0 else 81000) + (if b0022 then 0 else 81000) + (if b0024 then 0 else 81000) + (if b0025 then 0 else 81000) + (if b0026 then 0 else 81000) + (if b0027 then 0 else 81000) + (if b0029 then 0 else 81000) + (if b0030 then 0 else 81000) + (if b0031 then 0 else 81000) + (if b0033 then 0 else 81000) + (if b0035 then 0 else 81000) + (if b0036 then 0 else 81000) + (if b0037 then 0 else 81000) + (if b0038 then 0 else 81000) + (if b0042 then 0 else 81000) + (if b0096 then 0 else 81000) + (if b0097 then 0 else 81000) + (if b0098 then 0 else 81000) + (if b0100 then 0 else 81000) + (if b0150 then 0 else 81000) + (if b0151 then 0 else 81000) + (if b0152 then 0 else 81000) + (if b0153 then 0 else 81000) + (if b0154 then 0 else 81000) + (if b0156 then 0 else 81000) + (if b0159 then 0 else 81000) + (if b0197 then 0 else 81000) + (if b0198 then 0 else 81000) + (if b0199 then 0 else 81000) + (if b0200 then 0 else 81000) + (if b0201 then 0 else 81000) + (if b0202 then 0 else 81000) + (if b0203 then 0 else 81000) < 441
}
Prover Time taken = 24.704045
Added Horn clause: 54 => 55
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/parboil/mri-gridding/gridding/kernel.bpl.ice2.bpl
Total learner time was 00:00:00.1268760
Verifying $gridding_GPU: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool) : bool
{
  0 + (if b0000 then 0 else 81000) + (if b0002 then 0 else 81000) + (if b0004 then 0 else 81000) + (if b0006 then 0 else 81000) + (if b0007 then 0 else 81000) + (if b0008 then 0 else 81000) + (if b0010 then 0 else 81000) + (if b0012 then 0 else 81000) + (if b0014 then 0 else 81000) + (if b0015 then 0 else 81000) + (if b0016 then 0 else 81000) + (if b0018 then 0 else 81000) + (if b0020 then 0 else 81000) + (if b0022 then 0 else 81000) + (if b0024 then 0 else 81000) + (if b0025 then 0 else 81000) + (if b0026 then 0 else 81000) + (if b0027 then 0 else 81000) + (if b0029 then 0 else 81000) + (if b0030 then 0 else 81000) + (if b0031 then 0 else 81000) + (if b0033 then 0 else 81000) + (if b0035 then 0 else 81000) + (if b0036 then 0 else 81000) + (if b0037 then 0 else 81000) + (if b0038 then 0 else 81000) + (if b0042 then 0 else 81000) + (if b0096 then 0 else 81000) + (if b0097 then 0 else 81000) + (if b0098 then 0 else 81000) + (if b0100 then 0 else 81000) + (if b0150 then 0 else 81000) + (if b0151 then 0 else 81000) + (if b0152 then 0 else 81000) + (if b0153 then 0 else 81000) + (if b0154 then 0 else 81000) + (if b0156 then 0 else 81000) + (if b0159 then 0 else 81000) + (if b0197 then 0 else 81000) + (if b0198 then 0 else 81000) + (if b0199 then 0 else 81000) + (if b0200 then 0 else 81000) + (if b0201 then 0 else 81000) + (if b0202 then 0 else 81000) + (if b0203 then 0 else 81000) < 441
}
Prover Time taken = 10.21064
Added Horn clause: 54 && 48 && 55 => 56
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/parboil/mri-gridding/gridding/kernel.bpl.ice2.bpl
Total learner time was 00:00:00.1235760
Verifying $gridding_GPU: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool) : bool
{
  0 + (if b0000 then 0 else 81000) + (if b0002 then 0 else 81000) + (if b0004 then 0 else 81000) + (if b0006 then 0 else 81000) + (if b0007 then 0 else 81000) + (if b0008 then 0 else 81000) + (if b0010 then 0 else 81000) + (if b0012 then 0 else 81000) + (if b0014 then 0 else 81000) + (if b0015 then 0 else 81000) + (if b0016 then 0 else 81000) + (if b0018 then 0 else 81000) + (if b0020 then 0 else 81000) + (if b0022 then 0 else 81000) + (if b0024 then 0 else 81000) + (if b0025 then 0 else 81000) + (if b0026 then 0 else 81000) + (if b0029 then 0 else 81000) + (if b0030 then 0 else 81000) + (if b0031 then 0 else 81000) + (if b0033 then 0 else 81000) + (if b0035 then 0 else 81000) + (if b0036 then 0 else 81000) + (if b0037 then 0 else 81000) + (if b0038 then 0 else 81000) + (if b0042 then 0 else 81000) + (if b0096 then 0 else 81000) + (if b0097 then 0 else 81000) + (if b0098 then 0 else 81000) + (if b0100 then 0 else 81000) + (if b0150 then 0 else 81000) + (if b0151 then 0 else 81000) + (if b0152 then 0 else 81000) + (if b0153 then 0 else 81000) + (if b0154 then 0 else 81000) + (if b0156 then 0 else 81000) + (if b0159 then 0 else 81000) + (if b0197 then 0 else 81000) + (if b0198 then 0 else 81000) + (if b0199 then 0 else 81000) + (if b0200 then 0 else 81000) + (if b0201 then 0 else 81000) + (if b0202 then 0 else 81000) + (if b0203 then 0 else 81000) < 441
}
Prover Time taken = 21.752035
Added Horn clause: 57 && 48 && 55 && 42 && 56 => 58
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/parboil/mri-gridding/gridding/kernel.bpl.ice2.bpl
Total learner time was 00:00:00.1233280
Verifying $gridding_GPU: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool) : bool
{
  0 + (if b0000 then 0 else 81000) + (if b0002 then 0 else 81000) + (if b0004 then 0 else 81000) + (if b0006 then 0 else 81000) + (if b0007 then 0 else 81000) + (if b0008 then 0 else 81000) + (if b0010 then 0 else 81000) + (if b0012 then 0 else 81000) + (if b0014 then 0 else 81000) + (if b0015 then 0 else 81000) + (if b0016 then 0 else 81000) + (if b0018 then 0 else 81000) + (if b0020 then 0 else 81000) + (if b0022 then 0 else 81000) + (if b0024 then 0 else 81000) + (if b0025 then 0 else 81000) + (if b0026 then 0 else 81000) + (if b0029 then 0 else 81000) + (if b0030 then 0 else 81000) + (if b0031 then 0 else 81000) + (if b0033 then 0 else 81000) + (if b0035 then 0 else 81000) + (if b0036 then 0 else 81000) + (if b0037 then 0 else 81000) + (if b0042 then 0 else 81000) + (if b0096 then 0 else 81000) + (if b0097 then 0 else 81000) + (if b0098 then 0 else 81000) + (if b0100 then 0 else 81000) + (if b0150 then 0 else 81000) + (if b0151 then 0 else 81000) + (if b0152 then 0 else 81000) + (if b0153 then 0 else 81000) + (if b0154 then 0 else 81000) + (if b0156 then 0 else 81000) + (if b0159 then 0 else 81000) + (if b0197 then 0 else 81000) + (if b0198 then 0 else 81000) + (if b0199 then 0 else 81000) + (if b0200 then 0 else 81000) + (if b0201 then 0 else 81000) + (if b0202 then 0 else 81000) + (if b0203 then 0 else 81000) < 441
}
Prover Time taken = 13.722427
Prover time = 381.72
Number of prover queries = 31
Learner time = 3.67
Number of learner queries = 30
Total time: 386.86
Number of positive examples:5
Number of negative examples:0
Number of Horn clauses:25
verified

Boogie program verifier finished with 1 verified, 0 errors
6.16user 4.90system 6:28.44elapsed 2%CPU (0avgtext+0avgdata 77252maxresident)k
496inputs+2288outputs (2major+153703minor)pagefaults 0swaps
FILE:parboil/mri-gridding/gridding/kernel.bpl.ice2.bpl
#################
Wed May 12 02:54:47 UTC 2021
KEY=awinnow
OUTPUT=/root/Docker/winnow_gpu_timeout.txt
[TRACE] Using prover: /root/Docker/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/root/Docker/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a winnow
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/errorLimit:1
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/parboil/mri-gridding/splitRearrange/_kernel.bpl.ice2.bpl
--------------------
Parsing /root/Docker/benchmarks/BenchmarksCompiled/awinnow/parboil/mri-gridding/splitRearrange/_kernel.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /root/Docker/z3/bin/z3
#parameters: 7
Generating VC of $splitRearrange
Verifying $splitRearrange: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1: positive
Prover Time taken = 0.446639
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/parboil/mri-gridding/splitRearrange/_kernel.bpl.ice2.bpl
Total learner time was 00:00:00.1169320
Verifying $splitRearrange: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool) : bool
{
  0 + (if b0000 then 0 else 2000) + (if b0001 then 0 else 2000) + (if b0002 then 0 else 2000) + (if b0003 then 0 else 2000) + (if b0004 then 0 else 2000) + (if b0005 then 0 else 2000) + (if b0006 then 0 else 2000) < 441
}
Added: my_inv:1,0,1,1,1,1,1: positive
Prover Time taken = 1.284342
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/parboil/mri-gridding/splitRearrange/_kernel.bpl.ice2.bpl
Total learner time was 00:00:00.1192010
Verifying $splitRearrange: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool) : bool
{
  0 + (if b0000 then 0 else 2000) + (if b0002 then 0 else 2000) + (if b0003 then 0 else 2000) + (if b0004 then 0 else 2000) + (if b0005 then 0 else 2000) + (if b0006 then 0 else 2000) < 441
}
Prover Time taken = 1.97012
Added Horn clause: 0 => 2
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/parboil/mri-gridding/splitRearrange/_kernel.bpl.ice2.bpl
Total learner time was 00:00:00.1234280
Verifying $splitRearrange: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool) : bool
{
  0 + (if b0000 then 0 else 2000) + (if b0002 then 0 else 2000) + (if b0004 then 0 else 2000) + (if b0006 then 0 else 2000) < 441
}
Prover Time taken = 2.551361
Added Horn clause: 2 => 3
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/parboil/mri-gridding/splitRearrange/_kernel.bpl.ice2.bpl
Total learner time was 00:00:00.1171220
Verifying $splitRearrange: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool) : bool
{
  0 + (if b0002 then 0 else 2000) + (if b0004 then 0 else 2000) + (if b0006 then 0 else 2000) < 441
}
Added: my_inv:0,0,1,0,1,0,1: negative
Prover Time taken = 0.591373
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/parboil/mri-gridding/splitRearrange/_kernel.bpl.ice2.bpl
[0, 0, 0, 1, 0, 1, 0, 1] -> 0 Predicated Label: 1 True Label 0 not consistent!
sorcar: sorcar.cpp:229: int main(int, char* const*): Assertion `sorcar::is_consistent(X, datapoints, horn_constraints)' failed.
The learner seems to have run into an error!

Unhandled Exception:
Microsoft.Boogie.Houdini.MLHoudiniInternalError: The learner seems to have run into an error!
  at Microsoft.Boogie.Houdini.MLHoudini.learn (System.Collections.Generic.HashSet`1[System.String]& funcsChanged) [0x000e7] in <3034164c407e4adc8ab666e7c26ee7b8>:0 
  at Microsoft.Boogie.Houdini.MLHoudini.LearnInv (System.Collections.Generic.Dictionary`2[TKey,TValue] impl2Priority) [0x00782] in <3034164c407e4adc8ab666e7c26ee7b8>:0 
  at Microsoft.Boogie.Houdini.MLHoudini.ComputeSummaries () [0x0019c] in <3034164c407e4adc8ab666e7c26ee7b8>:0 
  at Microsoft.Boogie.ExecutionEngine.RunMLHoudini (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, Microsoft.Boogie.ErrorReporterDelegate er, System.String filename) [0x00055] in <392c81a181e742f795ac4613c6efd8ce>:0 
  at Microsoft.Boogie.ExecutionEngine.RunHoudini (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, Microsoft.Boogie.ErrorReporterDelegate er, System.String filename) [0x00021] in <392c81a181e742f795ac4613c6efd8ce>:0 
  at Microsoft.Boogie.ExecutionEngine.InferAndVerify (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, System.String filename, Microsoft.Boogie.ErrorReporterDelegate er, System.String requestId) [0x00136] in <392c81a181e742f795ac4613c6efd8ce>:0 
  at Microsoft.Boogie.ExecutionEngine.ProcessFiles (System.Collections.Generic.List`1[T] fileNames, System.Boolean lookForSnapshots) [0x002bd] in <392c81a181e742f795ac4613c6efd8ce>:0 
  at Microsoft.Boogie.OnlyBoogie.Main (System.String[] args) [0x0029f] in <581a14d47152481e860a87838c548766>:0 
[ERROR] FATAL UNHANDLED EXCEPTION: Microsoft.Boogie.Houdini.MLHoudiniInternalError: The learner seems to have run into an error!
  at Microsoft.Boogie.Houdini.MLHoudini.learn (System.Collections.Generic.HashSet`1[System.String]& funcsChanged) [0x000e7] in <3034164c407e4adc8ab666e7c26ee7b8>:0 
  at Microsoft.Boogie.Houdini.MLHoudini.LearnInv (System.Collections.Generic.Dictionary`2[TKey,TValue] impl2Priority) [0x00782] in <3034164c407e4adc8ab666e7c26ee7b8>:0 
  at Microsoft.Boogie.Houdini.MLHoudini.ComputeSummaries () [0x0019c] in <3034164c407e4adc8ab666e7c26ee7b8>:0 
  at Microsoft.Boogie.ExecutionEngine.RunMLHoudini (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, Microsoft.Boogie.ErrorReporterDelegate er, System.String filename) [0x00055] in <392c81a181e742f795ac4613c6efd8ce>:0 
  at Microsoft.Boogie.ExecutionEngine.RunHoudini (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, Microsoft.Boogie.ErrorReporterDelegate er, System.String filename) [0x00021] in <392c81a181e742f795ac4613c6efd8ce>:0 
  at Microsoft.Boogie.ExecutionEngine.InferAndVerify (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, System.String filename, Microsoft.Boogie.ErrorReporterDelegate er, System.String requestId) [0x00136] in <392c81a181e742f795ac4613c6efd8ce>:0 
  at Microsoft.Boogie.ExecutionEngine.ProcessFiles (System.Collections.Generic.List`1[T] fileNames, System.Boolean lookForSnapshots) [0x002bd] in <392c81a181e742f795ac4613c6efd8ce>:0 
  at Microsoft.Boogie.OnlyBoogie.Main (System.String[] args) [0x0029f] in <581a14d47152481e860a87838c548766>:0 
Command exited with non-zero status 1
0.99user 1.40system 0:08.88elapsed 26%CPU (0avgtext+0avgdata 49160maxresident)k
144inputs+160outputs (1major+19289minor)pagefaults 0swaps
FILE:parboil/mri-gridding/splitRearrange/_kernel.bpl.ice2.bpl
#################
Wed May 12 02:54:56 UTC 2021
KEY=awinnow
OUTPUT=/root/Docker/winnow_gpu_timeout.txt
[TRACE] Using prover: /root/Docker/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/root/Docker/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a winnow
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/errorLimit:1
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/parboil/mri-gridding/splitSort/_kernel.bpl.ice2.bpl
--------------------
Parsing /root/Docker/benchmarks/BenchmarksCompiled/awinnow/parboil/mri-gridding/splitSort/_kernel.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /root/Docker/z3/bin/z3
#parameters: 109
Generating VC of $splitSort
Verifying $splitSort: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,0,1,0,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.370593
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/parboil/mri-gridding/splitSort/_kernel.bpl.ice2.bpl
Total learner time was 00:00:00.1185770
Verifying $splitSort: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool) : bool
{
  0 + (if b0000 then 0 else 43000) + (if b0001 then 0 else 43000) + (if b0002 then 0 else 43000) + (if b0003 then 0 else 43000) + (if b0004 then 0 else 43000) + (if b0005 then 0 else 43000) + (if b0006 then 0 else 43000) + (if b0007 then 0 else 43000) + (if b0008 then 0 else 43000) + (if b0009 then 0 else 43000) + (if b0010 then 0 else 43000) + (if b0011 then 0 else 43000) + (if b0012 then 0 else 43000) + (if b0013 then 0 else 43000) + (if b0015 then 0 else 43000) + (if b0017 then 0 else 43000) + (if b0019 then 0 else 43000) + (if b0021 then 0 else 43000) + (if b0023 then 0 else 43000) + (if b0024 then 0 else 43000) + (if b0025 then 0 else 43000) + (if b0026 then 0 else 43000) + (if b0027 then 0 else 43000) + (if b0028 then 0 else 43000) + (if b0029 then 0 else 43000) + (if b0030 then 0 else 43000) + (if b0031 then 0 else 43000) + (if b0032 then 0 else 43000) + (if b0033 then 0 else 43000) + (if b0034 then 0 else 43000) + (if b0035 then 0 else 43000) + (if b0036 then 0 else 43000) + (if b0037 then 0 else 43000) + (if b0038 then 0 else 43000) + (if b0039 then 0 else 43000) + (if b0040 then 0 else 43000) + (if b0041 then 0 else 43000) + (if b0042 then 0 else 43000) + (if b0043 then 0 else 43000) + (if b0044 then 0 else 43000) + (if b0045 then 0 else 43000) + (if b0046 then 0 else 43000) + (if b0047 then 0 else 43000) + (if b0048 then 0 else 43000) + (if b0049 then 0 else 43000) + (if b0050 then 0 else 43000) + (if b0051 then 0 else 43000) + (if b0052 then 0 else 43000) + (if b0053 then 0 else 43000) + (if b0054 then 0 else 43000) + (if b0055 then 0 else 43000) + (if b0056 then 0 else 43000) + (if b0057 then 0 else 43000) + (if b0058 then 0 else 43000) + (if b0059 then 0 else 43000) + (if b0060 then 0 else 43000) + (if b0061 then 0 else 43000) + (if b0062 then 0 else 43000) + (if b0063 then 0 else 43000) + (if b0064 then 0 else 43000) + (if b0065 then 0 else 43000) + (if b0066 then 0 else 43000) + (if b0067 then 0 else 43000) + (if b0068 then 0 else 43000) + (if b0069 then 0 else 43000) + (if b0070 then 0 else 43000) + (if b0071 then 0 else 43000) + (if b0072 then 0 else 43000) + (if b0073 then 0 else 43000) + (if b0074 then 0 else 43000) + (if b0075 then 0 else 43000) + (if b0076 then 0 else 43000) + (if b0077 then 0 else 43000) + (if b0078 then 0 else 43000) + (if b0079 then 0 else 43000) + (if b0080 then 0 else 43000) + (if b0081 then 0 else 43000) + (if b0082 then 0 else 43000) + (if b0083 then 0 else 43000) + (if b0084 then 0 else 43000) + (if b0085 then 0 else 43000) + (if b0086 then 0 else 43000) + (if b0087 then 0 else 43000) + (if b0088 then 0 else 43000) + (if b0089 then 0 else 43000) + (if b0090 then 0 else 43000) + (if b0091 then 0 else 43000) + (if b0092 then 0 else 43000) + (if b0093 then 0 else 43000) + (if b0094 then 0 else 43000) + (if b0095 then 0 else 43000) + (if b0096 then 0 else 43000) + (if b0097 then 0 else 43000) + (if b0098 then 0 else 43000) + (if b0099 then 0 else 43000) + (if b0100 then 0 else 43000) + (if b0101 then 0 else 43000) + (if b0102 then 0 else 43000) + (if b0103 then 0 else 43000) + (if b0104 then 0 else 43000) + (if b0105 then 0 else 43000) + (if b0106 then 0 else 43000) + (if b0107 then 0 else 43000) + (if b0108 then 0 else 43000) < 441
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,0,1,1,0,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 124.240087
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/parboil/mri-gridding/splitSort/_kernel.bpl.ice2.bpl
Total learner time was 00:00:00.1220850
Verifying $splitSort: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool) : bool
{
  0 + (if b0000 then 0 else 43000) + (if b0001 then 0 else 43000) + (if b0002 then 0 else 43000) + (if b0003 then 0 else 43000) + (if b0004 then 0 else 43000) + (if b0005 then 0 else 43000) + (if b0006 then 0 else 43000) + (if b0007 then 0 else 43000) + (if b0008 then 0 else 43000) + (if b0009 then 0 else 43000) + (if b0010 then 0 else 43000) + (if b0011 then 0 else 43000) + (if b0012 then 0 else 43000) + (if b0017 then 0 else 43000) + (if b0023 then 0 else 43000) + (if b0024 then 0 else 43000) + (if b0025 then 0 else 43000) + (if b0026 then 0 else 43000) + (if b0027 then 0 else 43000) + (if b0028 then 0 else 43000) + (if b0029 then 0 else 43000) + (if b0030 then 0 else 43000) + (if b0031 then 0 else 43000) + (if b0032 then 0 else 43000) + (if b0033 then 0 else 43000) + (if b0034 then 0 else 43000) + (if b0035 then 0 else 43000) + (if b0036 then 0 else 43000) + (if b0037 then 0 else 43000) + (if b0038 then 0 else 43000) + (if b0039 then 0 else 43000) + (if b0040 then 0 else 43000) + (if b0041 then 0 else 43000) + (if b0042 then 0 else 43000) + (if b0043 then 0 else 43000) + (if b0044 then 0 else 43000) + (if b0045 then 0 else 43000) + (if b0046 then 0 else 43000) + (if b0047 then 0 else 43000) + (if b0048 then 0 else 43000) + (if b0049 then 0 else 43000) + (if b0050 then 0 else 43000) + (if b0051 then 0 else 43000) + (if b0052 then 0 else 43000) + (if b0053 then 0 else 43000) + (if b0054 then 0 else 43000) + (if b0055 then 0 else 43000) + (if b0056 then 0 else 43000) + (if b0057 then 0 else 43000) + (if b0058 then 0 else 43000) + (if b0059 then 0 else 43000) + (if b0060 then 0 else 43000) + (if b0061 then 0 else 43000) + (if b0062 then 0 else 43000) + (if b0063 then 0 else 43000) + (if b0064 then 0 else 43000) + (if b0065 then 0 else 43000) + (if b0066 then 0 else 43000) + (if b0067 then 0 else 43000) + (if b0068 then 0 else 43000) + (if b0069 then 0 else 43000) + (if b0070 then 0 else 43000) + (if b0071 then 0 else 43000) + (if b0072 then 0 else 43000) + (if b0073 then 0 else 43000) + (if b0074 then 0 else 43000) + (if b0075 then 0 else 43000) + (if b0076 then 0 else 43000) + (if b0077 then 0 else 43000) + (if b0078 then 0 else 43000) + (if b0079 then 0 else 43000) + (if b0080 then 0 else 43000) + (if b0081 then 0 else 43000) + (if b0082 then 0 else 43000) + (if b0083 then 0 else 43000) + (if b0084 then 0 else 43000) + (if b0085 then 0 else 43000) + (if b0086 then 0 else 43000) + (if b0087 then 0 else 43000) + (if b0088 then 0 else 43000) + (if b0089 then 0 else 43000) + (if b0090 then 0 else 43000) + (if b0091 then 0 else 43000) + (if b0092 then 0 else 43000) + (if b0093 then 0 else 43000) + (if b0094 then 0 else 43000) + (if b0095 then 0 else 43000) + (if b0096 then 0 else 43000) + (if b0097 then 0 else 43000) + (if b0098 then 0 else 43000) + (if b0099 then 0 else 43000) + (if b0100 then 0 else 43000) + (if b0101 then 0 else 43000) + (if b0102 then 0 else 43000) + (if b0103 then 0 else 43000) + (if b0104 then 0 else 43000) + (if b0105 then 0 else 43000) + (if b0106 then 0 else 43000) + (if b0107 then 0 else 43000) + (if b0108 then 0 else 43000) < 441
}
Added: my_inv:0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,0,0,1,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 160.532563
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/parboil/mri-gridding/splitSort/_kernel.bpl.ice2.bpl
Total learner time was 00:00:00.1225990
Verifying $splitSort: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool) : bool
{
  0 + (if b0001 then 0 else 43000) + (if b0002 then 0 else 43000) + (if b0003 then 0 else 43000) + (if b0004 then 0 else 43000) + (if b0005 then 0 else 43000) + (if b0006 then 0 else 43000) + (if b0007 then 0 else 43000) + (if b0008 then 0 else 43000) + (if b0009 then 0 else 43000) + (if b0010 then 0 else 43000) + (if b0011 then 0 else 43000) + (if b0012 then 0 else 43000) + (if b0023 then 0 else 43000) + (if b0024 then 0 else 43000) + (if b0025 then 0 else 43000) + (if b0026 then 0 else 43000) + (if b0027 then 0 else 43000) + (if b0028 then 0 else 43000) + (if b0029 then 0 else 43000) + (if b0030 then 0 else 43000) + (if b0031 then 0 else 43000) + (if b0032 then 0 else 43000) + (if b0033 then 0 else 43000) + (if b0034 then 0 else 43000) + (if b0035 then 0 else 43000) + (if b0036 then 0 else 43000) + (if b0037 then 0 else 43000) + (if b0038 then 0 else 43000) + (if b0039 then 0 else 43000) + (if b0040 then 0 else 43000) + (if b0041 then 0 else 43000) + (if b0042 then 0 else 43000) + (if b0043 then 0 else 43000) + (if b0044 then 0 else 43000) + (if b0045 then 0 else 43000) + (if b0046 then 0 else 43000) + (if b0047 then 0 else 43000) + (if b0048 then 0 else 43000) + (if b0049 then 0 else 43000) + (if b0050 then 0 else 43000) + (if b0051 then 0 else 43000) + (if b0052 then 0 else 43000) + (if b0053 then 0 else 43000) + (if b0054 then 0 else 43000) + (if b0055 then 0 else 43000) + (if b0056 then 0 else 43000) + (if b0057 then 0 else 43000) + (if b0058 then 0 else 43000) + (if b0059 then 0 else 43000) + (if b0060 then 0 else 43000) + (if b0061 then 0 else 43000) + (if b0062 then 0 else 43000) + (if b0063 then 0 else 43000) + (if b0064 then 0 else 43000) + (if b0065 then 0 else 43000) + (if b0066 then 0 else 43000) + (if b0067 then 0 else 43000) + (if b0068 then 0 else 43000) + (if b0069 then 0 else 43000) + (if b0070 then 0 else 43000) + (if b0071 then 0 else 43000) + (if b0072 then 0 else 43000) + (if b0073 then 0 else 43000) + (if b0074 then 0 else 43000) + (if b0075 then 0 else 43000) + (if b0076 then 0 else 43000) + (if b0077 then 0 else 43000) + (if b0078 then 0 else 43000) + (if b0079 then 0 else 43000) + (if b0080 then 0 else 43000) + (if b0081 then 0 else 43000) + (if b0082 then 0 else 43000) + (if b0083 then 0 else 43000) + (if b0084 then 0 else 43000) + (if b0085 then 0 else 43000) + (if b0086 then 0 else 43000) + (if b0087 then 0 else 43000) + (if b0088 then 0 else 43000) + (if b0089 then 0 else 43000) + (if b0090 then 0 else 43000) + (if b0091 then 0 else 43000) + (if b0092 then 0 else 43000) + (if b0093 then 0 else 43000) + (if b0094 then 0 else 43000) + (if b0095 then 0 else 43000) + (if b0096 then 0 else 43000) + (if b0097 then 0 else 43000) + (if b0098 then 0 else 43000) + (if b0099 then 0 else 43000) + (if b0100 then 0 else 43000) + (if b0101 then 0 else 43000) + (if b0102 then 0 else 43000) + (if b0103 then 0 else 43000) + (if b0104 then 0 else 43000) + (if b0105 then 0 else 43000) + (if b0106 then 0 else 43000) + (if b0107 then 0 else 43000) + (if b0108 then 0 else 43000) < 441
}
Prover Time taken = 303.312858
Added Horn clause: 3 => 4
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/parboil/mri-gridding/splitSort/_kernel.bpl.ice2.bpl
Total learner time was 00:00:00.1204300
Verifying $splitSort: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool) : bool
{
  0 + (if b0001 then 0 else 43000) + (if b0002 then 0 else 43000) + (if b0003 then 0 else 43000) + (if b0004 then 0 else 43000) + (if b0005 then 0 else 43000) + (if b0006 then 0 else 43000) + (if b0007 then 0 else 43000) + (if b0008 then 0 else 43000) + (if b0009 then 0 else 43000) + (if b0010 then 0 else 43000) + (if b0011 then 0 else 43000) + (if b0012 then 0 else 43000) + (if b0023 then 0 else 43000) + (if b0024 then 0 else 43000) + (if b0025 then 0 else 43000) + (if b0026 then 0 else 43000) + (if b0027 then 0 else 43000) + (if b0028 then 0 else 43000) + (if b0029 then 0 else 43000) + (if b0030 then 0 else 43000) + (if b0043 then 0 else 43000) + (if b0044 then 0 else 43000) + (if b0063 then 0 else 43000) + (if b0064 then 0 else 43000) + (if b0065 then 0 else 43000) + (if b0066 then 0 else 43000) + (if b0067 then 0 else 43000) + (if b0068 then 0 else 43000) + (if b0069 then 0 else 43000) + (if b0070 then 0 else 43000) + (if b0071 then 0 else 43000) + (if b0072 then 0 else 43000) + (if b0073 then 0 else 43000) + (if b0074 then 0 else 43000) + (if b0075 then 0 else 43000) + (if b0076 then 0 else 43000) + (if b0077 then 0 else 43000) + (if b0078 then 0 else 43000) + (if b0079 then 0 else 43000) + (if b0080 then 0 else 43000) + (if b0081 then 0 else 43000) + (if b0082 then 0 else 43000) + (if b0083 then 0 else 43000) + (if b0084 then 0 else 43000) + (if b0085 then 0 else 43000) + (if b0086 then 0 else 43000) + (if b0087 then 0 else 43000) + (if b0088 then 0 else 43000) + (if b0089 then 0 else 43000) + (if b0090 then 0 else 43000) + (if b0091 then 0 else 43000) + (if b0092 then 0 else 43000) + (if b0093 then 0 else 43000) + (if b0094 then 0 else 43000) + (if b0095 then 0 else 43000) + (if b0096 then 0 else 43000) + (if b0097 then 0 else 43000) + (if b0098 then 0 else 43000) + (if b0099 then 0 else 43000) + (if b0100 then 0 else 43000) + (if b0101 then 0 else 43000) + (if b0102 then 0 else 43000) + (if b0103 then 0 else 43000) + (if b0104 then 0 else 43000) + (if b0105 then 0 else 43000) + (if b0106 then 0 else 43000) + (if b0107 then 0 else 43000) + (if b0108 then 0 else 43000) < 441
}
Added: my_inv:0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,0,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: negative
Prover Time taken = 443.041306
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/parboil/mri-gridding/splitSort/_kernel.bpl.ice2.bpl
[0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1] -> 0 Predicated Label: 1 True Label 0 not consistent!
sorcar: sorcar.cpp:229: int main(int, char* const*): Assertion `sorcar::is_consistent(X, datapoints, horn_constraints)' failed.
The learner seems to have run into an error!

Unhandled Exception:
Microsoft.Boogie.Houdini.MLHoudiniInternalError: The learner seems to have run into an error!
  at Microsoft.Boogie.Houdini.MLHoudini.learn (System.Collections.Generic.HashSet`1[System.String]& funcsChanged) [0x000e7] in <3034164c407e4adc8ab666e7c26ee7b8>:0 
  at Microsoft.Boogie.Houdini.MLHoudini.LearnInv (System.Collections.Generic.Dictionary`2[TKey,TValue] impl2Priority) [0x00782] in <3034164c407e4adc8ab666e7c26ee7b8>:0 
  at Microsoft.Boogie.Houdini.MLHoudini.ComputeSummaries () [0x0019c] in <3034164c407e4adc8ab666e7c26ee7b8>:0 
  at Microsoft.Boogie.ExecutionEngine.RunMLHoudini (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, Microsoft.Boogie.ErrorReporterDelegate er, System.String filename) [0x00055] in <392c81a181e742f795ac4613c6efd8ce>:0 
  at Microsoft.Boogie.ExecutionEngine.RunHoudini (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, Microsoft.Boogie.ErrorReporterDelegate er, System.String filename) [0x00021] in <392c81a181e742f795ac4613c6efd8ce>:0 
  at Microsoft.Boogie.ExecutionEngine.InferAndVerify (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, System.String filename, Microsoft.Boogie.ErrorReporterDelegate er, System.String requestId) [0x00136] in <392c81a181e742f795ac4613c6efd8ce>:0 
  at Microsoft.Boogie.ExecutionEngine.ProcessFiles (System.Collections.Generic.List`1[T] fileNames, System.Boolean lookForSnapshots) [0x002bd] in <392c81a181e742f795ac4613c6efd8ce>:0 
  at Microsoft.Boogie.OnlyBoogie.Main (System.String[] args) [0x0029f] in <581a14d47152481e860a87838c548766>:0 
[ERROR] FATAL UNHANDLED EXCEPTION: Microsoft.Boogie.Houdini.MLHoudiniInternalError: The learner seems to have run into an error!
  at Microsoft.Boogie.Houdini.MLHoudini.learn (System.Collections.Generic.HashSet`1[System.String]& funcsChanged) [0x000e7] in <3034164c407e4adc8ab666e7c26ee7b8>:0 
  at Microsoft.Boogie.Houdini.MLHoudini.LearnInv (System.Collections.Generic.Dictionary`2[TKey,TValue] impl2Priority) [0x00782] in <3034164c407e4adc8ab666e7c26ee7b8>:0 
  at Microsoft.Boogie.Houdini.MLHoudini.ComputeSummaries () [0x0019c] in <3034164c407e4adc8ab666e7c26ee7b8>:0 
  at Microsoft.Boogie.ExecutionEngine.RunMLHoudini (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, Microsoft.Boogie.ErrorReporterDelegate er, System.String filename) [0x00055] in <392c81a181e742f795ac4613c6efd8ce>:0 
  at Microsoft.Boogie.ExecutionEngine.RunHoudini (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, Microsoft.Boogie.ErrorReporterDelegate er, System.String filename) [0x00021] in <392c81a181e742f795ac4613c6efd8ce>:0 
  at Microsoft.Boogie.ExecutionEngine.InferAndVerify (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, System.String filename, Microsoft.Boogie.ErrorReporterDelegate er, System.String requestId) [0x00136] in <392c81a181e742f795ac4613c6efd8ce>:0 
  at Microsoft.Boogie.ExecutionEngine.ProcessFiles (System.Collections.Generic.List`1[T] fileNames, System.Boolean lookForSnapshots) [0x002bd] in <392c81a181e742f795ac4613c6efd8ce>:0 
  at Microsoft.Boogie.OnlyBoogie.Main (System.String[] args) [0x0029f] in <581a14d47152481e860a87838c548766>:0 
Command exited with non-zero status 1
2.61user 2.57system 17:13.85elapsed 0%CPU (0avgtext+0avgdata 72992maxresident)k
344inputs+232outputs (1major+33769minor)pagefaults 0swaps
FILE:parboil/mri-gridding/splitSort/_kernel.bpl.ice2.bpl
#################
Wed May 12 03:12:10 UTC 2021
KEY=awinnow
OUTPUT=/root/Docker/winnow_gpu_timeout.txt
[TRACE] Using prover: /root/Docker/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/root/Docker/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a winnow
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/errorLimit:1
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/parboil/sad/larger_sad_calc_8/kernel.bpl.ice2.bpl
--------------------
Parsing /root/Docker/benchmarks/BenchmarksCompiled/awinnow/parboil/sad/larger_sad_calc_8/kernel.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /root/Docker/z3/bin/z3
#parameters: 8
Generating VC of $larger_sad_calc_8
Verifying $larger_sad_calc_8: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.174775
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/parboil/sad/larger_sad_calc_8/kernel.bpl.ice2.bpl
Total learner time was 00:00:00.1171990
Verifying $larger_sad_calc_8: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool) : bool
{
  0 + (if b0000 then 0 else 3000) + (if b0001 then 0 else 3000) + (if b0002 then 0 else 3000) + (if b0003 then 0 else 3000) + (if b0004 then 0 else 3000) + (if b0005 then 0 else 3000) + (if b0006 then 0 else 3000) + (if b0007 then 0 else 3000) < 441
}
Overwrote: my_inv:1,1,1,1,1,1,1,1: negative
Prover Time taken = 96.374842
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/parboil/sad/larger_sad_calc_8/kernel.bpl.ice2.bpl
[0, 1, 1, 1, 1, 1, 1, 1, 1] -> 0 Predicated Label: 1 True Label 0 not consistent!
sorcar: sorcar.cpp:229: int main(int, char* const*): Assertion `sorcar::is_consistent(X, datapoints, horn_constraints)' failed.
The learner seems to have run into an error!

Unhandled Exception:
Microsoft.Boogie.Houdini.MLHoudiniInternalError: The learner seems to have run into an error!
  at Microsoft.Boogie.Houdini.MLHoudini.learn (System.Collections.Generic.HashSet`1[System.String]& funcsChanged) [0x000e7] in <3034164c407e4adc8ab666e7c26ee7b8>:0 
  at Microsoft.Boogie.Houdini.MLHoudini.LearnInv (System.Collections.Generic.Dictionary`2[TKey,TValue] impl2Priority) [0x00782] in <3034164c407e4adc8ab666e7c26ee7b8>:0 
  at Microsoft.Boogie.Houdini.MLHoudini.ComputeSummaries () [0x0019c] in <3034164c407e4adc8ab666e7c26ee7b8>:0 
  at Microsoft.Boogie.ExecutionEngine.RunMLHoudini (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, Microsoft.Boogie.ErrorReporterDelegate er, System.String filename) [0x00055] in <392c81a181e742f795ac4613c6efd8ce>:0 
  at Microsoft.Boogie.ExecutionEngine.RunHoudini (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, Microsoft.Boogie.ErrorReporterDelegate er, System.String filename) [0x00021] in <392c81a181e742f795ac4613c6efd8ce>:0 
  at Microsoft.Boogie.ExecutionEngine.InferAndVerify (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, System.String filename, Microsoft.Boogie.ErrorReporterDelegate er, System.String requestId) [0x00136] in <392c81a181e742f795ac4613c6efd8ce>:0 
  at Microsoft.Boogie.ExecutionEngine.ProcessFiles (System.Collections.Generic.List`1[T] fileNames, System.Boolean lookForSnapshots) [0x002bd] in <392c81a181e742f795ac4613c6efd8ce>:0 
  at Microsoft.Boogie.OnlyBoogie.Main (System.String[] args) [0x0029f] in <581a14d47152481e860a87838c548766>:0 
[ERROR] FATAL UNHANDLED EXCEPTION: Microsoft.Boogie.Houdini.MLHoudiniInternalError: The learner seems to have run into an error!
  at Microsoft.Boogie.Houdini.MLHoudini.learn (System.Collections.Generic.HashSet`1[System.String]& funcsChanged) [0x000e7] in <3034164c407e4adc8ab666e7c26ee7b8>:0 
  at Microsoft.Boogie.Houdini.MLHoudini.LearnInv (System.Collections.Generic.Dictionary`2[TKey,TValue] impl2Priority) [0x00782] in <3034164c407e4adc8ab666e7c26ee7b8>:0 
  at Microsoft.Boogie.Houdini.MLHoudini.ComputeSummaries () [0x0019c] in <3034164c407e4adc8ab666e7c26ee7b8>:0 
  at Microsoft.Boogie.ExecutionEngine.RunMLHoudini (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, Microsoft.Boogie.ErrorReporterDelegate er, System.String filename) [0x00055] in <392c81a181e742f795ac4613c6efd8ce>:0 
  at Microsoft.Boogie.ExecutionEngine.RunHoudini (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, Microsoft.Boogie.ErrorReporterDelegate er, System.String filename) [0x00021] in <392c81a181e742f795ac4613c6efd8ce>:0 
  at Microsoft.Boogie.ExecutionEngine.InferAndVerify (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, System.String filename, Microsoft.Boogie.ErrorReporterDelegate er, System.String requestId) [0x00136] in <392c81a181e742f795ac4613c6efd8ce>:0 
  at Microsoft.Boogie.ExecutionEngine.ProcessFiles (System.Collections.Generic.List`1[T] fileNames, System.Boolean lookForSnapshots) [0x002bd] in <392c81a181e742f795ac4613c6efd8ce>:0 
  at Microsoft.Boogie.OnlyBoogie.Main (System.String[] args) [0x0029f] in <581a14d47152481e860a87838c548766>:0 
Command exited with non-zero status 1
0.95user 1.30system 1:38.34elapsed 2%CPU (0avgtext+0avgdata 58884maxresident)k
232inputs+64outputs (1major+19766minor)pagefaults 0swaps
FILE:parboil/sad/larger_sad_calc_8/kernel.bpl.ice2.bpl
#################
Wed May 12 03:13:48 UTC 2021
KEY=awinnow
OUTPUT=/root/Docker/winnow_gpu_timeout.txt
[TRACE] Using prover: /root/Docker/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/root/Docker/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a winnow
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/errorLimit:1
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/parboil/sad/mb_sad_calc/kernel.bpl.ice2.bpl
--------------------
Parsing /root/Docker/benchmarks/BenchmarksCompiled/awinnow/parboil/sad/mb_sad_calc/kernel.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /root/Docker/z3/bin/z3
#parameters: 10
Generating VC of $mb_sad_calc
Verifying $mb_sad_calc: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.208582
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/parboil/sad/mb_sad_calc/kernel.bpl.ice2.bpl
Total learner time was 00:00:00.1200250
Verifying $mb_sad_calc: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool) : bool
{
  0 + (if b0000 then 0 else 4000) + (if b0001 then 0 else 4000) + (if b0002 then 0 else 4000) + (if b0003 then 0 else 4000) + (if b0004 then 0 else 4000) + (if b0005 then 0 else 4000) + (if b0006 then 0 else 4000) + (if b0007 then 0 else 4000) + (if b0008 then 0 else 4000) + (if b0009 then 0 else 4000) < 441
}
Prover Time taken = 0.266759
Added Horn clause: 0 && 0 => 1
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/parboil/sad/mb_sad_calc/kernel.bpl.ice2.bpl
Total learner time was 00:00:00.1221840
Verifying $mb_sad_calc: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool) : bool
{
  0 + (if b0000 then 0 else 4000) + (if b0002 then 0 else 4000) + (if b0004 then 0 else 4000) + (if b0005 then 0 else 4000) + (if b0006 then 0 else 4000) + (if b0007 then 0 else 4000) + (if b0008 then 0 else 4000) + (if b0009 then 0 else 4000) < 441
}
Prover Time taken = 387.321626
Prover time = 387.80
Number of prover queries = 3
Learner time = 0.24
Number of learner queries = 2
Total time: 388.13
Number of positive examples:1
Number of negative examples:0
Number of Horn clauses:1
verified

Boogie program verifier finished with 1 verified, 0 errors
1.19user 1.62system 6:29.50elapsed 0%CPU (0avgtext+0avgdata 44868maxresident)k
80inputs+88outputs (1major+15765minor)pagefaults 0swaps
FILE:parboil/sad/mb_sad_calc/kernel.bpl.ice2.bpl
#################
Wed May 12 03:20:18 UTC 2021
KEY=awinnow
OUTPUT=/root/Docker/winnow_gpu_timeout.txt
[TRACE] Using prover: /root/Docker/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/root/Docker/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a winnow
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/errorLimit:1
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/datamining/covariance/kernel3.bpl.ice2.bpl
--------------------
Parsing /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/datamining/covariance/kernel3.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /root/Docker/z3/bin/z3
#parameters: 274
Generating VC of $kernel3
Verifying $kernel3: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool, b0228: bool, b0229: bool, b0230: bool, b0231: bool, b0232: bool, b0233: bool, b0234: bool, b0235: bool, b0236: bool, b0237: bool, b0238: bool, b0239: bool, b0240: bool, b0241: bool, b0242: bool, b0243: bool, b0244: bool, b0245: bool, b0246: bool, b0247: bool, b0248: bool, b0249: bool, b0250: bool, b0251: bool, b0252: bool, b0253: bool, b0254: bool, b0255: bool, b0256: bool, b0257: bool, b0258: bool, b0259: bool, b0260: bool, b0261: bool, b0262: bool, b0263: bool, b0264: bool, b0265: bool, b0266: bool, b0267: bool, b0268: bool, b0269: bool, b0270: bool, b0271: bool, b0272: bool, b0273: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.196533
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/datamining/covariance/kernel3.bpl.ice2.bpl
Total learner time was 00:00:00.1214390
Verifying $kernel3: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool, b0228: bool, b0229: bool, b0230: bool, b0231: bool, b0232: bool, b0233: bool, b0234: bool, b0235: bool, b0236: bool, b0237: bool, b0238: bool, b0239: bool, b0240: bool, b0241: bool, b0242: bool, b0243: bool, b0244: bool, b0245: bool, b0246: bool, b0247: bool, b0248: bool, b0249: bool, b0250: bool, b0251: bool, b0252: bool, b0253: bool, b0254: bool, b0255: bool, b0256: bool, b0257: bool, b0258: bool, b0259: bool, b0260: bool, b0261: bool, b0262: bool, b0263: bool, b0264: bool, b0265: bool, b0266: bool, b0267: bool, b0268: bool, b0269: bool, b0270: bool, b0271: bool, b0272: bool, b0273: bool) : bool
{
  0 + (if b0000 then 0 else 109000) + (if b0001 then 0 else 109000) + (if b0002 then 0 else 109000) + (if b0003 then 0 else 109000) + (if b0004 then 0 else 109000) + (if b0005 then 0 else 109000) + (if b0006 then 0 else 109000) + (if b0007 then 0 else 109000) + (if b0008 then 0 else 109000) + (if b0009 then 0 else 109000) + (if b0010 then 0 else 109000) + (if b0011 then 0 else 109000) + (if b0012 then 0 else 109000) + (if b0013 then 0 else 109000) + (if b0014 then 0 else 109000) + (if b0015 then 0 else 109000) + (if b0016 then 0 else 109000) + (if b0017 then 0 else 109000) + (if b0018 then 0 else 109000) + (if b0019 then 0 else 109000) + (if b0020 then 0 else 109000) + (if b0021 then 0 else 109000) + (if b0022 then 0 else 109000) + (if b0023 then 0 else 109000) + (if b0024 then 0 else 109000) + (if b0025 then 0 else 109000) + (if b0026 then 0 else 109000) + (if b0027 then 0 else 109000) + (if b0028 then 0 else 109000) + (if b0029 then 0 else 109000) + (if b0030 then 0 else 109000) + (if b0031 then 0 else 109000) + (if b0032 then 0 else 109000) + (if b0033 then 0 else 109000) + (if b0034 then 0 else 109000) + (if b0035 then 0 else 109000) + (if b0036 then 0 else 109000) + (if b0037 then 0 else 109000) + (if b0038 then 0 else 109000) + (if b0039 then 0 else 109000) + (if b0040 then 0 else 109000) + (if b0041 then 0 else 109000) + (if b0042 then 0 else 109000) + (if b0043 then 0 else 109000) + (if b0044 then 0 else 109000) + (if b0045 then 0 else 109000) + (if b0046 then 0 else 109000) + (if b0047 then 0 else 109000) + (if b0048 then 0 else 109000) + (if b0049 then 0 else 109000) + (if b0050 then 0 else 109000) + (if b0051 then 0 else 109000) + (if b0052 then 0 else 109000) + (if b0053 then 0 else 109000) + (if b0054 then 0 else 109000) + (if b0055 then 0 else 109000) + (if b0056 then 0 else 109000) + (if b0057 then 0 else 109000) + (if b0058 then 0 else 109000) + (if b0059 then 0 else 109000) + (if b0060 then 0 else 109000) + (if b0061 then 0 else 109000) + (if b0062 then 0 else 109000) + (if b0063 then 0 else 109000) + (if b0064 then 0 else 109000) + (if b0065 then 0 else 109000) + (if b0066 then 0 else 109000) + (if b0067 then 0 else 109000) + (if b0068 then 0 else 109000) + (if b0069 then 0 else 109000) + (if b0070 then 0 else 109000) + (if b0071 then 0 else 109000) + (if b0072 then 0 else 109000) + (if b0073 then 0 else 109000) + (if b0074 then 0 else 109000) + (if b0075 then 0 else 109000) + (if b0076 then 0 else 109000) + (if b0077 then 0 else 109000) + (if b0078 then 0 else 109000) + (if b0079 then 0 else 109000) + (if b0080 then 0 else 109000) + (if b0081 then 0 else 109000) + (if b0082 then 0 else 109000) + (if b0083 then 0 else 109000) + (if b0084 then 0 else 109000) + (if b0085 then 0 else 109000) + (if b0086 then 0 else 109000) + (if b0087 then 0 else 109000) + (if b0088 then 0 else 109000) + (if b0089 then 0 else 109000) + (if b0090 then 0 else 109000) + (if b0091 then 0 else 109000) + (if b0092 then 0 else 109000) + (if b0093 then 0 else 109000) + (if b0094 then 0 else 109000) + (if b0095 then 0 else 109000) + (if b0096 then 0 else 109000) + (if b0097 then 0 else 109000) + (if b0098 then 0 else 109000) + (if b0099 then 0 else 109000) + (if b0100 then 0 else 109000) + (if b0101 then 0 else 109000) + (if b0102 then 0 else 109000) + (if b0103 then 0 else 109000) + (if b0104 then 0 else 109000) + (if b0105 then 0 else 109000) + (if b0106 then 0 else 109000) + (if b0107 then 0 else 109000) + (if b0108 then 0 else 109000) + (if b0109 then 0 else 109000) + (if b0110 then 0 else 109000) + (if b0111 then 0 else 109000) + (if b0112 then 0 else 109000) + (if b0113 then 0 else 109000) + (if b0114 then 0 else 109000) + (if b0115 then 0 else 109000) + (if b0116 then 0 else 109000) + (if b0117 then 0 else 109000) + (if b0118 then 0 else 109000) + (if b0119 then 0 else 109000) + (if b0120 then 0 else 109000) + (if b0121 then 0 else 109000) + (if b0122 then 0 else 109000) + (if b0123 then 0 else 109000) + (if b0124 then 0 else 109000) + (if b0125 then 0 else 109000) + (if b0126 then 0 else 109000) + (if b0127 then 0 else 109000) + (if b0128 then 0 else 109000) + (if b0129 then 0 else 109000) + (if b0130 then 0 else 109000) + (if b0131 then 0 else 109000) + (if b0132 then 0 else 109000) + (if b0133 then 0 else 109000) + (if b0134 then 0 else 109000) + (if b0135 then 0 else 109000) + (if b0136 then 0 else 109000) + (if b0137 then 0 else 109000) + (if b0138 then 0 else 109000) + (if b0139 then 0 else 109000) + (if b0140 then 0 else 109000) + (if b0141 then 0 else 109000) + (if b0142 then 0 else 109000) + (if b0143 then 0 else 109000) + (if b0144 then 0 else 109000) + (if b0145 then 0 else 109000) + (if b0146 then 0 else 109000) + (if b0147 then 0 else 109000) + (if b0148 then 0 else 109000) + (if b0149 then 0 else 109000) + (if b0150 then 0 else 109000) + (if b0151 then 0 else 109000) + (if b0152 then 0 else 109000) + (if b0153 then 0 else 109000) + (if b0154 then 0 else 109000) + (if b0155 then 0 else 109000) + (if b0156 then 0 else 109000) + (if b0157 then 0 else 109000) + (if b0158 then 0 else 109000) + (if b0159 then 0 else 109000) + (if b0160 then 0 else 109000) + (if b0161 then 0 else 109000) + (if b0162 then 0 else 109000) + (if b0163 then 0 else 109000) + (if b0164 then 0 else 109000) + (if b0165 then 0 else 109000) + (if b0166 then 0 else 109000) + (if b0167 then 0 else 109000) + (if b0168 then 0 else 109000) + (if b0169 then 0 else 109000) + (if b0170 then 0 else 109000) + (if b0171 then 0 else 109000) + (if b0172 then 0 else 109000) + (if b0173 then 0 else 109000) + (if b0174 then 0 else 109000) + (if b0175 then 0 else 109000) + (if b0176 then 0 else 109000) + (if b0177 then 0 else 109000) + (if b0178 then 0 else 109000) + (if b0179 then 0 else 109000) + (if b0180 then 0 else 109000) + (if b0181 then 0 else 109000) + (if b0182 then 0 else 109000) + (if b0183 then 0 else 109000) + (if b0184 then 0 else 109000) + (if b0185 then 0 else 109000) + (if b0186 then 0 else 109000) + (if b0187 then 0 else 109000) + (if b0188 then 0 else 109000) + (if b0189 then 0 else 109000) + (if b0190 then 0 else 109000) + (if b0191 then 0 else 109000) + (if b0192 then 0 else 109000) + (if b0193 then 0 else 109000) + (if b0194 then 0 else 109000) + (if b0195 then 0 else 109000) + (if b0196 then 0 else 109000) + (if b0197 then 0 else 109000) + (if b0198 then 0 else 109000) + (if b0199 then 0 else 109000) + (if b0200 then 0 else 109000) + (if b0201 then 0 else 109000) + (if b0202 then 0 else 109000) + (if b0203 then 0 else 109000) + (if b0204 then 0 else 109000) + (if b0205 then 0 else 109000) + (if b0206 then 0 else 109000) + (if b0207 then 0 else 109000) + (if b0208 then 0 else 109000) + (if b0209 then 0 else 109000) + (if b0210 then 0 else 109000) + (if b0211 then 0 else 109000) + (if b0212 then 0 else 109000) + (if b0213 then 0 else 109000) + (if b0214 then 0 else 109000) + (if b0215 then 0 else 109000) + (if b0216 then 0 else 109000) + (if b0217 then 0 else 109000) + (if b0218 then 0 else 109000) + (if b0219 then 0 else 109000) + (if b0220 then 0 else 109000) + (if b0221 then 0 else 109000) + (if b0222 then 0 else 109000) + (if b0223 then 0 else 109000) + (if b0224 then 0 else 109000) + (if b0225 then 0 else 109000) + (if b0226 then 0 else 109000) + (if b0227 then 0 else 109000) + (if b0228 then 0 else 109000) + (if b0229 then 0 else 109000) + (if b0230 then 0 else 109000) + (if b0231 then 0 else 109000) + (if b0232 then 0 else 109000) + (if b0233 then 0 else 109000) + (if b0234 then 0 else 109000) + (if b0235 then 0 else 109000) + (if b0236 then 0 else 109000) + (if b0237 then 0 else 109000) + (if b0238 then 0 else 109000) + (if b0239 then 0 else 109000) + (if b0240 then 0 else 109000) + (if b0241 then 0 else 109000) + (if b0242 then 0 else 109000) + (if b0243 then 0 else 109000) + (if b0244 then 0 else 109000) + (if b0245 then 0 else 109000) + (if b0246 then 0 else 109000) + (if b0247 then 0 else 109000) + (if b0248 then 0 else 109000) + (if b0249 then 0 else 109000) + (if b0250 then 0 else 109000) + (if b0251 then 0 else 109000) + (if b0252 then 0 else 109000) + (if b0253 then 0 else 109000) + (if b0254 then 0 else 109000) + (if b0255 then 0 else 109000) + (if b0256 then 0 else 109000) + (if b0257 then 0 else 109000) + (if b0258 then 0 else 109000) + (if b0259 then 0 else 109000) + (if b0260 then 0 else 109000) + (if b0261 then 0 else 109000) + (if b0262 then 0 else 109000) + (if b0263 then 0 else 109000) + (if b0264 then 0 else 109000) + (if b0265 then 0 else 109000) + (if b0266 then 0 else 109000) + (if b0267 then 0 else 109000) + (if b0268 then 0 else 109000) + (if b0269 then 0 else 109000) + (if b0270 then 0 else 109000) + (if b0271 then 0 else 109000) + (if b0272 then 0 else 109000) + (if b0273 then 0 else 109000) < 441
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,0,0,0,0,0,0,0,1,1,0,0,1,0,0,0,0,0,0,0,0,0,0,1,1,0,1,1,0,0,0,1,0,0,0,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 4.995657
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/datamining/covariance/kernel3.bpl.ice2.bpl
Total learner time was 00:00:00.1214290
Verifying $kernel3: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool, b0228: bool, b0229: bool, b0230: bool, b0231: bool, b0232: bool, b0233: bool, b0234: bool, b0235: bool, b0236: bool, b0237: bool, b0238: bool, b0239: bool, b0240: bool, b0241: bool, b0242: bool, b0243: bool, b0244: bool, b0245: bool, b0246: bool, b0247: bool, b0248: bool, b0249: bool, b0250: bool, b0251: bool, b0252: bool, b0253: bool, b0254: bool, b0255: bool, b0256: bool, b0257: bool, b0258: bool, b0259: bool, b0260: bool, b0261: bool, b0262: bool, b0263: bool, b0264: bool, b0265: bool, b0266: bool, b0267: bool, b0268: bool, b0269: bool, b0270: bool, b0271: bool, b0272: bool, b0273: bool) : bool
{
  0 + (if b0000 then 0 else 109000) + (if b0001 then 0 else 109000) + (if b0002 then 0 else 109000) + (if b0003 then 0 else 109000) + (if b0004 then 0 else 109000) + (if b0005 then 0 else 109000) + (if b0006 then 0 else 109000) + (if b0007 then 0 else 109000) + (if b0008 then 0 else 109000) + (if b0009 then 0 else 109000) + (if b0010 then 0 else 109000) + (if b0011 then 0 else 109000) + (if b0012 then 0 else 109000) + (if b0013 then 0 else 109000) + (if b0014 then 0 else 109000) + (if b0015 then 0 else 109000) + (if b0016 then 0 else 109000) + (if b0017 then 0 else 109000) + (if b0018 then 0 else 109000) + (if b0019 then 0 else 109000) + (if b0020 then 0 else 109000) + (if b0021 then 0 else 109000) + (if b0022 then 0 else 109000) + (if b0023 then 0 else 109000) + (if b0024 then 0 else 109000) + (if b0025 then 0 else 109000) + (if b0026 then 0 else 109000) + (if b0027 then 0 else 109000) + (if b0028 then 0 else 109000) + (if b0029 then 0 else 109000) + (if b0030 then 0 else 109000) + (if b0031 then 0 else 109000) + (if b0032 then 0 else 109000) + (if b0033 then 0 else 109000) + (if b0034 then 0 else 109000) + (if b0035 then 0 else 109000) + (if b0036 then 0 else 109000) + (if b0037 then 0 else 109000) + (if b0038 then 0 else 109000) + (if b0039 then 0 else 109000) + (if b0040 then 0 else 109000) + (if b0041 then 0 else 109000) + (if b0042 then 0 else 109000) + (if b0043 then 0 else 109000) + (if b0044 then 0 else 109000) + (if b0045 then 0 else 109000) + (if b0046 then 0 else 109000) + (if b0047 then 0 else 109000) + (if b0048 then 0 else 109000) + (if b0049 then 0 else 109000) + (if b0050 then 0 else 109000) + (if b0051 then 0 else 109000) + (if b0052 then 0 else 109000) + (if b0053 then 0 else 109000) + (if b0054 then 0 else 109000) + (if b0055 then 0 else 109000) + (if b0056 then 0 else 109000) + (if b0057 then 0 else 109000) + (if b0058 then 0 else 109000) + (if b0059 then 0 else 109000) + (if b0060 then 0 else 109000) + (if b0061 then 0 else 109000) + (if b0062 then 0 else 109000) + (if b0063 then 0 else 109000) + (if b0064 then 0 else 109000) + (if b0065 then 0 else 109000) + (if b0066 then 0 else 109000) + (if b0067 then 0 else 109000) + (if b0068 then 0 else 109000) + (if b0069 then 0 else 109000) + (if b0070 then 0 else 109000) + (if b0071 then 0 else 109000) + (if b0072 then 0 else 109000) + (if b0073 then 0 else 109000) + (if b0074 then 0 else 109000) + (if b0075 then 0 else 109000) + (if b0076 then 0 else 109000) + (if b0077 then 0 else 109000) + (if b0078 then 0 else 109000) + (if b0079 then 0 else 109000) + (if b0080 then 0 else 109000) + (if b0081 then 0 else 109000) + (if b0082 then 0 else 109000) + (if b0083 then 0 else 109000) + (if b0084 then 0 else 109000) + (if b0085 then 0 else 109000) + (if b0086 then 0 else 109000) + (if b0087 then 0 else 109000) + (if b0088 then 0 else 109000) + (if b0089 then 0 else 109000) + (if b0090 then 0 else 109000) + (if b0091 then 0 else 109000) + (if b0092 then 0 else 109000) + (if b0093 then 0 else 109000) + (if b0094 then 0 else 109000) + (if b0095 then 0 else 109000) + (if b0096 then 0 else 109000) + (if b0097 then 0 else 109000) + (if b0098 then 0 else 109000) + (if b0099 then 0 else 109000) + (if b0100 then 0 else 109000) + (if b0101 then 0 else 109000) + (if b0102 then 0 else 109000) + (if b0103 then 0 else 109000) + (if b0104 then 0 else 109000) + (if b0105 then 0 else 109000) + (if b0106 then 0 else 109000) + (if b0109 then 0 else 109000) + (if b0117 then 0 else 109000) + (if b0118 then 0 else 109000) + (if b0121 then 0 else 109000) + (if b0132 then 0 else 109000) + (if b0133 then 0 else 109000) + (if b0135 then 0 else 109000) + (if b0136 then 0 else 109000) + (if b0140 then 0 else 109000) + (if b0144 then 0 else 109000) + (if b0146 then 0 else 109000) + (if b0148 then 0 else 109000) + (if b0149 then 0 else 109000) + (if b0150 then 0 else 109000) + (if b0151 then 0 else 109000) + (if b0152 then 0 else 109000) + (if b0153 then 0 else 109000) + (if b0154 then 0 else 109000) + (if b0155 then 0 else 109000) + (if b0156 then 0 else 109000) + (if b0157 then 0 else 109000) + (if b0158 then 0 else 109000) + (if b0159 then 0 else 109000) + (if b0160 then 0 else 109000) + (if b0161 then 0 else 109000) + (if b0162 then 0 else 109000) + (if b0163 then 0 else 109000) + (if b0164 then 0 else 109000) + (if b0165 then 0 else 109000) + (if b0166 then 0 else 109000) + (if b0167 then 0 else 109000) + (if b0168 then 0 else 109000) + (if b0169 then 0 else 109000) + (if b0170 then 0 else 109000) + (if b0171 then 0 else 109000) + (if b0172 then 0 else 109000) + (if b0173 then 0 else 109000) + (if b0174 then 0 else 109000) + (if b0175 then 0 else 109000) + (if b0176 then 0 else 109000) + (if b0177 then 0 else 109000) + (if b0178 then 0 else 109000) + (if b0179 then 0 else 109000) + (if b0180 then 0 else 109000) + (if b0181 then 0 else 109000) + (if b0182 then 0 else 109000) + (if b0183 then 0 else 109000) + (if b0184 then 0 else 109000) + (if b0185 then 0 else 109000) + (if b0186 then 0 else 109000) + (if b0187 then 0 else 109000) + (if b0188 then 0 else 109000) + (if b0189 then 0 else 109000) + (if b0190 then 0 else 109000) + (if b0191 then 0 else 109000) + (if b0192 then 0 else 109000) + (if b0193 then 0 else 109000) + (if b0194 then 0 else 109000) + (if b0195 then 0 else 109000) + (if b0196 then 0 else 109000) + (if b0197 then 0 else 109000) + (if b0198 then 0 else 109000) + (if b0199 then 0 else 109000) + (if b0200 then 0 else 109000) + (if b0201 then 0 else 109000) + (if b0202 then 0 else 109000) + (if b0203 then 0 else 109000) + (if b0204 then 0 else 109000) + (if b0205 then 0 else 109000) + (if b0206 then 0 else 109000) + (if b0207 then 0 else 109000) + (if b0208 then 0 else 109000) + (if b0209 then 0 else 109000) + (if b0210 then 0 else 109000) + (if b0211 then 0 else 109000) + (if b0212 then 0 else 109000) + (if b0213 then 0 else 109000) + (if b0214 then 0 else 109000) + (if b0215 then 0 else 109000) + (if b0216 then 0 else 109000) + (if b0217 then 0 else 109000) + (if b0218 then 0 else 109000) + (if b0219 then 0 else 109000) + (if b0220 then 0 else 109000) + (if b0221 then 0 else 109000) + (if b0222 then 0 else 109000) + (if b0223 then 0 else 109000) + (if b0224 then 0 else 109000) + (if b0225 then 0 else 109000) + (if b0226 then 0 else 109000) + (if b0227 then 0 else 109000) + (if b0228 then 0 else 109000) + (if b0229 then 0 else 109000) + (if b0230 then 0 else 109000) + (if b0231 then 0 else 109000) + (if b0232 then 0 else 109000) + (if b0233 then 0 else 109000) + (if b0234 then 0 else 109000) + (if b0235 then 0 else 109000) + (if b0236 then 0 else 109000) + (if b0237 then 0 else 109000) + (if b0238 then 0 else 109000) + (if b0239 then 0 else 109000) + (if b0240 then 0 else 109000) + (if b0241 then 0 else 109000) + (if b0242 then 0 else 109000) + (if b0243 then 0 else 109000) + (if b0244 then 0 else 109000) + (if b0245 then 0 else 109000) + (if b0246 then 0 else 109000) + (if b0247 then 0 else 109000) + (if b0248 then 0 else 109000) + (if b0249 then 0 else 109000) + (if b0250 then 0 else 109000) + (if b0251 then 0 else 109000) + (if b0252 then 0 else 109000) + (if b0253 then 0 else 109000) + (if b0254 then 0 else 109000) + (if b0255 then 0 else 109000) + (if b0256 then 0 else 109000) + (if b0257 then 0 else 109000) + (if b0258 then 0 else 109000) + (if b0259 then 0 else 109000) + (if b0260 then 0 else 109000) + (if b0261 then 0 else 109000) + (if b0262 then 0 else 109000) + (if b0263 then 0 else 109000) + (if b0264 then 0 else 109000) + (if b0265 then 0 else 109000) + (if b0266 then 0 else 109000) + (if b0267 then 0 else 109000) + (if b0268 then 0 else 109000) + (if b0269 then 0 else 109000) + (if b0270 then 0 else 109000) + (if b0271 then 0 else 109000) + (if b0272 then 0 else 109000) + (if b0273 then 0 else 109000) < 441
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,0,1,1,1,0,1,1,1,1,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 5.668835
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/datamining/covariance/kernel3.bpl.ice2.bpl
Total learner time was 00:00:00.1202870
Verifying $kernel3: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool, b0228: bool, b0229: bool, b0230: bool, b0231: bool, b0232: bool, b0233: bool, b0234: bool, b0235: bool, b0236: bool, b0237: bool, b0238: bool, b0239: bool, b0240: bool, b0241: bool, b0242: bool, b0243: bool, b0244: bool, b0245: bool, b0246: bool, b0247: bool, b0248: bool, b0249: bool, b0250: bool, b0251: bool, b0252: bool, b0253: bool, b0254: bool, b0255: bool, b0256: bool, b0257: bool, b0258: bool, b0259: bool, b0260: bool, b0261: bool, b0262: bool, b0263: bool, b0264: bool, b0265: bool, b0266: bool, b0267: bool, b0268: bool, b0269: bool, b0270: bool, b0271: bool, b0272: bool, b0273: bool) : bool
{
  0 + (if b0000 then 0 else 109000) + (if b0001 then 0 else 109000) + (if b0002 then 0 else 109000) + (if b0003 then 0 else 109000) + (if b0004 then 0 else 109000) + (if b0005 then 0 else 109000) + (if b0006 then 0 else 109000) + (if b0007 then 0 else 109000) + (if b0008 then 0 else 109000) + (if b0009 then 0 else 109000) + (if b0010 then 0 else 109000) + (if b0011 then 0 else 109000) + (if b0012 then 0 else 109000) + (if b0013 then 0 else 109000) + (if b0014 then 0 else 109000) + (if b0015 then 0 else 109000) + (if b0016 then 0 else 109000) + (if b0017 then 0 else 109000) + (if b0018 then 0 else 109000) + (if b0019 then 0 else 109000) + (if b0020 then 0 else 109000) + (if b0021 then 0 else 109000) + (if b0022 then 0 else 109000) + (if b0023 then 0 else 109000) + (if b0024 then 0 else 109000) + (if b0025 then 0 else 109000) + (if b0026 then 0 else 109000) + (if b0027 then 0 else 109000) + (if b0028 then 0 else 109000) + (if b0029 then 0 else 109000) + (if b0030 then 0 else 109000) + (if b0031 then 0 else 109000) + (if b0032 then 0 else 109000) + (if b0033 then 0 else 109000) + (if b0034 then 0 else 109000) + (if b0035 then 0 else 109000) + (if b0036 then 0 else 109000) + (if b0037 then 0 else 109000) + (if b0038 then 0 else 109000) + (if b0039 then 0 else 109000) + (if b0040 then 0 else 109000) + (if b0041 then 0 else 109000) + (if b0042 then 0 else 109000) + (if b0043 then 0 else 109000) + (if b0044 then 0 else 109000) + (if b0045 then 0 else 109000) + (if b0046 then 0 else 109000) + (if b0047 then 0 else 109000) + (if b0048 then 0 else 109000) + (if b0049 then 0 else 109000) + (if b0050 then 0 else 109000) + (if b0051 then 0 else 109000) + (if b0052 then 0 else 109000) + (if b0053 then 0 else 109000) + (if b0054 then 0 else 109000) + (if b0055 then 0 else 109000) + (if b0056 then 0 else 109000) + (if b0057 then 0 else 109000) + (if b0058 then 0 else 109000) + (if b0059 then 0 else 109000) + (if b0060 then 0 else 109000) + (if b0061 then 0 else 109000) + (if b0062 then 0 else 109000) + (if b0063 then 0 else 109000) + (if b0064 then 0 else 109000) + (if b0065 then 0 else 109000) + (if b0066 then 0 else 109000) + (if b0067 then 0 else 109000) + (if b0068 then 0 else 109000) + (if b0069 then 0 else 109000) + (if b0070 then 0 else 109000) + (if b0071 then 0 else 109000) + (if b0072 then 0 else 109000) + (if b0073 then 0 else 109000) + (if b0074 then 0 else 109000) + (if b0075 then 0 else 109000) + (if b0076 then 0 else 109000) + (if b0077 then 0 else 109000) + (if b0078 then 0 else 109000) + (if b0079 then 0 else 109000) + (if b0080 then 0 else 109000) + (if b0081 then 0 else 109000) + (if b0082 then 0 else 109000) + (if b0083 then 0 else 109000) + (if b0084 then 0 else 109000) + (if b0085 then 0 else 109000) + (if b0086 then 0 else 109000) + (if b0087 then 0 else 109000) + (if b0088 then 0 else 109000) + (if b0089 then 0 else 109000) + (if b0090 then 0 else 109000) + (if b0091 then 0 else 109000) + (if b0092 then 0 else 109000) + (if b0093 then 0 else 109000) + (if b0094 then 0 else 109000) + (if b0095 then 0 else 109000) + (if b0096 then 0 else 109000) + (if b0097 then 0 else 109000) + (if b0098 then 0 else 109000) + (if b0099 then 0 else 109000) + (if b0100 then 0 else 109000) + (if b0101 then 0 else 109000) + (if b0102 then 0 else 109000) + (if b0103 then 0 else 109000) + (if b0104 then 0 else 109000) + (if b0105 then 0 else 109000) + (if b0109 then 0 else 109000) + (if b0118 then 0 else 109000) + (if b0121 then 0 else 109000) + (if b0135 then 0 else 109000) + (if b0144 then 0 else 109000) + (if b0149 then 0 else 109000) + (if b0150 then 0 else 109000) + (if b0151 then 0 else 109000) + (if b0152 then 0 else 109000) + (if b0153 then 0 else 109000) + (if b0154 then 0 else 109000) + (if b0155 then 0 else 109000) + (if b0156 then 0 else 109000) + (if b0157 then 0 else 109000) + (if b0158 then 0 else 109000) + (if b0159 then 0 else 109000) + (if b0160 then 0 else 109000) + (if b0161 then 0 else 109000) + (if b0162 then 0 else 109000) + (if b0163 then 0 else 109000) + (if b0164 then 0 else 109000) + (if b0165 then 0 else 109000) + (if b0166 then 0 else 109000) + (if b0167 then 0 else 109000) + (if b0168 then 0 else 109000) + (if b0169 then 0 else 109000) + (if b0170 then 0 else 109000) + (if b0171 then 0 else 109000) + (if b0172 then 0 else 109000) + (if b0173 then 0 else 109000) + (if b0174 then 0 else 109000) + (if b0175 then 0 else 109000) + (if b0176 then 0 else 109000) + (if b0177 then 0 else 109000) + (if b0178 then 0 else 109000) + (if b0179 then 0 else 109000) + (if b0180 then 0 else 109000) + (if b0181 then 0 else 109000) + (if b0182 then 0 else 109000) + (if b0183 then 0 else 109000) + (if b0184 then 0 else 109000) + (if b0185 then 0 else 109000) + (if b0186 then 0 else 109000) + (if b0187 then 0 else 109000) + (if b0188 then 0 else 109000) + (if b0189 then 0 else 109000) + (if b0190 then 0 else 109000) + (if b0191 then 0 else 109000) + (if b0192 then 0 else 109000) + (if b0193 then 0 else 109000) + (if b0194 then 0 else 109000) + (if b0195 then 0 else 109000) + (if b0196 then 0 else 109000) + (if b0197 then 0 else 109000) + (if b0198 then 0 else 109000) + (if b0199 then 0 else 109000) + (if b0200 then 0 else 109000) + (if b0201 then 0 else 109000) + (if b0202 then 0 else 109000) + (if b0203 then 0 else 109000) + (if b0204 then 0 else 109000) + (if b0205 then 0 else 109000) + (if b0206 then 0 else 109000) + (if b0207 then 0 else 109000) + (if b0208 then 0 else 109000) + (if b0209 then 0 else 109000) + (if b0210 then 0 else 109000) + (if b0211 then 0 else 109000) + (if b0212 then 0 else 109000) + (if b0213 then 0 else 109000) + (if b0214 then 0 else 109000) + (if b0215 then 0 else 109000) + (if b0216 then 0 else 109000) + (if b0217 then 0 else 109000) + (if b0218 then 0 else 109000) + (if b0219 then 0 else 109000) + (if b0220 then 0 else 109000) + (if b0221 then 0 else 109000) + (if b0222 then 0 else 109000) + (if b0223 then 0 else 109000) + (if b0224 then 0 else 109000) + (if b0225 then 0 else 109000) + (if b0226 then 0 else 109000) + (if b0227 then 0 else 109000) + (if b0228 then 0 else 109000) + (if b0229 then 0 else 109000) + (if b0230 then 0 else 109000) + (if b0231 then 0 else 109000) + (if b0232 then 0 else 109000) + (if b0233 then 0 else 109000) + (if b0234 then 0 else 109000) + (if b0235 then 0 else 109000) + (if b0236 then 0 else 109000) + (if b0237 then 0 else 109000) + (if b0238 then 0 else 109000) + (if b0239 then 0 else 109000) + (if b0240 then 0 else 109000) + (if b0241 then 0 else 109000) + (if b0242 then 0 else 109000) + (if b0243 then 0 else 109000) + (if b0244 then 0 else 109000) + (if b0245 then 0 else 109000) + (if b0246 then 0 else 109000) + (if b0247 then 0 else 109000) + (if b0248 then 0 else 109000) + (if b0249 then 0 else 109000) + (if b0250 then 0 else 109000) + (if b0251 then 0 else 109000) + (if b0252 then 0 else 109000) + (if b0253 then 0 else 109000) + (if b0254 then 0 else 109000) + (if b0255 then 0 else 109000) + (if b0256 then 0 else 109000) + (if b0257 then 0 else 109000) + (if b0258 then 0 else 109000) + (if b0259 then 0 else 109000) + (if b0260 then 0 else 109000) + (if b0261 then 0 else 109000) + (if b0262 then 0 else 109000) + (if b0263 then 0 else 109000) + (if b0264 then 0 else 109000) + (if b0265 then 0 else 109000) + (if b0266 then 0 else 109000) + (if b0267 then 0 else 109000) + (if b0268 then 0 else 109000) + (if b0269 then 0 else 109000) + (if b0270 then 0 else 109000) + (if b0271 then 0 else 109000) + (if b0272 then 0 else 109000) + (if b0273 then 0 else 109000) < 441
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,0,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 4.38225
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/datamining/covariance/kernel3.bpl.ice2.bpl
Total learner time was 00:00:00.1259390
Verifying $kernel3: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool, b0228: bool, b0229: bool, b0230: bool, b0231: bool, b0232: bool, b0233: bool, b0234: bool, b0235: bool, b0236: bool, b0237: bool, b0238: bool, b0239: bool, b0240: bool, b0241: bool, b0242: bool, b0243: bool, b0244: bool, b0245: bool, b0246: bool, b0247: bool, b0248: bool, b0249: bool, b0250: bool, b0251: bool, b0252: bool, b0253: bool, b0254: bool, b0255: bool, b0256: bool, b0257: bool, b0258: bool, b0259: bool, b0260: bool, b0261: bool, b0262: bool, b0263: bool, b0264: bool, b0265: bool, b0266: bool, b0267: bool, b0268: bool, b0269: bool, b0270: bool, b0271: bool, b0272: bool, b0273: bool) : bool
{
  0 + (if b0000 then 0 else 109000) + (if b0001 then 0 else 109000) + (if b0002 then 0 else 109000) + (if b0003 then 0 else 109000) + (if b0004 then 0 else 109000) + (if b0005 then 0 else 109000) + (if b0006 then 0 else 109000) + (if b0007 then 0 else 109000) + (if b0008 then 0 else 109000) + (if b0009 then 0 else 109000) + (if b0010 then 0 else 109000) + (if b0011 then 0 else 109000) + (if b0012 then 0 else 109000) + (if b0013 then 0 else 109000) + (if b0014 then 0 else 109000) + (if b0015 then 0 else 109000) + (if b0016 then 0 else 109000) + (if b0017 then 0 else 109000) + (if b0018 then 0 else 109000) + (if b0019 then 0 else 109000) + (if b0020 then 0 else 109000) + (if b0021 then 0 else 109000) + (if b0022 then 0 else 109000) + (if b0023 then 0 else 109000) + (if b0024 then 0 else 109000) + (if b0025 then 0 else 109000) + (if b0026 then 0 else 109000) + (if b0027 then 0 else 109000) + (if b0028 then 0 else 109000) + (if b0029 then 0 else 109000) + (if b0030 then 0 else 109000) + (if b0031 then 0 else 109000) + (if b0032 then 0 else 109000) + (if b0033 then 0 else 109000) + (if b0034 then 0 else 109000) + (if b0035 then 0 else 109000) + (if b0036 then 0 else 109000) + (if b0037 then 0 else 109000) + (if b0038 then 0 else 109000) + (if b0039 then 0 else 109000) + (if b0040 then 0 else 109000) + (if b0041 then 0 else 109000) + (if b0042 then 0 else 109000) + (if b0043 then 0 else 109000) + (if b0044 then 0 else 109000) + (if b0045 then 0 else 109000) + (if b0046 then 0 else 109000) + (if b0047 then 0 else 109000) + (if b0048 then 0 else 109000) + (if b0049 then 0 else 109000) + (if b0050 then 0 else 109000) + (if b0051 then 0 else 109000) + (if b0052 then 0 else 109000) + (if b0053 then 0 else 109000) + (if b0054 then 0 else 109000) + (if b0055 then 0 else 109000) + (if b0056 then 0 else 109000) + (if b0057 then 0 else 109000) + (if b0058 then 0 else 109000) + (if b0059 then 0 else 109000) + (if b0060 then 0 else 109000) + (if b0061 then 0 else 109000) + (if b0062 then 0 else 109000) + (if b0063 then 0 else 109000) + (if b0064 then 0 else 109000) + (if b0065 then 0 else 109000) + (if b0066 then 0 else 109000) + (if b0067 then 0 else 109000) + (if b0068 then 0 else 109000) + (if b0069 then 0 else 109000) + (if b0070 then 0 else 109000) + (if b0071 then 0 else 109000) + (if b0072 then 0 else 109000) + (if b0073 then 0 else 109000) + (if b0074 then 0 else 109000) + (if b0075 then 0 else 109000) + (if b0076 then 0 else 109000) + (if b0077 then 0 else 109000) + (if b0078 then 0 else 109000) + (if b0079 then 0 else 109000) + (if b0080 then 0 else 109000) + (if b0081 then 0 else 109000) + (if b0082 then 0 else 109000) + (if b0083 then 0 else 109000) + (if b0084 then 0 else 109000) + (if b0085 then 0 else 109000) + (if b0086 then 0 else 109000) + (if b0087 then 0 else 109000) + (if b0088 then 0 else 109000) + (if b0089 then 0 else 109000) + (if b0090 then 0 else 109000) + (if b0091 then 0 else 109000) + (if b0092 then 0 else 109000) + (if b0093 then 0 else 109000) + (if b0094 then 0 else 109000) + (if b0095 then 0 else 109000) + (if b0096 then 0 else 109000) + (if b0097 then 0 else 109000) + (if b0098 then 0 else 109000) + (if b0099 then 0 else 109000) + (if b0100 then 0 else 109000) + (if b0101 then 0 else 109000) + (if b0102 then 0 else 109000) + (if b0103 then 0 else 109000) + (if b0104 then 0 else 109000) + (if b0105 then 0 else 109000) + (if b0118 then 0 else 109000) + (if b0149 then 0 else 109000) + (if b0150 then 0 else 109000) + (if b0151 then 0 else 109000) + (if b0152 then 0 else 109000) + (if b0153 then 0 else 109000) + (if b0154 then 0 else 109000) + (if b0155 then 0 else 109000) + (if b0156 then 0 else 109000) + (if b0157 then 0 else 109000) + (if b0158 then 0 else 109000) + (if b0159 then 0 else 109000) + (if b0160 then 0 else 109000) + (if b0161 then 0 else 109000) + (if b0162 then 0 else 109000) + (if b0163 then 0 else 109000) + (if b0164 then 0 else 109000) + (if b0165 then 0 else 109000) + (if b0166 then 0 else 109000) + (if b0167 then 0 else 109000) + (if b0168 then 0 else 109000) + (if b0169 then 0 else 109000) + (if b0170 then 0 else 109000) + (if b0171 then 0 else 109000) + (if b0172 then 0 else 109000) + (if b0173 then 0 else 109000) + (if b0174 then 0 else 109000) + (if b0175 then 0 else 109000) + (if b0176 then 0 else 109000) + (if b0177 then 0 else 109000) + (if b0178 then 0 else 109000) + (if b0179 then 0 else 109000) + (if b0180 then 0 else 109000) + (if b0181 then 0 else 109000) + (if b0182 then 0 else 109000) + (if b0183 then 0 else 109000) + (if b0184 then 0 else 109000) + (if b0185 then 0 else 109000) + (if b0186 then 0 else 109000) + (if b0187 then 0 else 109000) + (if b0188 then 0 else 109000) + (if b0189 then 0 else 109000) + (if b0190 then 0 else 109000) + (if b0191 then 0 else 109000) + (if b0192 then 0 else 109000) + (if b0193 then 0 else 109000) + (if b0194 then 0 else 109000) + (if b0195 then 0 else 109000) + (if b0196 then 0 else 109000) + (if b0197 then 0 else 109000) + (if b0198 then 0 else 109000) + (if b0199 then 0 else 109000) + (if b0200 then 0 else 109000) + (if b0201 then 0 else 109000) + (if b0202 then 0 else 109000) + (if b0203 then 0 else 109000) + (if b0204 then 0 else 109000) + (if b0205 then 0 else 109000) + (if b0206 then 0 else 109000) + (if b0207 then 0 else 109000) + (if b0208 then 0 else 109000) + (if b0209 then 0 else 109000) + (if b0210 then 0 else 109000) + (if b0211 then 0 else 109000) + (if b0212 then 0 else 109000) + (if b0213 then 0 else 109000) + (if b0214 then 0 else 109000) + (if b0215 then 0 else 109000) + (if b0216 then 0 else 109000) + (if b0217 then 0 else 109000) + (if b0218 then 0 else 109000) + (if b0219 then 0 else 109000) + (if b0220 then 0 else 109000) + (if b0221 then 0 else 109000) + (if b0222 then 0 else 109000) + (if b0223 then 0 else 109000) + (if b0224 then 0 else 109000) + (if b0225 then 0 else 109000) + (if b0226 then 0 else 109000) + (if b0227 then 0 else 109000) + (if b0228 then 0 else 109000) + (if b0229 then 0 else 109000) + (if b0230 then 0 else 109000) + (if b0231 then 0 else 109000) + (if b0232 then 0 else 109000) + (if b0233 then 0 else 109000) + (if b0234 then 0 else 109000) + (if b0235 then 0 else 109000) + (if b0236 then 0 else 109000) + (if b0237 then 0 else 109000) + (if b0238 then 0 else 109000) + (if b0239 then 0 else 109000) + (if b0240 then 0 else 109000) + (if b0241 then 0 else 109000) + (if b0242 then 0 else 109000) + (if b0243 then 0 else 109000) + (if b0244 then 0 else 109000) + (if b0245 then 0 else 109000) + (if b0246 then 0 else 109000) + (if b0247 then 0 else 109000) + (if b0248 then 0 else 109000) + (if b0249 then 0 else 109000) + (if b0250 then 0 else 109000) + (if b0251 then 0 else 109000) + (if b0252 then 0 else 109000) + (if b0253 then 0 else 109000) + (if b0254 then 0 else 109000) + (if b0255 then 0 else 109000) + (if b0256 then 0 else 109000) + (if b0257 then 0 else 109000) + (if b0258 then 0 else 109000) + (if b0259 then 0 else 109000) + (if b0260 then 0 else 109000) + (if b0261 then 0 else 109000) + (if b0262 then 0 else 109000) + (if b0263 then 0 else 109000) + (if b0264 then 0 else 109000) + (if b0265 then 0 else 109000) + (if b0266 then 0 else 109000) + (if b0267 then 0 else 109000) + (if b0268 then 0 else 109000) + (if b0269 then 0 else 109000) + (if b0270 then 0 else 109000) + (if b0271 then 0 else 109000) + (if b0272 then 0 else 109000) + (if b0273 then 0 else 109000) < 441
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 6.530434
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/datamining/covariance/kernel3.bpl.ice2.bpl
Total learner time was 00:00:00.1206310
Verifying $kernel3: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool, b0228: bool, b0229: bool, b0230: bool, b0231: bool, b0232: bool, b0233: bool, b0234: bool, b0235: bool, b0236: bool, b0237: bool, b0238: bool, b0239: bool, b0240: bool, b0241: bool, b0242: bool, b0243: bool, b0244: bool, b0245: bool, b0246: bool, b0247: bool, b0248: bool, b0249: bool, b0250: bool, b0251: bool, b0252: bool, b0253: bool, b0254: bool, b0255: bool, b0256: bool, b0257: bool, b0258: bool, b0259: bool, b0260: bool, b0261: bool, b0262: bool, b0263: bool, b0264: bool, b0265: bool, b0266: bool, b0267: bool, b0268: bool, b0269: bool, b0270: bool, b0271: bool, b0272: bool, b0273: bool) : bool
{
  0 + (if b0000 then 0 else 109000) + (if b0001 then 0 else 109000) + (if b0002 then 0 else 109000) + (if b0003 then 0 else 109000) + (if b0004 then 0 else 109000) + (if b0005 then 0 else 109000) + (if b0006 then 0 else 109000) + (if b0007 then 0 else 109000) + (if b0008 then 0 else 109000) + (if b0009 then 0 else 109000) + (if b0010 then 0 else 109000) + (if b0011 then 0 else 109000) + (if b0012 then 0 else 109000) + (if b0013 then 0 else 109000) + (if b0014 then 0 else 109000) + (if b0015 then 0 else 109000) + (if b0016 then 0 else 109000) + (if b0017 then 0 else 109000) + (if b0018 then 0 else 109000) + (if b0019 then 0 else 109000) + (if b0020 then 0 else 109000) + (if b0021 then 0 else 109000) + (if b0022 then 0 else 109000) + (if b0023 then 0 else 109000) + (if b0024 then 0 else 109000) + (if b0025 then 0 else 109000) + (if b0026 then 0 else 109000) + (if b0027 then 0 else 109000) + (if b0028 then 0 else 109000) + (if b0029 then 0 else 109000) + (if b0030 then 0 else 109000) + (if b0031 then 0 else 109000) + (if b0032 then 0 else 109000) + (if b0033 then 0 else 109000) + (if b0034 then 0 else 109000) + (if b0035 then 0 else 109000) + (if b0036 then 0 else 109000) + (if b0037 then 0 else 109000) + (if b0038 then 0 else 109000) + (if b0039 then 0 else 109000) + (if b0040 then 0 else 109000) + (if b0041 then 0 else 109000) + (if b0042 then 0 else 109000) + (if b0043 then 0 else 109000) + (if b0044 then 0 else 109000) + (if b0045 then 0 else 109000) + (if b0046 then 0 else 109000) + (if b0047 then 0 else 109000) + (if b0048 then 0 else 109000) + (if b0049 then 0 else 109000) + (if b0050 then 0 else 109000) + (if b0051 then 0 else 109000) + (if b0052 then 0 else 109000) + (if b0053 then 0 else 109000) + (if b0054 then 0 else 109000) + (if b0055 then 0 else 109000) + (if b0056 then 0 else 109000) + (if b0057 then 0 else 109000) + (if b0058 then 0 else 109000) + (if b0059 then 0 else 109000) + (if b0060 then 0 else 109000) + (if b0061 then 0 else 109000) + (if b0062 then 0 else 109000) + (if b0063 then 0 else 109000) + (if b0064 then 0 else 109000) + (if b0065 then 0 else 109000) + (if b0066 then 0 else 109000) + (if b0067 then 0 else 109000) + (if b0068 then 0 else 109000) + (if b0069 then 0 else 109000) + (if b0070 then 0 else 109000) + (if b0071 then 0 else 109000) + (if b0072 then 0 else 109000) + (if b0073 then 0 else 109000) + (if b0074 then 0 else 109000) + (if b0075 then 0 else 109000) + (if b0076 then 0 else 109000) + (if b0077 then 0 else 109000) + (if b0078 then 0 else 109000) + (if b0079 then 0 else 109000) + (if b0080 then 0 else 109000) + (if b0081 then 0 else 109000) + (if b0082 then 0 else 109000) + (if b0083 then 0 else 109000) + (if b0084 then 0 else 109000) + (if b0085 then 0 else 109000) + (if b0086 then 0 else 109000) + (if b0087 then 0 else 109000) + (if b0088 then 0 else 109000) + (if b0089 then 0 else 109000) + (if b0090 then 0 else 109000) + (if b0091 then 0 else 109000) + (if b0092 then 0 else 109000) + (if b0093 then 0 else 109000) + (if b0094 then 0 else 109000) + (if b0095 then 0 else 109000) + (if b0096 then 0 else 109000) + (if b0097 then 0 else 109000) + (if b0098 then 0 else 109000) + (if b0099 then 0 else 109000) + (if b0100 then 0 else 109000) + (if b0101 then 0 else 109000) + (if b0102 then 0 else 109000) + (if b0103 then 0 else 109000) + (if b0104 then 0 else 109000) + (if b0105 then 0 else 109000) + (if b0149 then 0 else 109000) + (if b0150 then 0 else 109000) + (if b0151 then 0 else 109000) + (if b0152 then 0 else 109000) + (if b0153 then 0 else 109000) + (if b0154 then 0 else 109000) + (if b0155 then 0 else 109000) + (if b0156 then 0 else 109000) + (if b0157 then 0 else 109000) + (if b0158 then 0 else 109000) + (if b0159 then 0 else 109000) + (if b0160 then 0 else 109000) + (if b0161 then 0 else 109000) + (if b0162 then 0 else 109000) + (if b0163 then 0 else 109000) + (if b0164 then 0 else 109000) + (if b0165 then 0 else 109000) + (if b0166 then 0 else 109000) + (if b0167 then 0 else 109000) + (if b0168 then 0 else 109000) + (if b0169 then 0 else 109000) + (if b0170 then 0 else 109000) + (if b0171 then 0 else 109000) + (if b0172 then 0 else 109000) + (if b0173 then 0 else 109000) + (if b0174 then 0 else 109000) + (if b0175 then 0 else 109000) + (if b0176 then 0 else 109000) + (if b0177 then 0 else 109000) + (if b0178 then 0 else 109000) + (if b0179 then 0 else 109000) + (if b0180 then 0 else 109000) + (if b0181 then 0 else 109000) + (if b0182 then 0 else 109000) + (if b0183 then 0 else 109000) + (if b0184 then 0 else 109000) + (if b0185 then 0 else 109000) + (if b0186 then 0 else 109000) + (if b0187 then 0 else 109000) + (if b0188 then 0 else 109000) + (if b0189 then 0 else 109000) + (if b0190 then 0 else 109000) + (if b0191 then 0 else 109000) + (if b0192 then 0 else 109000) + (if b0193 then 0 else 109000) + (if b0194 then 0 else 109000) + (if b0195 then 0 else 109000) + (if b0196 then 0 else 109000) + (if b0197 then 0 else 109000) + (if b0198 then 0 else 109000) + (if b0199 then 0 else 109000) + (if b0200 then 0 else 109000) + (if b0201 then 0 else 109000) + (if b0202 then 0 else 109000) + (if b0203 then 0 else 109000) + (if b0204 then 0 else 109000) + (if b0205 then 0 else 109000) + (if b0206 then 0 else 109000) + (if b0207 then 0 else 109000) + (if b0208 then 0 else 109000) + (if b0209 then 0 else 109000) + (if b0210 then 0 else 109000) + (if b0211 then 0 else 109000) + (if b0212 then 0 else 109000) + (if b0213 then 0 else 109000) + (if b0214 then 0 else 109000) + (if b0215 then 0 else 109000) + (if b0216 then 0 else 109000) + (if b0217 then 0 else 109000) + (if b0218 then 0 else 109000) + (if b0219 then 0 else 109000) + (if b0220 then 0 else 109000) + (if b0221 then 0 else 109000) + (if b0222 then 0 else 109000) + (if b0223 then 0 else 109000) + (if b0224 then 0 else 109000) + (if b0225 then 0 else 109000) + (if b0226 then 0 else 109000) + (if b0227 then 0 else 109000) + (if b0228 then 0 else 109000) + (if b0229 then 0 else 109000) + (if b0230 then 0 else 109000) + (if b0231 then 0 else 109000) + (if b0232 then 0 else 109000) + (if b0233 then 0 else 109000) + (if b0234 then 0 else 109000) + (if b0235 then 0 else 109000) + (if b0236 then 0 else 109000) + (if b0237 then 0 else 109000) + (if b0238 then 0 else 109000) + (if b0239 then 0 else 109000) + (if b0240 then 0 else 109000) + (if b0241 then 0 else 109000) + (if b0242 then 0 else 109000) + (if b0243 then 0 else 109000) + (if b0244 then 0 else 109000) + (if b0245 then 0 else 109000) + (if b0246 then 0 else 109000) + (if b0247 then 0 else 109000) + (if b0248 then 0 else 109000) + (if b0249 then 0 else 109000) + (if b0250 then 0 else 109000) + (if b0251 then 0 else 109000) + (if b0252 then 0 else 109000) + (if b0253 then 0 else 109000) + (if b0254 then 0 else 109000) + (if b0255 then 0 else 109000) + (if b0256 then 0 else 109000) + (if b0257 then 0 else 109000) + (if b0258 then 0 else 109000) + (if b0259 then 0 else 109000) + (if b0260 then 0 else 109000) + (if b0261 then 0 else 109000) + (if b0262 then 0 else 109000) + (if b0263 then 0 else 109000) + (if b0264 then 0 else 109000) + (if b0265 then 0 else 109000) + (if b0266 then 0 else 109000) + (if b0267 then 0 else 109000) + (if b0268 then 0 else 109000) + (if b0269 then 0 else 109000) + (if b0270 then 0 else 109000) + (if b0271 then 0 else 109000) + (if b0272 then 0 else 109000) + (if b0273 then 0 else 109000) < 441
}
Prover Time taken = 4.888608
Added Horn clause: 5 && 0 && 0 => 6
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/datamining/covariance/kernel3.bpl.ice2.bpl
Total learner time was 00:00:00.1271980
Verifying $kernel3: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool, b0228: bool, b0229: bool, b0230: bool, b0231: bool, b0232: bool, b0233: bool, b0234: bool, b0235: bool, b0236: bool, b0237: bool, b0238: bool, b0239: bool, b0240: bool, b0241: bool, b0242: bool, b0243: bool, b0244: bool, b0245: bool, b0246: bool, b0247: bool, b0248: bool, b0249: bool, b0250: bool, b0251: bool, b0252: bool, b0253: bool, b0254: bool, b0255: bool, b0256: bool, b0257: bool, b0258: bool, b0259: bool, b0260: bool, b0261: bool, b0262: bool, b0263: bool, b0264: bool, b0265: bool, b0266: bool, b0267: bool, b0268: bool, b0269: bool, b0270: bool, b0271: bool, b0272: bool, b0273: bool) : bool
{
  0 + (if b0000 then 0 else 109000) + (if b0001 then 0 else 109000) + (if b0002 then 0 else 109000) + (if b0003 then 0 else 109000) + (if b0004 then 0 else 109000) + (if b0005 then 0 else 109000) + (if b0006 then 0 else 109000) + (if b0007 then 0 else 109000) + (if b0008 then 0 else 109000) + (if b0009 then 0 else 109000) + (if b0010 then 0 else 109000) + (if b0011 then 0 else 109000) + (if b0012 then 0 else 109000) + (if b0013 then 0 else 109000) + (if b0014 then 0 else 109000) + (if b0015 then 0 else 109000) + (if b0016 then 0 else 109000) + (if b0017 then 0 else 109000) + (if b0018 then 0 else 109000) + (if b0019 then 0 else 109000) + (if b0020 then 0 else 109000) + (if b0021 then 0 else 109000) + (if b0022 then 0 else 109000) + (if b0023 then 0 else 109000) + (if b0025 then 0 else 109000) + (if b0026 then 0 else 109000) + (if b0027 then 0 else 109000) + (if b0028 then 0 else 109000) + (if b0029 then 0 else 109000) + (if b0030 then 0 else 109000) + (if b0031 then 0 else 109000) + (if b0032 then 0 else 109000) + (if b0033 then 0 else 109000) + (if b0034 then 0 else 109000) + (if b0035 then 0 else 109000) + (if b0036 then 0 else 109000) + (if b0037 then 0 else 109000) + (if b0038 then 0 else 109000) + (if b0039 then 0 else 109000) + (if b0040 then 0 else 109000) + (if b0041 then 0 else 109000) + (if b0042 then 0 else 109000) + (if b0043 then 0 else 109000) + (if b0044 then 0 else 109000) + (if b0045 then 0 else 109000) + (if b0046 then 0 else 109000) + (if b0047 then 0 else 109000) + (if b0048 then 0 else 109000) + (if b0049 then 0 else 109000) + (if b0050 then 0 else 109000) + (if b0051 then 0 else 109000) + (if b0052 then 0 else 109000) + (if b0053 then 0 else 109000) + (if b0054 then 0 else 109000) + (if b0055 then 0 else 109000) + (if b0056 then 0 else 109000) + (if b0057 then 0 else 109000) + (if b0058 then 0 else 109000) + (if b0059 then 0 else 109000) + (if b0060 then 0 else 109000) + (if b0061 then 0 else 109000) + (if b0062 then 0 else 109000) + (if b0063 then 0 else 109000) + (if b0064 then 0 else 109000) + (if b0065 then 0 else 109000) + (if b0066 then 0 else 109000) + (if b0067 then 0 else 109000) + (if b0068 then 0 else 109000) + (if b0069 then 0 else 109000) + (if b0070 then 0 else 109000) + (if b0071 then 0 else 109000) + (if b0072 then 0 else 109000) + (if b0073 then 0 else 109000) + (if b0074 then 0 else 109000) + (if b0075 then 0 else 109000) + (if b0076 then 0 else 109000) + (if b0077 then 0 else 109000) + (if b0078 then 0 else 109000) + (if b0079 then 0 else 109000) + (if b0080 then 0 else 109000) + (if b0081 then 0 else 109000) + (if b0082 then 0 else 109000) + (if b0083 then 0 else 109000) + (if b0084 then 0 else 109000) + (if b0085 then 0 else 109000) + (if b0086 then 0 else 109000) + (if b0087 then 0 else 109000) + (if b0088 then 0 else 109000) + (if b0089 then 0 else 109000) + (if b0090 then 0 else 109000) + (if b0091 then 0 else 109000) + (if b0092 then 0 else 109000) + (if b0093 then 0 else 109000) + (if b0094 then 0 else 109000) + (if b0095 then 0 else 109000) + (if b0096 then 0 else 109000) + (if b0097 then 0 else 109000) + (if b0098 then 0 else 109000) + (if b0099 then 0 else 109000) + (if b0100 then 0 else 109000) + (if b0101 then 0 else 109000) + (if b0102 then 0 else 109000) + (if b0103 then 0 else 109000) + (if b0104 then 0 else 109000) + (if b0105 then 0 else 109000) + (if b0149 then 0 else 109000) + (if b0150 then 0 else 109000) + (if b0151 then 0 else 109000) + (if b0152 then 0 else 109000) + (if b0153 then 0 else 109000) + (if b0154 then 0 else 109000) + (if b0155 then 0 else 109000) + (if b0156 then 0 else 109000) + (if b0157 then 0 else 109000) + (if b0158 then 0 else 109000) + (if b0159 then 0 else 109000) + (if b0160 then 0 else 109000) + (if b0161 then 0 else 109000) + (if b0162 then 0 else 109000) + (if b0163 then 0 else 109000) + (if b0164 then 0 else 109000) + (if b0165 then 0 else 109000) + (if b0166 then 0 else 109000) + (if b0167 then 0 else 109000) + (if b0168 then 0 else 109000) + (if b0169 then 0 else 109000) + (if b0170 then 0 else 109000) + (if b0171 then 0 else 109000) + (if b0172 then 0 else 109000) + (if b0173 then 0 else 109000) + (if b0174 then 0 else 109000) + (if b0175 then 0 else 109000) + (if b0176 then 0 else 109000) + (if b0177 then 0 else 109000) + (if b0178 then 0 else 109000) + (if b0179 then 0 else 109000) + (if b0180 then 0 else 109000) + (if b0181 then 0 else 109000) + (if b0182 then 0 else 109000) + (if b0183 then 0 else 109000) + (if b0184 then 0 else 109000) + (if b0185 then 0 else 109000) + (if b0186 then 0 else 109000) + (if b0187 then 0 else 109000) + (if b0188 then 0 else 109000) + (if b0189 then 0 else 109000) + (if b0190 then 0 else 109000) + (if b0191 then 0 else 109000) + (if b0192 then 0 else 109000) + (if b0193 then 0 else 109000) + (if b0194 then 0 else 109000) + (if b0195 then 0 else 109000) + (if b0196 then 0 else 109000) + (if b0197 then 0 else 109000) + (if b0198 then 0 else 109000) + (if b0199 then 0 else 109000) + (if b0200 then 0 else 109000) + (if b0201 then 0 else 109000) + (if b0202 then 0 else 109000) + (if b0203 then 0 else 109000) + (if b0204 then 0 else 109000) + (if b0205 then 0 else 109000) + (if b0206 then 0 else 109000) + (if b0207 then 0 else 109000) + (if b0208 then 0 else 109000) + (if b0209 then 0 else 109000) + (if b0210 then 0 else 109000) + (if b0211 then 0 else 109000) + (if b0212 then 0 else 109000) + (if b0213 then 0 else 109000) + (if b0214 then 0 else 109000) + (if b0215 then 0 else 109000) + (if b0216 then 0 else 109000) + (if b0217 then 0 else 109000) + (if b0218 then 0 else 109000) + (if b0219 then 0 else 109000) + (if b0220 then 0 else 109000) + (if b0221 then 0 else 109000) + (if b0222 then 0 else 109000) + (if b0223 then 0 else 109000) + (if b0224 then 0 else 109000) + (if b0225 then 0 else 109000) + (if b0226 then 0 else 109000) + (if b0227 then 0 else 109000) + (if b0228 then 0 else 109000) + (if b0229 then 0 else 109000) + (if b0230 then 0 else 109000) + (if b0231 then 0 else 109000) + (if b0232 then 0 else 109000) + (if b0233 then 0 else 109000) + (if b0234 then 0 else 109000) + (if b0235 then 0 else 109000) + (if b0236 then 0 else 109000) + (if b0237 then 0 else 109000) + (if b0238 then 0 else 109000) + (if b0239 then 0 else 109000) + (if b0240 then 0 else 109000) + (if b0241 then 0 else 109000) + (if b0242 then 0 else 109000) + (if b0243 then 0 else 109000) + (if b0244 then 0 else 109000) + (if b0245 then 0 else 109000) + (if b0246 then 0 else 109000) + (if b0247 then 0 else 109000) + (if b0248 then 0 else 109000) + (if b0249 then 0 else 109000) + (if b0250 then 0 else 109000) + (if b0251 then 0 else 109000) + (if b0252 then 0 else 109000) + (if b0253 then 0 else 109000) + (if b0254 then 0 else 109000) + (if b0255 then 0 else 109000) + (if b0256 then 0 else 109000) + (if b0257 then 0 else 109000) + (if b0258 then 0 else 109000) + (if b0259 then 0 else 109000) + (if b0260 then 0 else 109000) + (if b0261 then 0 else 109000) + (if b0262 then 0 else 109000) + (if b0263 then 0 else 109000) + (if b0264 then 0 else 109000) + (if b0265 then 0 else 109000) + (if b0266 then 0 else 109000) + (if b0267 then 0 else 109000) + (if b0268 then 0 else 109000) + (if b0269 then 0 else 109000) + (if b0270 then 0 else 109000) + (if b0271 then 0 else 109000) + (if b0272 then 0 else 109000) + (if b0273 then 0 else 109000) < 441
}
Prover Time taken = 9.610475
Added Horn clause: 7 => 8
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/datamining/covariance/kernel3.bpl.ice2.bpl
Total learner time was 00:00:00.1239790
Verifying $kernel3: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool, b0228: bool, b0229: bool, b0230: bool, b0231: bool, b0232: bool, b0233: bool, b0234: bool, b0235: bool, b0236: bool, b0237: bool, b0238: bool, b0239: bool, b0240: bool, b0241: bool, b0242: bool, b0243: bool, b0244: bool, b0245: bool, b0246: bool, b0247: bool, b0248: bool, b0249: bool, b0250: bool, b0251: bool, b0252: bool, b0253: bool, b0254: bool, b0255: bool, b0256: bool, b0257: bool, b0258: bool, b0259: bool, b0260: bool, b0261: bool, b0262: bool, b0263: bool, b0264: bool, b0265: bool, b0266: bool, b0267: bool, b0268: bool, b0269: bool, b0270: bool, b0271: bool, b0272: bool, b0273: bool) : bool
{
  0 + (if b0000 then 0 else 109000) + (if b0001 then 0 else 109000) + (if b0002 then 0 else 109000) + (if b0003 then 0 else 109000) + (if b0004 then 0 else 109000) + (if b0005 then 0 else 109000) + (if b0006 then 0 else 109000) + (if b0007 then 0 else 109000) + (if b0008 then 0 else 109000) + (if b0009 then 0 else 109000) + (if b0010 then 0 else 109000) + (if b0011 then 0 else 109000) + (if b0012 then 0 else 109000) + (if b0013 then 0 else 109000) + (if b0014 then 0 else 109000) + (if b0015 then 0 else 109000) + (if b0016 then 0 else 109000) + (if b0017 then 0 else 109000) + (if b0018 then 0 else 109000) + (if b0019 then 0 else 109000) + (if b0020 then 0 else 109000) + (if b0021 then 0 else 109000) + (if b0022 then 0 else 109000) + (if b0023 then 0 else 109000) + (if b0025 then 0 else 109000) + (if b0026 then 0 else 109000) + (if b0027 then 0 else 109000) + (if b0028 then 0 else 109000) + (if b0029 then 0 else 109000) + (if b0030 then 0 else 109000) + (if b0031 then 0 else 109000) + (if b0032 then 0 else 109000) + (if b0033 then 0 else 109000) + (if b0034 then 0 else 109000) + (if b0035 then 0 else 109000) + (if b0036 then 0 else 109000) + (if b0037 then 0 else 109000) + (if b0038 then 0 else 109000) + (if b0039 then 0 else 109000) + (if b0040 then 0 else 109000) + (if b0041 then 0 else 109000) + (if b0042 then 0 else 109000) + (if b0043 then 0 else 109000) + (if b0044 then 0 else 109000) + (if b0045 then 0 else 109000) + (if b0046 then 0 else 109000) + (if b0047 then 0 else 109000) + (if b0048 then 0 else 109000) + (if b0049 then 0 else 109000) + (if b0050 then 0 else 109000) + (if b0051 then 0 else 109000) + (if b0052 then 0 else 109000) + (if b0053 then 0 else 109000) + (if b0054 then 0 else 109000) + (if b0055 then 0 else 109000) + (if b0056 then 0 else 109000) + (if b0057 then 0 else 109000) + (if b0058 then 0 else 109000) + (if b0059 then 0 else 109000) + (if b0060 then 0 else 109000) + (if b0061 then 0 else 109000) + (if b0062 then 0 else 109000) + (if b0063 then 0 else 109000) + (if b0064 then 0 else 109000) + (if b0065 then 0 else 109000) + (if b0066 then 0 else 109000) + (if b0067 then 0 else 109000) + (if b0068 then 0 else 109000) + (if b0069 then 0 else 109000) + (if b0070 then 0 else 109000) + (if b0071 then 0 else 109000) + (if b0072 then 0 else 109000) + (if b0073 then 0 else 109000) + (if b0074 then 0 else 109000) + (if b0075 then 0 else 109000) + (if b0076 then 0 else 109000) + (if b0077 then 0 else 109000) + (if b0078 then 0 else 109000) + (if b0079 then 0 else 109000) + (if b0080 then 0 else 109000) + (if b0081 then 0 else 109000) + (if b0082 then 0 else 109000) + (if b0083 then 0 else 109000) + (if b0084 then 0 else 109000) + (if b0085 then 0 else 109000) + (if b0086 then 0 else 109000) + (if b0087 then 0 else 109000) + (if b0088 then 0 else 109000) + (if b0089 then 0 else 109000) + (if b0090 then 0 else 109000) + (if b0091 then 0 else 109000) + (if b0092 then 0 else 109000) + (if b0093 then 0 else 109000) + (if b0094 then 0 else 109000) + (if b0095 then 0 else 109000) + (if b0096 then 0 else 109000) + (if b0097 then 0 else 109000) + (if b0098 then 0 else 109000) + (if b0099 then 0 else 109000) + (if b0100 then 0 else 109000) + (if b0101 then 0 else 109000) + (if b0102 then 0 else 109000) + (if b0103 then 0 else 109000) + (if b0104 then 0 else 109000) + (if b0105 then 0 else 109000) + (if b0149 then 0 else 109000) + (if b0150 then 0 else 109000) + (if b0151 then 0 else 109000) + (if b0152 then 0 else 109000) + (if b0153 then 0 else 109000) + (if b0154 then 0 else 109000) + (if b0155 then 0 else 109000) + (if b0156 then 0 else 109000) + (if b0157 then 0 else 109000) + (if b0158 then 0 else 109000) + (if b0159 then 0 else 109000) + (if b0160 then 0 else 109000) + (if b0201 then 0 else 109000) + (if b0202 then 0 else 109000) + (if b0203 then 0 else 109000) + (if b0204 then 0 else 109000) + (if b0205 then 0 else 109000) + (if b0206 then 0 else 109000) + (if b0207 then 0 else 109000) + (if b0208 then 0 else 109000) + (if b0209 then 0 else 109000) + (if b0210 then 0 else 109000) + (if b0211 then 0 else 109000) + (if b0212 then 0 else 109000) + (if b0213 then 0 else 109000) + (if b0214 then 0 else 109000) + (if b0215 then 0 else 109000) + (if b0216 then 0 else 109000) + (if b0217 then 0 else 109000) + (if b0218 then 0 else 109000) + (if b0219 then 0 else 109000) + (if b0220 then 0 else 109000) + (if b0221 then 0 else 109000) + (if b0222 then 0 else 109000) + (if b0223 then 0 else 109000) + (if b0224 then 0 else 109000) + (if b0225 then 0 else 109000) + (if b0226 then 0 else 109000) + (if b0227 then 0 else 109000) + (if b0228 then 0 else 109000) + (if b0229 then 0 else 109000) + (if b0230 then 0 else 109000) + (if b0231 then 0 else 109000) + (if b0232 then 0 else 109000) + (if b0233 then 0 else 109000) + (if b0234 then 0 else 109000) + (if b0235 then 0 else 109000) + (if b0236 then 0 else 109000) + (if b0237 then 0 else 109000) + (if b0238 then 0 else 109000) + (if b0239 then 0 else 109000) + (if b0240 then 0 else 109000) + (if b0241 then 0 else 109000) + (if b0242 then 0 else 109000) + (if b0243 then 0 else 109000) + (if b0244 then 0 else 109000) + (if b0245 then 0 else 109000) + (if b0246 then 0 else 109000) + (if b0247 then 0 else 109000) + (if b0248 then 0 else 109000) + (if b0249 then 0 else 109000) + (if b0250 then 0 else 109000) + (if b0251 then 0 else 109000) + (if b0252 then 0 else 109000) + (if b0253 then 0 else 109000) + (if b0254 then 0 else 109000) + (if b0255 then 0 else 109000) + (if b0256 then 0 else 109000) + (if b0257 then 0 else 109000) + (if b0258 then 0 else 109000) + (if b0259 then 0 else 109000) + (if b0260 then 0 else 109000) + (if b0261 then 0 else 109000) + (if b0262 then 0 else 109000) + (if b0263 then 0 else 109000) + (if b0264 then 0 else 109000) + (if b0265 then 0 else 109000) + (if b0266 then 0 else 109000) + (if b0267 then 0 else 109000) + (if b0268 then 0 else 109000) + (if b0269 then 0 else 109000) + (if b0270 then 0 else 109000) + (if b0271 then 0 else 109000) + (if b0272 then 0 else 109000) + (if b0273 then 0 else 109000) < 441
}
Prover Time taken = 5.756689
Added Horn clause: 9 => 10
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/datamining/covariance/kernel3.bpl.ice2.bpl
Total learner time was 00:00:00.1223850
Verifying $kernel3: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool, b0228: bool, b0229: bool, b0230: bool, b0231: bool, b0232: bool, b0233: bool, b0234: bool, b0235: bool, b0236: bool, b0237: bool, b0238: bool, b0239: bool, b0240: bool, b0241: bool, b0242: bool, b0243: bool, b0244: bool, b0245: bool, b0246: bool, b0247: bool, b0248: bool, b0249: bool, b0250: bool, b0251: bool, b0252: bool, b0253: bool, b0254: bool, b0255: bool, b0256: bool, b0257: bool, b0258: bool, b0259: bool, b0260: bool, b0261: bool, b0262: bool, b0263: bool, b0264: bool, b0265: bool, b0266: bool, b0267: bool, b0268: bool, b0269: bool, b0270: bool, b0271: bool, b0272: bool, b0273: bool) : bool
{
  0 + (if b0000 then 0 else 109000) + (if b0001 then 0 else 109000) + (if b0002 then 0 else 109000) + (if b0003 then 0 else 109000) + (if b0004 then 0 else 109000) + (if b0005 then 0 else 109000) + (if b0006 then 0 else 109000) + (if b0007 then 0 else 109000) + (if b0008 then 0 else 109000) + (if b0009 then 0 else 109000) + (if b0010 then 0 else 109000) + (if b0011 then 0 else 109000) + (if b0012 then 0 else 109000) + (if b0013 then 0 else 109000) + (if b0014 then 0 else 109000) + (if b0015 then 0 else 109000) + (if b0016 then 0 else 109000) + (if b0017 then 0 else 109000) + (if b0018 then 0 else 109000) + (if b0019 then 0 else 109000) + (if b0020 then 0 else 109000) + (if b0021 then 0 else 109000) + (if b0022 then 0 else 109000) + (if b0023 then 0 else 109000) + (if b0025 then 0 else 109000) + (if b0026 then 0 else 109000) + (if b0027 then 0 else 109000) + (if b0028 then 0 else 109000) + (if b0029 then 0 else 109000) + (if b0030 then 0 else 109000) + (if b0031 then 0 else 109000) + (if b0032 then 0 else 109000) + (if b0033 then 0 else 109000) + (if b0034 then 0 else 109000) + (if b0035 then 0 else 109000) + (if b0036 then 0 else 109000) + (if b0037 then 0 else 109000) + (if b0038 then 0 else 109000) + (if b0039 then 0 else 109000) + (if b0040 then 0 else 109000) + (if b0041 then 0 else 109000) + (if b0042 then 0 else 109000) + (if b0043 then 0 else 109000) + (if b0044 then 0 else 109000) + (if b0045 then 0 else 109000) + (if b0046 then 0 else 109000) + (if b0047 then 0 else 109000) + (if b0048 then 0 else 109000) + (if b0049 then 0 else 109000) + (if b0050 then 0 else 109000) + (if b0051 then 0 else 109000) + (if b0052 then 0 else 109000) + (if b0053 then 0 else 109000) + (if b0054 then 0 else 109000) + (if b0055 then 0 else 109000) + (if b0056 then 0 else 109000) + (if b0057 then 0 else 109000) + (if b0058 then 0 else 109000) + (if b0059 then 0 else 109000) + (if b0060 then 0 else 109000) + (if b0061 then 0 else 109000) + (if b0062 then 0 else 109000) + (if b0063 then 0 else 109000) + (if b0064 then 0 else 109000) + (if b0065 then 0 else 109000) + (if b0066 then 0 else 109000) + (if b0067 then 0 else 109000) + (if b0068 then 0 else 109000) + (if b0069 then 0 else 109000) + (if b0070 then 0 else 109000) + (if b0071 then 0 else 109000) + (if b0072 then 0 else 109000) + (if b0073 then 0 else 109000) + (if b0074 then 0 else 109000) + (if b0075 then 0 else 109000) + (if b0076 then 0 else 109000) + (if b0077 then 0 else 109000) + (if b0078 then 0 else 109000) + (if b0079 then 0 else 109000) + (if b0080 then 0 else 109000) + (if b0081 then 0 else 109000) + (if b0082 then 0 else 109000) + (if b0083 then 0 else 109000) + (if b0084 then 0 else 109000) + (if b0085 then 0 else 109000) + (if b0086 then 0 else 109000) + (if b0087 then 0 else 109000) + (if b0088 then 0 else 109000) + (if b0089 then 0 else 109000) + (if b0090 then 0 else 109000) + (if b0091 then 0 else 109000) + (if b0092 then 0 else 109000) + (if b0093 then 0 else 109000) + (if b0094 then 0 else 109000) + (if b0095 then 0 else 109000) + (if b0096 then 0 else 109000) + (if b0097 then 0 else 109000) + (if b0098 then 0 else 109000) + (if b0099 then 0 else 109000) + (if b0100 then 0 else 109000) + (if b0101 then 0 else 109000) + (if b0102 then 0 else 109000) + (if b0103 then 0 else 109000) + (if b0104 then 0 else 109000) + (if b0105 then 0 else 109000) + (if b0149 then 0 else 109000) + (if b0150 then 0 else 109000) + (if b0151 then 0 else 109000) + (if b0152 then 0 else 109000) + (if b0153 then 0 else 109000) + (if b0154 then 0 else 109000) + (if b0155 then 0 else 109000) + (if b0156 then 0 else 109000) + (if b0157 then 0 else 109000) + (if b0158 then 0 else 109000) + (if b0159 then 0 else 109000) + (if b0201 then 0 else 109000) + (if b0202 then 0 else 109000) + (if b0203 then 0 else 109000) + (if b0204 then 0 else 109000) + (if b0205 then 0 else 109000) + (if b0206 then 0 else 109000) + (if b0207 then 0 else 109000) + (if b0208 then 0 else 109000) + (if b0209 then 0 else 109000) + (if b0210 then 0 else 109000) + (if b0211 then 0 else 109000) + (if b0212 then 0 else 109000) + (if b0213 then 0 else 109000) + (if b0214 then 0 else 109000) + (if b0215 then 0 else 109000) + (if b0216 then 0 else 109000) + (if b0217 then 0 else 109000) + (if b0218 then 0 else 109000) + (if b0219 then 0 else 109000) + (if b0220 then 0 else 109000) + (if b0221 then 0 else 109000) + (if b0222 then 0 else 109000) + (if b0223 then 0 else 109000) + (if b0224 then 0 else 109000) + (if b0225 then 0 else 109000) + (if b0226 then 0 else 109000) + (if b0227 then 0 else 109000) + (if b0228 then 0 else 109000) + (if b0229 then 0 else 109000) + (if b0230 then 0 else 109000) + (if b0231 then 0 else 109000) + (if b0232 then 0 else 109000) + (if b0233 then 0 else 109000) + (if b0234 then 0 else 109000) + (if b0235 then 0 else 109000) + (if b0236 then 0 else 109000) + (if b0237 then 0 else 109000) + (if b0238 then 0 else 109000) + (if b0239 then 0 else 109000) + (if b0240 then 0 else 109000) + (if b0241 then 0 else 109000) + (if b0242 then 0 else 109000) + (if b0243 then 0 else 109000) + (if b0244 then 0 else 109000) + (if b0245 then 0 else 109000) + (if b0246 then 0 else 109000) + (if b0247 then 0 else 109000) + (if b0248 then 0 else 109000) + (if b0249 then 0 else 109000) + (if b0250 then 0 else 109000) + (if b0251 then 0 else 109000) + (if b0252 then 0 else 109000) + (if b0253 then 0 else 109000) + (if b0254 then 0 else 109000) + (if b0255 then 0 else 109000) + (if b0256 then 0 else 109000) + (if b0257 then 0 else 109000) + (if b0258 then 0 else 109000) + (if b0259 then 0 else 109000) + (if b0260 then 0 else 109000) + (if b0261 then 0 else 109000) + (if b0262 then 0 else 109000) + (if b0263 then 0 else 109000) + (if b0264 then 0 else 109000) + (if b0265 then 0 else 109000) + (if b0266 then 0 else 109000) + (if b0267 then 0 else 109000) + (if b0268 then 0 else 109000) + (if b0269 then 0 else 109000) + (if b0270 then 0 else 109000) + (if b0271 then 0 else 109000) + (if b0272 then 0 else 109000) + (if b0273 then 0 else 109000) < 441
}
Prover Time taken = 8.621888
Added Horn clause: 11 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 => 12
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/datamining/covariance/kernel3.bpl.ice2.bpl
Total learner time was 00:00:00.1221110
Verifying $kernel3: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool, b0228: bool, b0229: bool, b0230: bool, b0231: bool, b0232: bool, b0233: bool, b0234: bool, b0235: bool, b0236: bool, b0237: bool, b0238: bool, b0239: bool, b0240: bool, b0241: bool, b0242: bool, b0243: bool, b0244: bool, b0245: bool, b0246: bool, b0247: bool, b0248: bool, b0249: bool, b0250: bool, b0251: bool, b0252: bool, b0253: bool, b0254: bool, b0255: bool, b0256: bool, b0257: bool, b0258: bool, b0259: bool, b0260: bool, b0261: bool, b0262: bool, b0263: bool, b0264: bool, b0265: bool, b0266: bool, b0267: bool, b0268: bool, b0269: bool, b0270: bool, b0271: bool, b0272: bool, b0273: bool) : bool
{
  0 + (if b0000 then 0 else 109000) + (if b0001 then 0 else 109000) + (if b0002 then 0 else 109000) + (if b0003 then 0 else 109000) + (if b0005 then 0 else 109000) + (if b0007 then 0 else 109000) + (if b0008 then 0 else 109000) + (if b0009 then 0 else 109000) + (if b0010 then 0 else 109000) + (if b0011 then 0 else 109000) + (if b0012 then 0 else 109000) + (if b0013 then 0 else 109000) + (if b0014 then 0 else 109000) + (if b0015 then 0 else 109000) + (if b0016 then 0 else 109000) + (if b0017 then 0 else 109000) + (if b0018 then 0 else 109000) + (if b0019 then 0 else 109000) + (if b0020 then 0 else 109000) + (if b0021 then 0 else 109000) + (if b0022 then 0 else 109000) + (if b0023 then 0 else 109000) + (if b0025 then 0 else 109000) + (if b0026 then 0 else 109000) + (if b0027 then 0 else 109000) + (if b0028 then 0 else 109000) + (if b0029 then 0 else 109000) + (if b0030 then 0 else 109000) + (if b0031 then 0 else 109000) + (if b0032 then 0 else 109000) + (if b0033 then 0 else 109000) + (if b0034 then 0 else 109000) + (if b0035 then 0 else 109000) + (if b0036 then 0 else 109000) + (if b0037 then 0 else 109000) + (if b0038 then 0 else 109000) + (if b0039 then 0 else 109000) + (if b0040 then 0 else 109000) + (if b0041 then 0 else 109000) + (if b0042 then 0 else 109000) + (if b0043 then 0 else 109000) + (if b0044 then 0 else 109000) + (if b0045 then 0 else 109000) + (if b0046 then 0 else 109000) + (if b0047 then 0 else 109000) + (if b0048 then 0 else 109000) + (if b0049 then 0 else 109000) + (if b0050 then 0 else 109000) + (if b0051 then 0 else 109000) + (if b0052 then 0 else 109000) + (if b0053 then 0 else 109000) + (if b0054 then 0 else 109000) + (if b0055 then 0 else 109000) + (if b0056 then 0 else 109000) + (if b0057 then 0 else 109000) + (if b0058 then 0 else 109000) + (if b0059 then 0 else 109000) + (if b0060 then 0 else 109000) + (if b0061 then 0 else 109000) + (if b0062 then 0 else 109000) + (if b0063 then 0 else 109000) + (if b0064 then 0 else 109000) + (if b0065 then 0 else 109000) + (if b0066 then 0 else 109000) + (if b0067 then 0 else 109000) + (if b0068 then 0 else 109000) + (if b0069 then 0 else 109000) + (if b0070 then 0 else 109000) + (if b0071 then 0 else 109000) + (if b0072 then 0 else 109000) + (if b0073 then 0 else 109000) + (if b0074 then 0 else 109000) + (if b0075 then 0 else 109000) + (if b0076 then 0 else 109000) + (if b0077 then 0 else 109000) + (if b0078 then 0 else 109000) + (if b0079 then 0 else 109000) + (if b0080 then 0 else 109000) + (if b0081 then 0 else 109000) + (if b0082 then 0 else 109000) + (if b0083 then 0 else 109000) + (if b0084 then 0 else 109000) + (if b0085 then 0 else 109000) + (if b0086 then 0 else 109000) + (if b0087 then 0 else 109000) + (if b0088 then 0 else 109000) + (if b0089 then 0 else 109000) + (if b0090 then 0 else 109000) + (if b0091 then 0 else 109000) + (if b0092 then 0 else 109000) + (if b0093 then 0 else 109000) + (if b0094 then 0 else 109000) + (if b0095 then 0 else 109000) + (if b0096 then 0 else 109000) + (if b0097 then 0 else 109000) + (if b0098 then 0 else 109000) + (if b0099 then 0 else 109000) + (if b0100 then 0 else 109000) + (if b0101 then 0 else 109000) + (if b0102 then 0 else 109000) + (if b0103 then 0 else 109000) + (if b0104 then 0 else 109000) + (if b0105 then 0 else 109000) + (if b0149 then 0 else 109000) + (if b0150 then 0 else 109000) + (if b0151 then 0 else 109000) + (if b0152 then 0 else 109000) + (if b0153 then 0 else 109000) + (if b0154 then 0 else 109000) + (if b0155 then 0 else 109000) + (if b0156 then 0 else 109000) + (if b0157 then 0 else 109000) + (if b0158 then 0 else 109000) + (if b0159 then 0 else 109000) + (if b0201 then 0 else 109000) + (if b0202 then 0 else 109000) + (if b0203 then 0 else 109000) + (if b0204 then 0 else 109000) + (if b0205 then 0 else 109000) + (if b0206 then 0 else 109000) + (if b0207 then 0 else 109000) + (if b0208 then 0 else 109000) + (if b0209 then 0 else 109000) + (if b0210 then 0 else 109000) + (if b0211 then 0 else 109000) + (if b0212 then 0 else 109000) + (if b0213 then 0 else 109000) + (if b0214 then 0 else 109000) + (if b0215 then 0 else 109000) + (if b0216 then 0 else 109000) + (if b0217 then 0 else 109000) + (if b0218 then 0 else 109000) + (if b0219 then 0 else 109000) + (if b0220 then 0 else 109000) + (if b0221 then 0 else 109000) + (if b0222 then 0 else 109000) + (if b0223 then 0 else 109000) + (if b0224 then 0 else 109000) + (if b0225 then 0 else 109000) + (if b0226 then 0 else 109000) + (if b0227 then 0 else 109000) + (if b0228 then 0 else 109000) + (if b0229 then 0 else 109000) + (if b0230 then 0 else 109000) + (if b0231 then 0 else 109000) + (if b0232 then 0 else 109000) + (if b0233 then 0 else 109000) + (if b0234 then 0 else 109000) + (if b0235 then 0 else 109000) + (if b0236 then 0 else 109000) + (if b0237 then 0 else 109000) + (if b0238 then 0 else 109000) + (if b0239 then 0 else 109000) + (if b0240 then 0 else 109000) + (if b0241 then 0 else 109000) + (if b0242 then 0 else 109000) + (if b0243 then 0 else 109000) + (if b0244 then 0 else 109000) + (if b0245 then 0 else 109000) + (if b0246 then 0 else 109000) + (if b0247 then 0 else 109000) + (if b0248 then 0 else 109000) + (if b0249 then 0 else 109000) + (if b0250 then 0 else 109000) + (if b0251 then 0 else 109000) + (if b0252 then 0 else 109000) + (if b0253 then 0 else 109000) + (if b0254 then 0 else 109000) + (if b0255 then 0 else 109000) + (if b0256 then 0 else 109000) + (if b0257 then 0 else 109000) + (if b0258 then 0 else 109000) + (if b0259 then 0 else 109000) + (if b0260 then 0 else 109000) + (if b0261 then 0 else 109000) + (if b0262 then 0 else 109000) + (if b0263 then 0 else 109000) + (if b0264 then 0 else 109000) + (if b0265 then 0 else 109000) + (if b0266 then 0 else 109000) + (if b0267 then 0 else 109000) + (if b0268 then 0 else 109000) + (if b0269 then 0 else 109000) + (if b0270 then 0 else 109000) + (if b0271 then 0 else 109000) + (if b0272 then 0 else 109000) + (if b0273 then 0 else 109000) < 441
}
Prover Time taken = 10.207678
Added Horn clause: 9 && 13 && 0 => 14
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/datamining/covariance/kernel3.bpl.ice2.bpl
Total learner time was 00:00:00.1238460
Verifying $kernel3: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool, b0228: bool, b0229: bool, b0230: bool, b0231: bool, b0232: bool, b0233: bool, b0234: bool, b0235: bool, b0236: bool, b0237: bool, b0238: bool, b0239: bool, b0240: bool, b0241: bool, b0242: bool, b0243: bool, b0244: bool, b0245: bool, b0246: bool, b0247: bool, b0248: bool, b0249: bool, b0250: bool, b0251: bool, b0252: bool, b0253: bool, b0254: bool, b0255: bool, b0256: bool, b0257: bool, b0258: bool, b0259: bool, b0260: bool, b0261: bool, b0262: bool, b0263: bool, b0264: bool, b0265: bool, b0266: bool, b0267: bool, b0268: bool, b0269: bool, b0270: bool, b0271: bool, b0272: bool, b0273: bool) : bool
{
  0 + (if b0000 then 0 else 109000) + (if b0001 then 0 else 109000) + (if b0002 then 0 else 109000) + (if b0003 then 0 else 109000) + (if b0005 then 0 else 109000) + (if b0007 then 0 else 109000) + (if b0008 then 0 else 109000) + (if b0009 then 0 else 109000) + (if b0010 then 0 else 109000) + (if b0011 then 0 else 109000) + (if b0012 then 0 else 109000) + (if b0013 then 0 else 109000) + (if b0014 then 0 else 109000) + (if b0015 then 0 else 109000) + (if b0016 then 0 else 109000) + (if b0017 then 0 else 109000) + (if b0018 then 0 else 109000) + (if b0019 then 0 else 109000) + (if b0020 then 0 else 109000) + (if b0021 then 0 else 109000) + (if b0022 then 0 else 109000) + (if b0023 then 0 else 109000) + (if b0025 then 0 else 109000) + (if b0026 then 0 else 109000) + (if b0027 then 0 else 109000) + (if b0028 then 0 else 109000) + (if b0029 then 0 else 109000) + (if b0030 then 0 else 109000) + (if b0031 then 0 else 109000) + (if b0032 then 0 else 109000) + (if b0033 then 0 else 109000) + (if b0034 then 0 else 109000) + (if b0035 then 0 else 109000) + (if b0036 then 0 else 109000) + (if b0037 then 0 else 109000) + (if b0038 then 0 else 109000) + (if b0039 then 0 else 109000) + (if b0040 then 0 else 109000) + (if b0041 then 0 else 109000) + (if b0042 then 0 else 109000) + (if b0043 then 0 else 109000) + (if b0044 then 0 else 109000) + (if b0045 then 0 else 109000) + (if b0046 then 0 else 109000) + (if b0047 then 0 else 109000) + (if b0048 then 0 else 109000) + (if b0049 then 0 else 109000) + (if b0050 then 0 else 109000) + (if b0051 then 0 else 109000) + (if b0052 then 0 else 109000) + (if b0053 then 0 else 109000) + (if b0054 then 0 else 109000) + (if b0055 then 0 else 109000) + (if b0056 then 0 else 109000) + (if b0057 then 0 else 109000) + (if b0058 then 0 else 109000) + (if b0059 then 0 else 109000) + (if b0060 then 0 else 109000) + (if b0061 then 0 else 109000) + (if b0062 then 0 else 109000) + (if b0063 then 0 else 109000) + (if b0064 then 0 else 109000) + (if b0065 then 0 else 109000) + (if b0066 then 0 else 109000) + (if b0067 then 0 else 109000) + (if b0068 then 0 else 109000) + (if b0069 then 0 else 109000) + (if b0070 then 0 else 109000) + (if b0071 then 0 else 109000) + (if b0072 then 0 else 109000) + (if b0073 then 0 else 109000) + (if b0074 then 0 else 109000) + (if b0075 then 0 else 109000) + (if b0076 then 0 else 109000) + (if b0077 then 0 else 109000) + (if b0078 then 0 else 109000) + (if b0079 then 0 else 109000) + (if b0080 then 0 else 109000) + (if b0081 then 0 else 109000) + (if b0082 then 0 else 109000) + (if b0083 then 0 else 109000) + (if b0084 then 0 else 109000) + (if b0085 then 0 else 109000) + (if b0086 then 0 else 109000) + (if b0087 then 0 else 109000) + (if b0088 then 0 else 109000) + (if b0089 then 0 else 109000) + (if b0090 then 0 else 109000) + (if b0091 then 0 else 109000) + (if b0092 then 0 else 109000) + (if b0093 then 0 else 109000) + (if b0094 then 0 else 109000) + (if b0095 then 0 else 109000) + (if b0096 then 0 else 109000) + (if b0097 then 0 else 109000) + (if b0098 then 0 else 109000) + (if b0099 then 0 else 109000) + (if b0100 then 0 else 109000) + (if b0101 then 0 else 109000) + (if b0102 then 0 else 109000) + (if b0103 then 0 else 109000) + (if b0104 then 0 else 109000) + (if b0105 then 0 else 109000) + (if b0149 then 0 else 109000) + (if b0150 then 0 else 109000) + (if b0151 then 0 else 109000) + (if b0152 then 0 else 109000) + (if b0153 then 0 else 109000) + (if b0154 then 0 else 109000) + (if b0155 then 0 else 109000) + (if b0156 then 0 else 109000) + (if b0157 then 0 else 109000) + (if b0158 then 0 else 109000) + (if b0159 then 0 else 109000) + (if b0201 then 0 else 109000) + (if b0202 then 0 else 109000) + (if b0203 then 0 else 109000) + (if b0204 then 0 else 109000) + (if b0205 then 0 else 109000) + (if b0206 then 0 else 109000) + (if b0207 then 0 else 109000) + (if b0208 then 0 else 109000) + (if b0209 then 0 else 109000) + (if b0210 then 0 else 109000) + (if b0211 then 0 else 109000) + (if b0212 then 0 else 109000) + (if b0213 then 0 else 109000) + (if b0215 then 0 else 109000) + (if b0216 then 0 else 109000) + (if b0217 then 0 else 109000) + (if b0218 then 0 else 109000) + (if b0219 then 0 else 109000) + (if b0220 then 0 else 109000) + (if b0221 then 0 else 109000) + (if b0222 then 0 else 109000) + (if b0223 then 0 else 109000) + (if b0224 then 0 else 109000) + (if b0225 then 0 else 109000) + (if b0226 then 0 else 109000) + (if b0227 then 0 else 109000) + (if b0228 then 0 else 109000) + (if b0229 then 0 else 109000) + (if b0230 then 0 else 109000) + (if b0231 then 0 else 109000) + (if b0232 then 0 else 109000) + (if b0233 then 0 else 109000) + (if b0234 then 0 else 109000) + (if b0235 then 0 else 109000) + (if b0236 then 0 else 109000) + (if b0237 then 0 else 109000) + (if b0238 then 0 else 109000) + (if b0239 then 0 else 109000) + (if b0240 then 0 else 109000) + (if b0241 then 0 else 109000) + (if b0242 then 0 else 109000) + (if b0243 then 0 else 109000) + (if b0244 then 0 else 109000) + (if b0245 then 0 else 109000) + (if b0246 then 0 else 109000) + (if b0247 then 0 else 109000) + (if b0248 then 0 else 109000) + (if b0249 then 0 else 109000) + (if b0250 then 0 else 109000) + (if b0251 then 0 else 109000) + (if b0252 then 0 else 109000) + (if b0253 then 0 else 109000) + (if b0254 then 0 else 109000) + (if b0255 then 0 else 109000) + (if b0256 then 0 else 109000) + (if b0257 then 0 else 109000) + (if b0258 then 0 else 109000) + (if b0259 then 0 else 109000) + (if b0260 then 0 else 109000) + (if b0261 then 0 else 109000) + (if b0262 then 0 else 109000) + (if b0263 then 0 else 109000) + (if b0264 then 0 else 109000) + (if b0265 then 0 else 109000) + (if b0266 then 0 else 109000) + (if b0267 then 0 else 109000) + (if b0268 then 0 else 109000) + (if b0269 then 0 else 109000) + (if b0270 then 0 else 109000) + (if b0271 then 0 else 109000) + (if b0272 then 0 else 109000) + (if b0273 then 0 else 109000) < 441
}
Prover Time taken = 12.736151
Added Horn clause: 15 && 16 && 0 => 17
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/datamining/covariance/kernel3.bpl.ice2.bpl
Total learner time was 00:00:00.1237560
Verifying $kernel3: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool, b0228: bool, b0229: bool, b0230: bool, b0231: bool, b0232: bool, b0233: bool, b0234: bool, b0235: bool, b0236: bool, b0237: bool, b0238: bool, b0239: bool, b0240: bool, b0241: bool, b0242: bool, b0243: bool, b0244: bool, b0245: bool, b0246: bool, b0247: bool, b0248: bool, b0249: bool, b0250: bool, b0251: bool, b0252: bool, b0253: bool, b0254: bool, b0255: bool, b0256: bool, b0257: bool, b0258: bool, b0259: bool, b0260: bool, b0261: bool, b0262: bool, b0263: bool, b0264: bool, b0265: bool, b0266: bool, b0267: bool, b0268: bool, b0269: bool, b0270: bool, b0271: bool, b0272: bool, b0273: bool) : bool
{
  0 + (if b0000 then 0 else 109000) + (if b0001 then 0 else 109000) + (if b0002 then 0 else 109000) + (if b0003 then 0 else 109000) + (if b0005 then 0 else 109000) + (if b0007 then 0 else 109000) + (if b0008 then 0 else 109000) + (if b0009 then 0 else 109000) + (if b0010 then 0 else 109000) + (if b0011 then 0 else 109000) + (if b0012 then 0 else 109000) + (if b0013 then 0 else 109000) + (if b0014 then 0 else 109000) + (if b0015 then 0 else 109000) + (if b0016 then 0 else 109000) + (if b0017 then 0 else 109000) + (if b0018 then 0 else 109000) + (if b0019 then 0 else 109000) + (if b0020 then 0 else 109000) + (if b0021 then 0 else 109000) + (if b0022 then 0 else 109000) + (if b0023 then 0 else 109000) + (if b0025 then 0 else 109000) + (if b0026 then 0 else 109000) + (if b0027 then 0 else 109000) + (if b0028 then 0 else 109000) + (if b0029 then 0 else 109000) + (if b0030 then 0 else 109000) + (if b0031 then 0 else 109000) + (if b0032 then 0 else 109000) + (if b0033 then 0 else 109000) + (if b0034 then 0 else 109000) + (if b0035 then 0 else 109000) + (if b0036 then 0 else 109000) + (if b0037 then 0 else 109000) + (if b0038 then 0 else 109000) + (if b0039 then 0 else 109000) + (if b0040 then 0 else 109000) + (if b0041 then 0 else 109000) + (if b0042 then 0 else 109000) + (if b0043 then 0 else 109000) + (if b0044 then 0 else 109000) + (if b0045 then 0 else 109000) + (if b0046 then 0 else 109000) + (if b0047 then 0 else 109000) + (if b0048 then 0 else 109000) + (if b0049 then 0 else 109000) + (if b0050 then 0 else 109000) + (if b0051 then 0 else 109000) + (if b0052 then 0 else 109000) + (if b0053 then 0 else 109000) + (if b0054 then 0 else 109000) + (if b0055 then 0 else 109000) + (if b0056 then 0 else 109000) + (if b0057 then 0 else 109000) + (if b0058 then 0 else 109000) + (if b0059 then 0 else 109000) + (if b0060 then 0 else 109000) + (if b0061 then 0 else 109000) + (if b0062 then 0 else 109000) + (if b0063 then 0 else 109000) + (if b0064 then 0 else 109000) + (if b0065 then 0 else 109000) + (if b0066 then 0 else 109000) + (if b0067 then 0 else 109000) + (if b0068 then 0 else 109000) + (if b0069 then 0 else 109000) + (if b0070 then 0 else 109000) + (if b0071 then 0 else 109000) + (if b0072 then 0 else 109000) + (if b0073 then 0 else 109000) + (if b0074 then 0 else 109000) + (if b0075 then 0 else 109000) + (if b0076 then 0 else 109000) + (if b0077 then 0 else 109000) + (if b0078 then 0 else 109000) + (if b0079 then 0 else 109000) + (if b0080 then 0 else 109000) + (if b0081 then 0 else 109000) + (if b0082 then 0 else 109000) + (if b0083 then 0 else 109000) + (if b0084 then 0 else 109000) + (if b0085 then 0 else 109000) + (if b0086 then 0 else 109000) + (if b0087 then 0 else 109000) + (if b0088 then 0 else 109000) + (if b0089 then 0 else 109000) + (if b0090 then 0 else 109000) + (if b0091 then 0 else 109000) + (if b0092 then 0 else 109000) + (if b0093 then 0 else 109000) + (if b0094 then 0 else 109000) + (if b0095 then 0 else 109000) + (if b0096 then 0 else 109000) + (if b0097 then 0 else 109000) + (if b0098 then 0 else 109000) + (if b0099 then 0 else 109000) + (if b0100 then 0 else 109000) + (if b0101 then 0 else 109000) + (if b0102 then 0 else 109000) + (if b0103 then 0 else 109000) + (if b0104 then 0 else 109000) + (if b0105 then 0 else 109000) + (if b0149 then 0 else 109000) + (if b0150 then 0 else 109000) + (if b0151 then 0 else 109000) + (if b0152 then 0 else 109000) + (if b0153 then 0 else 109000) + (if b0154 then 0 else 109000) + (if b0155 then 0 else 109000) + (if b0156 then 0 else 109000) + (if b0157 then 0 else 109000) + (if b0158 then 0 else 109000) + (if b0159 then 0 else 109000) + (if b0201 then 0 else 109000) + (if b0202 then 0 else 109000) + (if b0203 then 0 else 109000) + (if b0204 then 0 else 109000) + (if b0205 then 0 else 109000) + (if b0206 then 0 else 109000) + (if b0207 then 0 else 109000) + (if b0208 then 0 else 109000) + (if b0209 then 0 else 109000) + (if b0210 then 0 else 109000) + (if b0211 then 0 else 109000) + (if b0212 then 0 else 109000) + (if b0213 then 0 else 109000) + (if b0215 then 0 else 109000) + (if b0216 then 0 else 109000) + (if b0242 then 0 else 109000) + (if b0243 then 0 else 109000) + (if b0244 then 0 else 109000) + (if b0245 then 0 else 109000) + (if b0246 then 0 else 109000) + (if b0247 then 0 else 109000) + (if b0248 then 0 else 109000) + (if b0249 then 0 else 109000) + (if b0250 then 0 else 109000) + (if b0251 then 0 else 109000) + (if b0252 then 0 else 109000) + (if b0253 then 0 else 109000) + (if b0254 then 0 else 109000) + (if b0255 then 0 else 109000) + (if b0256 then 0 else 109000) + (if b0257 then 0 else 109000) + (if b0258 then 0 else 109000) + (if b0259 then 0 else 109000) + (if b0260 then 0 else 109000) + (if b0261 then 0 else 109000) + (if b0262 then 0 else 109000) + (if b0263 then 0 else 109000) + (if b0264 then 0 else 109000) + (if b0265 then 0 else 109000) + (if b0266 then 0 else 109000) + (if b0267 then 0 else 109000) + (if b0268 then 0 else 109000) + (if b0269 then 0 else 109000) + (if b0270 then 0 else 109000) + (if b0271 then 0 else 109000) + (if b0272 then 0 else 109000) + (if b0273 then 0 else 109000) < 441
}
Prover Time taken = 13.000324
Added Horn clause: 9 && 18 && 0 => 19
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/datamining/covariance/kernel3.bpl.ice2.bpl
Total learner time was 00:00:00.1235960
Verifying $kernel3: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool, b0228: bool, b0229: bool, b0230: bool, b0231: bool, b0232: bool, b0233: bool, b0234: bool, b0235: bool, b0236: bool, b0237: bool, b0238: bool, b0239: bool, b0240: bool, b0241: bool, b0242: bool, b0243: bool, b0244: bool, b0245: bool, b0246: bool, b0247: bool, b0248: bool, b0249: bool, b0250: bool, b0251: bool, b0252: bool, b0253: bool, b0254: bool, b0255: bool, b0256: bool, b0257: bool, b0258: bool, b0259: bool, b0260: bool, b0261: bool, b0262: bool, b0263: bool, b0264: bool, b0265: bool, b0266: bool, b0267: bool, b0268: bool, b0269: bool, b0270: bool, b0271: bool, b0272: bool, b0273: bool) : bool
{
  0 + (if b0000 then 0 else 109000) + (if b0001 then 0 else 109000) + (if b0002 then 0 else 109000) + (if b0003 then 0 else 109000) + (if b0005 then 0 else 109000) + (if b0007 then 0 else 109000) + (if b0008 then 0 else 109000) + (if b0009 then 0 else 109000) + (if b0010 then 0 else 109000) + (if b0011 then 0 else 109000) + (if b0012 then 0 else 109000) + (if b0013 then 0 else 109000) + (if b0014 then 0 else 109000) + (if b0015 then 0 else 109000) + (if b0016 then 0 else 109000) + (if b0017 then 0 else 109000) + (if b0018 then 0 else 109000) + (if b0019 then 0 else 109000) + (if b0020 then 0 else 109000) + (if b0021 then 0 else 109000) + (if b0022 then 0 else 109000) + (if b0023 then 0 else 109000) + (if b0026 then 0 else 109000) + (if b0027 then 0 else 109000) + (if b0028 then 0 else 109000) + (if b0029 then 0 else 109000) + (if b0030 then 0 else 109000) + (if b0031 then 0 else 109000) + (if b0032 then 0 else 109000) + (if b0033 then 0 else 109000) + (if b0034 then 0 else 109000) + (if b0035 then 0 else 109000) + (if b0036 then 0 else 109000) + (if b0037 then 0 else 109000) + (if b0038 then 0 else 109000) + (if b0039 then 0 else 109000) + (if b0040 then 0 else 109000) + (if b0041 then 0 else 109000) + (if b0042 then 0 else 109000) + (if b0043 then 0 else 109000) + (if b0044 then 0 else 109000) + (if b0045 then 0 else 109000) + (if b0046 then 0 else 109000) + (if b0047 then 0 else 109000) + (if b0048 then 0 else 109000) + (if b0049 then 0 else 109000) + (if b0050 then 0 else 109000) + (if b0051 then 0 else 109000) + (if b0052 then 0 else 109000) + (if b0053 then 0 else 109000) + (if b0054 then 0 else 109000) + (if b0055 then 0 else 109000) + (if b0056 then 0 else 109000) + (if b0057 then 0 else 109000) + (if b0058 then 0 else 109000) + (if b0059 then 0 else 109000) + (if b0060 then 0 else 109000) + (if b0061 then 0 else 109000) + (if b0062 then 0 else 109000) + (if b0063 then 0 else 109000) + (if b0064 then 0 else 109000) + (if b0065 then 0 else 109000) + (if b0066 then 0 else 109000) + (if b0067 then 0 else 109000) + (if b0068 then 0 else 109000) + (if b0069 then 0 else 109000) + (if b0070 then 0 else 109000) + (if b0071 then 0 else 109000) + (if b0072 then 0 else 109000) + (if b0073 then 0 else 109000) + (if b0074 then 0 else 109000) + (if b0075 then 0 else 109000) + (if b0076 then 0 else 109000) + (if b0077 then 0 else 109000) + (if b0078 then 0 else 109000) + (if b0079 then 0 else 109000) + (if b0080 then 0 else 109000) + (if b0081 then 0 else 109000) + (if b0082 then 0 else 109000) + (if b0083 then 0 else 109000) + (if b0084 then 0 else 109000) + (if b0085 then 0 else 109000) + (if b0086 then 0 else 109000) + (if b0087 then 0 else 109000) + (if b0088 then 0 else 109000) + (if b0089 then 0 else 109000) + (if b0090 then 0 else 109000) + (if b0091 then 0 else 109000) + (if b0092 then 0 else 109000) + (if b0093 then 0 else 109000) + (if b0094 then 0 else 109000) + (if b0095 then 0 else 109000) + (if b0096 then 0 else 109000) + (if b0097 then 0 else 109000) + (if b0098 then 0 else 109000) + (if b0099 then 0 else 109000) + (if b0100 then 0 else 109000) + (if b0101 then 0 else 109000) + (if b0102 then 0 else 109000) + (if b0103 then 0 else 109000) + (if b0104 then 0 else 109000) + (if b0105 then 0 else 109000) + (if b0149 then 0 else 109000) + (if b0150 then 0 else 109000) + (if b0151 then 0 else 109000) + (if b0152 then 0 else 109000) + (if b0153 then 0 else 109000) + (if b0154 then 0 else 109000) + (if b0155 then 0 else 109000) + (if b0156 then 0 else 109000) + (if b0157 then 0 else 109000) + (if b0158 then 0 else 109000) + (if b0159 then 0 else 109000) + (if b0201 then 0 else 109000) + (if b0202 then 0 else 109000) + (if b0203 then 0 else 109000) + (if b0204 then 0 else 109000) + (if b0205 then 0 else 109000) + (if b0206 then 0 else 109000) + (if b0207 then 0 else 109000) + (if b0208 then 0 else 109000) + (if b0209 then 0 else 109000) + (if b0210 then 0 else 109000) + (if b0211 then 0 else 109000) + (if b0212 then 0 else 109000) + (if b0213 then 0 else 109000) + (if b0215 then 0 else 109000) + (if b0216 then 0 else 109000) + (if b0242 then 0 else 109000) + (if b0243 then 0 else 109000) + (if b0244 then 0 else 109000) + (if b0245 then 0 else 109000) + (if b0246 then 0 else 109000) + (if b0247 then 0 else 109000) + (if b0248 then 0 else 109000) + (if b0249 then 0 else 109000) + (if b0250 then 0 else 109000) + (if b0251 then 0 else 109000) + (if b0252 then 0 else 109000) + (if b0253 then 0 else 109000) + (if b0254 then 0 else 109000) + (if b0255 then 0 else 109000) + (if b0256 then 0 else 109000) + (if b0257 then 0 else 109000) + (if b0258 then 0 else 109000) + (if b0259 then 0 else 109000) + (if b0260 then 0 else 109000) + (if b0261 then 0 else 109000) + (if b0262 then 0 else 109000) + (if b0263 then 0 else 109000) + (if b0264 then 0 else 109000) + (if b0265 then 0 else 109000) + (if b0266 then 0 else 109000) + (if b0267 then 0 else 109000) + (if b0268 then 0 else 109000) + (if b0269 then 0 else 109000) + (if b0270 then 0 else 109000) + (if b0271 then 0 else 109000) + (if b0272 then 0 else 109000) + (if b0273 then 0 else 109000) < 441
}
Prover Time taken = 14.131401
Added Horn clause: 11 && 20 && 0 && 14 && 19 && 0 && 0 => 21
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/datamining/covariance/kernel3.bpl.ice2.bpl
Total learner time was 00:00:00.1273980
Verifying $kernel3: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool, b0228: bool, b0229: bool, b0230: bool, b0231: bool, b0232: bool, b0233: bool, b0234: bool, b0235: bool, b0236: bool, b0237: bool, b0238: bool, b0239: bool, b0240: bool, b0241: bool, b0242: bool, b0243: bool, b0244: bool, b0245: bool, b0246: bool, b0247: bool, b0248: bool, b0249: bool, b0250: bool, b0251: bool, b0252: bool, b0253: bool, b0254: bool, b0255: bool, b0256: bool, b0257: bool, b0258: bool, b0259: bool, b0260: bool, b0261: bool, b0262: bool, b0263: bool, b0264: bool, b0265: bool, b0266: bool, b0267: bool, b0268: bool, b0269: bool, b0270: bool, b0271: bool, b0272: bool, b0273: bool) : bool
{
  0 + (if b0000 then 0 else 109000) + (if b0001 then 0 else 109000) + (if b0002 then 0 else 109000) + (if b0003 then 0 else 109000) + (if b0005 then 0 else 109000) + (if b0007 then 0 else 109000) + (if b0008 then 0 else 109000) + (if b0009 then 0 else 109000) + (if b0010 then 0 else 109000) + (if b0011 then 0 else 109000) + (if b0012 then 0 else 109000) + (if b0013 then 0 else 109000) + (if b0014 then 0 else 109000) + (if b0015 then 0 else 109000) + (if b0016 then 0 else 109000) + (if b0017 then 0 else 109000) + (if b0018 then 0 else 109000) + (if b0019 then 0 else 109000) + (if b0020 then 0 else 109000) + (if b0021 then 0 else 109000) + (if b0022 then 0 else 109000) + (if b0023 then 0 else 109000) + (if b0026 then 0 else 109000) + (if b0027 then 0 else 109000) + (if b0028 then 0 else 109000) + (if b0029 then 0 else 109000) + (if b0030 then 0 else 109000) + (if b0031 then 0 else 109000) + (if b0032 then 0 else 109000) + (if b0033 then 0 else 109000) + (if b0034 then 0 else 109000) + (if b0035 then 0 else 109000) + (if b0036 then 0 else 109000) + (if b0037 then 0 else 109000) + (if b0038 then 0 else 109000) + (if b0039 then 0 else 109000) + (if b0040 then 0 else 109000) + (if b0041 then 0 else 109000) + (if b0042 then 0 else 109000) + (if b0043 then 0 else 109000) + (if b0044 then 0 else 109000) + (if b0045 then 0 else 109000) + (if b0046 then 0 else 109000) + (if b0047 then 0 else 109000) + (if b0048 then 0 else 109000) + (if b0049 then 0 else 109000) + (if b0050 then 0 else 109000) + (if b0051 then 0 else 109000) + (if b0052 then 0 else 109000) + (if b0053 then 0 else 109000) + (if b0054 then 0 else 109000) + (if b0055 then 0 else 109000) + (if b0056 then 0 else 109000) + (if b0057 then 0 else 109000) + (if b0058 then 0 else 109000) + (if b0059 then 0 else 109000) + (if b0060 then 0 else 109000) + (if b0061 then 0 else 109000) + (if b0062 then 0 else 109000) + (if b0063 then 0 else 109000) + (if b0064 then 0 else 109000) + (if b0065 then 0 else 109000) + (if b0066 then 0 else 109000) + (if b0067 then 0 else 109000) + (if b0068 then 0 else 109000) + (if b0069 then 0 else 109000) + (if b0070 then 0 else 109000) + (if b0071 then 0 else 109000) + (if b0072 then 0 else 109000) + (if b0073 then 0 else 109000) + (if b0074 then 0 else 109000) + (if b0075 then 0 else 109000) + (if b0076 then 0 else 109000) + (if b0077 then 0 else 109000) + (if b0078 then 0 else 109000) + (if b0079 then 0 else 109000) + (if b0080 then 0 else 109000) + (if b0081 then 0 else 109000) + (if b0082 then 0 else 109000) + (if b0083 then 0 else 109000) + (if b0084 then 0 else 109000) + (if b0085 then 0 else 109000) + (if b0086 then 0 else 109000) + (if b0087 then 0 else 109000) + (if b0088 then 0 else 109000) + (if b0089 then 0 else 109000) + (if b0090 then 0 else 109000) + (if b0091 then 0 else 109000) + (if b0092 then 0 else 109000) + (if b0093 then 0 else 109000) + (if b0095 then 0 else 109000) + (if b0097 then 0 else 109000) + (if b0098 then 0 else 109000) + (if b0099 then 0 else 109000) + (if b0100 then 0 else 109000) + (if b0101 then 0 else 109000) + (if b0102 then 0 else 109000) + (if b0103 then 0 else 109000) + (if b0104 then 0 else 109000) + (if b0105 then 0 else 109000) + (if b0149 then 0 else 109000) + (if b0150 then 0 else 109000) + (if b0151 then 0 else 109000) + (if b0152 then 0 else 109000) + (if b0153 then 0 else 109000) + (if b0154 then 0 else 109000) + (if b0155 then 0 else 109000) + (if b0156 then 0 else 109000) + (if b0157 then 0 else 109000) + (if b0158 then 0 else 109000) + (if b0159 then 0 else 109000) + (if b0201 then 0 else 109000) + (if b0202 then 0 else 109000) + (if b0203 then 0 else 109000) + (if b0204 then 0 else 109000) + (if b0205 then 0 else 109000) + (if b0206 then 0 else 109000) + (if b0207 then 0 else 109000) + (if b0208 then 0 else 109000) + (if b0209 then 0 else 109000) + (if b0210 then 0 else 109000) + (if b0211 then 0 else 109000) + (if b0212 then 0 else 109000) + (if b0213 then 0 else 109000) + (if b0215 then 0 else 109000) + (if b0216 then 0 else 109000) + (if b0242 then 0 else 109000) + (if b0243 then 0 else 109000) + (if b0244 then 0 else 109000) + (if b0245 then 0 else 109000) + (if b0246 then 0 else 109000) + (if b0247 then 0 else 109000) + (if b0248 then 0 else 109000) + (if b0249 then 0 else 109000) + (if b0250 then 0 else 109000) + (if b0251 then 0 else 109000) + (if b0252 then 0 else 109000) + (if b0253 then 0 else 109000) + (if b0254 then 0 else 109000) + (if b0255 then 0 else 109000) + (if b0256 then 0 else 109000) + (if b0257 then 0 else 109000) + (if b0258 then 0 else 109000) + (if b0259 then 0 else 109000) + (if b0260 then 0 else 109000) + (if b0261 then 0 else 109000) + (if b0262 then 0 else 109000) + (if b0263 then 0 else 109000) + (if b0264 then 0 else 109000) + (if b0265 then 0 else 109000) + (if b0266 then 0 else 109000) + (if b0267 then 0 else 109000) + (if b0268 then 0 else 109000) + (if b0269 then 0 else 109000) + (if b0270 then 0 else 109000) + (if b0271 then 0 else 109000) + (if b0272 then 0 else 109000) + (if b0273 then 0 else 109000) < 441
}
Prover Time taken = 14.328128
Added Horn clause: 9 && 22 && 0 && 23 && 6 => 24
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/datamining/covariance/kernel3.bpl.ice2.bpl
Total learner time was 00:00:00.1263500
Verifying $kernel3: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool, b0228: bool, b0229: bool, b0230: bool, b0231: bool, b0232: bool, b0233: bool, b0234: bool, b0235: bool, b0236: bool, b0237: bool, b0238: bool, b0239: bool, b0240: bool, b0241: bool, b0242: bool, b0243: bool, b0244: bool, b0245: bool, b0246: bool, b0247: bool, b0248: bool, b0249: bool, b0250: bool, b0251: bool, b0252: bool, b0253: bool, b0254: bool, b0255: bool, b0256: bool, b0257: bool, b0258: bool, b0259: bool, b0260: bool, b0261: bool, b0262: bool, b0263: bool, b0264: bool, b0265: bool, b0266: bool, b0267: bool, b0268: bool, b0269: bool, b0270: bool, b0271: bool, b0272: bool, b0273: bool) : bool
{
  0 + (if b0000 then 0 else 109000) + (if b0001 then 0 else 109000) + (if b0002 then 0 else 109000) + (if b0003 then 0 else 109000) + (if b0005 then 0 else 109000) + (if b0007 then 0 else 109000) + (if b0008 then 0 else 109000) + (if b0009 then 0 else 109000) + (if b0010 then 0 else 109000) + (if b0011 then 0 else 109000) + (if b0012 then 0 else 109000) + (if b0013 then 0 else 109000) + (if b0014 then 0 else 109000) + (if b0015 then 0 else 109000) + (if b0016 then 0 else 109000) + (if b0017 then 0 else 109000) + (if b0018 then 0 else 109000) + (if b0019 then 0 else 109000) + (if b0020 then 0 else 109000) + (if b0021 then 0 else 109000) + (if b0022 then 0 else 109000) + (if b0023 then 0 else 109000) + (if b0026 then 0 else 109000) + (if b0027 then 0 else 109000) + (if b0028 then 0 else 109000) + (if b0029 then 0 else 109000) + (if b0030 then 0 else 109000) + (if b0031 then 0 else 109000) + (if b0032 then 0 else 109000) + (if b0033 then 0 else 109000) + (if b0034 then 0 else 109000) + (if b0035 then 0 else 109000) + (if b0036 then 0 else 109000) + (if b0037 then 0 else 109000) + (if b0038 then 0 else 109000) + (if b0039 then 0 else 109000) + (if b0040 then 0 else 109000) + (if b0041 then 0 else 109000) + (if b0042 then 0 else 109000) + (if b0043 then 0 else 109000) + (if b0044 then 0 else 109000) + (if b0045 then 0 else 109000) + (if b0046 then 0 else 109000) + (if b0047 then 0 else 109000) + (if b0048 then 0 else 109000) + (if b0049 then 0 else 109000) + (if b0050 then 0 else 109000) + (if b0051 then 0 else 109000) + (if b0052 then 0 else 109000) + (if b0053 then 0 else 109000) + (if b0054 then 0 else 109000) + (if b0055 then 0 else 109000) + (if b0056 then 0 else 109000) + (if b0057 then 0 else 109000) + (if b0058 then 0 else 109000) + (if b0059 then 0 else 109000) + (if b0060 then 0 else 109000) + (if b0061 then 0 else 109000) + (if b0062 then 0 else 109000) + (if b0063 then 0 else 109000) + (if b0064 then 0 else 109000) + (if b0065 then 0 else 109000) + (if b0066 then 0 else 109000) + (if b0067 then 0 else 109000) + (if b0068 then 0 else 109000) + (if b0069 then 0 else 109000) + (if b0070 then 0 else 109000) + (if b0071 then 0 else 109000) + (if b0072 then 0 else 109000) + (if b0073 then 0 else 109000) + (if b0074 then 0 else 109000) + (if b0075 then 0 else 109000) + (if b0076 then 0 else 109000) + (if b0077 then 0 else 109000) + (if b0078 then 0 else 109000) + (if b0079 then 0 else 109000) + (if b0080 then 0 else 109000) + (if b0081 then 0 else 109000) + (if b0082 then 0 else 109000) + (if b0083 then 0 else 109000) + (if b0084 then 0 else 109000) + (if b0085 then 0 else 109000) + (if b0086 then 0 else 109000) + (if b0087 then 0 else 109000) + (if b0088 then 0 else 109000) + (if b0089 then 0 else 109000) + (if b0090 then 0 else 109000) + (if b0091 then 0 else 109000) + (if b0092 then 0 else 109000) + (if b0095 then 0 else 109000) + (if b0097 then 0 else 109000) + (if b0098 then 0 else 109000) + (if b0099 then 0 else 109000) + (if b0100 then 0 else 109000) + (if b0101 then 0 else 109000) + (if b0102 then 0 else 109000) + (if b0103 then 0 else 109000) + (if b0104 then 0 else 109000) + (if b0105 then 0 else 109000) + (if b0149 then 0 else 109000) + (if b0150 then 0 else 109000) + (if b0151 then 0 else 109000) + (if b0152 then 0 else 109000) + (if b0153 then 0 else 109000) + (if b0154 then 0 else 109000) + (if b0155 then 0 else 109000) + (if b0156 then 0 else 109000) + (if b0157 then 0 else 109000) + (if b0158 then 0 else 109000) + (if b0159 then 0 else 109000) + (if b0201 then 0 else 109000) + (if b0202 then 0 else 109000) + (if b0203 then 0 else 109000) + (if b0204 then 0 else 109000) + (if b0205 then 0 else 109000) + (if b0206 then 0 else 109000) + (if b0207 then 0 else 109000) + (if b0208 then 0 else 109000) + (if b0209 then 0 else 109000) + (if b0210 then 0 else 109000) + (if b0211 then 0 else 109000) + (if b0212 then 0 else 109000) + (if b0213 then 0 else 109000) + (if b0215 then 0 else 109000) + (if b0216 then 0 else 109000) + (if b0242 then 0 else 109000) + (if b0243 then 0 else 109000) + (if b0244 then 0 else 109000) + (if b0245 then 0 else 109000) + (if b0246 then 0 else 109000) + (if b0247 then 0 else 109000) + (if b0248 then 0 else 109000) + (if b0249 then 0 else 109000) + (if b0250 then 0 else 109000) + (if b0251 then 0 else 109000) + (if b0252 then 0 else 109000) + (if b0253 then 0 else 109000) + (if b0254 then 0 else 109000) + (if b0255 then 0 else 109000) + (if b0256 then 0 else 109000) + (if b0257 then 0 else 109000) + (if b0258 then 0 else 109000) + (if b0259 then 0 else 109000) + (if b0260 then 0 else 109000) + (if b0261 then 0 else 109000) + (if b0262 then 0 else 109000) + (if b0263 then 0 else 109000) + (if b0264 then 0 else 109000) + (if b0265 then 0 else 109000) + (if b0266 then 0 else 109000) + (if b0267 then 0 else 109000) + (if b0268 then 0 else 109000) + (if b0269 then 0 else 109000) + (if b0270 then 0 else 109000) + (if b0271 then 0 else 109000) + (if b0272 then 0 else 109000) + (if b0273 then 0 else 109000) < 441
}
Prover Time taken = 8.35537
Added Horn clause: 5 && 25 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 => 26
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/datamining/covariance/kernel3.bpl.ice2.bpl
Total learner time was 00:00:00.1248090
Verifying $kernel3: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool, b0228: bool, b0229: bool, b0230: bool, b0231: bool, b0232: bool, b0233: bool, b0234: bool, b0235: bool, b0236: bool, b0237: bool, b0238: bool, b0239: bool, b0240: bool, b0241: bool, b0242: bool, b0243: bool, b0244: bool, b0245: bool, b0246: bool, b0247: bool, b0248: bool, b0249: bool, b0250: bool, b0251: bool, b0252: bool, b0253: bool, b0254: bool, b0255: bool, b0256: bool, b0257: bool, b0258: bool, b0259: bool, b0260: bool, b0261: bool, b0262: bool, b0263: bool, b0264: bool, b0265: bool, b0266: bool, b0267: bool, b0268: bool, b0269: bool, b0270: bool, b0271: bool, b0272: bool, b0273: bool) : bool
{
  0 + (if b0000 then 0 else 109000) + (if b0001 then 0 else 109000) + (if b0002 then 0 else 109000) + (if b0003 then 0 else 109000) + (if b0005 then 0 else 109000) + (if b0007 then 0 else 109000) + (if b0008 then 0 else 109000) + (if b0009 then 0 else 109000) + (if b0010 then 0 else 109000) + (if b0011 then 0 else 109000) + (if b0012 then 0 else 109000) + (if b0013 then 0 else 109000) + (if b0014 then 0 else 109000) + (if b0015 then 0 else 109000) + (if b0016 then 0 else 109000) + (if b0017 then 0 else 109000) + (if b0018 then 0 else 109000) + (if b0019 then 0 else 109000) + (if b0020 then 0 else 109000) + (if b0021 then 0 else 109000) + (if b0022 then 0 else 109000) + (if b0023 then 0 else 109000) + (if b0026 then 0 else 109000) + (if b0027 then 0 else 109000) + (if b0028 then 0 else 109000) + (if b0029 then 0 else 109000) + (if b0030 then 0 else 109000) + (if b0031 then 0 else 109000) + (if b0032 then 0 else 109000) + (if b0033 then 0 else 109000) + (if b0034 then 0 else 109000) + (if b0035 then 0 else 109000) + (if b0036 then 0 else 109000) + (if b0037 then 0 else 109000) + (if b0038 then 0 else 109000) + (if b0039 then 0 else 109000) + (if b0040 then 0 else 109000) + (if b0041 then 0 else 109000) + (if b0042 then 0 else 109000) + (if b0044 then 0 else 109000) + (if b0045 then 0 else 109000) + (if b0046 then 0 else 109000) + (if b0047 then 0 else 109000) + (if b0048 then 0 else 109000) + (if b0049 then 0 else 109000) + (if b0050 then 0 else 109000) + (if b0051 then 0 else 109000) + (if b0052 then 0 else 109000) + (if b0053 then 0 else 109000) + (if b0054 then 0 else 109000) + (if b0055 then 0 else 109000) + (if b0056 then 0 else 109000) + (if b0057 then 0 else 109000) + (if b0058 then 0 else 109000) + (if b0059 then 0 else 109000) + (if b0060 then 0 else 109000) + (if b0061 then 0 else 109000) + (if b0062 then 0 else 109000) + (if b0063 then 0 else 109000) + (if b0064 then 0 else 109000) + (if b0065 then 0 else 109000) + (if b0066 then 0 else 109000) + (if b0067 then 0 else 109000) + (if b0068 then 0 else 109000) + (if b0069 then 0 else 109000) + (if b0070 then 0 else 109000) + (if b0071 then 0 else 109000) + (if b0072 then 0 else 109000) + (if b0073 then 0 else 109000) + (if b0074 then 0 else 109000) + (if b0075 then 0 else 109000) + (if b0076 then 0 else 109000) + (if b0077 then 0 else 109000) + (if b0078 then 0 else 109000) + (if b0079 then 0 else 109000) + (if b0080 then 0 else 109000) + (if b0081 then 0 else 109000) + (if b0082 then 0 else 109000) + (if b0083 then 0 else 109000) + (if b0084 then 0 else 109000) + (if b0085 then 0 else 109000) + (if b0086 then 0 else 109000) + (if b0087 then 0 else 109000) + (if b0088 then 0 else 109000) + (if b0089 then 0 else 109000) + (if b0090 then 0 else 109000) + (if b0091 then 0 else 109000) + (if b0092 then 0 else 109000) + (if b0095 then 0 else 109000) + (if b0097 then 0 else 109000) + (if b0098 then 0 else 109000) + (if b0099 then 0 else 109000) + (if b0100 then 0 else 109000) + (if b0101 then 0 else 109000) + (if b0102 then 0 else 109000) + (if b0103 then 0 else 109000) + (if b0104 then 0 else 109000) + (if b0105 then 0 else 109000) + (if b0149 then 0 else 109000) + (if b0150 then 0 else 109000) + (if b0151 then 0 else 109000) + (if b0152 then 0 else 109000) + (if b0153 then 0 else 109000) + (if b0154 then 0 else 109000) + (if b0155 then 0 else 109000) + (if b0156 then 0 else 109000) + (if b0157 then 0 else 109000) + (if b0158 then 0 else 109000) + (if b0159 then 0 else 109000) + (if b0201 then 0 else 109000) + (if b0202 then 0 else 109000) + (if b0203 then 0 else 109000) + (if b0204 then 0 else 109000) + (if b0205 then 0 else 109000) + (if b0206 then 0 else 109000) + (if b0207 then 0 else 109000) + (if b0208 then 0 else 109000) + (if b0209 then 0 else 109000) + (if b0210 then 0 else 109000) + (if b0211 then 0 else 109000) + (if b0212 then 0 else 109000) + (if b0213 then 0 else 109000) + (if b0215 then 0 else 109000) + (if b0216 then 0 else 109000) + (if b0242 then 0 else 109000) + (if b0243 then 0 else 109000) + (if b0244 then 0 else 109000) + (if b0245 then 0 else 109000) + (if b0246 then 0 else 109000) + (if b0247 then 0 else 109000) + (if b0248 then 0 else 109000) + (if b0249 then 0 else 109000) + (if b0250 then 0 else 109000) + (if b0251 then 0 else 109000) + (if b0252 then 0 else 109000) + (if b0253 then 0 else 109000) + (if b0254 then 0 else 109000) + (if b0255 then 0 else 109000) + (if b0256 then 0 else 109000) + (if b0257 then 0 else 109000) + (if b0258 then 0 else 109000) + (if b0259 then 0 else 109000) + (if b0260 then 0 else 109000) + (if b0261 then 0 else 109000) + (if b0262 then 0 else 109000) + (if b0263 then 0 else 109000) + (if b0264 then 0 else 109000) + (if b0265 then 0 else 109000) + (if b0266 then 0 else 109000) + (if b0267 then 0 else 109000) + (if b0268 then 0 else 109000) + (if b0269 then 0 else 109000) + (if b0270 then 0 else 109000) + (if b0271 then 0 else 109000) + (if b0272 then 0 else 109000) + (if b0273 then 0 else 109000) < 441
}
Prover Time taken = 14.071891
Added Horn clause: 11 && 27 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 => 28
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/datamining/covariance/kernel3.bpl.ice2.bpl
Total learner time was 00:00:00.1238980
Verifying $kernel3: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool, b0228: bool, b0229: bool, b0230: bool, b0231: bool, b0232: bool, b0233: bool, b0234: bool, b0235: bool, b0236: bool, b0237: bool, b0238: bool, b0239: bool, b0240: bool, b0241: bool, b0242: bool, b0243: bool, b0244: bool, b0245: bool, b0246: bool, b0247: bool, b0248: bool, b0249: bool, b0250: bool, b0251: bool, b0252: bool, b0253: bool, b0254: bool, b0255: bool, b0256: bool, b0257: bool, b0258: bool, b0259: bool, b0260: bool, b0261: bool, b0262: bool, b0263: bool, b0264: bool, b0265: bool, b0266: bool, b0267: bool, b0268: bool, b0269: bool, b0270: bool, b0271: bool, b0272: bool, b0273: bool) : bool
{
  0 + (if b0000 then 0 else 109000) + (if b0001 then 0 else 109000) + (if b0002 then 0 else 109000) + (if b0003 then 0 else 109000) + (if b0005 then 0 else 109000) + (if b0007 then 0 else 109000) + (if b0008 then 0 else 109000) + (if b0009 then 0 else 109000) + (if b0010 then 0 else 109000) + (if b0011 then 0 else 109000) + (if b0012 then 0 else 109000) + (if b0013 then 0 else 109000) + (if b0014 then 0 else 109000) + (if b0015 then 0 else 109000) + (if b0016 then 0 else 109000) + (if b0017 then 0 else 109000) + (if b0018 then 0 else 109000) + (if b0019 then 0 else 109000) + (if b0020 then 0 else 109000) + (if b0021 then 0 else 109000) + (if b0022 then 0 else 109000) + (if b0023 then 0 else 109000) + (if b0026 then 0 else 109000) + (if b0027 then 0 else 109000) + (if b0028 then 0 else 109000) + (if b0029 then 0 else 109000) + (if b0030 then 0 else 109000) + (if b0031 then 0 else 109000) + (if b0032 then 0 else 109000) + (if b0033 then 0 else 109000) + (if b0034 then 0 else 109000) + (if b0035 then 0 else 109000) + (if b0036 then 0 else 109000) + (if b0037 then 0 else 109000) + (if b0038 then 0 else 109000) + (if b0039 then 0 else 109000) + (if b0040 then 0 else 109000) + (if b0041 then 0 else 109000) + (if b0042 then 0 else 109000) + (if b0045 then 0 else 109000) + (if b0047 then 0 else 109000) + (if b0048 then 0 else 109000) + (if b0049 then 0 else 109000) + (if b0050 then 0 else 109000) + (if b0051 then 0 else 109000) + (if b0052 then 0 else 109000) + (if b0053 then 0 else 109000) + (if b0054 then 0 else 109000) + (if b0055 then 0 else 109000) + (if b0056 then 0 else 109000) + (if b0057 then 0 else 109000) + (if b0058 then 0 else 109000) + (if b0059 then 0 else 109000) + (if b0060 then 0 else 109000) + (if b0061 then 0 else 109000) + (if b0062 then 0 else 109000) + (if b0063 then 0 else 109000) + (if b0064 then 0 else 109000) + (if b0065 then 0 else 109000) + (if b0066 then 0 else 109000) + (if b0067 then 0 else 109000) + (if b0068 then 0 else 109000) + (if b0069 then 0 else 109000) + (if b0070 then 0 else 109000) + (if b0071 then 0 else 109000) + (if b0072 then 0 else 109000) + (if b0073 then 0 else 109000) + (if b0074 then 0 else 109000) + (if b0075 then 0 else 109000) + (if b0076 then 0 else 109000) + (if b0077 then 0 else 109000) + (if b0078 then 0 else 109000) + (if b0079 then 0 else 109000) + (if b0080 then 0 else 109000) + (if b0081 then 0 else 109000) + (if b0082 then 0 else 109000) + (if b0083 then 0 else 109000) + (if b0084 then 0 else 109000) + (if b0085 then 0 else 109000) + (if b0086 then 0 else 109000) + (if b0087 then 0 else 109000) + (if b0088 then 0 else 109000) + (if b0089 then 0 else 109000) + (if b0090 then 0 else 109000) + (if b0091 then 0 else 109000) + (if b0092 then 0 else 109000) + (if b0095 then 0 else 109000) + (if b0097 then 0 else 109000) + (if b0098 then 0 else 109000) + (if b0099 then 0 else 109000) + (if b0100 then 0 else 109000) + (if b0101 then 0 else 109000) + (if b0102 then 0 else 109000) + (if b0103 then 0 else 109000) + (if b0104 then 0 else 109000) + (if b0105 then 0 else 109000) + (if b0149 then 0 else 109000) + (if b0150 then 0 else 109000) + (if b0151 then 0 else 109000) + (if b0152 then 0 else 109000) + (if b0153 then 0 else 109000) + (if b0154 then 0 else 109000) + (if b0155 then 0 else 109000) + (if b0156 then 0 else 109000) + (if b0157 then 0 else 109000) + (if b0158 then 0 else 109000) + (if b0159 then 0 else 109000) + (if b0201 then 0 else 109000) + (if b0202 then 0 else 109000) + (if b0203 then 0 else 109000) + (if b0204 then 0 else 109000) + (if b0205 then 0 else 109000) + (if b0206 then 0 else 109000) + (if b0207 then 0 else 109000) + (if b0208 then 0 else 109000) + (if b0209 then 0 else 109000) + (if b0210 then 0 else 109000) + (if b0211 then 0 else 109000) + (if b0212 then 0 else 109000) + (if b0213 then 0 else 109000) + (if b0215 then 0 else 109000) + (if b0216 then 0 else 109000) + (if b0242 then 0 else 109000) + (if b0243 then 0 else 109000) + (if b0244 then 0 else 109000) + (if b0245 then 0 else 109000) + (if b0246 then 0 else 109000) + (if b0247 then 0 else 109000) + (if b0248 then 0 else 109000) + (if b0249 then 0 else 109000) + (if b0250 then 0 else 109000) + (if b0251 then 0 else 109000) + (if b0252 then 0 else 109000) + (if b0253 then 0 else 109000) + (if b0254 then 0 else 109000) + (if b0255 then 0 else 109000) + (if b0256 then 0 else 109000) + (if b0257 then 0 else 109000) + (if b0258 then 0 else 109000) + (if b0259 then 0 else 109000) + (if b0260 then 0 else 109000) + (if b0261 then 0 else 109000) + (if b0262 then 0 else 109000) + (if b0263 then 0 else 109000) + (if b0264 then 0 else 109000) + (if b0265 then 0 else 109000) + (if b0266 then 0 else 109000) + (if b0267 then 0 else 109000) + (if b0268 then 0 else 109000) + (if b0269 then 0 else 109000) + (if b0270 then 0 else 109000) + (if b0271 then 0 else 109000) + (if b0272 then 0 else 109000) + (if b0273 then 0 else 109000) < 441
}
Prover Time taken = 9.060901
Added Horn clause: 9 && 29 && 0 && 14 && 19 && 0 && 30 => 31
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/datamining/covariance/kernel3.bpl.ice2.bpl
Total learner time was 00:00:00.1361520
Verifying $kernel3: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool, b0228: bool, b0229: bool, b0230: bool, b0231: bool, b0232: bool, b0233: bool, b0234: bool, b0235: bool, b0236: bool, b0237: bool, b0238: bool, b0239: bool, b0240: bool, b0241: bool, b0242: bool, b0243: bool, b0244: bool, b0245: bool, b0246: bool, b0247: bool, b0248: bool, b0249: bool, b0250: bool, b0251: bool, b0252: bool, b0253: bool, b0254: bool, b0255: bool, b0256: bool, b0257: bool, b0258: bool, b0259: bool, b0260: bool, b0261: bool, b0262: bool, b0263: bool, b0264: bool, b0265: bool, b0266: bool, b0267: bool, b0268: bool, b0269: bool, b0270: bool, b0271: bool, b0272: bool, b0273: bool) : bool
{
  0 + (if b0000 then 0 else 109000) + (if b0001 then 0 else 109000) + (if b0002 then 0 else 109000) + (if b0003 then 0 else 109000) + (if b0005 then 0 else 109000) + (if b0007 then 0 else 109000) + (if b0008 then 0 else 109000) + (if b0009 then 0 else 109000) + (if b0010 then 0 else 109000) + (if b0011 then 0 else 109000) + (if b0012 then 0 else 109000) + (if b0013 then 0 else 109000) + (if b0014 then 0 else 109000) + (if b0015 then 0 else 109000) + (if b0016 then 0 else 109000) + (if b0017 then 0 else 109000) + (if b0018 then 0 else 109000) + (if b0019 then 0 else 109000) + (if b0020 then 0 else 109000) + (if b0021 then 0 else 109000) + (if b0022 then 0 else 109000) + (if b0023 then 0 else 109000) + (if b0026 then 0 else 109000) + (if b0027 then 0 else 109000) + (if b0028 then 0 else 109000) + (if b0029 then 0 else 109000) + (if b0030 then 0 else 109000) + (if b0031 then 0 else 109000) + (if b0032 then 0 else 109000) + (if b0033 then 0 else 109000) + (if b0034 then 0 else 109000) + (if b0035 then 0 else 109000) + (if b0036 then 0 else 109000) + (if b0037 then 0 else 109000) + (if b0038 then 0 else 109000) + (if b0039 then 0 else 109000) + (if b0040 then 0 else 109000) + (if b0041 then 0 else 109000) + (if b0042 then 0 else 109000) + (if b0045 then 0 else 109000) + (if b0047 then 0 else 109000) + (if b0048 then 0 else 109000) + (if b0049 then 0 else 109000) + (if b0050 then 0 else 109000) + (if b0051 then 0 else 109000) + (if b0052 then 0 else 109000) + (if b0053 then 0 else 109000) + (if b0054 then 0 else 109000) + (if b0055 then 0 else 109000) + (if b0057 then 0 else 109000) + (if b0058 then 0 else 109000) + (if b0059 then 0 else 109000) + (if b0060 then 0 else 109000) + (if b0061 then 0 else 109000) + (if b0062 then 0 else 109000) + (if b0063 then 0 else 109000) + (if b0064 then 0 else 109000) + (if b0065 then 0 else 109000) + (if b0066 then 0 else 109000) + (if b0067 then 0 else 109000) + (if b0068 then 0 else 109000) + (if b0069 then 0 else 109000) + (if b0070 then 0 else 109000) + (if b0071 then 0 else 109000) + (if b0072 then 0 else 109000) + (if b0073 then 0 else 109000) + (if b0074 then 0 else 109000) + (if b0075 then 0 else 109000) + (if b0076 then 0 else 109000) + (if b0077 then 0 else 109000) + (if b0078 then 0 else 109000) + (if b0079 then 0 else 109000) + (if b0080 then 0 else 109000) + (if b0081 then 0 else 109000) + (if b0082 then 0 else 109000) + (if b0083 then 0 else 109000) + (if b0084 then 0 else 109000) + (if b0085 then 0 else 109000) + (if b0086 then 0 else 109000) + (if b0087 then 0 else 109000) + (if b0088 then 0 else 109000) + (if b0089 then 0 else 109000) + (if b0090 then 0 else 109000) + (if b0091 then 0 else 109000) + (if b0092 then 0 else 109000) + (if b0095 then 0 else 109000) + (if b0097 then 0 else 109000) + (if b0098 then 0 else 109000) + (if b0099 then 0 else 109000) + (if b0100 then 0 else 109000) + (if b0101 then 0 else 109000) + (if b0102 then 0 else 109000) + (if b0103 then 0 else 109000) + (if b0104 then 0 else 109000) + (if b0105 then 0 else 109000) + (if b0149 then 0 else 109000) + (if b0150 then 0 else 109000) + (if b0151 then 0 else 109000) + (if b0152 then 0 else 109000) + (if b0153 then 0 else 109000) + (if b0154 then 0 else 109000) + (if b0155 then 0 else 109000) + (if b0156 then 0 else 109000) + (if b0157 then 0 else 109000) + (if b0158 then 0 else 109000) + (if b0159 then 0 else 109000) + (if b0201 then 0 else 109000) + (if b0202 then 0 else 109000) + (if b0203 then 0 else 109000) + (if b0204 then 0 else 109000) + (if b0205 then 0 else 109000) + (if b0206 then 0 else 109000) + (if b0207 then 0 else 109000) + (if b0208 then 0 else 109000) + (if b0209 then 0 else 109000) + (if b0210 then 0 else 109000) + (if b0211 then 0 else 109000) + (if b0212 then 0 else 109000) + (if b0213 then 0 else 109000) + (if b0215 then 0 else 109000) + (if b0216 then 0 else 109000) + (if b0242 then 0 else 109000) + (if b0243 then 0 else 109000) + (if b0244 then 0 else 109000) + (if b0245 then 0 else 109000) + (if b0246 then 0 else 109000) + (if b0247 then 0 else 109000) + (if b0248 then 0 else 109000) + (if b0249 then 0 else 109000) + (if b0250 then 0 else 109000) + (if b0251 then 0 else 109000) + (if b0252 then 0 else 109000) + (if b0253 then 0 else 109000) + (if b0254 then 0 else 109000) + (if b0255 then 0 else 109000) + (if b0256 then 0 else 109000) + (if b0257 then 0 else 109000) + (if b0258 then 0 else 109000) + (if b0259 then 0 else 109000) + (if b0260 then 0 else 109000) + (if b0261 then 0 else 109000) + (if b0262 then 0 else 109000) + (if b0263 then 0 else 109000) + (if b0264 then 0 else 109000) + (if b0265 then 0 else 109000) + (if b0266 then 0 else 109000) + (if b0267 then 0 else 109000) + (if b0268 then 0 else 109000) + (if b0269 then 0 else 109000) + (if b0270 then 0 else 109000) + (if b0271 then 0 else 109000) + (if b0272 then 0 else 109000) + (if b0273 then 0 else 109000) < 441
}
Prover Time taken = 18.396042
Added Horn clause: 9 && 22 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 => 32
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/datamining/covariance/kernel3.bpl.ice2.bpl
Total learner time was 00:00:00.1242790
Verifying $kernel3: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool, b0228: bool, b0229: bool, b0230: bool, b0231: bool, b0232: bool, b0233: bool, b0234: bool, b0235: bool, b0236: bool, b0237: bool, b0238: bool, b0239: bool, b0240: bool, b0241: bool, b0242: bool, b0243: bool, b0244: bool, b0245: bool, b0246: bool, b0247: bool, b0248: bool, b0249: bool, b0250: bool, b0251: bool, b0252: bool, b0253: bool, b0254: bool, b0255: bool, b0256: bool, b0257: bool, b0258: bool, b0259: bool, b0260: bool, b0261: bool, b0262: bool, b0263: bool, b0264: bool, b0265: bool, b0266: bool, b0267: bool, b0268: bool, b0269: bool, b0270: bool, b0271: bool, b0272: bool, b0273: bool) : bool
{
  0 + (if b0000 then 0 else 109000) + (if b0001 then 0 else 109000) + (if b0002 then 0 else 109000) + (if b0003 then 0 else 109000) + (if b0005 then 0 else 109000) + (if b0007 then 0 else 109000) + (if b0008 then 0 else 109000) + (if b0009 then 0 else 109000) + (if b0010 then 0 else 109000) + (if b0011 then 0 else 109000) + (if b0012 then 0 else 109000) + (if b0014 then 0 else 109000) + (if b0016 then 0 else 109000) + (if b0017 then 0 else 109000) + (if b0018 then 0 else 109000) + (if b0019 then 0 else 109000) + (if b0020 then 0 else 109000) + (if b0021 then 0 else 109000) + (if b0022 then 0 else 109000) + (if b0023 then 0 else 109000) + (if b0026 then 0 else 109000) + (if b0027 then 0 else 109000) + (if b0028 then 0 else 109000) + (if b0029 then 0 else 109000) + (if b0030 then 0 else 109000) + (if b0031 then 0 else 109000) + (if b0032 then 0 else 109000) + (if b0033 then 0 else 109000) + (if b0034 then 0 else 109000) + (if b0035 then 0 else 109000) + (if b0036 then 0 else 109000) + (if b0037 then 0 else 109000) + (if b0038 then 0 else 109000) + (if b0039 then 0 else 109000) + (if b0040 then 0 else 109000) + (if b0041 then 0 else 109000) + (if b0042 then 0 else 109000) + (if b0045 then 0 else 109000) + (if b0047 then 0 else 109000) + (if b0048 then 0 else 109000) + (if b0049 then 0 else 109000) + (if b0050 then 0 else 109000) + (if b0051 then 0 else 109000) + (if b0052 then 0 else 109000) + (if b0053 then 0 else 109000) + (if b0054 then 0 else 109000) + (if b0055 then 0 else 109000) + (if b0057 then 0 else 109000) + (if b0058 then 0 else 109000) + (if b0059 then 0 else 109000) + (if b0060 then 0 else 109000) + (if b0061 then 0 else 109000) + (if b0062 then 0 else 109000) + (if b0063 then 0 else 109000) + (if b0064 then 0 else 109000) + (if b0065 then 0 else 109000) + (if b0066 then 0 else 109000) + (if b0067 then 0 else 109000) + (if b0068 then 0 else 109000) + (if b0069 then 0 else 109000) + (if b0070 then 0 else 109000) + (if b0071 then 0 else 109000) + (if b0072 then 0 else 109000) + (if b0073 then 0 else 109000) + (if b0074 then 0 else 109000) + (if b0075 then 0 else 109000) + (if b0076 then 0 else 109000) + (if b0077 then 0 else 109000) + (if b0078 then 0 else 109000) + (if b0079 then 0 else 109000) + (if b0080 then 0 else 109000) + (if b0081 then 0 else 109000) + (if b0082 then 0 else 109000) + (if b0083 then 0 else 109000) + (if b0084 then 0 else 109000) + (if b0085 then 0 else 109000) + (if b0086 then 0 else 109000) + (if b0087 then 0 else 109000) + (if b0088 then 0 else 109000) + (if b0089 then 0 else 109000) + (if b0090 then 0 else 109000) + (if b0091 then 0 else 109000) + (if b0092 then 0 else 109000) + (if b0095 then 0 else 109000) + (if b0097 then 0 else 109000) + (if b0098 then 0 else 109000) + (if b0099 then 0 else 109000) + (if b0100 then 0 else 109000) + (if b0101 then 0 else 109000) + (if b0102 then 0 else 109000) + (if b0103 then 0 else 109000) + (if b0104 then 0 else 109000) + (if b0105 then 0 else 109000) + (if b0149 then 0 else 109000) + (if b0150 then 0 else 109000) + (if b0151 then 0 else 109000) + (if b0152 then 0 else 109000) + (if b0153 then 0 else 109000) + (if b0154 then 0 else 109000) + (if b0155 then 0 else 109000) + (if b0156 then 0 else 109000) + (if b0157 then 0 else 109000) + (if b0158 then 0 else 109000) + (if b0159 then 0 else 109000) + (if b0201 then 0 else 109000) + (if b0202 then 0 else 109000) + (if b0203 then 0 else 109000) + (if b0204 then 0 else 109000) + (if b0205 then 0 else 109000) + (if b0206 then 0 else 109000) + (if b0207 then 0 else 109000) + (if b0208 then 0 else 109000) + (if b0209 then 0 else 109000) + (if b0210 then 0 else 109000) + (if b0211 then 0 else 109000) + (if b0212 then 0 else 109000) + (if b0213 then 0 else 109000) + (if b0215 then 0 else 109000) + (if b0216 then 0 else 109000) + (if b0242 then 0 else 109000) + (if b0243 then 0 else 109000) + (if b0244 then 0 else 109000) + (if b0245 then 0 else 109000) + (if b0246 then 0 else 109000) + (if b0247 then 0 else 109000) + (if b0248 then 0 else 109000) + (if b0249 then 0 else 109000) + (if b0250 then 0 else 109000) + (if b0251 then 0 else 109000) + (if b0252 then 0 else 109000) + (if b0253 then 0 else 109000) + (if b0254 then 0 else 109000) + (if b0255 then 0 else 109000) + (if b0256 then 0 else 109000) + (if b0257 then 0 else 109000) + (if b0258 then 0 else 109000) + (if b0259 then 0 else 109000) + (if b0260 then 0 else 109000) + (if b0261 then 0 else 109000) + (if b0262 then 0 else 109000) + (if b0263 then 0 else 109000) + (if b0264 then 0 else 109000) + (if b0265 then 0 else 109000) + (if b0266 then 0 else 109000) + (if b0267 then 0 else 109000) + (if b0268 then 0 else 109000) + (if b0269 then 0 else 109000) + (if b0270 then 0 else 109000) + (if b0271 then 0 else 109000) + (if b0272 then 0 else 109000) + (if b0273 then 0 else 109000) < 441
}
Prover Time taken = 24.098314
Added Horn clause: 9 && 33 && 0 && 14 && 19 && 0 && 0 && 0 && 0 && 0 && 0 => 34
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/datamining/covariance/kernel3.bpl.ice2.bpl
Total learner time was 00:00:00.1255530
Verifying $kernel3: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool, b0228: bool, b0229: bool, b0230: bool, b0231: bool, b0232: bool, b0233: bool, b0234: bool, b0235: bool, b0236: bool, b0237: bool, b0238: bool, b0239: bool, b0240: bool, b0241: bool, b0242: bool, b0243: bool, b0244: bool, b0245: bool, b0246: bool, b0247: bool, b0248: bool, b0249: bool, b0250: bool, b0251: bool, b0252: bool, b0253: bool, b0254: bool, b0255: bool, b0256: bool, b0257: bool, b0258: bool, b0259: bool, b0260: bool, b0261: bool, b0262: bool, b0263: bool, b0264: bool, b0265: bool, b0266: bool, b0267: bool, b0268: bool, b0269: bool, b0270: bool, b0271: bool, b0272: bool, b0273: bool) : bool
{
  0 + (if b0000 then 0 else 109000) + (if b0001 then 0 else 109000) + (if b0002 then 0 else 109000) + (if b0003 then 0 else 109000) + (if b0005 then 0 else 109000) + (if b0007 then 0 else 109000) + (if b0008 then 0 else 109000) + (if b0009 then 0 else 109000) + (if b0010 then 0 else 109000) + (if b0011 then 0 else 109000) + (if b0012 then 0 else 109000) + (if b0014 then 0 else 109000) + (if b0016 then 0 else 109000) + (if b0017 then 0 else 109000) + (if b0018 then 0 else 109000) + (if b0019 then 0 else 109000) + (if b0020 then 0 else 109000) + (if b0021 then 0 else 109000) + (if b0022 then 0 else 109000) + (if b0023 then 0 else 109000) + (if b0026 then 0 else 109000) + (if b0028 then 0 else 109000) + (if b0030 then 0 else 109000) + (if b0031 then 0 else 109000) + (if b0032 then 0 else 109000) + (if b0033 then 0 else 109000) + (if b0034 then 0 else 109000) + (if b0035 then 0 else 109000) + (if b0036 then 0 else 109000) + (if b0037 then 0 else 109000) + (if b0038 then 0 else 109000) + (if b0039 then 0 else 109000) + (if b0040 then 0 else 109000) + (if b0041 then 0 else 109000) + (if b0042 then 0 else 109000) + (if b0045 then 0 else 109000) + (if b0047 then 0 else 109000) + (if b0048 then 0 else 109000) + (if b0049 then 0 else 109000) + (if b0050 then 0 else 109000) + (if b0051 then 0 else 109000) + (if b0052 then 0 else 109000) + (if b0053 then 0 else 109000) + (if b0054 then 0 else 109000) + (if b0055 then 0 else 109000) + (if b0057 then 0 else 109000) + (if b0058 then 0 else 109000) + (if b0059 then 0 else 109000) + (if b0060 then 0 else 109000) + (if b0061 then 0 else 109000) + (if b0062 then 0 else 109000) + (if b0063 then 0 else 109000) + (if b0064 then 0 else 109000) + (if b0065 then 0 else 109000) + (if b0066 then 0 else 109000) + (if b0067 then 0 else 109000) + (if b0068 then 0 else 109000) + (if b0069 then 0 else 109000) + (if b0070 then 0 else 109000) + (if b0071 then 0 else 109000) + (if b0072 then 0 else 109000) + (if b0073 then 0 else 109000) + (if b0074 then 0 else 109000) + (if b0075 then 0 else 109000) + (if b0076 then 0 else 109000) + (if b0077 then 0 else 109000) + (if b0078 then 0 else 109000) + (if b0079 then 0 else 109000) + (if b0080 then 0 else 109000) + (if b0081 then 0 else 109000) + (if b0082 then 0 else 109000) + (if b0083 then 0 else 109000) + (if b0084 then 0 else 109000) + (if b0085 then 0 else 109000) + (if b0086 then 0 else 109000) + (if b0087 then 0 else 109000) + (if b0088 then 0 else 109000) + (if b0089 then 0 else 109000) + (if b0090 then 0 else 109000) + (if b0091 then 0 else 109000) + (if b0092 then 0 else 109000) + (if b0095 then 0 else 109000) + (if b0097 then 0 else 109000) + (if b0098 then 0 else 109000) + (if b0099 then 0 else 109000) + (if b0100 then 0 else 109000) + (if b0101 then 0 else 109000) + (if b0102 then 0 else 109000) + (if b0103 then 0 else 109000) + (if b0104 then 0 else 109000) + (if b0105 then 0 else 109000) + (if b0149 then 0 else 109000) + (if b0150 then 0 else 109000) + (if b0151 then 0 else 109000) + (if b0152 then 0 else 109000) + (if b0153 then 0 else 109000) + (if b0154 then 0 else 109000) + (if b0155 then 0 else 109000) + (if b0156 then 0 else 109000) + (if b0157 then 0 else 109000) + (if b0158 then 0 else 109000) + (if b0159 then 0 else 109000) + (if b0201 then 0 else 109000) + (if b0202 then 0 else 109000) + (if b0203 then 0 else 109000) + (if b0204 then 0 else 109000) + (if b0205 then 0 else 109000) + (if b0206 then 0 else 109000) + (if b0207 then 0 else 109000) + (if b0208 then 0 else 109000) + (if b0209 then 0 else 109000) + (if b0210 then 0 else 109000) + (if b0211 then 0 else 109000) + (if b0212 then 0 else 109000) + (if b0213 then 0 else 109000) + (if b0215 then 0 else 109000) + (if b0216 then 0 else 109000) + (if b0242 then 0 else 109000) + (if b0243 then 0 else 109000) + (if b0244 then 0 else 109000) + (if b0245 then 0 else 109000) + (if b0246 then 0 else 109000) + (if b0247 then 0 else 109000) + (if b0248 then 0 else 109000) + (if b0249 then 0 else 109000) + (if b0250 then 0 else 109000) + (if b0251 then 0 else 109000) + (if b0252 then 0 else 109000) + (if b0253 then 0 else 109000) + (if b0254 then 0 else 109000) + (if b0255 then 0 else 109000) + (if b0256 then 0 else 109000) + (if b0257 then 0 else 109000) + (if b0258 then 0 else 109000) + (if b0259 then 0 else 109000) + (if b0260 then 0 else 109000) + (if b0261 then 0 else 109000) + (if b0262 then 0 else 109000) + (if b0263 then 0 else 109000) + (if b0264 then 0 else 109000) + (if b0265 then 0 else 109000) + (if b0266 then 0 else 109000) + (if b0267 then 0 else 109000) + (if b0268 then 0 else 109000) + (if b0269 then 0 else 109000) + (if b0270 then 0 else 109000) + (if b0271 then 0 else 109000) + (if b0272 then 0 else 109000) + (if b0273 then 0 else 109000) < 441
}
Prover Time taken = 19.062192
Added Horn clause: 9 && 35 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 => 36
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/datamining/covariance/kernel3.bpl.ice2.bpl
Total learner time was 00:00:00.1387690
Verifying $kernel3: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool, b0228: bool, b0229: bool, b0230: bool, b0231: bool, b0232: bool, b0233: bool, b0234: bool, b0235: bool, b0236: bool, b0237: bool, b0238: bool, b0239: bool, b0240: bool, b0241: bool, b0242: bool, b0243: bool, b0244: bool, b0245: bool, b0246: bool, b0247: bool, b0248: bool, b0249: bool, b0250: bool, b0251: bool, b0252: bool, b0253: bool, b0254: bool, b0255: bool, b0256: bool, b0257: bool, b0258: bool, b0259: bool, b0260: bool, b0261: bool, b0262: bool, b0263: bool, b0264: bool, b0265: bool, b0266: bool, b0267: bool, b0268: bool, b0269: bool, b0270: bool, b0271: bool, b0272: bool, b0273: bool) : bool
{
  0 + (if b0000 then 0 else 109000) + (if b0001 then 0 else 109000) + (if b0002 then 0 else 109000) + (if b0003 then 0 else 109000) + (if b0005 then 0 else 109000) + (if b0007 then 0 else 109000) + (if b0008 then 0 else 109000) + (if b0009 then 0 else 109000) + (if b0010 then 0 else 109000) + (if b0011 then 0 else 109000) + (if b0012 then 0 else 109000) + (if b0014 then 0 else 109000) + (if b0016 then 0 else 109000) + (if b0017 then 0 else 109000) + (if b0018 then 0 else 109000) + (if b0019 then 0 else 109000) + (if b0020 then 0 else 109000) + (if b0021 then 0 else 109000) + (if b0022 then 0 else 109000) + (if b0023 then 0 else 109000) + (if b0026 then 0 else 109000) + (if b0028 then 0 else 109000) + (if b0030 then 0 else 109000) + (if b0031 then 0 else 109000) + (if b0032 then 0 else 109000) + (if b0033 then 0 else 109000) + (if b0034 then 0 else 109000) + (if b0035 then 0 else 109000) + (if b0036 then 0 else 109000) + (if b0037 then 0 else 109000) + (if b0038 then 0 else 109000) + (if b0039 then 0 else 109000) + (if b0040 then 0 else 109000) + (if b0041 then 0 else 109000) + (if b0042 then 0 else 109000) + (if b0045 then 0 else 109000) + (if b0047 then 0 else 109000) + (if b0048 then 0 else 109000) + (if b0049 then 0 else 109000) + (if b0050 then 0 else 109000) + (if b0051 then 0 else 109000) + (if b0052 then 0 else 109000) + (if b0053 then 0 else 109000) + (if b0054 then 0 else 109000) + (if b0055 then 0 else 109000) + (if b0057 then 0 else 109000) + (if b0058 then 0 else 109000) + (if b0059 then 0 else 109000) + (if b0060 then 0 else 109000) + (if b0061 then 0 else 109000) + (if b0062 then 0 else 109000) + (if b0063 then 0 else 109000) + (if b0064 then 0 else 109000) + (if b0065 then 0 else 109000) + (if b0066 then 0 else 109000) + (if b0067 then 0 else 109000) + (if b0068 then 0 else 109000) + (if b0069 then 0 else 109000) + (if b0070 then 0 else 109000) + (if b0071 then 0 else 109000) + (if b0072 then 0 else 109000) + (if b0073 then 0 else 109000) + (if b0074 then 0 else 109000) + (if b0075 then 0 else 109000) + (if b0076 then 0 else 109000) + (if b0077 then 0 else 109000) + (if b0078 then 0 else 109000) + (if b0079 then 0 else 109000) + (if b0080 then 0 else 109000) + (if b0081 then 0 else 109000) + (if b0082 then 0 else 109000) + (if b0083 then 0 else 109000) + (if b0084 then 0 else 109000) + (if b0085 then 0 else 109000) + (if b0086 then 0 else 109000) + (if b0087 then 0 else 109000) + (if b0088 then 0 else 109000) + (if b0089 then 0 else 109000) + (if b0090 then 0 else 109000) + (if b0091 then 0 else 109000) + (if b0092 then 0 else 109000) + (if b0095 then 0 else 109000) + (if b0097 then 0 else 109000) + (if b0098 then 0 else 109000) + (if b0099 then 0 else 109000) + (if b0100 then 0 else 109000) + (if b0101 then 0 else 109000) + (if b0102 then 0 else 109000) + (if b0103 then 0 else 109000) + (if b0104 then 0 else 109000) + (if b0105 then 0 else 109000) + (if b0149 then 0 else 109000) + (if b0150 then 0 else 109000) + (if b0151 then 0 else 109000) + (if b0152 then 0 else 109000) + (if b0153 then 0 else 109000) + (if b0154 then 0 else 109000) + (if b0155 then 0 else 109000) + (if b0156 then 0 else 109000) + (if b0157 then 0 else 109000) + (if b0158 then 0 else 109000) + (if b0159 then 0 else 109000) + (if b0201 then 0 else 109000) + (if b0203 then 0 else 109000) + (if b0204 then 0 else 109000) + (if b0205 then 0 else 109000) + (if b0206 then 0 else 109000) + (if b0207 then 0 else 109000) + (if b0208 then 0 else 109000) + (if b0209 then 0 else 109000) + (if b0210 then 0 else 109000) + (if b0211 then 0 else 109000) + (if b0212 then 0 else 109000) + (if b0213 then 0 else 109000) + (if b0215 then 0 else 109000) + (if b0216 then 0 else 109000) + (if b0242 then 0 else 109000) + (if b0243 then 0 else 109000) + (if b0244 then 0 else 109000) + (if b0245 then 0 else 109000) + (if b0246 then 0 else 109000) + (if b0247 then 0 else 109000) + (if b0248 then 0 else 109000) + (if b0249 then 0 else 109000) + (if b0250 then 0 else 109000) + (if b0251 then 0 else 109000) + (if b0252 then 0 else 109000) + (if b0253 then 0 else 109000) + (if b0254 then 0 else 109000) + (if b0255 then 0 else 109000) + (if b0256 then 0 else 109000) + (if b0257 then 0 else 109000) + (if b0258 then 0 else 109000) + (if b0259 then 0 else 109000) + (if b0260 then 0 else 109000) + (if b0261 then 0 else 109000) + (if b0262 then 0 else 109000) + (if b0263 then 0 else 109000) + (if b0264 then 0 else 109000) + (if b0265 then 0 else 109000) + (if b0266 then 0 else 109000) + (if b0267 then 0 else 109000) + (if b0268 then 0 else 109000) + (if b0269 then 0 else 109000) + (if b0270 then 0 else 109000) + (if b0271 then 0 else 109000) + (if b0272 then 0 else 109000) + (if b0273 then 0 else 109000) < 441
}
Prover Time taken = 11.031807
Added Horn clause: 5 && 37 && 0 => 38
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/datamining/covariance/kernel3.bpl.ice2.bpl
Total learner time was 00:00:00.1285940
Verifying $kernel3: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool, b0228: bool, b0229: bool, b0230: bool, b0231: bool, b0232: bool, b0233: bool, b0234: bool, b0235: bool, b0236: bool, b0237: bool, b0238: bool, b0239: bool, b0240: bool, b0241: bool, b0242: bool, b0243: bool, b0244: bool, b0245: bool, b0246: bool, b0247: bool, b0248: bool, b0249: bool, b0250: bool, b0251: bool, b0252: bool, b0253: bool, b0254: bool, b0255: bool, b0256: bool, b0257: bool, b0258: bool, b0259: bool, b0260: bool, b0261: bool, b0262: bool, b0263: bool, b0264: bool, b0265: bool, b0266: bool, b0267: bool, b0268: bool, b0269: bool, b0270: bool, b0271: bool, b0272: bool, b0273: bool) : bool
{
  0 + (if b0000 then 0 else 109000) + (if b0001 then 0 else 109000) + (if b0002 then 0 else 109000) + (if b0003 then 0 else 109000) + (if b0005 then 0 else 109000) + (if b0007 then 0 else 109000) + (if b0008 then 0 else 109000) + (if b0009 then 0 else 109000) + (if b0010 then 0 else 109000) + (if b0011 then 0 else 109000) + (if b0012 then 0 else 109000) + (if b0014 then 0 else 109000) + (if b0016 then 0 else 109000) + (if b0017 then 0 else 109000) + (if b0018 then 0 else 109000) + (if b0019 then 0 else 109000) + (if b0020 then 0 else 109000) + (if b0021 then 0 else 109000) + (if b0022 then 0 else 109000) + (if b0023 then 0 else 109000) + (if b0026 then 0 else 109000) + (if b0028 then 0 else 109000) + (if b0030 then 0 else 109000) + (if b0031 then 0 else 109000) + (if b0032 then 0 else 109000) + (if b0033 then 0 else 109000) + (if b0034 then 0 else 109000) + (if b0035 then 0 else 109000) + (if b0036 then 0 else 109000) + (if b0037 then 0 else 109000) + (if b0038 then 0 else 109000) + (if b0039 then 0 else 109000) + (if b0040 then 0 else 109000) + (if b0041 then 0 else 109000) + (if b0042 then 0 else 109000) + (if b0045 then 0 else 109000) + (if b0047 then 0 else 109000) + (if b0048 then 0 else 109000) + (if b0049 then 0 else 109000) + (if b0050 then 0 else 109000) + (if b0051 then 0 else 109000) + (if b0052 then 0 else 109000) + (if b0053 then 0 else 109000) + (if b0054 then 0 else 109000) + (if b0055 then 0 else 109000) + (if b0057 then 0 else 109000) + (if b0058 then 0 else 109000) + (if b0059 then 0 else 109000) + (if b0060 then 0 else 109000) + (if b0061 then 0 else 109000) + (if b0062 then 0 else 109000) + (if b0063 then 0 else 109000) + (if b0064 then 0 else 109000) + (if b0065 then 0 else 109000) + (if b0066 then 0 else 109000) + (if b0067 then 0 else 109000) + (if b0068 then 0 else 109000) + (if b0069 then 0 else 109000) + (if b0070 then 0 else 109000) + (if b0071 then 0 else 109000) + (if b0072 then 0 else 109000) + (if b0073 then 0 else 109000) + (if b0074 then 0 else 109000) + (if b0075 then 0 else 109000) + (if b0076 then 0 else 109000) + (if b0077 then 0 else 109000) + (if b0078 then 0 else 109000) + (if b0079 then 0 else 109000) + (if b0080 then 0 else 109000) + (if b0081 then 0 else 109000) + (if b0082 then 0 else 109000) + (if b0083 then 0 else 109000) + (if b0084 then 0 else 109000) + (if b0085 then 0 else 109000) + (if b0086 then 0 else 109000) + (if b0087 then 0 else 109000) + (if b0088 then 0 else 109000) + (if b0089 then 0 else 109000) + (if b0090 then 0 else 109000) + (if b0091 then 0 else 109000) + (if b0092 then 0 else 109000) + (if b0095 then 0 else 109000) + (if b0097 then 0 else 109000) + (if b0098 then 0 else 109000) + (if b0099 then 0 else 109000) + (if b0100 then 0 else 109000) + (if b0101 then 0 else 109000) + (if b0102 then 0 else 109000) + (if b0103 then 0 else 109000) + (if b0104 then 0 else 109000) + (if b0105 then 0 else 109000) + (if b0149 then 0 else 109000) + (if b0150 then 0 else 109000) + (if b0151 then 0 else 109000) + (if b0152 then 0 else 109000) + (if b0153 then 0 else 109000) + (if b0154 then 0 else 109000) + (if b0155 then 0 else 109000) + (if b0156 then 0 else 109000) + (if b0157 then 0 else 109000) + (if b0158 then 0 else 109000) + (if b0159 then 0 else 109000) + (if b0201 then 0 else 109000) + (if b0203 then 0 else 109000) + (if b0204 then 0 else 109000) + (if b0205 then 0 else 109000) + (if b0206 then 0 else 109000) + (if b0207 then 0 else 109000) + (if b0208 then 0 else 109000) + (if b0209 then 0 else 109000) + (if b0210 then 0 else 109000) + (if b0211 then 0 else 109000) + (if b0212 then 0 else 109000) + (if b0213 then 0 else 109000) + (if b0215 then 0 else 109000) + (if b0216 then 0 else 109000) + (if b0242 then 0 else 109000) + (if b0244 then 0 else 109000) + (if b0245 then 0 else 109000) + (if b0246 then 0 else 109000) + (if b0247 then 0 else 109000) + (if b0248 then 0 else 109000) + (if b0249 then 0 else 109000) + (if b0250 then 0 else 109000) + (if b0251 then 0 else 109000) + (if b0252 then 0 else 109000) + (if b0253 then 0 else 109000) + (if b0254 then 0 else 109000) + (if b0255 then 0 else 109000) + (if b0256 then 0 else 109000) + (if b0257 then 0 else 109000) + (if b0258 then 0 else 109000) + (if b0259 then 0 else 109000) + (if b0260 then 0 else 109000) + (if b0261 then 0 else 109000) + (if b0262 then 0 else 109000) + (if b0263 then 0 else 109000) + (if b0264 then 0 else 109000) + (if b0265 then 0 else 109000) + (if b0266 then 0 else 109000) + (if b0267 then 0 else 109000) + (if b0268 then 0 else 109000) + (if b0269 then 0 else 109000) + (if b0270 then 0 else 109000) + (if b0271 then 0 else 109000) + (if b0272 then 0 else 109000) + (if b0273 then 0 else 109000) < 441
}
Prover Time taken = 8.217139
Added Horn clause: 15 && 39 && 32 => 40
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/datamining/covariance/kernel3.bpl.ice2.bpl
Total learner time was 00:00:00.1247210
Verifying $kernel3: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool, b0228: bool, b0229: bool, b0230: bool, b0231: bool, b0232: bool, b0233: bool, b0234: bool, b0235: bool, b0236: bool, b0237: bool, b0238: bool, b0239: bool, b0240: bool, b0241: bool, b0242: bool, b0243: bool, b0244: bool, b0245: bool, b0246: bool, b0247: bool, b0248: bool, b0249: bool, b0250: bool, b0251: bool, b0252: bool, b0253: bool, b0254: bool, b0255: bool, b0256: bool, b0257: bool, b0258: bool, b0259: bool, b0260: bool, b0261: bool, b0262: bool, b0263: bool, b0264: bool, b0265: bool, b0266: bool, b0267: bool, b0268: bool, b0269: bool, b0270: bool, b0271: bool, b0272: bool, b0273: bool) : bool
{
  0 + (if b0000 then 0 else 109000) + (if b0001 then 0 else 109000) + (if b0002 then 0 else 109000) + (if b0003 then 0 else 109000) + (if b0005 then 0 else 109000) + (if b0007 then 0 else 109000) + (if b0008 then 0 else 109000) + (if b0009 then 0 else 109000) + (if b0010 then 0 else 109000) + (if b0011 then 0 else 109000) + (if b0012 then 0 else 109000) + (if b0014 then 0 else 109000) + (if b0016 then 0 else 109000) + (if b0017 then 0 else 109000) + (if b0018 then 0 else 109000) + (if b0019 then 0 else 109000) + (if b0020 then 0 else 109000) + (if b0021 then 0 else 109000) + (if b0022 then 0 else 109000) + (if b0023 then 0 else 109000) + (if b0026 then 0 else 109000) + (if b0028 then 0 else 109000) + (if b0030 then 0 else 109000) + (if b0031 then 0 else 109000) + (if b0032 then 0 else 109000) + (if b0033 then 0 else 109000) + (if b0034 then 0 else 109000) + (if b0035 then 0 else 109000) + (if b0036 then 0 else 109000) + (if b0037 then 0 else 109000) + (if b0039 then 0 else 109000) + (if b0040 then 0 else 109000) + (if b0041 then 0 else 109000) + (if b0042 then 0 else 109000) + (if b0045 then 0 else 109000) + (if b0047 then 0 else 109000) + (if b0048 then 0 else 109000) + (if b0049 then 0 else 109000) + (if b0050 then 0 else 109000) + (if b0051 then 0 else 109000) + (if b0052 then 0 else 109000) + (if b0053 then 0 else 109000) + (if b0054 then 0 else 109000) + (if b0055 then 0 else 109000) + (if b0057 then 0 else 109000) + (if b0058 then 0 else 109000) + (if b0059 then 0 else 109000) + (if b0060 then 0 else 109000) + (if b0061 then 0 else 109000) + (if b0062 then 0 else 109000) + (if b0063 then 0 else 109000) + (if b0064 then 0 else 109000) + (if b0065 then 0 else 109000) + (if b0066 then 0 else 109000) + (if b0067 then 0 else 109000) + (if b0068 then 0 else 109000) + (if b0069 then 0 else 109000) + (if b0070 then 0 else 109000) + (if b0071 then 0 else 109000) + (if b0072 then 0 else 109000) + (if b0073 then 0 else 109000) + (if b0074 then 0 else 109000) + (if b0075 then 0 else 109000) + (if b0076 then 0 else 109000) + (if b0077 then 0 else 109000) + (if b0078 then 0 else 109000) + (if b0079 then 0 else 109000) + (if b0080 then 0 else 109000) + (if b0081 then 0 else 109000) + (if b0082 then 0 else 109000) + (if b0083 then 0 else 109000) + (if b0084 then 0 else 109000) + (if b0085 then 0 else 109000) + (if b0086 then 0 else 109000) + (if b0087 then 0 else 109000) + (if b0088 then 0 else 109000) + (if b0089 then 0 else 109000) + (if b0090 then 0 else 109000) + (if b0091 then 0 else 109000) + (if b0092 then 0 else 109000) + (if b0095 then 0 else 109000) + (if b0097 then 0 else 109000) + (if b0098 then 0 else 109000) + (if b0099 then 0 else 109000) + (if b0100 then 0 else 109000) + (if b0101 then 0 else 109000) + (if b0102 then 0 else 109000) + (if b0103 then 0 else 109000) + (if b0104 then 0 else 109000) + (if b0105 then 0 else 109000) + (if b0149 then 0 else 109000) + (if b0150 then 0 else 109000) + (if b0151 then 0 else 109000) + (if b0152 then 0 else 109000) + (if b0153 then 0 else 109000) + (if b0154 then 0 else 109000) + (if b0155 then 0 else 109000) + (if b0156 then 0 else 109000) + (if b0157 then 0 else 109000) + (if b0158 then 0 else 109000) + (if b0159 then 0 else 109000) + (if b0201 then 0 else 109000) + (if b0203 then 0 else 109000) + (if b0204 then 0 else 109000) + (if b0205 then 0 else 109000) + (if b0206 then 0 else 109000) + (if b0207 then 0 else 109000) + (if b0208 then 0 else 109000) + (if b0209 then 0 else 109000) + (if b0210 then 0 else 109000) + (if b0211 then 0 else 109000) + (if b0212 then 0 else 109000) + (if b0213 then 0 else 109000) + (if b0215 then 0 else 109000) + (if b0216 then 0 else 109000) + (if b0242 then 0 else 109000) + (if b0244 then 0 else 109000) + (if b0245 then 0 else 109000) + (if b0246 then 0 else 109000) + (if b0247 then 0 else 109000) + (if b0248 then 0 else 109000) + (if b0249 then 0 else 109000) + (if b0250 then 0 else 109000) + (if b0251 then 0 else 109000) + (if b0252 then 0 else 109000) + (if b0253 then 0 else 109000) + (if b0254 then 0 else 109000) + (if b0255 then 0 else 109000) + (if b0256 then 0 else 109000) + (if b0257 then 0 else 109000) + (if b0258 then 0 else 109000) + (if b0259 then 0 else 109000) + (if b0260 then 0 else 109000) + (if b0261 then 0 else 109000) + (if b0262 then 0 else 109000) + (if b0263 then 0 else 109000) + (if b0264 then 0 else 109000) + (if b0265 then 0 else 109000) + (if b0266 then 0 else 109000) + (if b0267 then 0 else 109000) + (if b0268 then 0 else 109000) + (if b0269 then 0 else 109000) + (if b0270 then 0 else 109000) + (if b0271 then 0 else 109000) + (if b0272 then 0 else 109000) + (if b0273 then 0 else 109000) < 441
}
Prover Time taken = 13.262123
Added Horn clause: 5 && 41 && 0 && 38 && 0 && 0 && 0 => 42
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/datamining/covariance/kernel3.bpl.ice2.bpl
Total learner time was 00:00:00.1269240
Verifying $kernel3: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool, b0228: bool, b0229: bool, b0230: bool, b0231: bool, b0232: bool, b0233: bool, b0234: bool, b0235: bool, b0236: bool, b0237: bool, b0238: bool, b0239: bool, b0240: bool, b0241: bool, b0242: bool, b0243: bool, b0244: bool, b0245: bool, b0246: bool, b0247: bool, b0248: bool, b0249: bool, b0250: bool, b0251: bool, b0252: bool, b0253: bool, b0254: bool, b0255: bool, b0256: bool, b0257: bool, b0258: bool, b0259: bool, b0260: bool, b0261: bool, b0262: bool, b0263: bool, b0264: bool, b0265: bool, b0266: bool, b0267: bool, b0268: bool, b0269: bool, b0270: bool, b0271: bool, b0272: bool, b0273: bool) : bool
{
  0 + (if b0000 then 0 else 109000) + (if b0001 then 0 else 109000) + (if b0002 then 0 else 109000) + (if b0003 then 0 else 109000) + (if b0005 then 0 else 109000) + (if b0007 then 0 else 109000) + (if b0008 then 0 else 109000) + (if b0009 then 0 else 109000) + (if b0010 then 0 else 109000) + (if b0011 then 0 else 109000) + (if b0012 then 0 else 109000) + (if b0014 then 0 else 109000) + (if b0016 then 0 else 109000) + (if b0017 then 0 else 109000) + (if b0018 then 0 else 109000) + (if b0019 then 0 else 109000) + (if b0020 then 0 else 109000) + (if b0021 then 0 else 109000) + (if b0022 then 0 else 109000) + (if b0023 then 0 else 109000) + (if b0026 then 0 else 109000) + (if b0028 then 0 else 109000) + (if b0030 then 0 else 109000) + (if b0031 then 0 else 109000) + (if b0032 then 0 else 109000) + (if b0033 then 0 else 109000) + (if b0034 then 0 else 109000) + (if b0035 then 0 else 109000) + (if b0036 then 0 else 109000) + (if b0037 then 0 else 109000) + (if b0039 then 0 else 109000) + (if b0040 then 0 else 109000) + (if b0041 then 0 else 109000) + (if b0042 then 0 else 109000) + (if b0045 then 0 else 109000) + (if b0047 then 0 else 109000) + (if b0048 then 0 else 109000) + (if b0049 then 0 else 109000) + (if b0050 then 0 else 109000) + (if b0051 then 0 else 109000) + (if b0052 then 0 else 109000) + (if b0053 then 0 else 109000) + (if b0054 then 0 else 109000) + (if b0055 then 0 else 109000) + (if b0057 then 0 else 109000) + (if b0058 then 0 else 109000) + (if b0059 then 0 else 109000) + (if b0060 then 0 else 109000) + (if b0061 then 0 else 109000) + (if b0062 then 0 else 109000) + (if b0063 then 0 else 109000) + (if b0064 then 0 else 109000) + (if b0065 then 0 else 109000) + (if b0066 then 0 else 109000) + (if b0067 then 0 else 109000) + (if b0068 then 0 else 109000) + (if b0069 then 0 else 109000) + (if b0070 then 0 else 109000) + (if b0072 then 0 else 109000) + (if b0073 then 0 else 109000) + (if b0074 then 0 else 109000) + (if b0075 then 0 else 109000) + (if b0076 then 0 else 109000) + (if b0077 then 0 else 109000) + (if b0078 then 0 else 109000) + (if b0079 then 0 else 109000) + (if b0080 then 0 else 109000) + (if b0081 then 0 else 109000) + (if b0082 then 0 else 109000) + (if b0083 then 0 else 109000) + (if b0084 then 0 else 109000) + (if b0085 then 0 else 109000) + (if b0086 then 0 else 109000) + (if b0087 then 0 else 109000) + (if b0088 then 0 else 109000) + (if b0089 then 0 else 109000) + (if b0090 then 0 else 109000) + (if b0091 then 0 else 109000) + (if b0092 then 0 else 109000) + (if b0095 then 0 else 109000) + (if b0097 then 0 else 109000) + (if b0098 then 0 else 109000) + (if b0099 then 0 else 109000) + (if b0100 then 0 else 109000) + (if b0101 then 0 else 109000) + (if b0102 then 0 else 109000) + (if b0103 then 0 else 109000) + (if b0104 then 0 else 109000) + (if b0105 then 0 else 109000) + (if b0149 then 0 else 109000) + (if b0150 then 0 else 109000) + (if b0151 then 0 else 109000) + (if b0152 then 0 else 109000) + (if b0153 then 0 else 109000) + (if b0154 then 0 else 109000) + (if b0155 then 0 else 109000) + (if b0156 then 0 else 109000) + (if b0157 then 0 else 109000) + (if b0158 then 0 else 109000) + (if b0159 then 0 else 109000) + (if b0201 then 0 else 109000) + (if b0203 then 0 else 109000) + (if b0204 then 0 else 109000) + (if b0205 then 0 else 109000) + (if b0206 then 0 else 109000) + (if b0207 then 0 else 109000) + (if b0208 then 0 else 109000) + (if b0209 then 0 else 109000) + (if b0210 then 0 else 109000) + (if b0211 then 0 else 109000) + (if b0212 then 0 else 109000) + (if b0213 then 0 else 109000) + (if b0215 then 0 else 109000) + (if b0216 then 0 else 109000) + (if b0242 then 0 else 109000) + (if b0244 then 0 else 109000) + (if b0245 then 0 else 109000) + (if b0246 then 0 else 109000) + (if b0247 then 0 else 109000) + (if b0248 then 0 else 109000) + (if b0249 then 0 else 109000) + (if b0250 then 0 else 109000) + (if b0251 then 0 else 109000) + (if b0252 then 0 else 109000) + (if b0253 then 0 else 109000) + (if b0254 then 0 else 109000) + (if b0255 then 0 else 109000) + (if b0256 then 0 else 109000) + (if b0257 then 0 else 109000) + (if b0258 then 0 else 109000) + (if b0259 then 0 else 109000) + (if b0260 then 0 else 109000) + (if b0261 then 0 else 109000) + (if b0262 then 0 else 109000) + (if b0263 then 0 else 109000) + (if b0264 then 0 else 109000) + (if b0265 then 0 else 109000) + (if b0266 then 0 else 109000) + (if b0267 then 0 else 109000) + (if b0268 then 0 else 109000) + (if b0269 then 0 else 109000) + (if b0270 then 0 else 109000) + (if b0271 then 0 else 109000) + (if b0272 then 0 else 109000) + (if b0273 then 0 else 109000) < 441
}
Prover Time taken = 12.317553
Added Horn clause: 15 && 43 && 0 && 38 && 40 && 0 && 0 => 44
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/datamining/covariance/kernel3.bpl.ice2.bpl
Total learner time was 00:00:00.1264490
Verifying $kernel3: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool, b0228: bool, b0229: bool, b0230: bool, b0231: bool, b0232: bool, b0233: bool, b0234: bool, b0235: bool, b0236: bool, b0237: bool, b0238: bool, b0239: bool, b0240: bool, b0241: bool, b0242: bool, b0243: bool, b0244: bool, b0245: bool, b0246: bool, b0247: bool, b0248: bool, b0249: bool, b0250: bool, b0251: bool, b0252: bool, b0253: bool, b0254: bool, b0255: bool, b0256: bool, b0257: bool, b0258: bool, b0259: bool, b0260: bool, b0261: bool, b0262: bool, b0263: bool, b0264: bool, b0265: bool, b0266: bool, b0267: bool, b0268: bool, b0269: bool, b0270: bool, b0271: bool, b0272: bool, b0273: bool) : bool
{
  0 + (if b0000 then 0 else 109000) + (if b0001 then 0 else 109000) + (if b0002 then 0 else 109000) + (if b0003 then 0 else 109000) + (if b0005 then 0 else 109000) + (if b0007 then 0 else 109000) + (if b0008 then 0 else 109000) + (if b0009 then 0 else 109000) + (if b0010 then 0 else 109000) + (if b0011 then 0 else 109000) + (if b0012 then 0 else 109000) + (if b0014 then 0 else 109000) + (if b0016 then 0 else 109000) + (if b0017 then 0 else 109000) + (if b0018 then 0 else 109000) + (if b0019 then 0 else 109000) + (if b0020 then 0 else 109000) + (if b0021 then 0 else 109000) + (if b0022 then 0 else 109000) + (if b0023 then 0 else 109000) + (if b0026 then 0 else 109000) + (if b0028 then 0 else 109000) + (if b0030 then 0 else 109000) + (if b0031 then 0 else 109000) + (if b0032 then 0 else 109000) + (if b0033 then 0 else 109000) + (if b0034 then 0 else 109000) + (if b0035 then 0 else 109000) + (if b0036 then 0 else 109000) + (if b0037 then 0 else 109000) + (if b0039 then 0 else 109000) + (if b0040 then 0 else 109000) + (if b0041 then 0 else 109000) + (if b0042 then 0 else 109000) + (if b0045 then 0 else 109000) + (if b0047 then 0 else 109000) + (if b0048 then 0 else 109000) + (if b0049 then 0 else 109000) + (if b0050 then 0 else 109000) + (if b0051 then 0 else 109000) + (if b0052 then 0 else 109000) + (if b0053 then 0 else 109000) + (if b0054 then 0 else 109000) + (if b0055 then 0 else 109000) + (if b0057 then 0 else 109000) + (if b0058 then 0 else 109000) + (if b0059 then 0 else 109000) + (if b0060 then 0 else 109000) + (if b0061 then 0 else 109000) + (if b0062 then 0 else 109000) + (if b0063 then 0 else 109000) + (if b0064 then 0 else 109000) + (if b0065 then 0 else 109000) + (if b0066 then 0 else 109000) + (if b0067 then 0 else 109000) + (if b0068 then 0 else 109000) + (if b0069 then 0 else 109000) + (if b0072 then 0 else 109000) + (if b0073 then 0 else 109000) + (if b0074 then 0 else 109000) + (if b0075 then 0 else 109000) + (if b0076 then 0 else 109000) + (if b0077 then 0 else 109000) + (if b0078 then 0 else 109000) + (if b0079 then 0 else 109000) + (if b0080 then 0 else 109000) + (if b0081 then 0 else 109000) + (if b0082 then 0 else 109000) + (if b0083 then 0 else 109000) + (if b0084 then 0 else 109000) + (if b0085 then 0 else 109000) + (if b0086 then 0 else 109000) + (if b0087 then 0 else 109000) + (if b0088 then 0 else 109000) + (if b0089 then 0 else 109000) + (if b0090 then 0 else 109000) + (if b0091 then 0 else 109000) + (if b0092 then 0 else 109000) + (if b0095 then 0 else 109000) + (if b0097 then 0 else 109000) + (if b0098 then 0 else 109000) + (if b0099 then 0 else 109000) + (if b0100 then 0 else 109000) + (if b0101 then 0 else 109000) + (if b0102 then 0 else 109000) + (if b0103 then 0 else 109000) + (if b0104 then 0 else 109000) + (if b0105 then 0 else 109000) + (if b0149 then 0 else 109000) + (if b0150 then 0 else 109000) + (if b0151 then 0 else 109000) + (if b0152 then 0 else 109000) + (if b0153 then 0 else 109000) + (if b0154 then 0 else 109000) + (if b0155 then 0 else 109000) + (if b0156 then 0 else 109000) + (if b0157 then 0 else 109000) + (if b0158 then 0 else 109000) + (if b0159 then 0 else 109000) + (if b0201 then 0 else 109000) + (if b0203 then 0 else 109000) + (if b0204 then 0 else 109000) + (if b0205 then 0 else 109000) + (if b0206 then 0 else 109000) + (if b0207 then 0 else 109000) + (if b0208 then 0 else 109000) + (if b0209 then 0 else 109000) + (if b0210 then 0 else 109000) + (if b0211 then 0 else 109000) + (if b0212 then 0 else 109000) + (if b0213 then 0 else 109000) + (if b0215 then 0 else 109000) + (if b0216 then 0 else 109000) + (if b0242 then 0 else 109000) + (if b0244 then 0 else 109000) + (if b0245 then 0 else 109000) + (if b0246 then 0 else 109000) + (if b0247 then 0 else 109000) + (if b0248 then 0 else 109000) + (if b0249 then 0 else 109000) + (if b0250 then 0 else 109000) + (if b0251 then 0 else 109000) + (if b0252 then 0 else 109000) + (if b0253 then 0 else 109000) + (if b0254 then 0 else 109000) + (if b0255 then 0 else 109000) + (if b0256 then 0 else 109000) + (if b0257 then 0 else 109000) + (if b0258 then 0 else 109000) + (if b0259 then 0 else 109000) + (if b0260 then 0 else 109000) + (if b0261 then 0 else 109000) + (if b0262 then 0 else 109000) + (if b0263 then 0 else 109000) + (if b0264 then 0 else 109000) + (if b0265 then 0 else 109000) + (if b0266 then 0 else 109000) + (if b0267 then 0 else 109000) + (if b0268 then 0 else 109000) + (if b0269 then 0 else 109000) + (if b0270 then 0 else 109000) + (if b0271 then 0 else 109000) + (if b0272 then 0 else 109000) + (if b0273 then 0 else 109000) < 441
}
Prover Time taken = 15.529884
Added Horn clause: 9 && 43 && 0 && 38 && 40 && 0 && 0 && 0 && 45 => 46
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/datamining/covariance/kernel3.bpl.ice2.bpl
Total learner time was 00:00:00.1267540
Verifying $kernel3: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool, b0228: bool, b0229: bool, b0230: bool, b0231: bool, b0232: bool, b0233: bool, b0234: bool, b0235: bool, b0236: bool, b0237: bool, b0238: bool, b0239: bool, b0240: bool, b0241: bool, b0242: bool, b0243: bool, b0244: bool, b0245: bool, b0246: bool, b0247: bool, b0248: bool, b0249: bool, b0250: bool, b0251: bool, b0252: bool, b0253: bool, b0254: bool, b0255: bool, b0256: bool, b0257: bool, b0258: bool, b0259: bool, b0260: bool, b0261: bool, b0262: bool, b0263: bool, b0264: bool, b0265: bool, b0266: bool, b0267: bool, b0268: bool, b0269: bool, b0270: bool, b0271: bool, b0272: bool, b0273: bool) : bool
{
  0 + (if b0000 then 0 else 109000) + (if b0001 then 0 else 109000) + (if b0002 then 0 else 109000) + (if b0003 then 0 else 109000) + (if b0005 then 0 else 109000) + (if b0007 then 0 else 109000) + (if b0008 then 0 else 109000) + (if b0009 then 0 else 109000) + (if b0010 then 0 else 109000) + (if b0011 then 0 else 109000) + (if b0012 then 0 else 109000) + (if b0014 then 0 else 109000) + (if b0016 then 0 else 109000) + (if b0017 then 0 else 109000) + (if b0018 then 0 else 109000) + (if b0019 then 0 else 109000) + (if b0020 then 0 else 109000) + (if b0021 then 0 else 109000) + (if b0022 then 0 else 109000) + (if b0023 then 0 else 109000) + (if b0026 then 0 else 109000) + (if b0028 then 0 else 109000) + (if b0030 then 0 else 109000) + (if b0031 then 0 else 109000) + (if b0032 then 0 else 109000) + (if b0033 then 0 else 109000) + (if b0034 then 0 else 109000) + (if b0035 then 0 else 109000) + (if b0036 then 0 else 109000) + (if b0037 then 0 else 109000) + (if b0039 then 0 else 109000) + (if b0040 then 0 else 109000) + (if b0041 then 0 else 109000) + (if b0042 then 0 else 109000) + (if b0045 then 0 else 109000) + (if b0047 then 0 else 109000) + (if b0048 then 0 else 109000) + (if b0049 then 0 else 109000) + (if b0050 then 0 else 109000) + (if b0051 then 0 else 109000) + (if b0052 then 0 else 109000) + (if b0053 then 0 else 109000) + (if b0054 then 0 else 109000) + (if b0055 then 0 else 109000) + (if b0057 then 0 else 109000) + (if b0058 then 0 else 109000) + (if b0059 then 0 else 109000) + (if b0060 then 0 else 109000) + (if b0061 then 0 else 109000) + (if b0062 then 0 else 109000) + (if b0063 then 0 else 109000) + (if b0064 then 0 else 109000) + (if b0065 then 0 else 109000) + (if b0066 then 0 else 109000) + (if b0067 then 0 else 109000) + (if b0068 then 0 else 109000) + (if b0069 then 0 else 109000) + (if b0072 then 0 else 109000) + (if b0073 then 0 else 109000) + (if b0074 then 0 else 109000) + (if b0075 then 0 else 109000) + (if b0076 then 0 else 109000) + (if b0077 then 0 else 109000) + (if b0078 then 0 else 109000) + (if b0079 then 0 else 109000) + (if b0080 then 0 else 109000) + (if b0081 then 0 else 109000) + (if b0082 then 0 else 109000) + (if b0083 then 0 else 109000) + (if b0084 then 0 else 109000) + (if b0085 then 0 else 109000) + (if b0086 then 0 else 109000) + (if b0087 then 0 else 109000) + (if b0089 then 0 else 109000) + (if b0091 then 0 else 109000) + (if b0092 then 0 else 109000) + (if b0095 then 0 else 109000) + (if b0097 then 0 else 109000) + (if b0098 then 0 else 109000) + (if b0099 then 0 else 109000) + (if b0100 then 0 else 109000) + (if b0101 then 0 else 109000) + (if b0102 then 0 else 109000) + (if b0103 then 0 else 109000) + (if b0104 then 0 else 109000) + (if b0105 then 0 else 109000) + (if b0149 then 0 else 109000) + (if b0150 then 0 else 109000) + (if b0151 then 0 else 109000) + (if b0152 then 0 else 109000) + (if b0153 then 0 else 109000) + (if b0154 then 0 else 109000) + (if b0155 then 0 else 109000) + (if b0156 then 0 else 109000) + (if b0157 then 0 else 109000) + (if b0158 then 0 else 109000) + (if b0159 then 0 else 109000) + (if b0201 then 0 else 109000) + (if b0203 then 0 else 109000) + (if b0204 then 0 else 109000) + (if b0205 then 0 else 109000) + (if b0206 then 0 else 109000) + (if b0207 then 0 else 109000) + (if b0208 then 0 else 109000) + (if b0209 then 0 else 109000) + (if b0210 then 0 else 109000) + (if b0211 then 0 else 109000) + (if b0212 then 0 else 109000) + (if b0213 then 0 else 109000) + (if b0215 then 0 else 109000) + (if b0216 then 0 else 109000) + (if b0242 then 0 else 109000) + (if b0244 then 0 else 109000) + (if b0245 then 0 else 109000) + (if b0246 then 0 else 109000) + (if b0247 then 0 else 109000) + (if b0248 then 0 else 109000) + (if b0249 then 0 else 109000) + (if b0250 then 0 else 109000) + (if b0251 then 0 else 109000) + (if b0252 then 0 else 109000) + (if b0253 then 0 else 109000) + (if b0254 then 0 else 109000) + (if b0255 then 0 else 109000) + (if b0256 then 0 else 109000) + (if b0257 then 0 else 109000) + (if b0258 then 0 else 109000) + (if b0259 then 0 else 109000) + (if b0260 then 0 else 109000) + (if b0261 then 0 else 109000) + (if b0262 then 0 else 109000) + (if b0263 then 0 else 109000) + (if b0264 then 0 else 109000) + (if b0265 then 0 else 109000) + (if b0266 then 0 else 109000) + (if b0267 then 0 else 109000) + (if b0268 then 0 else 109000) + (if b0269 then 0 else 109000) + (if b0270 then 0 else 109000) + (if b0271 then 0 else 109000) + (if b0272 then 0 else 109000) + (if b0273 then 0 else 109000) < 441
}
Prover Time taken = 11.780536
Added Horn clause: 15 && 43 && 0 && 38 && 40 && 0 && 0 && 0 && 44 => 47
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/datamining/covariance/kernel3.bpl.ice2.bpl
Total learner time was 00:00:00.1254680
Verifying $kernel3: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool, b0228: bool, b0229: bool, b0230: bool, b0231: bool, b0232: bool, b0233: bool, b0234: bool, b0235: bool, b0236: bool, b0237: bool, b0238: bool, b0239: bool, b0240: bool, b0241: bool, b0242: bool, b0243: bool, b0244: bool, b0245: bool, b0246: bool, b0247: bool, b0248: bool, b0249: bool, b0250: bool, b0251: bool, b0252: bool, b0253: bool, b0254: bool, b0255: bool, b0256: bool, b0257: bool, b0258: bool, b0259: bool, b0260: bool, b0261: bool, b0262: bool, b0263: bool, b0264: bool, b0265: bool, b0266: bool, b0267: bool, b0268: bool, b0269: bool, b0270: bool, b0271: bool, b0272: bool, b0273: bool) : bool
{
  0 + (if b0000 then 0 else 109000) + (if b0001 then 0 else 109000) + (if b0002 then 0 else 109000) + (if b0003 then 0 else 109000) + (if b0005 then 0 else 109000) + (if b0007 then 0 else 109000) + (if b0008 then 0 else 109000) + (if b0009 then 0 else 109000) + (if b0010 then 0 else 109000) + (if b0011 then 0 else 109000) + (if b0012 then 0 else 109000) + (if b0014 then 0 else 109000) + (if b0016 then 0 else 109000) + (if b0017 then 0 else 109000) + (if b0018 then 0 else 109000) + (if b0019 then 0 else 109000) + (if b0020 then 0 else 109000) + (if b0021 then 0 else 109000) + (if b0022 then 0 else 109000) + (if b0023 then 0 else 109000) + (if b0026 then 0 else 109000) + (if b0028 then 0 else 109000) + (if b0030 then 0 else 109000) + (if b0031 then 0 else 109000) + (if b0032 then 0 else 109000) + (if b0033 then 0 else 109000) + (if b0034 then 0 else 109000) + (if b0035 then 0 else 109000) + (if b0036 then 0 else 109000) + (if b0037 then 0 else 109000) + (if b0039 then 0 else 109000) + (if b0040 then 0 else 109000) + (if b0041 then 0 else 109000) + (if b0042 then 0 else 109000) + (if b0045 then 0 else 109000) + (if b0047 then 0 else 109000) + (if b0048 then 0 else 109000) + (if b0049 then 0 else 109000) + (if b0050 then 0 else 109000) + (if b0051 then 0 else 109000) + (if b0052 then 0 else 109000) + (if b0053 then 0 else 109000) + (if b0054 then 0 else 109000) + (if b0055 then 0 else 109000) + (if b0057 then 0 else 109000) + (if b0058 then 0 else 109000) + (if b0059 then 0 else 109000) + (if b0060 then 0 else 109000) + (if b0061 then 0 else 109000) + (if b0062 then 0 else 109000) + (if b0063 then 0 else 109000) + (if b0064 then 0 else 109000) + (if b0065 then 0 else 109000) + (if b0066 then 0 else 109000) + (if b0067 then 0 else 109000) + (if b0068 then 0 else 109000) + (if b0069 then 0 else 109000) + (if b0072 then 0 else 109000) + (if b0073 then 0 else 109000) + (if b0074 then 0 else 109000) + (if b0075 then 0 else 109000) + (if b0076 then 0 else 109000) + (if b0077 then 0 else 109000) + (if b0078 then 0 else 109000) + (if b0079 then 0 else 109000) + (if b0080 then 0 else 109000) + (if b0081 then 0 else 109000) + (if b0082 then 0 else 109000) + (if b0083 then 0 else 109000) + (if b0084 then 0 else 109000) + (if b0085 then 0 else 109000) + (if b0086 then 0 else 109000) + (if b0087 then 0 else 109000) + (if b0091 then 0 else 109000) + (if b0092 then 0 else 109000) + (if b0095 then 0 else 109000) + (if b0097 then 0 else 109000) + (if b0098 then 0 else 109000) + (if b0099 then 0 else 109000) + (if b0100 then 0 else 109000) + (if b0101 then 0 else 109000) + (if b0102 then 0 else 109000) + (if b0103 then 0 else 109000) + (if b0104 then 0 else 109000) + (if b0105 then 0 else 109000) + (if b0149 then 0 else 109000) + (if b0150 then 0 else 109000) + (if b0151 then 0 else 109000) + (if b0152 then 0 else 109000) + (if b0153 then 0 else 109000) + (if b0154 then 0 else 109000) + (if b0155 then 0 else 109000) + (if b0156 then 0 else 109000) + (if b0157 then 0 else 109000) + (if b0158 then 0 else 109000) + (if b0159 then 0 else 109000) + (if b0201 then 0 else 109000) + (if b0203 then 0 else 109000) + (if b0204 then 0 else 109000) + (if b0205 then 0 else 109000) + (if b0206 then 0 else 109000) + (if b0207 then 0 else 109000) + (if b0208 then 0 else 109000) + (if b0209 then 0 else 109000) + (if b0210 then 0 else 109000) + (if b0211 then 0 else 109000) + (if b0212 then 0 else 109000) + (if b0213 then 0 else 109000) + (if b0215 then 0 else 109000) + (if b0216 then 0 else 109000) + (if b0242 then 0 else 109000) + (if b0244 then 0 else 109000) + (if b0245 then 0 else 109000) + (if b0246 then 0 else 109000) + (if b0247 then 0 else 109000) + (if b0248 then 0 else 109000) + (if b0249 then 0 else 109000) + (if b0250 then 0 else 109000) + (if b0251 then 0 else 109000) + (if b0252 then 0 else 109000) + (if b0253 then 0 else 109000) + (if b0254 then 0 else 109000) + (if b0255 then 0 else 109000) + (if b0256 then 0 else 109000) + (if b0257 then 0 else 109000) + (if b0258 then 0 else 109000) + (if b0259 then 0 else 109000) + (if b0260 then 0 else 109000) + (if b0261 then 0 else 109000) + (if b0262 then 0 else 109000) + (if b0263 then 0 else 109000) + (if b0264 then 0 else 109000) + (if b0265 then 0 else 109000) + (if b0266 then 0 else 109000) + (if b0267 then 0 else 109000) + (if b0268 then 0 else 109000) + (if b0269 then 0 else 109000) + (if b0270 then 0 else 109000) + (if b0271 then 0 else 109000) + (if b0272 then 0 else 109000) + (if b0273 then 0 else 109000) < 441
}
Prover Time taken = 7.127081
Added Horn clause: 9 && 43 && 0 && 38 && 40 && 0 && 0 && 0 && 44 && 0 && 47 => 48
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/datamining/covariance/kernel3.bpl.ice2.bpl
Total learner time was 00:00:00.1262530
Verifying $kernel3: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool, b0228: bool, b0229: bool, b0230: bool, b0231: bool, b0232: bool, b0233: bool, b0234: bool, b0235: bool, b0236: bool, b0237: bool, b0238: bool, b0239: bool, b0240: bool, b0241: bool, b0242: bool, b0243: bool, b0244: bool, b0245: bool, b0246: bool, b0247: bool, b0248: bool, b0249: bool, b0250: bool, b0251: bool, b0252: bool, b0253: bool, b0254: bool, b0255: bool, b0256: bool, b0257: bool, b0258: bool, b0259: bool, b0260: bool, b0261: bool, b0262: bool, b0263: bool, b0264: bool, b0265: bool, b0266: bool, b0267: bool, b0268: bool, b0269: bool, b0270: bool, b0271: bool, b0272: bool, b0273: bool) : bool
{
  0 + (if b0000 then 0 else 109000) + (if b0001 then 0 else 109000) + (if b0002 then 0 else 109000) + (if b0003 then 0 else 109000) + (if b0005 then 0 else 109000) + (if b0007 then 0 else 109000) + (if b0008 then 0 else 109000) + (if b0009 then 0 else 109000) + (if b0010 then 0 else 109000) + (if b0011 then 0 else 109000) + (if b0012 then 0 else 109000) + (if b0014 then 0 else 109000) + (if b0016 then 0 else 109000) + (if b0017 then 0 else 109000) + (if b0018 then 0 else 109000) + (if b0019 then 0 else 109000) + (if b0020 then 0 else 109000) + (if b0021 then 0 else 109000) + (if b0022 then 0 else 109000) + (if b0023 then 0 else 109000) + (if b0026 then 0 else 109000) + (if b0028 then 0 else 109000) + (if b0030 then 0 else 109000) + (if b0031 then 0 else 109000) + (if b0032 then 0 else 109000) + (if b0033 then 0 else 109000) + (if b0034 then 0 else 109000) + (if b0035 then 0 else 109000) + (if b0036 then 0 else 109000) + (if b0037 then 0 else 109000) + (if b0039 then 0 else 109000) + (if b0040 then 0 else 109000) + (if b0041 then 0 else 109000) + (if b0042 then 0 else 109000) + (if b0045 then 0 else 109000) + (if b0047 then 0 else 109000) + (if b0048 then 0 else 109000) + (if b0049 then 0 else 109000) + (if b0050 then 0 else 109000) + (if b0051 then 0 else 109000) + (if b0052 then 0 else 109000) + (if b0054 then 0 else 109000) + (if b0055 then 0 else 109000) + (if b0057 then 0 else 109000) + (if b0058 then 0 else 109000) + (if b0059 then 0 else 109000) + (if b0060 then 0 else 109000) + (if b0061 then 0 else 109000) + (if b0062 then 0 else 109000) + (if b0063 then 0 else 109000) + (if b0064 then 0 else 109000) + (if b0065 then 0 else 109000) + (if b0066 then 0 else 109000) + (if b0067 then 0 else 109000) + (if b0068 then 0 else 109000) + (if b0069 then 0 else 109000) + (if b0072 then 0 else 109000) + (if b0073 then 0 else 109000) + (if b0074 then 0 else 109000) + (if b0075 then 0 else 109000) + (if b0076 then 0 else 109000) + (if b0077 then 0 else 109000) + (if b0078 then 0 else 109000) + (if b0079 then 0 else 109000) + (if b0080 then 0 else 109000) + (if b0081 then 0 else 109000) + (if b0082 then 0 else 109000) + (if b0083 then 0 else 109000) + (if b0084 then 0 else 109000) + (if b0085 then 0 else 109000) + (if b0086 then 0 else 109000) + (if b0087 then 0 else 109000) + (if b0091 then 0 else 109000) + (if b0092 then 0 else 109000) + (if b0095 then 0 else 109000) + (if b0097 then 0 else 109000) + (if b0098 then 0 else 109000) + (if b0099 then 0 else 109000) + (if b0100 then 0 else 109000) + (if b0101 then 0 else 109000) + (if b0102 then 0 else 109000) + (if b0103 then 0 else 109000) + (if b0104 then 0 else 109000) + (if b0105 then 0 else 109000) + (if b0149 then 0 else 109000) + (if b0150 then 0 else 109000) + (if b0151 then 0 else 109000) + (if b0152 then 0 else 109000) + (if b0153 then 0 else 109000) + (if b0154 then 0 else 109000) + (if b0155 then 0 else 109000) + (if b0156 then 0 else 109000) + (if b0157 then 0 else 109000) + (if b0158 then 0 else 109000) + (if b0159 then 0 else 109000) + (if b0201 then 0 else 109000) + (if b0203 then 0 else 109000) + (if b0204 then 0 else 109000) + (if b0205 then 0 else 109000) + (if b0206 then 0 else 109000) + (if b0207 then 0 else 109000) + (if b0208 then 0 else 109000) + (if b0209 then 0 else 109000) + (if b0210 then 0 else 109000) + (if b0211 then 0 else 109000) + (if b0212 then 0 else 109000) + (if b0213 then 0 else 109000) + (if b0215 then 0 else 109000) + (if b0216 then 0 else 109000) + (if b0242 then 0 else 109000) + (if b0244 then 0 else 109000) + (if b0245 then 0 else 109000) + (if b0246 then 0 else 109000) + (if b0247 then 0 else 109000) + (if b0248 then 0 else 109000) + (if b0249 then 0 else 109000) + (if b0250 then 0 else 109000) + (if b0251 then 0 else 109000) + (if b0252 then 0 else 109000) + (if b0253 then 0 else 109000) + (if b0254 then 0 else 109000) + (if b0255 then 0 else 109000) + (if b0256 then 0 else 109000) + (if b0257 then 0 else 109000) + (if b0258 then 0 else 109000) + (if b0259 then 0 else 109000) + (if b0260 then 0 else 109000) + (if b0261 then 0 else 109000) + (if b0262 then 0 else 109000) + (if b0263 then 0 else 109000) + (if b0264 then 0 else 109000) + (if b0265 then 0 else 109000) + (if b0266 then 0 else 109000) + (if b0267 then 0 else 109000) + (if b0268 then 0 else 109000) + (if b0269 then 0 else 109000) + (if b0270 then 0 else 109000) + (if b0271 then 0 else 109000) + (if b0272 then 0 else 109000) + (if b0273 then 0 else 109000) < 441
}
Prover Time taken = 10.170113
Added Horn clause: 5 && 43 && 0 && 38 && 40 && 0 && 0 && 0 && 44 && 0 && 47 && 0 && 48 => 49
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/datamining/covariance/kernel3.bpl.ice2.bpl
Total learner time was 00:00:00.1297310
Verifying $kernel3: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool, b0228: bool, b0229: bool, b0230: bool, b0231: bool, b0232: bool, b0233: bool, b0234: bool, b0235: bool, b0236: bool, b0237: bool, b0238: bool, b0239: bool, b0240: bool, b0241: bool, b0242: bool, b0243: bool, b0244: bool, b0245: bool, b0246: bool, b0247: bool, b0248: bool, b0249: bool, b0250: bool, b0251: bool, b0252: bool, b0253: bool, b0254: bool, b0255: bool, b0256: bool, b0257: bool, b0258: bool, b0259: bool, b0260: bool, b0261: bool, b0262: bool, b0263: bool, b0264: bool, b0265: bool, b0266: bool, b0267: bool, b0268: bool, b0269: bool, b0270: bool, b0271: bool, b0272: bool, b0273: bool) : bool
{
  0 + (if b0000 then 0 else 109000) + (if b0001 then 0 else 109000) + (if b0002 then 0 else 109000) + (if b0003 then 0 else 109000) + (if b0005 then 0 else 109000) + (if b0007 then 0 else 109000) + (if b0008 then 0 else 109000) + (if b0009 then 0 else 109000) + (if b0010 then 0 else 109000) + (if b0011 then 0 else 109000) + (if b0012 then 0 else 109000) + (if b0014 then 0 else 109000) + (if b0016 then 0 else 109000) + (if b0017 then 0 else 109000) + (if b0018 then 0 else 109000) + (if b0019 then 0 else 109000) + (if b0020 then 0 else 109000) + (if b0021 then 0 else 109000) + (if b0022 then 0 else 109000) + (if b0023 then 0 else 109000) + (if b0026 then 0 else 109000) + (if b0028 then 0 else 109000) + (if b0030 then 0 else 109000) + (if b0031 then 0 else 109000) + (if b0032 then 0 else 109000) + (if b0033 then 0 else 109000) + (if b0034 then 0 else 109000) + (if b0035 then 0 else 109000) + (if b0036 then 0 else 109000) + (if b0037 then 0 else 109000) + (if b0039 then 0 else 109000) + (if b0040 then 0 else 109000) + (if b0041 then 0 else 109000) + (if b0042 then 0 else 109000) + (if b0045 then 0 else 109000) + (if b0047 then 0 else 109000) + (if b0048 then 0 else 109000) + (if b0049 then 0 else 109000) + (if b0050 then 0 else 109000) + (if b0051 then 0 else 109000) + (if b0052 then 0 else 109000) + (if b0054 then 0 else 109000) + (if b0055 then 0 else 109000) + (if b0057 then 0 else 109000) + (if b0058 then 0 else 109000) + (if b0059 then 0 else 109000) + (if b0060 then 0 else 109000) + (if b0061 then 0 else 109000) + (if b0062 then 0 else 109000) + (if b0063 then 0 else 109000) + (if b0064 then 0 else 109000) + (if b0065 then 0 else 109000) + (if b0066 then 0 else 109000) + (if b0067 then 0 else 109000) + (if b0068 then 0 else 109000) + (if b0069 then 0 else 109000) + (if b0072 then 0 else 109000) + (if b0073 then 0 else 109000) + (if b0074 then 0 else 109000) + (if b0075 then 0 else 109000) + (if b0076 then 0 else 109000) + (if b0077 then 0 else 109000) + (if b0078 then 0 else 109000) + (if b0079 then 0 else 109000) + (if b0080 then 0 else 109000) + (if b0081 then 0 else 109000) + (if b0082 then 0 else 109000) + (if b0083 then 0 else 109000) + (if b0084 then 0 else 109000) + (if b0085 then 0 else 109000) + (if b0086 then 0 else 109000) + (if b0087 then 0 else 109000) + (if b0091 then 0 else 109000) + (if b0092 then 0 else 109000) + (if b0095 then 0 else 109000) + (if b0097 then 0 else 109000) + (if b0098 then 0 else 109000) + (if b0099 then 0 else 109000) + (if b0100 then 0 else 109000) + (if b0101 then 0 else 109000) + (if b0102 then 0 else 109000) + (if b0103 then 0 else 109000) + (if b0104 then 0 else 109000) + (if b0105 then 0 else 109000) + (if b0149 then 0 else 109000) + (if b0151 then 0 else 109000) + (if b0152 then 0 else 109000) + (if b0153 then 0 else 109000) + (if b0154 then 0 else 109000) + (if b0155 then 0 else 109000) + (if b0156 then 0 else 109000) + (if b0157 then 0 else 109000) + (if b0158 then 0 else 109000) + (if b0159 then 0 else 109000) + (if b0201 then 0 else 109000) + (if b0203 then 0 else 109000) + (if b0204 then 0 else 109000) + (if b0205 then 0 else 109000) + (if b0206 then 0 else 109000) + (if b0207 then 0 else 109000) + (if b0208 then 0 else 109000) + (if b0209 then 0 else 109000) + (if b0210 then 0 else 109000) + (if b0211 then 0 else 109000) + (if b0212 then 0 else 109000) + (if b0213 then 0 else 109000) + (if b0215 then 0 else 109000) + (if b0216 then 0 else 109000) + (if b0242 then 0 else 109000) + (if b0244 then 0 else 109000) + (if b0245 then 0 else 109000) + (if b0246 then 0 else 109000) + (if b0247 then 0 else 109000) + (if b0248 then 0 else 109000) + (if b0249 then 0 else 109000) + (if b0250 then 0 else 109000) + (if b0251 then 0 else 109000) + (if b0252 then 0 else 109000) + (if b0253 then 0 else 109000) + (if b0254 then 0 else 109000) + (if b0255 then 0 else 109000) + (if b0256 then 0 else 109000) + (if b0257 then 0 else 109000) + (if b0258 then 0 else 109000) + (if b0259 then 0 else 109000) + (if b0260 then 0 else 109000) + (if b0261 then 0 else 109000) + (if b0262 then 0 else 109000) + (if b0263 then 0 else 109000) + (if b0264 then 0 else 109000) + (if b0265 then 0 else 109000) + (if b0266 then 0 else 109000) + (if b0267 then 0 else 109000) + (if b0268 then 0 else 109000) + (if b0269 then 0 else 109000) + (if b0270 then 0 else 109000) + (if b0271 then 0 else 109000) + (if b0272 then 0 else 109000) + (if b0273 then 0 else 109000) < 441
}
Prover Time taken = 9.378953
Added Horn clause: 50 => 51
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/datamining/covariance/kernel3.bpl.ice2.bpl
Total learner time was 00:00:00.1269880
Verifying $kernel3: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool, b0228: bool, b0229: bool, b0230: bool, b0231: bool, b0232: bool, b0233: bool, b0234: bool, b0235: bool, b0236: bool, b0237: bool, b0238: bool, b0239: bool, b0240: bool, b0241: bool, b0242: bool, b0243: bool, b0244: bool, b0245: bool, b0246: bool, b0247: bool, b0248: bool, b0249: bool, b0250: bool, b0251: bool, b0252: bool, b0253: bool, b0254: bool, b0255: bool, b0256: bool, b0257: bool, b0258: bool, b0259: bool, b0260: bool, b0261: bool, b0262: bool, b0263: bool, b0264: bool, b0265: bool, b0266: bool, b0267: bool, b0268: bool, b0269: bool, b0270: bool, b0271: bool, b0272: bool, b0273: bool) : bool
{
  0 + (if b0000 then 0 else 109000) + (if b0001 then 0 else 109000) + (if b0002 then 0 else 109000) + (if b0003 then 0 else 109000) + (if b0005 then 0 else 109000) + (if b0007 then 0 else 109000) + (if b0008 then 0 else 109000) + (if b0009 then 0 else 109000) + (if b0010 then 0 else 109000) + (if b0011 then 0 else 109000) + (if b0012 then 0 else 109000) + (if b0014 then 0 else 109000) + (if b0016 then 0 else 109000) + (if b0017 then 0 else 109000) + (if b0018 then 0 else 109000) + (if b0019 then 0 else 109000) + (if b0020 then 0 else 109000) + (if b0022 then 0 else 109000) + (if b0023 then 0 else 109000) + (if b0026 then 0 else 109000) + (if b0028 then 0 else 109000) + (if b0030 then 0 else 109000) + (if b0031 then 0 else 109000) + (if b0032 then 0 else 109000) + (if b0033 then 0 else 109000) + (if b0034 then 0 else 109000) + (if b0035 then 0 else 109000) + (if b0036 then 0 else 109000) + (if b0037 then 0 else 109000) + (if b0039 then 0 else 109000) + (if b0040 then 0 else 109000) + (if b0041 then 0 else 109000) + (if b0042 then 0 else 109000) + (if b0045 then 0 else 109000) + (if b0047 then 0 else 109000) + (if b0048 then 0 else 109000) + (if b0049 then 0 else 109000) + (if b0050 then 0 else 109000) + (if b0051 then 0 else 109000) + (if b0052 then 0 else 109000) + (if b0054 then 0 else 109000) + (if b0055 then 0 else 109000) + (if b0057 then 0 else 109000) + (if b0058 then 0 else 109000) + (if b0059 then 0 else 109000) + (if b0060 then 0 else 109000) + (if b0061 then 0 else 109000) + (if b0062 then 0 else 109000) + (if b0063 then 0 else 109000) + (if b0064 then 0 else 109000) + (if b0065 then 0 else 109000) + (if b0066 then 0 else 109000) + (if b0067 then 0 else 109000) + (if b0068 then 0 else 109000) + (if b0069 then 0 else 109000) + (if b0072 then 0 else 109000) + (if b0073 then 0 else 109000) + (if b0074 then 0 else 109000) + (if b0075 then 0 else 109000) + (if b0076 then 0 else 109000) + (if b0077 then 0 else 109000) + (if b0078 then 0 else 109000) + (if b0079 then 0 else 109000) + (if b0080 then 0 else 109000) + (if b0081 then 0 else 109000) + (if b0082 then 0 else 109000) + (if b0083 then 0 else 109000) + (if b0084 then 0 else 109000) + (if b0085 then 0 else 109000) + (if b0086 then 0 else 109000) + (if b0087 then 0 else 109000) + (if b0091 then 0 else 109000) + (if b0092 then 0 else 109000) + (if b0095 then 0 else 109000) + (if b0097 then 0 else 109000) + (if b0098 then 0 else 109000) + (if b0099 then 0 else 109000) + (if b0100 then 0 else 109000) + (if b0101 then 0 else 109000) + (if b0102 then 0 else 109000) + (if b0103 then 0 else 109000) + (if b0104 then 0 else 109000) + (if b0105 then 0 else 109000) + (if b0149 then 0 else 109000) + (if b0151 then 0 else 109000) + (if b0152 then 0 else 109000) + (if b0153 then 0 else 109000) + (if b0154 then 0 else 109000) + (if b0155 then 0 else 109000) + (if b0156 then 0 else 109000) + (if b0157 then 0 else 109000) + (if b0158 then 0 else 109000) + (if b0159 then 0 else 109000) + (if b0201 then 0 else 109000) + (if b0203 then 0 else 109000) + (if b0204 then 0 else 109000) + (if b0205 then 0 else 109000) + (if b0206 then 0 else 109000) + (if b0207 then 0 else 109000) + (if b0208 then 0 else 109000) + (if b0209 then 0 else 109000) + (if b0210 then 0 else 109000) + (if b0211 then 0 else 109000) + (if b0212 then 0 else 109000) + (if b0213 then 0 else 109000) + (if b0215 then 0 else 109000) + (if b0216 then 0 else 109000) + (if b0242 then 0 else 109000) + (if b0244 then 0 else 109000) + (if b0245 then 0 else 109000) + (if b0246 then 0 else 109000) + (if b0247 then 0 else 109000) + (if b0248 then 0 else 109000) + (if b0249 then 0 else 109000) + (if b0250 then 0 else 109000) + (if b0251 then 0 else 109000) + (if b0252 then 0 else 109000) + (if b0253 then 0 else 109000) + (if b0254 then 0 else 109000) + (if b0255 then 0 else 109000) + (if b0256 then 0 else 109000) + (if b0257 then 0 else 109000) + (if b0258 then 0 else 109000) + (if b0259 then 0 else 109000) + (if b0260 then 0 else 109000) + (if b0261 then 0 else 109000) + (if b0262 then 0 else 109000) + (if b0263 then 0 else 109000) + (if b0264 then 0 else 109000) + (if b0265 then 0 else 109000) + (if b0266 then 0 else 109000) + (if b0267 then 0 else 109000) + (if b0268 then 0 else 109000) + (if b0269 then 0 else 109000) + (if b0270 then 0 else 109000) + (if b0271 then 0 else 109000) + (if b0272 then 0 else 109000) + (if b0273 then 0 else 109000) < 441
}
Prover Time taken = 7.539394
Added Horn clause: 50 && 43 && 51 => 52
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/datamining/covariance/kernel3.bpl.ice2.bpl
Total learner time was 00:00:00.1297800
Verifying $kernel3: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool, b0228: bool, b0229: bool, b0230: bool, b0231: bool, b0232: bool, b0233: bool, b0234: bool, b0235: bool, b0236: bool, b0237: bool, b0238: bool, b0239: bool, b0240: bool, b0241: bool, b0242: bool, b0243: bool, b0244: bool, b0245: bool, b0246: bool, b0247: bool, b0248: bool, b0249: bool, b0250: bool, b0251: bool, b0252: bool, b0253: bool, b0254: bool, b0255: bool, b0256: bool, b0257: bool, b0258: bool, b0259: bool, b0260: bool, b0261: bool, b0262: bool, b0263: bool, b0264: bool, b0265: bool, b0266: bool, b0267: bool, b0268: bool, b0269: bool, b0270: bool, b0271: bool, b0272: bool, b0273: bool) : bool
{
  0 + (if b0000 then 0 else 109000) + (if b0001 then 0 else 109000) + (if b0002 then 0 else 109000) + (if b0003 then 0 else 109000) + (if b0005 then 0 else 109000) + (if b0007 then 0 else 109000) + (if b0008 then 0 else 109000) + (if b0009 then 0 else 109000) + (if b0010 then 0 else 109000) + (if b0011 then 0 else 109000) + (if b0012 then 0 else 109000) + (if b0014 then 0 else 109000) + (if b0016 then 0 else 109000) + (if b0017 then 0 else 109000) + (if b0018 then 0 else 109000) + (if b0019 then 0 else 109000) + (if b0020 then 0 else 109000) + (if b0022 then 0 else 109000) + (if b0023 then 0 else 109000) + (if b0026 then 0 else 109000) + (if b0028 then 0 else 109000) + (if b0030 then 0 else 109000) + (if b0031 then 0 else 109000) + (if b0032 then 0 else 109000) + (if b0033 then 0 else 109000) + (if b0034 then 0 else 109000) + (if b0035 then 0 else 109000) + (if b0036 then 0 else 109000) + (if b0039 then 0 else 109000) + (if b0040 then 0 else 109000) + (if b0041 then 0 else 109000) + (if b0042 then 0 else 109000) + (if b0045 then 0 else 109000) + (if b0047 then 0 else 109000) + (if b0048 then 0 else 109000) + (if b0049 then 0 else 109000) + (if b0050 then 0 else 109000) + (if b0051 then 0 else 109000) + (if b0052 then 0 else 109000) + (if b0054 then 0 else 109000) + (if b0055 then 0 else 109000) + (if b0057 then 0 else 109000) + (if b0058 then 0 else 109000) + (if b0059 then 0 else 109000) + (if b0060 then 0 else 109000) + (if b0061 then 0 else 109000) + (if b0062 then 0 else 109000) + (if b0063 then 0 else 109000) + (if b0064 then 0 else 109000) + (if b0065 then 0 else 109000) + (if b0066 then 0 else 109000) + (if b0067 then 0 else 109000) + (if b0068 then 0 else 109000) + (if b0069 then 0 else 109000) + (if b0072 then 0 else 109000) + (if b0073 then 0 else 109000) + (if b0074 then 0 else 109000) + (if b0075 then 0 else 109000) + (if b0076 then 0 else 109000) + (if b0077 then 0 else 109000) + (if b0078 then 0 else 109000) + (if b0079 then 0 else 109000) + (if b0080 then 0 else 109000) + (if b0081 then 0 else 109000) + (if b0082 then 0 else 109000) + (if b0083 then 0 else 109000) + (if b0084 then 0 else 109000) + (if b0085 then 0 else 109000) + (if b0086 then 0 else 109000) + (if b0087 then 0 else 109000) + (if b0091 then 0 else 109000) + (if b0092 then 0 else 109000) + (if b0095 then 0 else 109000) + (if b0097 then 0 else 109000) + (if b0098 then 0 else 109000) + (if b0099 then 0 else 109000) + (if b0100 then 0 else 109000) + (if b0101 then 0 else 109000) + (if b0102 then 0 else 109000) + (if b0103 then 0 else 109000) + (if b0104 then 0 else 109000) + (if b0105 then 0 else 109000) + (if b0149 then 0 else 109000) + (if b0151 then 0 else 109000) + (if b0152 then 0 else 109000) + (if b0153 then 0 else 109000) + (if b0154 then 0 else 109000) + (if b0155 then 0 else 109000) + (if b0156 then 0 else 109000) + (if b0157 then 0 else 109000) + (if b0158 then 0 else 109000) + (if b0159 then 0 else 109000) + (if b0201 then 0 else 109000) + (if b0203 then 0 else 109000) + (if b0204 then 0 else 109000) + (if b0205 then 0 else 109000) + (if b0206 then 0 else 109000) + (if b0207 then 0 else 109000) + (if b0208 then 0 else 109000) + (if b0209 then 0 else 109000) + (if b0210 then 0 else 109000) + (if b0211 then 0 else 109000) + (if b0212 then 0 else 109000) + (if b0213 then 0 else 109000) + (if b0215 then 0 else 109000) + (if b0216 then 0 else 109000) + (if b0242 then 0 else 109000) + (if b0244 then 0 else 109000) + (if b0245 then 0 else 109000) + (if b0246 then 0 else 109000) + (if b0247 then 0 else 109000) + (if b0248 then 0 else 109000) + (if b0249 then 0 else 109000) + (if b0250 then 0 else 109000) + (if b0251 then 0 else 109000) + (if b0252 then 0 else 109000) + (if b0253 then 0 else 109000) + (if b0254 then 0 else 109000) + (if b0255 then 0 else 109000) + (if b0256 then 0 else 109000) + (if b0257 then 0 else 109000) + (if b0258 then 0 else 109000) + (if b0259 then 0 else 109000) + (if b0260 then 0 else 109000) + (if b0261 then 0 else 109000) + (if b0262 then 0 else 109000) + (if b0263 then 0 else 109000) + (if b0264 then 0 else 109000) + (if b0265 then 0 else 109000) + (if b0266 then 0 else 109000) + (if b0267 then 0 else 109000) + (if b0268 then 0 else 109000) + (if b0269 then 0 else 109000) + (if b0270 then 0 else 109000) + (if b0271 then 0 else 109000) + (if b0272 then 0 else 109000) + (if b0273 then 0 else 109000) < 441
}
Prover Time taken = 6.58435
Added Horn clause: 50 && 43 && 51 && 38 && 53 && 0 && 0 => 54
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/datamining/covariance/kernel3.bpl.ice2.bpl
Total learner time was 00:00:00.1263840
Verifying $kernel3: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool, b0228: bool, b0229: bool, b0230: bool, b0231: bool, b0232: bool, b0233: bool, b0234: bool, b0235: bool, b0236: bool, b0237: bool, b0238: bool, b0239: bool, b0240: bool, b0241: bool, b0242: bool, b0243: bool, b0244: bool, b0245: bool, b0246: bool, b0247: bool, b0248: bool, b0249: bool, b0250: bool, b0251: bool, b0252: bool, b0253: bool, b0254: bool, b0255: bool, b0256: bool, b0257: bool, b0258: bool, b0259: bool, b0260: bool, b0261: bool, b0262: bool, b0263: bool, b0264: bool, b0265: bool, b0266: bool, b0267: bool, b0268: bool, b0269: bool, b0270: bool, b0271: bool, b0272: bool, b0273: bool) : bool
{
  0 + (if b0000 then 0 else 109000) + (if b0001 then 0 else 109000) + (if b0002 then 0 else 109000) + (if b0003 then 0 else 109000) + (if b0005 then 0 else 109000) + (if b0007 then 0 else 109000) + (if b0008 then 0 else 109000) + (if b0009 then 0 else 109000) + (if b0010 then 0 else 109000) + (if b0011 then 0 else 109000) + (if b0012 then 0 else 109000) + (if b0014 then 0 else 109000) + (if b0016 then 0 else 109000) + (if b0017 then 0 else 109000) + (if b0018 then 0 else 109000) + (if b0019 then 0 else 109000) + (if b0020 then 0 else 109000) + (if b0022 then 0 else 109000) + (if b0023 then 0 else 109000) + (if b0026 then 0 else 109000) + (if b0028 then 0 else 109000) + (if b0030 then 0 else 109000) + (if b0031 then 0 else 109000) + (if b0032 then 0 else 109000) + (if b0033 then 0 else 109000) + (if b0034 then 0 else 109000) + (if b0035 then 0 else 109000) + (if b0036 then 0 else 109000) + (if b0039 then 0 else 109000) + (if b0040 then 0 else 109000) + (if b0041 then 0 else 109000) + (if b0042 then 0 else 109000) + (if b0045 then 0 else 109000) + (if b0047 then 0 else 109000) + (if b0048 then 0 else 109000) + (if b0049 then 0 else 109000) + (if b0050 then 0 else 109000) + (if b0051 then 0 else 109000) + (if b0052 then 0 else 109000) + (if b0054 then 0 else 109000) + (if b0055 then 0 else 109000) + (if b0057 then 0 else 109000) + (if b0058 then 0 else 109000) + (if b0059 then 0 else 109000) + (if b0060 then 0 else 109000) + (if b0061 then 0 else 109000) + (if b0062 then 0 else 109000) + (if b0063 then 0 else 109000) + (if b0064 then 0 else 109000) + (if b0065 then 0 else 109000) + (if b0066 then 0 else 109000) + (if b0067 then 0 else 109000) + (if b0068 then 0 else 109000) + (if b0072 then 0 else 109000) + (if b0073 then 0 else 109000) + (if b0074 then 0 else 109000) + (if b0075 then 0 else 109000) + (if b0076 then 0 else 109000) + (if b0077 then 0 else 109000) + (if b0078 then 0 else 109000) + (if b0079 then 0 else 109000) + (if b0080 then 0 else 109000) + (if b0081 then 0 else 109000) + (if b0082 then 0 else 109000) + (if b0083 then 0 else 109000) + (if b0084 then 0 else 109000) + (if b0085 then 0 else 109000) + (if b0086 then 0 else 109000) + (if b0087 then 0 else 109000) + (if b0091 then 0 else 109000) + (if b0092 then 0 else 109000) + (if b0095 then 0 else 109000) + (if b0097 then 0 else 109000) + (if b0098 then 0 else 109000) + (if b0099 then 0 else 109000) + (if b0100 then 0 else 109000) + (if b0101 then 0 else 109000) + (if b0102 then 0 else 109000) + (if b0103 then 0 else 109000) + (if b0104 then 0 else 109000) + (if b0105 then 0 else 109000) + (if b0149 then 0 else 109000) + (if b0151 then 0 else 109000) + (if b0152 then 0 else 109000) + (if b0153 then 0 else 109000) + (if b0154 then 0 else 109000) + (if b0155 then 0 else 109000) + (if b0156 then 0 else 109000) + (if b0157 then 0 else 109000) + (if b0158 then 0 else 109000) + (if b0159 then 0 else 109000) + (if b0201 then 0 else 109000) + (if b0203 then 0 else 109000) + (if b0204 then 0 else 109000) + (if b0205 then 0 else 109000) + (if b0206 then 0 else 109000) + (if b0207 then 0 else 109000) + (if b0208 then 0 else 109000) + (if b0209 then 0 else 109000) + (if b0210 then 0 else 109000) + (if b0211 then 0 else 109000) + (if b0212 then 0 else 109000) + (if b0213 then 0 else 109000) + (if b0215 then 0 else 109000) + (if b0216 then 0 else 109000) + (if b0242 then 0 else 109000) + (if b0244 then 0 else 109000) + (if b0245 then 0 else 109000) + (if b0246 then 0 else 109000) + (if b0247 then 0 else 109000) + (if b0248 then 0 else 109000) + (if b0249 then 0 else 109000) + (if b0250 then 0 else 109000) + (if b0251 then 0 else 109000) + (if b0252 then 0 else 109000) + (if b0253 then 0 else 109000) + (if b0254 then 0 else 109000) + (if b0255 then 0 else 109000) + (if b0256 then 0 else 109000) + (if b0257 then 0 else 109000) + (if b0258 then 0 else 109000) + (if b0259 then 0 else 109000) + (if b0260 then 0 else 109000) + (if b0261 then 0 else 109000) + (if b0262 then 0 else 109000) + (if b0263 then 0 else 109000) + (if b0264 then 0 else 109000) + (if b0265 then 0 else 109000) + (if b0266 then 0 else 109000) + (if b0267 then 0 else 109000) + (if b0268 then 0 else 109000) + (if b0269 then 0 else 109000) + (if b0270 then 0 else 109000) + (if b0271 then 0 else 109000) + (if b0272 then 0 else 109000) + (if b0273 then 0 else 109000) < 441
}
Prover Time taken = 11.891025
Added Horn clause: 50 && 43 && 51 && 38 && 52 && 0 && 0 && 0 && 55 => 56
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/datamining/covariance/kernel3.bpl.ice2.bpl
Total learner time was 00:00:00.1266110
Verifying $kernel3: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool, b0228: bool, b0229: bool, b0230: bool, b0231: bool, b0232: bool, b0233: bool, b0234: bool, b0235: bool, b0236: bool, b0237: bool, b0238: bool, b0239: bool, b0240: bool, b0241: bool, b0242: bool, b0243: bool, b0244: bool, b0245: bool, b0246: bool, b0247: bool, b0248: bool, b0249: bool, b0250: bool, b0251: bool, b0252: bool, b0253: bool, b0254: bool, b0255: bool, b0256: bool, b0257: bool, b0258: bool, b0259: bool, b0260: bool, b0261: bool, b0262: bool, b0263: bool, b0264: bool, b0265: bool, b0266: bool, b0267: bool, b0268: bool, b0269: bool, b0270: bool, b0271: bool, b0272: bool, b0273: bool) : bool
{
  0 + (if b0000 then 0 else 109000) + (if b0001 then 0 else 109000) + (if b0002 then 0 else 109000) + (if b0003 then 0 else 109000) + (if b0005 then 0 else 109000) + (if b0007 then 0 else 109000) + (if b0008 then 0 else 109000) + (if b0009 then 0 else 109000) + (if b0010 then 0 else 109000) + (if b0011 then 0 else 109000) + (if b0012 then 0 else 109000) + (if b0014 then 0 else 109000) + (if b0016 then 0 else 109000) + (if b0017 then 0 else 109000) + (if b0018 then 0 else 109000) + (if b0019 then 0 else 109000) + (if b0020 then 0 else 109000) + (if b0022 then 0 else 109000) + (if b0023 then 0 else 109000) + (if b0026 then 0 else 109000) + (if b0028 then 0 else 109000) + (if b0030 then 0 else 109000) + (if b0031 then 0 else 109000) + (if b0032 then 0 else 109000) + (if b0033 then 0 else 109000) + (if b0034 then 0 else 109000) + (if b0035 then 0 else 109000) + (if b0036 then 0 else 109000) + (if b0039 then 0 else 109000) + (if b0040 then 0 else 109000) + (if b0041 then 0 else 109000) + (if b0042 then 0 else 109000) + (if b0045 then 0 else 109000) + (if b0047 then 0 else 109000) + (if b0048 then 0 else 109000) + (if b0049 then 0 else 109000) + (if b0050 then 0 else 109000) + (if b0051 then 0 else 109000) + (if b0052 then 0 else 109000) + (if b0054 then 0 else 109000) + (if b0055 then 0 else 109000) + (if b0057 then 0 else 109000) + (if b0058 then 0 else 109000) + (if b0059 then 0 else 109000) + (if b0060 then 0 else 109000) + (if b0061 then 0 else 109000) + (if b0062 then 0 else 109000) + (if b0063 then 0 else 109000) + (if b0064 then 0 else 109000) + (if b0065 then 0 else 109000) + (if b0066 then 0 else 109000) + (if b0067 then 0 else 109000) + (if b0068 then 0 else 109000) + (if b0072 then 0 else 109000) + (if b0073 then 0 else 109000) + (if b0074 then 0 else 109000) + (if b0075 then 0 else 109000) + (if b0076 then 0 else 109000) + (if b0077 then 0 else 109000) + (if b0078 then 0 else 109000) + (if b0079 then 0 else 109000) + (if b0080 then 0 else 109000) + (if b0081 then 0 else 109000) + (if b0082 then 0 else 109000) + (if b0083 then 0 else 109000) + (if b0084 then 0 else 109000) + (if b0085 then 0 else 109000) + (if b0086 then 0 else 109000) + (if b0091 then 0 else 109000) + (if b0092 then 0 else 109000) + (if b0095 then 0 else 109000) + (if b0097 then 0 else 109000) + (if b0098 then 0 else 109000) + (if b0099 then 0 else 109000) + (if b0100 then 0 else 109000) + (if b0101 then 0 else 109000) + (if b0102 then 0 else 109000) + (if b0103 then 0 else 109000) + (if b0104 then 0 else 109000) + (if b0105 then 0 else 109000) + (if b0149 then 0 else 109000) + (if b0151 then 0 else 109000) + (if b0152 then 0 else 109000) + (if b0153 then 0 else 109000) + (if b0154 then 0 else 109000) + (if b0155 then 0 else 109000) + (if b0156 then 0 else 109000) + (if b0157 then 0 else 109000) + (if b0158 then 0 else 109000) + (if b0159 then 0 else 109000) + (if b0201 then 0 else 109000) + (if b0203 then 0 else 109000) + (if b0204 then 0 else 109000) + (if b0205 then 0 else 109000) + (if b0206 then 0 else 109000) + (if b0207 then 0 else 109000) + (if b0208 then 0 else 109000) + (if b0209 then 0 else 109000) + (if b0210 then 0 else 109000) + (if b0211 then 0 else 109000) + (if b0212 then 0 else 109000) + (if b0213 then 0 else 109000) + (if b0215 then 0 else 109000) + (if b0216 then 0 else 109000) + (if b0242 then 0 else 109000) + (if b0244 then 0 else 109000) + (if b0245 then 0 else 109000) + (if b0246 then 0 else 109000) + (if b0247 then 0 else 109000) + (if b0248 then 0 else 109000) + (if b0249 then 0 else 109000) + (if b0250 then 0 else 109000) + (if b0251 then 0 else 109000) + (if b0252 then 0 else 109000) + (if b0253 then 0 else 109000) + (if b0254 then 0 else 109000) + (if b0255 then 0 else 109000) + (if b0256 then 0 else 109000) + (if b0257 then 0 else 109000) + (if b0258 then 0 else 109000) + (if b0259 then 0 else 109000) + (if b0260 then 0 else 109000) + (if b0261 then 0 else 109000) + (if b0262 then 0 else 109000) + (if b0263 then 0 else 109000) + (if b0264 then 0 else 109000) + (if b0265 then 0 else 109000) + (if b0266 then 0 else 109000) + (if b0267 then 0 else 109000) + (if b0268 then 0 else 109000) + (if b0269 then 0 else 109000) + (if b0270 then 0 else 109000) + (if b0271 then 0 else 109000) + (if b0272 then 0 else 109000) + (if b0273 then 0 else 109000) < 441
}
Prover Time taken = 5.876668
Added Horn clause: 50 && 43 && 51 && 38 && 52 && 0 && 0 && 0 && 57 && 0 && 58 => 59
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/datamining/covariance/kernel3.bpl.ice2.bpl
Total learner time was 00:00:00.1282680
Verifying $kernel3: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool, b0228: bool, b0229: bool, b0230: bool, b0231: bool, b0232: bool, b0233: bool, b0234: bool, b0235: bool, b0236: bool, b0237: bool, b0238: bool, b0239: bool, b0240: bool, b0241: bool, b0242: bool, b0243: bool, b0244: bool, b0245: bool, b0246: bool, b0247: bool, b0248: bool, b0249: bool, b0250: bool, b0251: bool, b0252: bool, b0253: bool, b0254: bool, b0255: bool, b0256: bool, b0257: bool, b0258: bool, b0259: bool, b0260: bool, b0261: bool, b0262: bool, b0263: bool, b0264: bool, b0265: bool, b0266: bool, b0267: bool, b0268: bool, b0269: bool, b0270: bool, b0271: bool, b0272: bool, b0273: bool) : bool
{
  0 + (if b0000 then 0 else 109000) + (if b0001 then 0 else 109000) + (if b0002 then 0 else 109000) + (if b0003 then 0 else 109000) + (if b0005 then 0 else 109000) + (if b0007 then 0 else 109000) + (if b0008 then 0 else 109000) + (if b0009 then 0 else 109000) + (if b0010 then 0 else 109000) + (if b0011 then 0 else 109000) + (if b0012 then 0 else 109000) + (if b0014 then 0 else 109000) + (if b0016 then 0 else 109000) + (if b0017 then 0 else 109000) + (if b0018 then 0 else 109000) + (if b0019 then 0 else 109000) + (if b0020 then 0 else 109000) + (if b0022 then 0 else 109000) + (if b0023 then 0 else 109000) + (if b0026 then 0 else 109000) + (if b0028 then 0 else 109000) + (if b0030 then 0 else 109000) + (if b0031 then 0 else 109000) + (if b0032 then 0 else 109000) + (if b0033 then 0 else 109000) + (if b0034 then 0 else 109000) + (if b0035 then 0 else 109000) + (if b0036 then 0 else 109000) + (if b0039 then 0 else 109000) + (if b0040 then 0 else 109000) + (if b0041 then 0 else 109000) + (if b0042 then 0 else 109000) + (if b0045 then 0 else 109000) + (if b0047 then 0 else 109000) + (if b0048 then 0 else 109000) + (if b0049 then 0 else 109000) + (if b0050 then 0 else 109000) + (if b0051 then 0 else 109000) + (if b0054 then 0 else 109000) + (if b0055 then 0 else 109000) + (if b0057 then 0 else 109000) + (if b0058 then 0 else 109000) + (if b0059 then 0 else 109000) + (if b0060 then 0 else 109000) + (if b0061 then 0 else 109000) + (if b0062 then 0 else 109000) + (if b0063 then 0 else 109000) + (if b0064 then 0 else 109000) + (if b0065 then 0 else 109000) + (if b0066 then 0 else 109000) + (if b0067 then 0 else 109000) + (if b0068 then 0 else 109000) + (if b0072 then 0 else 109000) + (if b0073 then 0 else 109000) + (if b0074 then 0 else 109000) + (if b0075 then 0 else 109000) + (if b0076 then 0 else 109000) + (if b0077 then 0 else 109000) + (if b0078 then 0 else 109000) + (if b0079 then 0 else 109000) + (if b0080 then 0 else 109000) + (if b0081 then 0 else 109000) + (if b0082 then 0 else 109000) + (if b0083 then 0 else 109000) + (if b0084 then 0 else 109000) + (if b0085 then 0 else 109000) + (if b0086 then 0 else 109000) + (if b0091 then 0 else 109000) + (if b0092 then 0 else 109000) + (if b0095 then 0 else 109000) + (if b0097 then 0 else 109000) + (if b0098 then 0 else 109000) + (if b0099 then 0 else 109000) + (if b0100 then 0 else 109000) + (if b0101 then 0 else 109000) + (if b0102 then 0 else 109000) + (if b0103 then 0 else 109000) + (if b0104 then 0 else 109000) + (if b0105 then 0 else 109000) + (if b0149 then 0 else 109000) + (if b0151 then 0 else 109000) + (if b0152 then 0 else 109000) + (if b0153 then 0 else 109000) + (if b0154 then 0 else 109000) + (if b0155 then 0 else 109000) + (if b0156 then 0 else 109000) + (if b0157 then 0 else 109000) + (if b0158 then 0 else 109000) + (if b0159 then 0 else 109000) + (if b0201 then 0 else 109000) + (if b0203 then 0 else 109000) + (if b0204 then 0 else 109000) + (if b0205 then 0 else 109000) + (if b0206 then 0 else 109000) + (if b0207 then 0 else 109000) + (if b0208 then 0 else 109000) + (if b0209 then 0 else 109000) + (if b0210 then 0 else 109000) + (if b0211 then 0 else 109000) + (if b0212 then 0 else 109000) + (if b0213 then 0 else 109000) + (if b0215 then 0 else 109000) + (if b0216 then 0 else 109000) + (if b0242 then 0 else 109000) + (if b0244 then 0 else 109000) + (if b0245 then 0 else 109000) + (if b0246 then 0 else 109000) + (if b0247 then 0 else 109000) + (if b0248 then 0 else 109000) + (if b0249 then 0 else 109000) + (if b0250 then 0 else 109000) + (if b0251 then 0 else 109000) + (if b0252 then 0 else 109000) + (if b0253 then 0 else 109000) + (if b0254 then 0 else 109000) + (if b0255 then 0 else 109000) + (if b0256 then 0 else 109000) + (if b0257 then 0 else 109000) + (if b0258 then 0 else 109000) + (if b0259 then 0 else 109000) + (if b0260 then 0 else 109000) + (if b0261 then 0 else 109000) + (if b0262 then 0 else 109000) + (if b0263 then 0 else 109000) + (if b0264 then 0 else 109000) + (if b0265 then 0 else 109000) + (if b0266 then 0 else 109000) + (if b0267 then 0 else 109000) + (if b0268 then 0 else 109000) + (if b0269 then 0 else 109000) + (if b0270 then 0 else 109000) + (if b0271 then 0 else 109000) + (if b0272 then 0 else 109000) + (if b0273 then 0 else 109000) < 441
}
Prover Time taken = 22.959722
Added Horn clause: 11 && 60 && 0 && 14 && 34 && 0 && 0 && 0 && 0 && 0 && 0 => 61
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/datamining/covariance/kernel3.bpl.ice2.bpl
Total learner time was 00:00:00.1276160
Verifying $kernel3: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool, b0228: bool, b0229: bool, b0230: bool, b0231: bool, b0232: bool, b0233: bool, b0234: bool, b0235: bool, b0236: bool, b0237: bool, b0238: bool, b0239: bool, b0240: bool, b0241: bool, b0242: bool, b0243: bool, b0244: bool, b0245: bool, b0246: bool, b0247: bool, b0248: bool, b0249: bool, b0250: bool, b0251: bool, b0252: bool, b0253: bool, b0254: bool, b0255: bool, b0256: bool, b0257: bool, b0258: bool, b0259: bool, b0260: bool, b0261: bool, b0262: bool, b0263: bool, b0264: bool, b0265: bool, b0266: bool, b0267: bool, b0268: bool, b0269: bool, b0270: bool, b0271: bool, b0272: bool, b0273: bool) : bool
{
  0 + (if b0000 then 0 else 109000) + (if b0001 then 0 else 109000) + (if b0002 then 0 else 109000) + (if b0003 then 0 else 109000) + (if b0005 then 0 else 109000) + (if b0007 then 0 else 109000) + (if b0008 then 0 else 109000) + (if b0009 then 0 else 109000) + (if b0010 then 0 else 109000) + (if b0011 then 0 else 109000) + (if b0012 then 0 else 109000) + (if b0014 then 0 else 109000) + (if b0016 then 0 else 109000) + (if b0017 then 0 else 109000) + (if b0018 then 0 else 109000) + (if b0019 then 0 else 109000) + (if b0020 then 0 else 109000) + (if b0022 then 0 else 109000) + (if b0023 then 0 else 109000) + (if b0026 then 0 else 109000) + (if b0028 then 0 else 109000) + (if b0030 then 0 else 109000) + (if b0031 then 0 else 109000) + (if b0032 then 0 else 109000) + (if b0033 then 0 else 109000) + (if b0034 then 0 else 109000) + (if b0035 then 0 else 109000) + (if b0036 then 0 else 109000) + (if b0039 then 0 else 109000) + (if b0040 then 0 else 109000) + (if b0041 then 0 else 109000) + (if b0042 then 0 else 109000) + (if b0045 then 0 else 109000) + (if b0047 then 0 else 109000) + (if b0048 then 0 else 109000) + (if b0049 then 0 else 109000) + (if b0050 then 0 else 109000) + (if b0051 then 0 else 109000) + (if b0054 then 0 else 109000) + (if b0055 then 0 else 109000) + (if b0058 then 0 else 109000) + (if b0060 then 0 else 109000) + (if b0061 then 0 else 109000) + (if b0062 then 0 else 109000) + (if b0063 then 0 else 109000) + (if b0064 then 0 else 109000) + (if b0065 then 0 else 109000) + (if b0066 then 0 else 109000) + (if b0067 then 0 else 109000) + (if b0068 then 0 else 109000) + (if b0072 then 0 else 109000) + (if b0073 then 0 else 109000) + (if b0074 then 0 else 109000) + (if b0075 then 0 else 109000) + (if b0076 then 0 else 109000) + (if b0077 then 0 else 109000) + (if b0078 then 0 else 109000) + (if b0079 then 0 else 109000) + (if b0080 then 0 else 109000) + (if b0081 then 0 else 109000) + (if b0082 then 0 else 109000) + (if b0083 then 0 else 109000) + (if b0084 then 0 else 109000) + (if b0085 then 0 else 109000) + (if b0086 then 0 else 109000) + (if b0091 then 0 else 109000) + (if b0092 then 0 else 109000) + (if b0095 then 0 else 109000) + (if b0097 then 0 else 109000) + (if b0098 then 0 else 109000) + (if b0099 then 0 else 109000) + (if b0100 then 0 else 109000) + (if b0101 then 0 else 109000) + (if b0102 then 0 else 109000) + (if b0103 then 0 else 109000) + (if b0104 then 0 else 109000) + (if b0105 then 0 else 109000) + (if b0149 then 0 else 109000) + (if b0151 then 0 else 109000) + (if b0152 then 0 else 109000) + (if b0153 then 0 else 109000) + (if b0154 then 0 else 109000) + (if b0155 then 0 else 109000) + (if b0156 then 0 else 109000) + (if b0157 then 0 else 109000) + (if b0158 then 0 else 109000) + (if b0159 then 0 else 109000) + (if b0201 then 0 else 109000) + (if b0203 then 0 else 109000) + (if b0204 then 0 else 109000) + (if b0205 then 0 else 109000) + (if b0206 then 0 else 109000) + (if b0207 then 0 else 109000) + (if b0208 then 0 else 109000) + (if b0209 then 0 else 109000) + (if b0210 then 0 else 109000) + (if b0211 then 0 else 109000) + (if b0212 then 0 else 109000) + (if b0213 then 0 else 109000) + (if b0215 then 0 else 109000) + (if b0216 then 0 else 109000) + (if b0242 then 0 else 109000) + (if b0244 then 0 else 109000) + (if b0245 then 0 else 109000) + (if b0246 then 0 else 109000) + (if b0247 then 0 else 109000) + (if b0248 then 0 else 109000) + (if b0249 then 0 else 109000) + (if b0250 then 0 else 109000) + (if b0251 then 0 else 109000) + (if b0252 then 0 else 109000) + (if b0253 then 0 else 109000) + (if b0254 then 0 else 109000) + (if b0255 then 0 else 109000) + (if b0256 then 0 else 109000) + (if b0257 then 0 else 109000) + (if b0258 then 0 else 109000) + (if b0259 then 0 else 109000) + (if b0260 then 0 else 109000) + (if b0261 then 0 else 109000) + (if b0262 then 0 else 109000) + (if b0263 then 0 else 109000) + (if b0264 then 0 else 109000) + (if b0265 then 0 else 109000) + (if b0266 then 0 else 109000) + (if b0267 then 0 else 109000) + (if b0268 then 0 else 109000) + (if b0269 then 0 else 109000) + (if b0270 then 0 else 109000) + (if b0271 then 0 else 109000) + (if b0272 then 0 else 109000) + (if b0273 then 0 else 109000) < 441
}
Prover Time taken = 7.789022
Added Horn clause: 9 && 62 && 0 && 14 && 34 && 0 && 0 && 0 && 0 && 0 && 0 => 63
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/datamining/covariance/kernel3.bpl.ice2.bpl
Total learner time was 00:00:00.1277420
Verifying $kernel3: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool, b0228: bool, b0229: bool, b0230: bool, b0231: bool, b0232: bool, b0233: bool, b0234: bool, b0235: bool, b0236: bool, b0237: bool, b0238: bool, b0239: bool, b0240: bool, b0241: bool, b0242: bool, b0243: bool, b0244: bool, b0245: bool, b0246: bool, b0247: bool, b0248: bool, b0249: bool, b0250: bool, b0251: bool, b0252: bool, b0253: bool, b0254: bool, b0255: bool, b0256: bool, b0257: bool, b0258: bool, b0259: bool, b0260: bool, b0261: bool, b0262: bool, b0263: bool, b0264: bool, b0265: bool, b0266: bool, b0267: bool, b0268: bool, b0269: bool, b0270: bool, b0271: bool, b0272: bool, b0273: bool) : bool
{
  0 + (if b0000 then 0 else 109000) + (if b0001 then 0 else 109000) + (if b0002 then 0 else 109000) + (if b0003 then 0 else 109000) + (if b0005 then 0 else 109000) + (if b0007 then 0 else 109000) + (if b0008 then 0 else 109000) + (if b0009 then 0 else 109000) + (if b0010 then 0 else 109000) + (if b0011 then 0 else 109000) + (if b0012 then 0 else 109000) + (if b0014 then 0 else 109000) + (if b0016 then 0 else 109000) + (if b0017 then 0 else 109000) + (if b0018 then 0 else 109000) + (if b0019 then 0 else 109000) + (if b0020 then 0 else 109000) + (if b0022 then 0 else 109000) + (if b0023 then 0 else 109000) + (if b0026 then 0 else 109000) + (if b0028 then 0 else 109000) + (if b0031 then 0 else 109000) + (if b0032 then 0 else 109000) + (if b0033 then 0 else 109000) + (if b0034 then 0 else 109000) + (if b0035 then 0 else 109000) + (if b0036 then 0 else 109000) + (if b0039 then 0 else 109000) + (if b0040 then 0 else 109000) + (if b0041 then 0 else 109000) + (if b0042 then 0 else 109000) + (if b0045 then 0 else 109000) + (if b0047 then 0 else 109000) + (if b0048 then 0 else 109000) + (if b0049 then 0 else 109000) + (if b0050 then 0 else 109000) + (if b0051 then 0 else 109000) + (if b0054 then 0 else 109000) + (if b0055 then 0 else 109000) + (if b0058 then 0 else 109000) + (if b0060 then 0 else 109000) + (if b0061 then 0 else 109000) + (if b0062 then 0 else 109000) + (if b0063 then 0 else 109000) + (if b0064 then 0 else 109000) + (if b0065 then 0 else 109000) + (if b0066 then 0 else 109000) + (if b0067 then 0 else 109000) + (if b0068 then 0 else 109000) + (if b0072 then 0 else 109000) + (if b0073 then 0 else 109000) + (if b0074 then 0 else 109000) + (if b0075 then 0 else 109000) + (if b0076 then 0 else 109000) + (if b0077 then 0 else 109000) + (if b0078 then 0 else 109000) + (if b0079 then 0 else 109000) + (if b0080 then 0 else 109000) + (if b0081 then 0 else 109000) + (if b0082 then 0 else 109000) + (if b0083 then 0 else 109000) + (if b0084 then 0 else 109000) + (if b0085 then 0 else 109000) + (if b0086 then 0 else 109000) + (if b0091 then 0 else 109000) + (if b0092 then 0 else 109000) + (if b0095 then 0 else 109000) + (if b0097 then 0 else 109000) + (if b0098 then 0 else 109000) + (if b0099 then 0 else 109000) + (if b0100 then 0 else 109000) + (if b0101 then 0 else 109000) + (if b0102 then 0 else 109000) + (if b0103 then 0 else 109000) + (if b0104 then 0 else 109000) + (if b0105 then 0 else 109000) + (if b0149 then 0 else 109000) + (if b0151 then 0 else 109000) + (if b0152 then 0 else 109000) + (if b0153 then 0 else 109000) + (if b0154 then 0 else 109000) + (if b0155 then 0 else 109000) + (if b0156 then 0 else 109000) + (if b0157 then 0 else 109000) + (if b0158 then 0 else 109000) + (if b0159 then 0 else 109000) + (if b0201 then 0 else 109000) + (if b0203 then 0 else 109000) + (if b0204 then 0 else 109000) + (if b0205 then 0 else 109000) + (if b0206 then 0 else 109000) + (if b0207 then 0 else 109000) + (if b0208 then 0 else 109000) + (if b0209 then 0 else 109000) + (if b0210 then 0 else 109000) + (if b0211 then 0 else 109000) + (if b0212 then 0 else 109000) + (if b0213 then 0 else 109000) + (if b0215 then 0 else 109000) + (if b0216 then 0 else 109000) + (if b0242 then 0 else 109000) + (if b0244 then 0 else 109000) + (if b0245 then 0 else 109000) + (if b0246 then 0 else 109000) + (if b0247 then 0 else 109000) + (if b0248 then 0 else 109000) + (if b0249 then 0 else 109000) + (if b0250 then 0 else 109000) + (if b0251 then 0 else 109000) + (if b0252 then 0 else 109000) + (if b0253 then 0 else 109000) + (if b0254 then 0 else 109000) + (if b0255 then 0 else 109000) + (if b0256 then 0 else 109000) + (if b0257 then 0 else 109000) + (if b0258 then 0 else 109000) + (if b0259 then 0 else 109000) + (if b0260 then 0 else 109000) + (if b0261 then 0 else 109000) + (if b0262 then 0 else 109000) + (if b0263 then 0 else 109000) + (if b0264 then 0 else 109000) + (if b0265 then 0 else 109000) + (if b0266 then 0 else 109000) + (if b0267 then 0 else 109000) + (if b0268 then 0 else 109000) + (if b0269 then 0 else 109000) + (if b0270 then 0 else 109000) + (if b0271 then 0 else 109000) + (if b0272 then 0 else 109000) + (if b0273 then 0 else 109000) < 441
}
Prover Time taken = 32.748744
Added Horn clause: 9 && 64 && 0 && 14 && 34 && 0 && 0 && 0 && 65 => 66
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/datamining/covariance/kernel3.bpl.ice2.bpl
Total learner time was 00:00:00.1303630
Verifying $kernel3: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool, b0228: bool, b0229: bool, b0230: bool, b0231: bool, b0232: bool, b0233: bool, b0234: bool, b0235: bool, b0236: bool, b0237: bool, b0238: bool, b0239: bool, b0240: bool, b0241: bool, b0242: bool, b0243: bool, b0244: bool, b0245: bool, b0246: bool, b0247: bool, b0248: bool, b0249: bool, b0250: bool, b0251: bool, b0252: bool, b0253: bool, b0254: bool, b0255: bool, b0256: bool, b0257: bool, b0258: bool, b0259: bool, b0260: bool, b0261: bool, b0262: bool, b0263: bool, b0264: bool, b0265: bool, b0266: bool, b0267: bool, b0268: bool, b0269: bool, b0270: bool, b0271: bool, b0272: bool, b0273: bool) : bool
{
  0 + (if b0000 then 0 else 109000) + (if b0001 then 0 else 109000) + (if b0002 then 0 else 109000) + (if b0003 then 0 else 109000) + (if b0005 then 0 else 109000) + (if b0007 then 0 else 109000) + (if b0008 then 0 else 109000) + (if b0009 then 0 else 109000) + (if b0010 then 0 else 109000) + (if b0011 then 0 else 109000) + (if b0012 then 0 else 109000) + (if b0014 then 0 else 109000) + (if b0016 then 0 else 109000) + (if b0017 then 0 else 109000) + (if b0018 then 0 else 109000) + (if b0019 then 0 else 109000) + (if b0020 then 0 else 109000) + (if b0022 then 0 else 109000) + (if b0023 then 0 else 109000) + (if b0026 then 0 else 109000) + (if b0028 then 0 else 109000) + (if b0031 then 0 else 109000) + (if b0032 then 0 else 109000) + (if b0033 then 0 else 109000) + (if b0034 then 0 else 109000) + (if b0035 then 0 else 109000) + (if b0036 then 0 else 109000) + (if b0039 then 0 else 109000) + (if b0040 then 0 else 109000) + (if b0041 then 0 else 109000) + (if b0042 then 0 else 109000) + (if b0045 then 0 else 109000) + (if b0047 then 0 else 109000) + (if b0048 then 0 else 109000) + (if b0049 then 0 else 109000) + (if b0050 then 0 else 109000) + (if b0051 then 0 else 109000) + (if b0054 then 0 else 109000) + (if b0055 then 0 else 109000) + (if b0058 then 0 else 109000) + (if b0060 then 0 else 109000) + (if b0061 then 0 else 109000) + (if b0062 then 0 else 109000) + (if b0063 then 0 else 109000) + (if b0064 then 0 else 109000) + (if b0065 then 0 else 109000) + (if b0066 then 0 else 109000) + (if b0067 then 0 else 109000) + (if b0068 then 0 else 109000) + (if b0072 then 0 else 109000) + (if b0073 then 0 else 109000) + (if b0074 then 0 else 109000) + (if b0075 then 0 else 109000) + (if b0076 then 0 else 109000) + (if b0077 then 0 else 109000) + (if b0078 then 0 else 109000) + (if b0079 then 0 else 109000) + (if b0080 then 0 else 109000) + (if b0081 then 0 else 109000) + (if b0082 then 0 else 109000) + (if b0083 then 0 else 109000) + (if b0084 then 0 else 109000) + (if b0085 then 0 else 109000) + (if b0091 then 0 else 109000) + (if b0092 then 0 else 109000) + (if b0095 then 0 else 109000) + (if b0097 then 0 else 109000) + (if b0098 then 0 else 109000) + (if b0099 then 0 else 109000) + (if b0100 then 0 else 109000) + (if b0101 then 0 else 109000) + (if b0102 then 0 else 109000) + (if b0103 then 0 else 109000) + (if b0104 then 0 else 109000) + (if b0105 then 0 else 109000) + (if b0149 then 0 else 109000) + (if b0151 then 0 else 109000) + (if b0152 then 0 else 109000) + (if b0153 then 0 else 109000) + (if b0154 then 0 else 109000) + (if b0155 then 0 else 109000) + (if b0156 then 0 else 109000) + (if b0157 then 0 else 109000) + (if b0158 then 0 else 109000) + (if b0159 then 0 else 109000) + (if b0201 then 0 else 109000) + (if b0203 then 0 else 109000) + (if b0204 then 0 else 109000) + (if b0205 then 0 else 109000) + (if b0206 then 0 else 109000) + (if b0207 then 0 else 109000) + (if b0208 then 0 else 109000) + (if b0209 then 0 else 109000) + (if b0210 then 0 else 109000) + (if b0211 then 0 else 109000) + (if b0212 then 0 else 109000) + (if b0213 then 0 else 109000) + (if b0215 then 0 else 109000) + (if b0216 then 0 else 109000) + (if b0242 then 0 else 109000) + (if b0244 then 0 else 109000) + (if b0245 then 0 else 109000) + (if b0246 then 0 else 109000) + (if b0247 then 0 else 109000) + (if b0248 then 0 else 109000) + (if b0249 then 0 else 109000) + (if b0250 then 0 else 109000) + (if b0251 then 0 else 109000) + (if b0252 then 0 else 109000) + (if b0253 then 0 else 109000) + (if b0254 then 0 else 109000) + (if b0255 then 0 else 109000) + (if b0256 then 0 else 109000) + (if b0257 then 0 else 109000) + (if b0258 then 0 else 109000) + (if b0259 then 0 else 109000) + (if b0260 then 0 else 109000) + (if b0261 then 0 else 109000) + (if b0262 then 0 else 109000) + (if b0263 then 0 else 109000) + (if b0264 then 0 else 109000) + (if b0265 then 0 else 109000) + (if b0266 then 0 else 109000) + (if b0267 then 0 else 109000) + (if b0268 then 0 else 109000) + (if b0269 then 0 else 109000) + (if b0270 then 0 else 109000) + (if b0271 then 0 else 109000) + (if b0272 then 0 else 109000) + (if b0273 then 0 else 109000) < 441
}
Prover Time taken = 17.079875
Added Horn clause: 9 && 67 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 => 68
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/datamining/covariance/kernel3.bpl.ice2.bpl
Total learner time was 00:00:00.1307420
Verifying $kernel3: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool, b0228: bool, b0229: bool, b0230: bool, b0231: bool, b0232: bool, b0233: bool, b0234: bool, b0235: bool, b0236: bool, b0237: bool, b0238: bool, b0239: bool, b0240: bool, b0241: bool, b0242: bool, b0243: bool, b0244: bool, b0245: bool, b0246: bool, b0247: bool, b0248: bool, b0249: bool, b0250: bool, b0251: bool, b0252: bool, b0253: bool, b0254: bool, b0255: bool, b0256: bool, b0257: bool, b0258: bool, b0259: bool, b0260: bool, b0261: bool, b0262: bool, b0263: bool, b0264: bool, b0265: bool, b0266: bool, b0267: bool, b0268: bool, b0269: bool, b0270: bool, b0271: bool, b0272: bool, b0273: bool) : bool
{
  0 + (if b0000 then 0 else 109000) + (if b0001 then 0 else 109000) + (if b0002 then 0 else 109000) + (if b0003 then 0 else 109000) + (if b0005 then 0 else 109000) + (if b0007 then 0 else 109000) + (if b0008 then 0 else 109000) + (if b0009 then 0 else 109000) + (if b0010 then 0 else 109000) + (if b0011 then 0 else 109000) + (if b0012 then 0 else 109000) + (if b0014 then 0 else 109000) + (if b0016 then 0 else 109000) + (if b0017 then 0 else 109000) + (if b0018 then 0 else 109000) + (if b0019 then 0 else 109000) + (if b0020 then 0 else 109000) + (if b0022 then 0 else 109000) + (if b0023 then 0 else 109000) + (if b0026 then 0 else 109000) + (if b0028 then 0 else 109000) + (if b0031 then 0 else 109000) + (if b0032 then 0 else 109000) + (if b0033 then 0 else 109000) + (if b0034 then 0 else 109000) + (if b0035 then 0 else 109000) + (if b0036 then 0 else 109000) + (if b0039 then 0 else 109000) + (if b0040 then 0 else 109000) + (if b0041 then 0 else 109000) + (if b0042 then 0 else 109000) + (if b0045 then 0 else 109000) + (if b0047 then 0 else 109000) + (if b0048 then 0 else 109000) + (if b0049 then 0 else 109000) + (if b0050 then 0 else 109000) + (if b0051 then 0 else 109000) + (if b0054 then 0 else 109000) + (if b0055 then 0 else 109000) + (if b0058 then 0 else 109000) + (if b0060 then 0 else 109000) + (if b0061 then 0 else 109000) + (if b0062 then 0 else 109000) + (if b0063 then 0 else 109000) + (if b0064 then 0 else 109000) + (if b0065 then 0 else 109000) + (if b0066 then 0 else 109000) + (if b0067 then 0 else 109000) + (if b0068 then 0 else 109000) + (if b0072 then 0 else 109000) + (if b0073 then 0 else 109000) + (if b0074 then 0 else 109000) + (if b0075 then 0 else 109000) + (if b0076 then 0 else 109000) + (if b0077 then 0 else 109000) + (if b0078 then 0 else 109000) + (if b0079 then 0 else 109000) + (if b0080 then 0 else 109000) + (if b0081 then 0 else 109000) + (if b0082 then 0 else 109000) + (if b0083 then 0 else 109000) + (if b0084 then 0 else 109000) + (if b0085 then 0 else 109000) + (if b0091 then 0 else 109000) + (if b0092 then 0 else 109000) + (if b0095 then 0 else 109000) + (if b0097 then 0 else 109000) + (if b0098 then 0 else 109000) + (if b0099 then 0 else 109000) + (if b0100 then 0 else 109000) + (if b0101 then 0 else 109000) + (if b0102 then 0 else 109000) + (if b0103 then 0 else 109000) + (if b0104 then 0 else 109000) + (if b0105 then 0 else 109000) + (if b0149 then 0 else 109000) + (if b0151 then 0 else 109000) + (if b0152 then 0 else 109000) + (if b0153 then 0 else 109000) + (if b0154 then 0 else 109000) + (if b0155 then 0 else 109000) + (if b0156 then 0 else 109000) + (if b0157 then 0 else 109000) + (if b0159 then 0 else 109000) + (if b0201 then 0 else 109000) + (if b0203 then 0 else 109000) + (if b0204 then 0 else 109000) + (if b0205 then 0 else 109000) + (if b0206 then 0 else 109000) + (if b0207 then 0 else 109000) + (if b0208 then 0 else 109000) + (if b0209 then 0 else 109000) + (if b0210 then 0 else 109000) + (if b0211 then 0 else 109000) + (if b0212 then 0 else 109000) + (if b0213 then 0 else 109000) + (if b0215 then 0 else 109000) + (if b0216 then 0 else 109000) + (if b0242 then 0 else 109000) + (if b0244 then 0 else 109000) + (if b0245 then 0 else 109000) + (if b0246 then 0 else 109000) + (if b0247 then 0 else 109000) + (if b0248 then 0 else 109000) + (if b0249 then 0 else 109000) + (if b0250 then 0 else 109000) + (if b0251 then 0 else 109000) + (if b0252 then 0 else 109000) + (if b0253 then 0 else 109000) + (if b0254 then 0 else 109000) + (if b0255 then 0 else 109000) + (if b0256 then 0 else 109000) + (if b0257 then 0 else 109000) + (if b0258 then 0 else 109000) + (if b0259 then 0 else 109000) + (if b0260 then 0 else 109000) + (if b0261 then 0 else 109000) + (if b0262 then 0 else 109000) + (if b0263 then 0 else 109000) + (if b0264 then 0 else 109000) + (if b0265 then 0 else 109000) + (if b0266 then 0 else 109000) + (if b0267 then 0 else 109000) + (if b0268 then 0 else 109000) + (if b0269 then 0 else 109000) + (if b0270 then 0 else 109000) + (if b0271 then 0 else 109000) + (if b0272 then 0 else 109000) + (if b0273 then 0 else 109000) < 441
}
Prover Time taken = 20.842898
Added Horn clause: 9 && 69 && 0 && 14 && 19 && 0 && 0 && 0 && 0 && 0 && 66 => 70
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/datamining/covariance/kernel3.bpl.ice2.bpl
Total learner time was 00:00:00.1295380
Verifying $kernel3: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool, b0228: bool, b0229: bool, b0230: bool, b0231: bool, b0232: bool, b0233: bool, b0234: bool, b0235: bool, b0236: bool, b0237: bool, b0238: bool, b0239: bool, b0240: bool, b0241: bool, b0242: bool, b0243: bool, b0244: bool, b0245: bool, b0246: bool, b0247: bool, b0248: bool, b0249: bool, b0250: bool, b0251: bool, b0252: bool, b0253: bool, b0254: bool, b0255: bool, b0256: bool, b0257: bool, b0258: bool, b0259: bool, b0260: bool, b0261: bool, b0262: bool, b0263: bool, b0264: bool, b0265: bool, b0266: bool, b0267: bool, b0268: bool, b0269: bool, b0270: bool, b0271: bool, b0272: bool, b0273: bool) : bool
{
  0 + (if b0000 then 0 else 109000) + (if b0001 then 0 else 109000) + (if b0002 then 0 else 109000) + (if b0003 then 0 else 109000) + (if b0005 then 0 else 109000) + (if b0007 then 0 else 109000) + (if b0008 then 0 else 109000) + (if b0009 then 0 else 109000) + (if b0010 then 0 else 109000) + (if b0011 then 0 else 109000) + (if b0012 then 0 else 109000) + (if b0014 then 0 else 109000) + (if b0016 then 0 else 109000) + (if b0017 then 0 else 109000) + (if b0018 then 0 else 109000) + (if b0019 then 0 else 109000) + (if b0020 then 0 else 109000) + (if b0022 then 0 else 109000) + (if b0023 then 0 else 109000) + (if b0026 then 0 else 109000) + (if b0028 then 0 else 109000) + (if b0031 then 0 else 109000) + (if b0032 then 0 else 109000) + (if b0033 then 0 else 109000) + (if b0034 then 0 else 109000) + (if b0035 then 0 else 109000) + (if b0036 then 0 else 109000) + (if b0039 then 0 else 109000) + (if b0040 then 0 else 109000) + (if b0041 then 0 else 109000) + (if b0042 then 0 else 109000) + (if b0045 then 0 else 109000) + (if b0047 then 0 else 109000) + (if b0048 then 0 else 109000) + (if b0049 then 0 else 109000) + (if b0050 then 0 else 109000) + (if b0051 then 0 else 109000) + (if b0054 then 0 else 109000) + (if b0055 then 0 else 109000) + (if b0058 then 0 else 109000) + (if b0060 then 0 else 109000) + (if b0061 then 0 else 109000) + (if b0062 then 0 else 109000) + (if b0063 then 0 else 109000) + (if b0064 then 0 else 109000) + (if b0065 then 0 else 109000) + (if b0066 then 0 else 109000) + (if b0067 then 0 else 109000) + (if b0068 then 0 else 109000) + (if b0072 then 0 else 109000) + (if b0073 then 0 else 109000) + (if b0074 then 0 else 109000) + (if b0075 then 0 else 109000) + (if b0076 then 0 else 109000) + (if b0077 then 0 else 109000) + (if b0078 then 0 else 109000) + (if b0079 then 0 else 109000) + (if b0080 then 0 else 109000) + (if b0081 then 0 else 109000) + (if b0082 then 0 else 109000) + (if b0083 then 0 else 109000) + (if b0084 then 0 else 109000) + (if b0085 then 0 else 109000) + (if b0091 then 0 else 109000) + (if b0092 then 0 else 109000) + (if b0095 then 0 else 109000) + (if b0097 then 0 else 109000) + (if b0098 then 0 else 109000) + (if b0099 then 0 else 109000) + (if b0100 then 0 else 109000) + (if b0101 then 0 else 109000) + (if b0102 then 0 else 109000) + (if b0103 then 0 else 109000) + (if b0104 then 0 else 109000) + (if b0105 then 0 else 109000) + (if b0149 then 0 else 109000) + (if b0151 then 0 else 109000) + (if b0152 then 0 else 109000) + (if b0153 then 0 else 109000) + (if b0154 then 0 else 109000) + (if b0155 then 0 else 109000) + (if b0156 then 0 else 109000) + (if b0157 then 0 else 109000) + (if b0159 then 0 else 109000) + (if b0201 then 0 else 109000) + (if b0203 then 0 else 109000) + (if b0204 then 0 else 109000) + (if b0205 then 0 else 109000) + (if b0206 then 0 else 109000) + (if b0207 then 0 else 109000) + (if b0208 then 0 else 109000) + (if b0209 then 0 else 109000) + (if b0210 then 0 else 109000) + (if b0211 then 0 else 109000) + (if b0212 then 0 else 109000) + (if b0213 then 0 else 109000) + (if b0215 then 0 else 109000) + (if b0216 then 0 else 109000) + (if b0244 then 0 else 109000) + (if b0245 then 0 else 109000) + (if b0246 then 0 else 109000) + (if b0247 then 0 else 109000) + (if b0248 then 0 else 109000) + (if b0249 then 0 else 109000) + (if b0250 then 0 else 109000) + (if b0251 then 0 else 109000) + (if b0252 then 0 else 109000) + (if b0253 then 0 else 109000) + (if b0254 then 0 else 109000) + (if b0255 then 0 else 109000) + (if b0256 then 0 else 109000) + (if b0257 then 0 else 109000) + (if b0258 then 0 else 109000) + (if b0259 then 0 else 109000) + (if b0260 then 0 else 109000) + (if b0261 then 0 else 109000) + (if b0262 then 0 else 109000) + (if b0263 then 0 else 109000) + (if b0264 then 0 else 109000) + (if b0265 then 0 else 109000) + (if b0266 then 0 else 109000) + (if b0267 then 0 else 109000) + (if b0268 then 0 else 109000) + (if b0269 then 0 else 109000) + (if b0270 then 0 else 109000) + (if b0271 then 0 else 109000) + (if b0272 then 0 else 109000) + (if b0273 then 0 else 109000) < 441
}
Prover Time taken = 14.056852
Added Horn clause: 9 && 33 && 0 && 71 && 0 && 0 && 0 => 72
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/datamining/covariance/kernel3.bpl.ice2.bpl
Total learner time was 00:00:00.1281150
Verifying $kernel3: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool, b0228: bool, b0229: bool, b0230: bool, b0231: bool, b0232: bool, b0233: bool, b0234: bool, b0235: bool, b0236: bool, b0237: bool, b0238: bool, b0239: bool, b0240: bool, b0241: bool, b0242: bool, b0243: bool, b0244: bool, b0245: bool, b0246: bool, b0247: bool, b0248: bool, b0249: bool, b0250: bool, b0251: bool, b0252: bool, b0253: bool, b0254: bool, b0255: bool, b0256: bool, b0257: bool, b0258: bool, b0259: bool, b0260: bool, b0261: bool, b0262: bool, b0263: bool, b0264: bool, b0265: bool, b0266: bool, b0267: bool, b0268: bool, b0269: bool, b0270: bool, b0271: bool, b0272: bool, b0273: bool) : bool
{
  0 + (if b0000 then 0 else 109000) + (if b0001 then 0 else 109000) + (if b0002 then 0 else 109000) + (if b0003 then 0 else 109000) + (if b0005 then 0 else 109000) + (if b0007 then 0 else 109000) + (if b0008 then 0 else 109000) + (if b0009 then 0 else 109000) + (if b0010 then 0 else 109000) + (if b0011 then 0 else 109000) + (if b0012 then 0 else 109000) + (if b0014 then 0 else 109000) + (if b0016 then 0 else 109000) + (if b0017 then 0 else 109000) + (if b0018 then 0 else 109000) + (if b0019 then 0 else 109000) + (if b0020 then 0 else 109000) + (if b0022 then 0 else 109000) + (if b0023 then 0 else 109000) + (if b0026 then 0 else 109000) + (if b0028 then 0 else 109000) + (if b0031 then 0 else 109000) + (if b0032 then 0 else 109000) + (if b0033 then 0 else 109000) + (if b0034 then 0 else 109000) + (if b0035 then 0 else 109000) + (if b0036 then 0 else 109000) + (if b0039 then 0 else 109000) + (if b0040 then 0 else 109000) + (if b0041 then 0 else 109000) + (if b0042 then 0 else 109000) + (if b0045 then 0 else 109000) + (if b0047 then 0 else 109000) + (if b0048 then 0 else 109000) + (if b0049 then 0 else 109000) + (if b0050 then 0 else 109000) + (if b0051 then 0 else 109000) + (if b0054 then 0 else 109000) + (if b0055 then 0 else 109000) + (if b0058 then 0 else 109000) + (if b0060 then 0 else 109000) + (if b0061 then 0 else 109000) + (if b0062 then 0 else 109000) + (if b0063 then 0 else 109000) + (if b0064 then 0 else 109000) + (if b0065 then 0 else 109000) + (if b0066 then 0 else 109000) + (if b0067 then 0 else 109000) + (if b0072 then 0 else 109000) + (if b0073 then 0 else 109000) + (if b0074 then 0 else 109000) + (if b0075 then 0 else 109000) + (if b0076 then 0 else 109000) + (if b0077 then 0 else 109000) + (if b0078 then 0 else 109000) + (if b0079 then 0 else 109000) + (if b0080 then 0 else 109000) + (if b0081 then 0 else 109000) + (if b0082 then 0 else 109000) + (if b0083 then 0 else 109000) + (if b0084 then 0 else 109000) + (if b0085 then 0 else 109000) + (if b0091 then 0 else 109000) + (if b0092 then 0 else 109000) + (if b0095 then 0 else 109000) + (if b0097 then 0 else 109000) + (if b0098 then 0 else 109000) + (if b0099 then 0 else 109000) + (if b0100 then 0 else 109000) + (if b0101 then 0 else 109000) + (if b0102 then 0 else 109000) + (if b0103 then 0 else 109000) + (if b0104 then 0 else 109000) + (if b0105 then 0 else 109000) + (if b0149 then 0 else 109000) + (if b0151 then 0 else 109000) + (if b0152 then 0 else 109000) + (if b0153 then 0 else 109000) + (if b0154 then 0 else 109000) + (if b0155 then 0 else 109000) + (if b0156 then 0 else 109000) + (if b0157 then 0 else 109000) + (if b0159 then 0 else 109000) + (if b0201 then 0 else 109000) + (if b0203 then 0 else 109000) + (if b0204 then 0 else 109000) + (if b0205 then 0 else 109000) + (if b0206 then 0 else 109000) + (if b0207 then 0 else 109000) + (if b0208 then 0 else 109000) + (if b0209 then 0 else 109000) + (if b0210 then 0 else 109000) + (if b0211 then 0 else 109000) + (if b0212 then 0 else 109000) + (if b0213 then 0 else 109000) + (if b0215 then 0 else 109000) + (if b0216 then 0 else 109000) + (if b0244 then 0 else 109000) + (if b0245 then 0 else 109000) + (if b0246 then 0 else 109000) + (if b0247 then 0 else 109000) + (if b0248 then 0 else 109000) + (if b0249 then 0 else 109000) + (if b0250 then 0 else 109000) + (if b0251 then 0 else 109000) + (if b0252 then 0 else 109000) + (if b0253 then 0 else 109000) + (if b0254 then 0 else 109000) + (if b0255 then 0 else 109000) + (if b0256 then 0 else 109000) + (if b0257 then 0 else 109000) + (if b0258 then 0 else 109000) + (if b0259 then 0 else 109000) + (if b0260 then 0 else 109000) + (if b0261 then 0 else 109000) + (if b0262 then 0 else 109000) + (if b0263 then 0 else 109000) + (if b0264 then 0 else 109000) + (if b0265 then 0 else 109000) + (if b0266 then 0 else 109000) + (if b0267 then 0 else 109000) + (if b0268 then 0 else 109000) + (if b0269 then 0 else 109000) + (if b0270 then 0 else 109000) + (if b0271 then 0 else 109000) + (if b0272 then 0 else 109000) + (if b0273 then 0 else 109000) < 441
}
Prover Time taken = 13.721227
Added Horn clause: 9 && 68 && 0 && 14 && 63 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 => 73
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/datamining/covariance/kernel3.bpl.ice2.bpl
Total learner time was 00:00:00.1293550
Verifying $kernel3: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool, b0228: bool, b0229: bool, b0230: bool, b0231: bool, b0232: bool, b0233: bool, b0234: bool, b0235: bool, b0236: bool, b0237: bool, b0238: bool, b0239: bool, b0240: bool, b0241: bool, b0242: bool, b0243: bool, b0244: bool, b0245: bool, b0246: bool, b0247: bool, b0248: bool, b0249: bool, b0250: bool, b0251: bool, b0252: bool, b0253: bool, b0254: bool, b0255: bool, b0256: bool, b0257: bool, b0258: bool, b0259: bool, b0260: bool, b0261: bool, b0262: bool, b0263: bool, b0264: bool, b0265: bool, b0266: bool, b0267: bool, b0268: bool, b0269: bool, b0270: bool, b0271: bool, b0272: bool, b0273: bool) : bool
{
  0 + (if b0000 then 0 else 109000) + (if b0001 then 0 else 109000) + (if b0002 then 0 else 109000) + (if b0003 then 0 else 109000) + (if b0005 then 0 else 109000) + (if b0007 then 0 else 109000) + (if b0008 then 0 else 109000) + (if b0009 then 0 else 109000) + (if b0010 then 0 else 109000) + (if b0012 then 0 else 109000) + (if b0014 then 0 else 109000) + (if b0016 then 0 else 109000) + (if b0017 then 0 else 109000) + (if b0018 then 0 else 109000) + (if b0019 then 0 else 109000) + (if b0020 then 0 else 109000) + (if b0022 then 0 else 109000) + (if b0023 then 0 else 109000) + (if b0026 then 0 else 109000) + (if b0028 then 0 else 109000) + (if b0031 then 0 else 109000) + (if b0032 then 0 else 109000) + (if b0033 then 0 else 109000) + (if b0034 then 0 else 109000) + (if b0035 then 0 else 109000) + (if b0036 then 0 else 109000) + (if b0039 then 0 else 109000) + (if b0040 then 0 else 109000) + (if b0041 then 0 else 109000) + (if b0042 then 0 else 109000) + (if b0045 then 0 else 109000) + (if b0047 then 0 else 109000) + (if b0048 then 0 else 109000) + (if b0049 then 0 else 109000) + (if b0050 then 0 else 109000) + (if b0051 then 0 else 109000) + (if b0054 then 0 else 109000) + (if b0055 then 0 else 109000) + (if b0058 then 0 else 109000) + (if b0060 then 0 else 109000) + (if b0061 then 0 else 109000) + (if b0062 then 0 else 109000) + (if b0063 then 0 else 109000) + (if b0064 then 0 else 109000) + (if b0065 then 0 else 109000) + (if b0066 then 0 else 109000) + (if b0067 then 0 else 109000) + (if b0072 then 0 else 109000) + (if b0073 then 0 else 109000) + (if b0074 then 0 else 109000) + (if b0075 then 0 else 109000) + (if b0076 then 0 else 109000) + (if b0077 then 0 else 109000) + (if b0078 then 0 else 109000) + (if b0079 then 0 else 109000) + (if b0080 then 0 else 109000) + (if b0081 then 0 else 109000) + (if b0082 then 0 else 109000) + (if b0083 then 0 else 109000) + (if b0084 then 0 else 109000) + (if b0085 then 0 else 109000) + (if b0091 then 0 else 109000) + (if b0092 then 0 else 109000) + (if b0095 then 0 else 109000) + (if b0097 then 0 else 109000) + (if b0098 then 0 else 109000) + (if b0099 then 0 else 109000) + (if b0100 then 0 else 109000) + (if b0101 then 0 else 109000) + (if b0102 then 0 else 109000) + (if b0103 then 0 else 109000) + (if b0104 then 0 else 109000) + (if b0105 then 0 else 109000) + (if b0149 then 0 else 109000) + (if b0151 then 0 else 109000) + (if b0152 then 0 else 109000) + (if b0153 then 0 else 109000) + (if b0154 then 0 else 109000) + (if b0155 then 0 else 109000) + (if b0156 then 0 else 109000) + (if b0157 then 0 else 109000) + (if b0159 then 0 else 109000) + (if b0201 then 0 else 109000) + (if b0203 then 0 else 109000) + (if b0204 then 0 else 109000) + (if b0205 then 0 else 109000) + (if b0206 then 0 else 109000) + (if b0207 then 0 else 109000) + (if b0208 then 0 else 109000) + (if b0209 then 0 else 109000) + (if b0210 then 0 else 109000) + (if b0211 then 0 else 109000) + (if b0212 then 0 else 109000) + (if b0213 then 0 else 109000) + (if b0215 then 0 else 109000) + (if b0216 then 0 else 109000) + (if b0244 then 0 else 109000) + (if b0245 then 0 else 109000) + (if b0246 then 0 else 109000) + (if b0247 then 0 else 109000) + (if b0248 then 0 else 109000) + (if b0249 then 0 else 109000) + (if b0250 then 0 else 109000) + (if b0251 then 0 else 109000) + (if b0252 then 0 else 109000) + (if b0253 then 0 else 109000) + (if b0254 then 0 else 109000) + (if b0255 then 0 else 109000) + (if b0256 then 0 else 109000) + (if b0257 then 0 else 109000) + (if b0258 then 0 else 109000) + (if b0259 then 0 else 109000) + (if b0260 then 0 else 109000) + (if b0261 then 0 else 109000) + (if b0262 then 0 else 109000) + (if b0263 then 0 else 109000) + (if b0264 then 0 else 109000) + (if b0265 then 0 else 109000) + (if b0266 then 0 else 109000) + (if b0267 then 0 else 109000) + (if b0268 then 0 else 109000) + (if b0269 then 0 else 109000) + (if b0270 then 0 else 109000) + (if b0271 then 0 else 109000) + (if b0272 then 0 else 109000) + (if b0273 then 0 else 109000) < 441
}
Prover Time taken = 8.951351
Added Horn clause: 15 && 74 && 0 && 71 && 0 && 0 && 0 && 0 && 72 => 75
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/datamining/covariance/kernel3.bpl.ice2.bpl
Total learner time was 00:00:00.1285540
Verifying $kernel3: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool, b0228: bool, b0229: bool, b0230: bool, b0231: bool, b0232: bool, b0233: bool, b0234: bool, b0235: bool, b0236: bool, b0237: bool, b0238: bool, b0239: bool, b0240: bool, b0241: bool, b0242: bool, b0243: bool, b0244: bool, b0245: bool, b0246: bool, b0247: bool, b0248: bool, b0249: bool, b0250: bool, b0251: bool, b0252: bool, b0253: bool, b0254: bool, b0255: bool, b0256: bool, b0257: bool, b0258: bool, b0259: bool, b0260: bool, b0261: bool, b0262: bool, b0263: bool, b0264: bool, b0265: bool, b0266: bool, b0267: bool, b0268: bool, b0269: bool, b0270: bool, b0271: bool, b0272: bool, b0273: bool) : bool
{
  0 + (if b0000 then 0 else 109000) + (if b0001 then 0 else 109000) + (if b0002 then 0 else 109000) + (if b0003 then 0 else 109000) + (if b0005 then 0 else 109000) + (if b0007 then 0 else 109000) + (if b0008 then 0 else 109000) + (if b0009 then 0 else 109000) + (if b0010 then 0 else 109000) + (if b0012 then 0 else 109000) + (if b0014 then 0 else 109000) + (if b0016 then 0 else 109000) + (if b0017 then 0 else 109000) + (if b0018 then 0 else 109000) + (if b0019 then 0 else 109000) + (if b0020 then 0 else 109000) + (if b0022 then 0 else 109000) + (if b0023 then 0 else 109000) + (if b0026 then 0 else 109000) + (if b0028 then 0 else 109000) + (if b0031 then 0 else 109000) + (if b0032 then 0 else 109000) + (if b0033 then 0 else 109000) + (if b0034 then 0 else 109000) + (if b0035 then 0 else 109000) + (if b0036 then 0 else 109000) + (if b0039 then 0 else 109000) + (if b0040 then 0 else 109000) + (if b0041 then 0 else 109000) + (if b0042 then 0 else 109000) + (if b0045 then 0 else 109000) + (if b0047 then 0 else 109000) + (if b0048 then 0 else 109000) + (if b0049 then 0 else 109000) + (if b0050 then 0 else 109000) + (if b0051 then 0 else 109000) + (if b0054 then 0 else 109000) + (if b0055 then 0 else 109000) + (if b0058 then 0 else 109000) + (if b0060 then 0 else 109000) + (if b0061 then 0 else 109000) + (if b0062 then 0 else 109000) + (if b0063 then 0 else 109000) + (if b0064 then 0 else 109000) + (if b0065 then 0 else 109000) + (if b0066 then 0 else 109000) + (if b0067 then 0 else 109000) + (if b0072 then 0 else 109000) + (if b0073 then 0 else 109000) + (if b0074 then 0 else 109000) + (if b0075 then 0 else 109000) + (if b0076 then 0 else 109000) + (if b0077 then 0 else 109000) + (if b0078 then 0 else 109000) + (if b0079 then 0 else 109000) + (if b0080 then 0 else 109000) + (if b0081 then 0 else 109000) + (if b0082 then 0 else 109000) + (if b0083 then 0 else 109000) + (if b0084 then 0 else 109000) + (if b0091 then 0 else 109000) + (if b0092 then 0 else 109000) + (if b0095 then 0 else 109000) + (if b0097 then 0 else 109000) + (if b0098 then 0 else 109000) + (if b0099 then 0 else 109000) + (if b0100 then 0 else 109000) + (if b0101 then 0 else 109000) + (if b0102 then 0 else 109000) + (if b0103 then 0 else 109000) + (if b0104 then 0 else 109000) + (if b0105 then 0 else 109000) + (if b0149 then 0 else 109000) + (if b0151 then 0 else 109000) + (if b0152 then 0 else 109000) + (if b0153 then 0 else 109000) + (if b0154 then 0 else 109000) + (if b0155 then 0 else 109000) + (if b0156 then 0 else 109000) + (if b0157 then 0 else 109000) + (if b0159 then 0 else 109000) + (if b0201 then 0 else 109000) + (if b0203 then 0 else 109000) + (if b0204 then 0 else 109000) + (if b0205 then 0 else 109000) + (if b0206 then 0 else 109000) + (if b0207 then 0 else 109000) + (if b0208 then 0 else 109000) + (if b0209 then 0 else 109000) + (if b0210 then 0 else 109000) + (if b0211 then 0 else 109000) + (if b0212 then 0 else 109000) + (if b0213 then 0 else 109000) + (if b0215 then 0 else 109000) + (if b0216 then 0 else 109000) + (if b0244 then 0 else 109000) + (if b0245 then 0 else 109000) + (if b0246 then 0 else 109000) + (if b0247 then 0 else 109000) + (if b0248 then 0 else 109000) + (if b0249 then 0 else 109000) + (if b0250 then 0 else 109000) + (if b0251 then 0 else 109000) + (if b0252 then 0 else 109000) + (if b0253 then 0 else 109000) + (if b0254 then 0 else 109000) + (if b0255 then 0 else 109000) + (if b0256 then 0 else 109000) + (if b0257 then 0 else 109000) + (if b0258 then 0 else 109000) + (if b0259 then 0 else 109000) + (if b0260 then 0 else 109000) + (if b0261 then 0 else 109000) + (if b0262 then 0 else 109000) + (if b0263 then 0 else 109000) + (if b0264 then 0 else 109000) + (if b0265 then 0 else 109000) + (if b0266 then 0 else 109000) + (if b0267 then 0 else 109000) + (if b0268 then 0 else 109000) + (if b0269 then 0 else 109000) + (if b0270 then 0 else 109000) + (if b0271 then 0 else 109000) + (if b0272 then 0 else 109000) + (if b0273 then 0 else 109000) < 441
}
Prover Time taken = 21.064681
Added Horn clause: 76 && 68 && 77 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 => 78
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/datamining/covariance/kernel3.bpl.ice2.bpl
Total learner time was 00:00:00.1306320
Verifying $kernel3: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool, b0228: bool, b0229: bool, b0230: bool, b0231: bool, b0232: bool, b0233: bool, b0234: bool, b0235: bool, b0236: bool, b0237: bool, b0238: bool, b0239: bool, b0240: bool, b0241: bool, b0242: bool, b0243: bool, b0244: bool, b0245: bool, b0246: bool, b0247: bool, b0248: bool, b0249: bool, b0250: bool, b0251: bool, b0252: bool, b0253: bool, b0254: bool, b0255: bool, b0256: bool, b0257: bool, b0258: bool, b0259: bool, b0260: bool, b0261: bool, b0262: bool, b0263: bool, b0264: bool, b0265: bool, b0266: bool, b0267: bool, b0268: bool, b0269: bool, b0270: bool, b0271: bool, b0272: bool, b0273: bool) : bool
{
  0 + (if b0000 then 0 else 109000) + (if b0001 then 0 else 109000) + (if b0002 then 0 else 109000) + (if b0003 then 0 else 109000) + (if b0005 then 0 else 109000) + (if b0007 then 0 else 109000) + (if b0008 then 0 else 109000) + (if b0009 then 0 else 109000) + (if b0010 then 0 else 109000) + (if b0012 then 0 else 109000) + (if b0014 then 0 else 109000) + (if b0016 then 0 else 109000) + (if b0017 then 0 else 109000) + (if b0018 then 0 else 109000) + (if b0019 then 0 else 109000) + (if b0020 then 0 else 109000) + (if b0022 then 0 else 109000) + (if b0023 then 0 else 109000) + (if b0026 then 0 else 109000) + (if b0028 then 0 else 109000) + (if b0031 then 0 else 109000) + (if b0032 then 0 else 109000) + (if b0033 then 0 else 109000) + (if b0034 then 0 else 109000) + (if b0035 then 0 else 109000) + (if b0036 then 0 else 109000) + (if b0039 then 0 else 109000) + (if b0040 then 0 else 109000) + (if b0041 then 0 else 109000) + (if b0042 then 0 else 109000) + (if b0045 then 0 else 109000) + (if b0047 then 0 else 109000) + (if b0048 then 0 else 109000) + (if b0049 then 0 else 109000) + (if b0050 then 0 else 109000) + (if b0051 then 0 else 109000) + (if b0054 then 0 else 109000) + (if b0055 then 0 else 109000) + (if b0058 then 0 else 109000) + (if b0060 then 0 else 109000) + (if b0061 then 0 else 109000) + (if b0062 then 0 else 109000) + (if b0063 then 0 else 109000) + (if b0064 then 0 else 109000) + (if b0065 then 0 else 109000) + (if b0066 then 0 else 109000) + (if b0067 then 0 else 109000) + (if b0072 then 0 else 109000) + (if b0073 then 0 else 109000) + (if b0074 then 0 else 109000) + (if b0075 then 0 else 109000) + (if b0076 then 0 else 109000) + (if b0077 then 0 else 109000) + (if b0078 then 0 else 109000) + (if b0079 then 0 else 109000) + (if b0080 then 0 else 109000) + (if b0081 then 0 else 109000) + (if b0082 then 0 else 109000) + (if b0083 then 0 else 109000) + (if b0084 then 0 else 109000) + (if b0091 then 0 else 109000) + (if b0092 then 0 else 109000) + (if b0095 then 0 else 109000) + (if b0097 then 0 else 109000) + (if b0098 then 0 else 109000) + (if b0099 then 0 else 109000) + (if b0100 then 0 else 109000) + (if b0101 then 0 else 109000) + (if b0102 then 0 else 109000) + (if b0103 then 0 else 109000) + (if b0104 then 0 else 109000) + (if b0105 then 0 else 109000) + (if b0149 then 0 else 109000) + (if b0151 then 0 else 109000) + (if b0152 then 0 else 109000) + (if b0153 then 0 else 109000) + (if b0154 then 0 else 109000) + (if b0155 then 0 else 109000) + (if b0156 then 0 else 109000) + (if b0157 then 0 else 109000) + (if b0159 then 0 else 109000) + (if b0203 then 0 else 109000) + (if b0204 then 0 else 109000) + (if b0205 then 0 else 109000) + (if b0206 then 0 else 109000) + (if b0207 then 0 else 109000) + (if b0208 then 0 else 109000) + (if b0209 then 0 else 109000) + (if b0210 then 0 else 109000) + (if b0211 then 0 else 109000) + (if b0212 then 0 else 109000) + (if b0213 then 0 else 109000) + (if b0215 then 0 else 109000) + (if b0216 then 0 else 109000) + (if b0244 then 0 else 109000) + (if b0245 then 0 else 109000) + (if b0246 then 0 else 109000) + (if b0247 then 0 else 109000) + (if b0248 then 0 else 109000) + (if b0249 then 0 else 109000) + (if b0250 then 0 else 109000) + (if b0251 then 0 else 109000) + (if b0252 then 0 else 109000) + (if b0253 then 0 else 109000) + (if b0254 then 0 else 109000) + (if b0255 then 0 else 109000) + (if b0256 then 0 else 109000) + (if b0257 then 0 else 109000) + (if b0258 then 0 else 109000) + (if b0259 then 0 else 109000) + (if b0260 then 0 else 109000) + (if b0261 then 0 else 109000) + (if b0262 then 0 else 109000) + (if b0263 then 0 else 109000) + (if b0264 then 0 else 109000) + (if b0265 then 0 else 109000) + (if b0266 then 0 else 109000) + (if b0267 then 0 else 109000) + (if b0268 then 0 else 109000) + (if b0269 then 0 else 109000) + (if b0270 then 0 else 109000) + (if b0271 then 0 else 109000) + (if b0272 then 0 else 109000) + (if b0273 then 0 else 109000) < 441
}
Prover Time taken = 6.752635
Added Horn clause: 9 && 79 && 0 => 80
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/datamining/covariance/kernel3.bpl.ice2.bpl
Total learner time was 00:00:00.1303060
Verifying $kernel3: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool, b0228: bool, b0229: bool, b0230: bool, b0231: bool, b0232: bool, b0233: bool, b0234: bool, b0235: bool, b0236: bool, b0237: bool, b0238: bool, b0239: bool, b0240: bool, b0241: bool, b0242: bool, b0243: bool, b0244: bool, b0245: bool, b0246: bool, b0247: bool, b0248: bool, b0249: bool, b0250: bool, b0251: bool, b0252: bool, b0253: bool, b0254: bool, b0255: bool, b0256: bool, b0257: bool, b0258: bool, b0259: bool, b0260: bool, b0261: bool, b0262: bool, b0263: bool, b0264: bool, b0265: bool, b0266: bool, b0267: bool, b0268: bool, b0269: bool, b0270: bool, b0271: bool, b0272: bool, b0273: bool) : bool
{
  0 + (if b0000 then 0 else 109000) + (if b0001 then 0 else 109000) + (if b0002 then 0 else 109000) + (if b0003 then 0 else 109000) + (if b0005 then 0 else 109000) + (if b0007 then 0 else 109000) + (if b0008 then 0 else 109000) + (if b0009 then 0 else 109000) + (if b0010 then 0 else 109000) + (if b0012 then 0 else 109000) + (if b0014 then 0 else 109000) + (if b0016 then 0 else 109000) + (if b0017 then 0 else 109000) + (if b0018 then 0 else 109000) + (if b0019 then 0 else 109000) + (if b0020 then 0 else 109000) + (if b0022 then 0 else 109000) + (if b0023 then 0 else 109000) + (if b0026 then 0 else 109000) + (if b0028 then 0 else 109000) + (if b0031 then 0 else 109000) + (if b0032 then 0 else 109000) + (if b0033 then 0 else 109000) + (if b0034 then 0 else 109000) + (if b0035 then 0 else 109000) + (if b0039 then 0 else 109000) + (if b0040 then 0 else 109000) + (if b0041 then 0 else 109000) + (if b0042 then 0 else 109000) + (if b0045 then 0 else 109000) + (if b0047 then 0 else 109000) + (if b0048 then 0 else 109000) + (if b0049 then 0 else 109000) + (if b0050 then 0 else 109000) + (if b0051 then 0 else 109000) + (if b0054 then 0 else 109000) + (if b0055 then 0 else 109000) + (if b0058 then 0 else 109000) + (if b0060 then 0 else 109000) + (if b0061 then 0 else 109000) + (if b0062 then 0 else 109000) + (if b0063 then 0 else 109000) + (if b0064 then 0 else 109000) + (if b0065 then 0 else 109000) + (if b0066 then 0 else 109000) + (if b0067 then 0 else 109000) + (if b0072 then 0 else 109000) + (if b0073 then 0 else 109000) + (if b0074 then 0 else 109000) + (if b0075 then 0 else 109000) + (if b0076 then 0 else 109000) + (if b0077 then 0 else 109000) + (if b0078 then 0 else 109000) + (if b0079 then 0 else 109000) + (if b0080 then 0 else 109000) + (if b0081 then 0 else 109000) + (if b0082 then 0 else 109000) + (if b0083 then 0 else 109000) + (if b0084 then 0 else 109000) + (if b0091 then 0 else 109000) + (if b0092 then 0 else 109000) + (if b0095 then 0 else 109000) + (if b0097 then 0 else 109000) + (if b0098 then 0 else 109000) + (if b0099 then 0 else 109000) + (if b0100 then 0 else 109000) + (if b0101 then 0 else 109000) + (if b0102 then 0 else 109000) + (if b0103 then 0 else 109000) + (if b0104 then 0 else 109000) + (if b0105 then 0 else 109000) + (if b0149 then 0 else 109000) + (if b0151 then 0 else 109000) + (if b0152 then 0 else 109000) + (if b0153 then 0 else 109000) + (if b0154 then 0 else 109000) + (if b0155 then 0 else 109000) + (if b0156 then 0 else 109000) + (if b0157 then 0 else 109000) + (if b0159 then 0 else 109000) + (if b0203 then 0 else 109000) + (if b0204 then 0 else 109000) + (if b0205 then 0 else 109000) + (if b0206 then 0 else 109000) + (if b0207 then 0 else 109000) + (if b0208 then 0 else 109000) + (if b0209 then 0 else 109000) + (if b0210 then 0 else 109000) + (if b0211 then 0 else 109000) + (if b0212 then 0 else 109000) + (if b0213 then 0 else 109000) + (if b0215 then 0 else 109000) + (if b0216 then 0 else 109000) + (if b0244 then 0 else 109000) + (if b0245 then 0 else 109000) + (if b0246 then 0 else 109000) + (if b0247 then 0 else 109000) + (if b0248 then 0 else 109000) + (if b0249 then 0 else 109000) + (if b0250 then 0 else 109000) + (if b0251 then 0 else 109000) + (if b0252 then 0 else 109000) + (if b0253 then 0 else 109000) + (if b0254 then 0 else 109000) + (if b0255 then 0 else 109000) + (if b0256 then 0 else 109000) + (if b0257 then 0 else 109000) + (if b0258 then 0 else 109000) + (if b0259 then 0 else 109000) + (if b0260 then 0 else 109000) + (if b0261 then 0 else 109000) + (if b0262 then 0 else 109000) + (if b0263 then 0 else 109000) + (if b0264 then 0 else 109000) + (if b0265 then 0 else 109000) + (if b0266 then 0 else 109000) + (if b0267 then 0 else 109000) + (if b0268 then 0 else 109000) + (if b0269 then 0 else 109000) + (if b0270 then 0 else 109000) + (if b0271 then 0 else 109000) + (if b0272 then 0 else 109000) + (if b0273 then 0 else 109000) < 441
}
Prover Time taken = 7.642761
Added Horn clause: 5 && 81 && 0 && 71 && 82 && 0 && 0 => 83
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/datamining/covariance/kernel3.bpl.ice2.bpl
Total learner time was 00:00:00.1311900
Verifying $kernel3: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool, b0228: bool, b0229: bool, b0230: bool, b0231: bool, b0232: bool, b0233: bool, b0234: bool, b0235: bool, b0236: bool, b0237: bool, b0238: bool, b0239: bool, b0240: bool, b0241: bool, b0242: bool, b0243: bool, b0244: bool, b0245: bool, b0246: bool, b0247: bool, b0248: bool, b0249: bool, b0250: bool, b0251: bool, b0252: bool, b0253: bool, b0254: bool, b0255: bool, b0256: bool, b0257: bool, b0258: bool, b0259: bool, b0260: bool, b0261: bool, b0262: bool, b0263: bool, b0264: bool, b0265: bool, b0266: bool, b0267: bool, b0268: bool, b0269: bool, b0270: bool, b0271: bool, b0272: bool, b0273: bool) : bool
{
  0 + (if b0000 then 0 else 109000) + (if b0001 then 0 else 109000) + (if b0002 then 0 else 109000) + (if b0003 then 0 else 109000) + (if b0005 then 0 else 109000) + (if b0007 then 0 else 109000) + (if b0008 then 0 else 109000) + (if b0009 then 0 else 109000) + (if b0010 then 0 else 109000) + (if b0012 then 0 else 109000) + (if b0014 then 0 else 109000) + (if b0016 then 0 else 109000) + (if b0017 then 0 else 109000) + (if b0018 then 0 else 109000) + (if b0019 then 0 else 109000) + (if b0020 then 0 else 109000) + (if b0022 then 0 else 109000) + (if b0023 then 0 else 109000) + (if b0026 then 0 else 109000) + (if b0028 then 0 else 109000) + (if b0031 then 0 else 109000) + (if b0032 then 0 else 109000) + (if b0033 then 0 else 109000) + (if b0034 then 0 else 109000) + (if b0035 then 0 else 109000) + (if b0039 then 0 else 109000) + (if b0040 then 0 else 109000) + (if b0041 then 0 else 109000) + (if b0042 then 0 else 109000) + (if b0045 then 0 else 109000) + (if b0047 then 0 else 109000) + (if b0048 then 0 else 109000) + (if b0049 then 0 else 109000) + (if b0050 then 0 else 109000) + (if b0051 then 0 else 109000) + (if b0054 then 0 else 109000) + (if b0055 then 0 else 109000) + (if b0058 then 0 else 109000) + (if b0060 then 0 else 109000) + (if b0061 then 0 else 109000) + (if b0062 then 0 else 109000) + (if b0063 then 0 else 109000) + (if b0064 then 0 else 109000) + (if b0065 then 0 else 109000) + (if b0066 then 0 else 109000) + (if b0072 then 0 else 109000) + (if b0073 then 0 else 109000) + (if b0074 then 0 else 109000) + (if b0075 then 0 else 109000) + (if b0076 then 0 else 109000) + (if b0077 then 0 else 109000) + (if b0078 then 0 else 109000) + (if b0079 then 0 else 109000) + (if b0080 then 0 else 109000) + (if b0081 then 0 else 109000) + (if b0082 then 0 else 109000) + (if b0083 then 0 else 109000) + (if b0084 then 0 else 109000) + (if b0091 then 0 else 109000) + (if b0092 then 0 else 109000) + (if b0095 then 0 else 109000) + (if b0097 then 0 else 109000) + (if b0098 then 0 else 109000) + (if b0099 then 0 else 109000) + (if b0100 then 0 else 109000) + (if b0101 then 0 else 109000) + (if b0102 then 0 else 109000) + (if b0103 then 0 else 109000) + (if b0104 then 0 else 109000) + (if b0105 then 0 else 109000) + (if b0149 then 0 else 109000) + (if b0151 then 0 else 109000) + (if b0152 then 0 else 109000) + (if b0153 then 0 else 109000) + (if b0154 then 0 else 109000) + (if b0155 then 0 else 109000) + (if b0156 then 0 else 109000) + (if b0157 then 0 else 109000) + (if b0159 then 0 else 109000) + (if b0203 then 0 else 109000) + (if b0204 then 0 else 109000) + (if b0205 then 0 else 109000) + (if b0206 then 0 else 109000) + (if b0207 then 0 else 109000) + (if b0208 then 0 else 109000) + (if b0209 then 0 else 109000) + (if b0210 then 0 else 109000) + (if b0211 then 0 else 109000) + (if b0212 then 0 else 109000) + (if b0213 then 0 else 109000) + (if b0215 then 0 else 109000) + (if b0216 then 0 else 109000) + (if b0244 then 0 else 109000) + (if b0245 then 0 else 109000) + (if b0246 then 0 else 109000) + (if b0247 then 0 else 109000) + (if b0248 then 0 else 109000) + (if b0249 then 0 else 109000) + (if b0250 then 0 else 109000) + (if b0251 then 0 else 109000) + (if b0252 then 0 else 109000) + (if b0253 then 0 else 109000) + (if b0254 then 0 else 109000) + (if b0255 then 0 else 109000) + (if b0256 then 0 else 109000) + (if b0257 then 0 else 109000) + (if b0258 then 0 else 109000) + (if b0259 then 0 else 109000) + (if b0260 then 0 else 109000) + (if b0261 then 0 else 109000) + (if b0262 then 0 else 109000) + (if b0263 then 0 else 109000) + (if b0264 then 0 else 109000) + (if b0265 then 0 else 109000) + (if b0266 then 0 else 109000) + (if b0267 then 0 else 109000) + (if b0268 then 0 else 109000) + (if b0269 then 0 else 109000) + (if b0270 then 0 else 109000) + (if b0271 then 0 else 109000) + (if b0272 then 0 else 109000) + (if b0273 then 0 else 109000) < 441
}
Prover Time taken = 7.380359
Added Horn clause: 9 && 81 && 0 && 71 && 82 && 0 && 0 && 0 && 84 => 85
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/datamining/covariance/kernel3.bpl.ice2.bpl
Total learner time was 00:00:00.1332470
Verifying $kernel3: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool, b0228: bool, b0229: bool, b0230: bool, b0231: bool, b0232: bool, b0233: bool, b0234: bool, b0235: bool, b0236: bool, b0237: bool, b0238: bool, b0239: bool, b0240: bool, b0241: bool, b0242: bool, b0243: bool, b0244: bool, b0245: bool, b0246: bool, b0247: bool, b0248: bool, b0249: bool, b0250: bool, b0251: bool, b0252: bool, b0253: bool, b0254: bool, b0255: bool, b0256: bool, b0257: bool, b0258: bool, b0259: bool, b0260: bool, b0261: bool, b0262: bool, b0263: bool, b0264: bool, b0265: bool, b0266: bool, b0267: bool, b0268: bool, b0269: bool, b0270: bool, b0271: bool, b0272: bool, b0273: bool) : bool
{
  0 + (if b0000 then 0 else 109000) + (if b0001 then 0 else 109000) + (if b0002 then 0 else 109000) + (if b0003 then 0 else 109000) + (if b0005 then 0 else 109000) + (if b0007 then 0 else 109000) + (if b0008 then 0 else 109000) + (if b0009 then 0 else 109000) + (if b0010 then 0 else 109000) + (if b0012 then 0 else 109000) + (if b0014 then 0 else 109000) + (if b0016 then 0 else 109000) + (if b0017 then 0 else 109000) + (if b0018 then 0 else 109000) + (if b0019 then 0 else 109000) + (if b0020 then 0 else 109000) + (if b0022 then 0 else 109000) + (if b0023 then 0 else 109000) + (if b0026 then 0 else 109000) + (if b0028 then 0 else 109000) + (if b0031 then 0 else 109000) + (if b0032 then 0 else 109000) + (if b0033 then 0 else 109000) + (if b0034 then 0 else 109000) + (if b0035 then 0 else 109000) + (if b0039 then 0 else 109000) + (if b0040 then 0 else 109000) + (if b0041 then 0 else 109000) + (if b0042 then 0 else 109000) + (if b0045 then 0 else 109000) + (if b0047 then 0 else 109000) + (if b0048 then 0 else 109000) + (if b0049 then 0 else 109000) + (if b0050 then 0 else 109000) + (if b0051 then 0 else 109000) + (if b0054 then 0 else 109000) + (if b0055 then 0 else 109000) + (if b0058 then 0 else 109000) + (if b0060 then 0 else 109000) + (if b0061 then 0 else 109000) + (if b0062 then 0 else 109000) + (if b0063 then 0 else 109000) + (if b0064 then 0 else 109000) + (if b0065 then 0 else 109000) + (if b0066 then 0 else 109000) + (if b0072 then 0 else 109000) + (if b0073 then 0 else 109000) + (if b0074 then 0 else 109000) + (if b0075 then 0 else 109000) + (if b0076 then 0 else 109000) + (if b0077 then 0 else 109000) + (if b0078 then 0 else 109000) + (if b0079 then 0 else 109000) + (if b0080 then 0 else 109000) + (if b0081 then 0 else 109000) + (if b0082 then 0 else 109000) + (if b0083 then 0 else 109000) + (if b0091 then 0 else 109000) + (if b0092 then 0 else 109000) + (if b0095 then 0 else 109000) + (if b0097 then 0 else 109000) + (if b0098 then 0 else 109000) + (if b0099 then 0 else 109000) + (if b0100 then 0 else 109000) + (if b0101 then 0 else 109000) + (if b0102 then 0 else 109000) + (if b0103 then 0 else 109000) + (if b0104 then 0 else 109000) + (if b0105 then 0 else 109000) + (if b0149 then 0 else 109000) + (if b0151 then 0 else 109000) + (if b0152 then 0 else 109000) + (if b0153 then 0 else 109000) + (if b0154 then 0 else 109000) + (if b0155 then 0 else 109000) + (if b0156 then 0 else 109000) + (if b0157 then 0 else 109000) + (if b0159 then 0 else 109000) + (if b0203 then 0 else 109000) + (if b0204 then 0 else 109000) + (if b0205 then 0 else 109000) + (if b0206 then 0 else 109000) + (if b0207 then 0 else 109000) + (if b0208 then 0 else 109000) + (if b0209 then 0 else 109000) + (if b0210 then 0 else 109000) + (if b0211 then 0 else 109000) + (if b0212 then 0 else 109000) + (if b0213 then 0 else 109000) + (if b0215 then 0 else 109000) + (if b0216 then 0 else 109000) + (if b0244 then 0 else 109000) + (if b0245 then 0 else 109000) + (if b0246 then 0 else 109000) + (if b0247 then 0 else 109000) + (if b0248 then 0 else 109000) + (if b0249 then 0 else 109000) + (if b0250 then 0 else 109000) + (if b0251 then 0 else 109000) + (if b0252 then 0 else 109000) + (if b0253 then 0 else 109000) + (if b0254 then 0 else 109000) + (if b0255 then 0 else 109000) + (if b0256 then 0 else 109000) + (if b0257 then 0 else 109000) + (if b0258 then 0 else 109000) + (if b0259 then 0 else 109000) + (if b0260 then 0 else 109000) + (if b0261 then 0 else 109000) + (if b0262 then 0 else 109000) + (if b0263 then 0 else 109000) + (if b0264 then 0 else 109000) + (if b0265 then 0 else 109000) + (if b0266 then 0 else 109000) + (if b0267 then 0 else 109000) + (if b0268 then 0 else 109000) + (if b0269 then 0 else 109000) + (if b0270 then 0 else 109000) + (if b0271 then 0 else 109000) + (if b0272 then 0 else 109000) + (if b0273 then 0 else 109000) < 441
}
Prover Time taken = 13.344555
Added Horn clause: 5 && 68 && 77 && 14 && 34 && 0 && 0 && 0 && 0 && 0 && 0 => 86
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/datamining/covariance/kernel3.bpl.ice2.bpl
Total learner time was 00:00:00.1302500
Verifying $kernel3: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool, b0228: bool, b0229: bool, b0230: bool, b0231: bool, b0232: bool, b0233: bool, b0234: bool, b0235: bool, b0236: bool, b0237: bool, b0238: bool, b0239: bool, b0240: bool, b0241: bool, b0242: bool, b0243: bool, b0244: bool, b0245: bool, b0246: bool, b0247: bool, b0248: bool, b0249: bool, b0250: bool, b0251: bool, b0252: bool, b0253: bool, b0254: bool, b0255: bool, b0256: bool, b0257: bool, b0258: bool, b0259: bool, b0260: bool, b0261: bool, b0262: bool, b0263: bool, b0264: bool, b0265: bool, b0266: bool, b0267: bool, b0268: bool, b0269: bool, b0270: bool, b0271: bool, b0272: bool, b0273: bool) : bool
{
  0 + (if b0000 then 0 else 109000) + (if b0001 then 0 else 109000) + (if b0002 then 0 else 109000) + (if b0003 then 0 else 109000) + (if b0005 then 0 else 109000) + (if b0007 then 0 else 109000) + (if b0008 then 0 else 109000) + (if b0009 then 0 else 109000) + (if b0010 then 0 else 109000) + (if b0012 then 0 else 109000) + (if b0014 then 0 else 109000) + (if b0016 then 0 else 109000) + (if b0017 then 0 else 109000) + (if b0018 then 0 else 109000) + (if b0019 then 0 else 109000) + (if b0020 then 0 else 109000) + (if b0022 then 0 else 109000) + (if b0023 then 0 else 109000) + (if b0026 then 0 else 109000) + (if b0028 then 0 else 109000) + (if b0031 then 0 else 109000) + (if b0032 then 0 else 109000) + (if b0033 then 0 else 109000) + (if b0034 then 0 else 109000) + (if b0035 then 0 else 109000) + (if b0039 then 0 else 109000) + (if b0040 then 0 else 109000) + (if b0041 then 0 else 109000) + (if b0042 then 0 else 109000) + (if b0045 then 0 else 109000) + (if b0047 then 0 else 109000) + (if b0048 then 0 else 109000) + (if b0049 then 0 else 109000) + (if b0050 then 0 else 109000) + (if b0051 then 0 else 109000) + (if b0054 then 0 else 109000) + (if b0055 then 0 else 109000) + (if b0058 then 0 else 109000) + (if b0060 then 0 else 109000) + (if b0061 then 0 else 109000) + (if b0062 then 0 else 109000) + (if b0063 then 0 else 109000) + (if b0064 then 0 else 109000) + (if b0065 then 0 else 109000) + (if b0066 then 0 else 109000) + (if b0072 then 0 else 109000) + (if b0074 then 0 else 109000) + (if b0076 then 0 else 109000) + (if b0077 then 0 else 109000) + (if b0078 then 0 else 109000) + (if b0079 then 0 else 109000) + (if b0080 then 0 else 109000) + (if b0081 then 0 else 109000) + (if b0082 then 0 else 109000) + (if b0083 then 0 else 109000) + (if b0091 then 0 else 109000) + (if b0092 then 0 else 109000) + (if b0095 then 0 else 109000) + (if b0097 then 0 else 109000) + (if b0098 then 0 else 109000) + (if b0099 then 0 else 109000) + (if b0100 then 0 else 109000) + (if b0101 then 0 else 109000) + (if b0102 then 0 else 109000) + (if b0103 then 0 else 109000) + (if b0104 then 0 else 109000) + (if b0105 then 0 else 109000) + (if b0149 then 0 else 109000) + (if b0151 then 0 else 109000) + (if b0152 then 0 else 109000) + (if b0153 then 0 else 109000) + (if b0154 then 0 else 109000) + (if b0155 then 0 else 109000) + (if b0156 then 0 else 109000) + (if b0157 then 0 else 109000) + (if b0159 then 0 else 109000) + (if b0203 then 0 else 109000) + (if b0204 then 0 else 109000) + (if b0205 then 0 else 109000) + (if b0206 then 0 else 109000) + (if b0207 then 0 else 109000) + (if b0208 then 0 else 109000) + (if b0209 then 0 else 109000) + (if b0210 then 0 else 109000) + (if b0211 then 0 else 109000) + (if b0212 then 0 else 109000) + (if b0213 then 0 else 109000) + (if b0215 then 0 else 109000) + (if b0216 then 0 else 109000) + (if b0244 then 0 else 109000) + (if b0245 then 0 else 109000) + (if b0246 then 0 else 109000) + (if b0247 then 0 else 109000) + (if b0248 then 0 else 109000) + (if b0249 then 0 else 109000) + (if b0250 then 0 else 109000) + (if b0251 then 0 else 109000) + (if b0252 then 0 else 109000) + (if b0253 then 0 else 109000) + (if b0254 then 0 else 109000) + (if b0255 then 0 else 109000) + (if b0256 then 0 else 109000) + (if b0257 then 0 else 109000) + (if b0258 then 0 else 109000) + (if b0259 then 0 else 109000) + (if b0260 then 0 else 109000) + (if b0261 then 0 else 109000) + (if b0262 then 0 else 109000) + (if b0263 then 0 else 109000) + (if b0264 then 0 else 109000) + (if b0265 then 0 else 109000) + (if b0266 then 0 else 109000) + (if b0267 then 0 else 109000) + (if b0268 then 0 else 109000) + (if b0269 then 0 else 109000) + (if b0270 then 0 else 109000) + (if b0271 then 0 else 109000) + (if b0272 then 0 else 109000) + (if b0273 then 0 else 109000) < 441
}
Prover Time taken = 7.372023
Added Horn clause: 9 && 81 && 0 && 71 && 82 && 0 && 0 && 0 && 84 && 0 && 87 => 88
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/datamining/covariance/kernel3.bpl.ice2.bpl
Total learner time was 00:00:00.1306100
Verifying $kernel3: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool, b0228: bool, b0229: bool, b0230: bool, b0231: bool, b0232: bool, b0233: bool, b0234: bool, b0235: bool, b0236: bool, b0237: bool, b0238: bool, b0239: bool, b0240: bool, b0241: bool, b0242: bool, b0243: bool, b0244: bool, b0245: bool, b0246: bool, b0247: bool, b0248: bool, b0249: bool, b0250: bool, b0251: bool, b0252: bool, b0253: bool, b0254: bool, b0255: bool, b0256: bool, b0257: bool, b0258: bool, b0259: bool, b0260: bool, b0261: bool, b0262: bool, b0263: bool, b0264: bool, b0265: bool, b0266: bool, b0267: bool, b0268: bool, b0269: bool, b0270: bool, b0271: bool, b0272: bool, b0273: bool) : bool
{
  0 + (if b0000 then 0 else 109000) + (if b0001 then 0 else 109000) + (if b0002 then 0 else 109000) + (if b0003 then 0 else 109000) + (if b0005 then 0 else 109000) + (if b0007 then 0 else 109000) + (if b0008 then 0 else 109000) + (if b0009 then 0 else 109000) + (if b0010 then 0 else 109000) + (if b0012 then 0 else 109000) + (if b0014 then 0 else 109000) + (if b0016 then 0 else 109000) + (if b0017 then 0 else 109000) + (if b0018 then 0 else 109000) + (if b0019 then 0 else 109000) + (if b0020 then 0 else 109000) + (if b0022 then 0 else 109000) + (if b0023 then 0 else 109000) + (if b0026 then 0 else 109000) + (if b0028 then 0 else 109000) + (if b0031 then 0 else 109000) + (if b0032 then 0 else 109000) + (if b0033 then 0 else 109000) + (if b0034 then 0 else 109000) + (if b0035 then 0 else 109000) + (if b0039 then 0 else 109000) + (if b0040 then 0 else 109000) + (if b0041 then 0 else 109000) + (if b0042 then 0 else 109000) + (if b0045 then 0 else 109000) + (if b0047 then 0 else 109000) + (if b0048 then 0 else 109000) + (if b0049 then 0 else 109000) + (if b0050 then 0 else 109000) + (if b0054 then 0 else 109000) + (if b0055 then 0 else 109000) + (if b0058 then 0 else 109000) + (if b0060 then 0 else 109000) + (if b0061 then 0 else 109000) + (if b0062 then 0 else 109000) + (if b0063 then 0 else 109000) + (if b0064 then 0 else 109000) + (if b0065 then 0 else 109000) + (if b0066 then 0 else 109000) + (if b0072 then 0 else 109000) + (if b0074 then 0 else 109000) + (if b0076 then 0 else 109000) + (if b0077 then 0 else 109000) + (if b0078 then 0 else 109000) + (if b0079 then 0 else 109000) + (if b0080 then 0 else 109000) + (if b0081 then 0 else 109000) + (if b0082 then 0 else 109000) + (if b0083 then 0 else 109000) + (if b0091 then 0 else 109000) + (if b0092 then 0 else 109000) + (if b0095 then 0 else 109000) + (if b0097 then 0 else 109000) + (if b0098 then 0 else 109000) + (if b0099 then 0 else 109000) + (if b0100 then 0 else 109000) + (if b0101 then 0 else 109000) + (if b0102 then 0 else 109000) + (if b0103 then 0 else 109000) + (if b0104 then 0 else 109000) + (if b0105 then 0 else 109000) + (if b0149 then 0 else 109000) + (if b0151 then 0 else 109000) + (if b0152 then 0 else 109000) + (if b0153 then 0 else 109000) + (if b0154 then 0 else 109000) + (if b0155 then 0 else 109000) + (if b0156 then 0 else 109000) + (if b0157 then 0 else 109000) + (if b0159 then 0 else 109000) + (if b0203 then 0 else 109000) + (if b0204 then 0 else 109000) + (if b0205 then 0 else 109000) + (if b0206 then 0 else 109000) + (if b0207 then 0 else 109000) + (if b0208 then 0 else 109000) + (if b0209 then 0 else 109000) + (if b0210 then 0 else 109000) + (if b0211 then 0 else 109000) + (if b0212 then 0 else 109000) + (if b0213 then 0 else 109000) + (if b0215 then 0 else 109000) + (if b0216 then 0 else 109000) + (if b0244 then 0 else 109000) + (if b0245 then 0 else 109000) + (if b0246 then 0 else 109000) + (if b0247 then 0 else 109000) + (if b0248 then 0 else 109000) + (if b0249 then 0 else 109000) + (if b0250 then 0 else 109000) + (if b0251 then 0 else 109000) + (if b0252 then 0 else 109000) + (if b0253 then 0 else 109000) + (if b0254 then 0 else 109000) + (if b0255 then 0 else 109000) + (if b0256 then 0 else 109000) + (if b0257 then 0 else 109000) + (if b0258 then 0 else 109000) + (if b0259 then 0 else 109000) + (if b0260 then 0 else 109000) + (if b0261 then 0 else 109000) + (if b0262 then 0 else 109000) + (if b0263 then 0 else 109000) + (if b0264 then 0 else 109000) + (if b0265 then 0 else 109000) + (if b0266 then 0 else 109000) + (if b0267 then 0 else 109000) + (if b0268 then 0 else 109000) + (if b0269 then 0 else 109000) + (if b0270 then 0 else 109000) + (if b0271 then 0 else 109000) + (if b0272 then 0 else 109000) + (if b0273 then 0 else 109000) < 441
}
Prover Time taken = 8.772277
Added Horn clause: 5 && 81 && 0 && 71 && 82 && 0 && 0 && 0 && 83 && 0 && 89 && 0 && 88 => 90
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/datamining/covariance/kernel3.bpl.ice2.bpl
Total learner time was 00:00:00.1304340
Verifying $kernel3: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool, b0228: bool, b0229: bool, b0230: bool, b0231: bool, b0232: bool, b0233: bool, b0234: bool, b0235: bool, b0236: bool, b0237: bool, b0238: bool, b0239: bool, b0240: bool, b0241: bool, b0242: bool, b0243: bool, b0244: bool, b0245: bool, b0246: bool, b0247: bool, b0248: bool, b0249: bool, b0250: bool, b0251: bool, b0252: bool, b0253: bool, b0254: bool, b0255: bool, b0256: bool, b0257: bool, b0258: bool, b0259: bool, b0260: bool, b0261: bool, b0262: bool, b0263: bool, b0264: bool, b0265: bool, b0266: bool, b0267: bool, b0268: bool, b0269: bool, b0270: bool, b0271: bool, b0272: bool, b0273: bool) : bool
{
  0 + (if b0000 then 0 else 109000) + (if b0001 then 0 else 109000) + (if b0002 then 0 else 109000) + (if b0003 then 0 else 109000) + (if b0005 then 0 else 109000) + (if b0007 then 0 else 109000) + (if b0008 then 0 else 109000) + (if b0009 then 0 else 109000) + (if b0010 then 0 else 109000) + (if b0012 then 0 else 109000) + (if b0014 then 0 else 109000) + (if b0016 then 0 else 109000) + (if b0017 then 0 else 109000) + (if b0018 then 0 else 109000) + (if b0019 then 0 else 109000) + (if b0020 then 0 else 109000) + (if b0022 then 0 else 109000) + (if b0023 then 0 else 109000) + (if b0026 then 0 else 109000) + (if b0028 then 0 else 109000) + (if b0031 then 0 else 109000) + (if b0032 then 0 else 109000) + (if b0033 then 0 else 109000) + (if b0034 then 0 else 109000) + (if b0035 then 0 else 109000) + (if b0039 then 0 else 109000) + (if b0040 then 0 else 109000) + (if b0041 then 0 else 109000) + (if b0042 then 0 else 109000) + (if b0045 then 0 else 109000) + (if b0047 then 0 else 109000) + (if b0048 then 0 else 109000) + (if b0049 then 0 else 109000) + (if b0050 then 0 else 109000) + (if b0054 then 0 else 109000) + (if b0055 then 0 else 109000) + (if b0058 then 0 else 109000) + (if b0060 then 0 else 109000) + (if b0061 then 0 else 109000) + (if b0062 then 0 else 109000) + (if b0063 then 0 else 109000) + (if b0064 then 0 else 109000) + (if b0065 then 0 else 109000) + (if b0066 then 0 else 109000) + (if b0072 then 0 else 109000) + (if b0074 then 0 else 109000) + (if b0076 then 0 else 109000) + (if b0077 then 0 else 109000) + (if b0078 then 0 else 109000) + (if b0079 then 0 else 109000) + (if b0080 then 0 else 109000) + (if b0081 then 0 else 109000) + (if b0082 then 0 else 109000) + (if b0083 then 0 else 109000) + (if b0091 then 0 else 109000) + (if b0092 then 0 else 109000) + (if b0095 then 0 else 109000) + (if b0097 then 0 else 109000) + (if b0098 then 0 else 109000) + (if b0099 then 0 else 109000) + (if b0100 then 0 else 109000) + (if b0101 then 0 else 109000) + (if b0102 then 0 else 109000) + (if b0103 then 0 else 109000) + (if b0104 then 0 else 109000) + (if b0105 then 0 else 109000) + (if b0151 then 0 else 109000) + (if b0152 then 0 else 109000) + (if b0153 then 0 else 109000) + (if b0154 then 0 else 109000) + (if b0155 then 0 else 109000) + (if b0156 then 0 else 109000) + (if b0157 then 0 else 109000) + (if b0159 then 0 else 109000) + (if b0203 then 0 else 109000) + (if b0204 then 0 else 109000) + (if b0205 then 0 else 109000) + (if b0206 then 0 else 109000) + (if b0207 then 0 else 109000) + (if b0208 then 0 else 109000) + (if b0209 then 0 else 109000) + (if b0210 then 0 else 109000) + (if b0211 then 0 else 109000) + (if b0212 then 0 else 109000) + (if b0213 then 0 else 109000) + (if b0215 then 0 else 109000) + (if b0216 then 0 else 109000) + (if b0244 then 0 else 109000) + (if b0245 then 0 else 109000) + (if b0246 then 0 else 109000) + (if b0247 then 0 else 109000) + (if b0248 then 0 else 109000) + (if b0249 then 0 else 109000) + (if b0250 then 0 else 109000) + (if b0251 then 0 else 109000) + (if b0252 then 0 else 109000) + (if b0253 then 0 else 109000) + (if b0254 then 0 else 109000) + (if b0255 then 0 else 109000) + (if b0256 then 0 else 109000) + (if b0257 then 0 else 109000) + (if b0258 then 0 else 109000) + (if b0259 then 0 else 109000) + (if b0260 then 0 else 109000) + (if b0261 then 0 else 109000) + (if b0262 then 0 else 109000) + (if b0263 then 0 else 109000) + (if b0264 then 0 else 109000) + (if b0265 then 0 else 109000) + (if b0266 then 0 else 109000) + (if b0267 then 0 else 109000) + (if b0268 then 0 else 109000) + (if b0269 then 0 else 109000) + (if b0270 then 0 else 109000) + (if b0271 then 0 else 109000) + (if b0272 then 0 else 109000) + (if b0273 then 0 else 109000) < 441
}
Prover Time taken = 8.728285
Added Horn clause: 91 => 92
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/datamining/covariance/kernel3.bpl.ice2.bpl
Total learner time was 00:00:00.1296060
Verifying $kernel3: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool, b0228: bool, b0229: bool, b0230: bool, b0231: bool, b0232: bool, b0233: bool, b0234: bool, b0235: bool, b0236: bool, b0237: bool, b0238: bool, b0239: bool, b0240: bool, b0241: bool, b0242: bool, b0243: bool, b0244: bool, b0245: bool, b0246: bool, b0247: bool, b0248: bool, b0249: bool, b0250: bool, b0251: bool, b0252: bool, b0253: bool, b0254: bool, b0255: bool, b0256: bool, b0257: bool, b0258: bool, b0259: bool, b0260: bool, b0261: bool, b0262: bool, b0263: bool, b0264: bool, b0265: bool, b0266: bool, b0267: bool, b0268: bool, b0269: bool, b0270: bool, b0271: bool, b0272: bool, b0273: bool) : bool
{
  0 + (if b0000 then 0 else 109000) + (if b0001 then 0 else 109000) + (if b0002 then 0 else 109000) + (if b0003 then 0 else 109000) + (if b0005 then 0 else 109000) + (if b0007 then 0 else 109000) + (if b0008 then 0 else 109000) + (if b0009 then 0 else 109000) + (if b0010 then 0 else 109000) + (if b0012 then 0 else 109000) + (if b0014 then 0 else 109000) + (if b0016 then 0 else 109000) + (if b0017 then 0 else 109000) + (if b0018 then 0 else 109000) + (if b0020 then 0 else 109000) + (if b0022 then 0 else 109000) + (if b0023 then 0 else 109000) + (if b0026 then 0 else 109000) + (if b0028 then 0 else 109000) + (if b0031 then 0 else 109000) + (if b0032 then 0 else 109000) + (if b0033 then 0 else 109000) + (if b0034 then 0 else 109000) + (if b0035 then 0 else 109000) + (if b0039 then 0 else 109000) + (if b0040 then 0 else 109000) + (if b0041 then 0 else 109000) + (if b0042 then 0 else 109000) + (if b0045 then 0 else 109000) + (if b0047 then 0 else 109000) + (if b0048 then 0 else 109000) + (if b0049 then 0 else 109000) + (if b0050 then 0 else 109000) + (if b0054 then 0 else 109000) + (if b0055 then 0 else 109000) + (if b0058 then 0 else 109000) + (if b0060 then 0 else 109000) + (if b0061 then 0 else 109000) + (if b0062 then 0 else 109000) + (if b0063 then 0 else 109000) + (if b0064 then 0 else 109000) + (if b0065 then 0 else 109000) + (if b0066 then 0 else 109000) + (if b0072 then 0 else 109000) + (if b0074 then 0 else 109000) + (if b0076 then 0 else 109000) + (if b0077 then 0 else 109000) + (if b0078 then 0 else 109000) + (if b0079 then 0 else 109000) + (if b0080 then 0 else 109000) + (if b0081 then 0 else 109000) + (if b0082 then 0 else 109000) + (if b0083 then 0 else 109000) + (if b0091 then 0 else 109000) + (if b0092 then 0 else 109000) + (if b0095 then 0 else 109000) + (if b0097 then 0 else 109000) + (if b0098 then 0 else 109000) + (if b0099 then 0 else 109000) + (if b0100 then 0 else 109000) + (if b0101 then 0 else 109000) + (if b0102 then 0 else 109000) + (if b0103 then 0 else 109000) + (if b0104 then 0 else 109000) + (if b0105 then 0 else 109000) + (if b0151 then 0 else 109000) + (if b0152 then 0 else 109000) + (if b0153 then 0 else 109000) + (if b0154 then 0 else 109000) + (if b0155 then 0 else 109000) + (if b0156 then 0 else 109000) + (if b0157 then 0 else 109000) + (if b0159 then 0 else 109000) + (if b0203 then 0 else 109000) + (if b0204 then 0 else 109000) + (if b0205 then 0 else 109000) + (if b0206 then 0 else 109000) + (if b0207 then 0 else 109000) + (if b0208 then 0 else 109000) + (if b0209 then 0 else 109000) + (if b0210 then 0 else 109000) + (if b0211 then 0 else 109000) + (if b0212 then 0 else 109000) + (if b0213 then 0 else 109000) + (if b0215 then 0 else 109000) + (if b0216 then 0 else 109000) + (if b0244 then 0 else 109000) + (if b0245 then 0 else 109000) + (if b0246 then 0 else 109000) + (if b0247 then 0 else 109000) + (if b0248 then 0 else 109000) + (if b0249 then 0 else 109000) + (if b0250 then 0 else 109000) + (if b0251 then 0 else 109000) + (if b0252 then 0 else 109000) + (if b0253 then 0 else 109000) + (if b0254 then 0 else 109000) + (if b0255 then 0 else 109000) + (if b0256 then 0 else 109000) + (if b0257 then 0 else 109000) + (if b0258 then 0 else 109000) + (if b0259 then 0 else 109000) + (if b0260 then 0 else 109000) + (if b0261 then 0 else 109000) + (if b0262 then 0 else 109000) + (if b0263 then 0 else 109000) + (if b0264 then 0 else 109000) + (if b0265 then 0 else 109000) + (if b0266 then 0 else 109000) + (if b0267 then 0 else 109000) + (if b0268 then 0 else 109000) + (if b0269 then 0 else 109000) + (if b0270 then 0 else 109000) + (if b0271 then 0 else 109000) + (if b0272 then 0 else 109000) + (if b0273 then 0 else 109000) < 441
}
Prover Time taken = 6.507248
Added Horn clause: 91 && 81 && 92 => 93
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/datamining/covariance/kernel3.bpl.ice2.bpl
Total learner time was 00:00:00.1323280
Verifying $kernel3: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool, b0228: bool, b0229: bool, b0230: bool, b0231: bool, b0232: bool, b0233: bool, b0234: bool, b0235: bool, b0236: bool, b0237: bool, b0238: bool, b0239: bool, b0240: bool, b0241: bool, b0242: bool, b0243: bool, b0244: bool, b0245: bool, b0246: bool, b0247: bool, b0248: bool, b0249: bool, b0250: bool, b0251: bool, b0252: bool, b0253: bool, b0254: bool, b0255: bool, b0256: bool, b0257: bool, b0258: bool, b0259: bool, b0260: bool, b0261: bool, b0262: bool, b0263: bool, b0264: bool, b0265: bool, b0266: bool, b0267: bool, b0268: bool, b0269: bool, b0270: bool, b0271: bool, b0272: bool, b0273: bool) : bool
{
  0 + (if b0000 then 0 else 109000) + (if b0001 then 0 else 109000) + (if b0002 then 0 else 109000) + (if b0003 then 0 else 109000) + (if b0005 then 0 else 109000) + (if b0007 then 0 else 109000) + (if b0008 then 0 else 109000) + (if b0009 then 0 else 109000) + (if b0010 then 0 else 109000) + (if b0012 then 0 else 109000) + (if b0014 then 0 else 109000) + (if b0016 then 0 else 109000) + (if b0017 then 0 else 109000) + (if b0018 then 0 else 109000) + (if b0020 then 0 else 109000) + (if b0022 then 0 else 109000) + (if b0023 then 0 else 109000) + (if b0026 then 0 else 109000) + (if b0028 then 0 else 109000) + (if b0031 then 0 else 109000) + (if b0032 then 0 else 109000) + (if b0033 then 0 else 109000) + (if b0034 then 0 else 109000) + (if b0039 then 0 else 109000) + (if b0040 then 0 else 109000) + (if b0041 then 0 else 109000) + (if b0042 then 0 else 109000) + (if b0045 then 0 else 109000) + (if b0047 then 0 else 109000) + (if b0048 then 0 else 109000) + (if b0049 then 0 else 109000) + (if b0050 then 0 else 109000) + (if b0054 then 0 else 109000) + (if b0055 then 0 else 109000) + (if b0058 then 0 else 109000) + (if b0060 then 0 else 109000) + (if b0061 then 0 else 109000) + (if b0062 then 0 else 109000) + (if b0063 then 0 else 109000) + (if b0064 then 0 else 109000) + (if b0065 then 0 else 109000) + (if b0066 then 0 else 109000) + (if b0072 then 0 else 109000) + (if b0074 then 0 else 109000) + (if b0076 then 0 else 109000) + (if b0077 then 0 else 109000) + (if b0078 then 0 else 109000) + (if b0079 then 0 else 109000) + (if b0080 then 0 else 109000) + (if b0081 then 0 else 109000) + (if b0082 then 0 else 109000) + (if b0083 then 0 else 109000) + (if b0091 then 0 else 109000) + (if b0092 then 0 else 109000) + (if b0095 then 0 else 109000) + (if b0097 then 0 else 109000) + (if b0098 then 0 else 109000) + (if b0099 then 0 else 109000) + (if b0100 then 0 else 109000) + (if b0101 then 0 else 109000) + (if b0102 then 0 else 109000) + (if b0103 then 0 else 109000) + (if b0104 then 0 else 109000) + (if b0105 then 0 else 109000) + (if b0151 then 0 else 109000) + (if b0152 then 0 else 109000) + (if b0153 then 0 else 109000) + (if b0154 then 0 else 109000) + (if b0155 then 0 else 109000) + (if b0156 then 0 else 109000) + (if b0157 then 0 else 109000) + (if b0159 then 0 else 109000) + (if b0203 then 0 else 109000) + (if b0204 then 0 else 109000) + (if b0205 then 0 else 109000) + (if b0206 then 0 else 109000) + (if b0207 then 0 else 109000) + (if b0208 then 0 else 109000) + (if b0209 then 0 else 109000) + (if b0210 then 0 else 109000) + (if b0211 then 0 else 109000) + (if b0212 then 0 else 109000) + (if b0213 then 0 else 109000) + (if b0215 then 0 else 109000) + (if b0216 then 0 else 109000) + (if b0244 then 0 else 109000) + (if b0245 then 0 else 109000) + (if b0246 then 0 else 109000) + (if b0247 then 0 else 109000) + (if b0248 then 0 else 109000) + (if b0249 then 0 else 109000) + (if b0250 then 0 else 109000) + (if b0251 then 0 else 109000) + (if b0252 then 0 else 109000) + (if b0253 then 0 else 109000) + (if b0254 then 0 else 109000) + (if b0255 then 0 else 109000) + (if b0256 then 0 else 109000) + (if b0257 then 0 else 109000) + (if b0258 then 0 else 109000) + (if b0259 then 0 else 109000) + (if b0260 then 0 else 109000) + (if b0261 then 0 else 109000) + (if b0262 then 0 else 109000) + (if b0263 then 0 else 109000) + (if b0264 then 0 else 109000) + (if b0265 then 0 else 109000) + (if b0266 then 0 else 109000) + (if b0267 then 0 else 109000) + (if b0268 then 0 else 109000) + (if b0269 then 0 else 109000) + (if b0270 then 0 else 109000) + (if b0271 then 0 else 109000) + (if b0272 then 0 else 109000) + (if b0273 then 0 else 109000) < 441
}
Prover Time taken = 7.829537
Added Horn clause: 94 && 79 && 95 && 96 && 97 && 0 && 0 => 98
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/datamining/covariance/kernel3.bpl.ice2.bpl
Total learner time was 00:00:00.1322350
Verifying $kernel3: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool, b0228: bool, b0229: bool, b0230: bool, b0231: bool, b0232: bool, b0233: bool, b0234: bool, b0235: bool, b0236: bool, b0237: bool, b0238: bool, b0239: bool, b0240: bool, b0241: bool, b0242: bool, b0243: bool, b0244: bool, b0245: bool, b0246: bool, b0247: bool, b0248: bool, b0249: bool, b0250: bool, b0251: bool, b0252: bool, b0253: bool, b0254: bool, b0255: bool, b0256: bool, b0257: bool, b0258: bool, b0259: bool, b0260: bool, b0261: bool, b0262: bool, b0263: bool, b0264: bool, b0265: bool, b0266: bool, b0267: bool, b0268: bool, b0269: bool, b0270: bool, b0271: bool, b0272: bool, b0273: bool) : bool
{
  0 + (if b0000 then 0 else 109000) + (if b0001 then 0 else 109000) + (if b0002 then 0 else 109000) + (if b0003 then 0 else 109000) + (if b0005 then 0 else 109000) + (if b0007 then 0 else 109000) + (if b0008 then 0 else 109000) + (if b0009 then 0 else 109000) + (if b0010 then 0 else 109000) + (if b0012 then 0 else 109000) + (if b0014 then 0 else 109000) + (if b0016 then 0 else 109000) + (if b0017 then 0 else 109000) + (if b0018 then 0 else 109000) + (if b0020 then 0 else 109000) + (if b0022 then 0 else 109000) + (if b0023 then 0 else 109000) + (if b0026 then 0 else 109000) + (if b0028 then 0 else 109000) + (if b0031 then 0 else 109000) + (if b0032 then 0 else 109000) + (if b0033 then 0 else 109000) + (if b0034 then 0 else 109000) + (if b0039 then 0 else 109000) + (if b0040 then 0 else 109000) + (if b0041 then 0 else 109000) + (if b0042 then 0 else 109000) + (if b0045 then 0 else 109000) + (if b0047 then 0 else 109000) + (if b0048 then 0 else 109000) + (if b0049 then 0 else 109000) + (if b0050 then 0 else 109000) + (if b0054 then 0 else 109000) + (if b0055 then 0 else 109000) + (if b0058 then 0 else 109000) + (if b0060 then 0 else 109000) + (if b0061 then 0 else 109000) + (if b0062 then 0 else 109000) + (if b0063 then 0 else 109000) + (if b0064 then 0 else 109000) + (if b0065 then 0 else 109000) + (if b0072 then 0 else 109000) + (if b0074 then 0 else 109000) + (if b0076 then 0 else 109000) + (if b0077 then 0 else 109000) + (if b0078 then 0 else 109000) + (if b0079 then 0 else 109000) + (if b0080 then 0 else 109000) + (if b0081 then 0 else 109000) + (if b0082 then 0 else 109000) + (if b0083 then 0 else 109000) + (if b0091 then 0 else 109000) + (if b0092 then 0 else 109000) + (if b0095 then 0 else 109000) + (if b0097 then 0 else 109000) + (if b0098 then 0 else 109000) + (if b0099 then 0 else 109000) + (if b0100 then 0 else 109000) + (if b0101 then 0 else 109000) + (if b0102 then 0 else 109000) + (if b0103 then 0 else 109000) + (if b0104 then 0 else 109000) + (if b0105 then 0 else 109000) + (if b0151 then 0 else 109000) + (if b0152 then 0 else 109000) + (if b0153 then 0 else 109000) + (if b0154 then 0 else 109000) + (if b0155 then 0 else 109000) + (if b0156 then 0 else 109000) + (if b0157 then 0 else 109000) + (if b0159 then 0 else 109000) + (if b0203 then 0 else 109000) + (if b0204 then 0 else 109000) + (if b0205 then 0 else 109000) + (if b0206 then 0 else 109000) + (if b0207 then 0 else 109000) + (if b0208 then 0 else 109000) + (if b0209 then 0 else 109000) + (if b0210 then 0 else 109000) + (if b0211 then 0 else 109000) + (if b0212 then 0 else 109000) + (if b0213 then 0 else 109000) + (if b0215 then 0 else 109000) + (if b0216 then 0 else 109000) + (if b0244 then 0 else 109000) + (if b0245 then 0 else 109000) + (if b0246 then 0 else 109000) + (if b0247 then 0 else 109000) + (if b0248 then 0 else 109000) + (if b0249 then 0 else 109000) + (if b0250 then 0 else 109000) + (if b0251 then 0 else 109000) + (if b0252 then 0 else 109000) + (if b0253 then 0 else 109000) + (if b0254 then 0 else 109000) + (if b0255 then 0 else 109000) + (if b0256 then 0 else 109000) + (if b0257 then 0 else 109000) + (if b0258 then 0 else 109000) + (if b0259 then 0 else 109000) + (if b0260 then 0 else 109000) + (if b0261 then 0 else 109000) + (if b0262 then 0 else 109000) + (if b0263 then 0 else 109000) + (if b0264 then 0 else 109000) + (if b0265 then 0 else 109000) + (if b0266 then 0 else 109000) + (if b0267 then 0 else 109000) + (if b0268 then 0 else 109000) + (if b0269 then 0 else 109000) + (if b0270 then 0 else 109000) + (if b0271 then 0 else 109000) + (if b0272 then 0 else 109000) + (if b0273 then 0 else 109000) < 441
}
Prover Time taken = 6.731622
Added Horn clause: 91 && 81 && 92 && 71 && 99 && 0 && 0 && 0 && 100 => 101
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/datamining/covariance/kernel3.bpl.ice2.bpl
Total learner time was 00:00:00.1317570
Verifying $kernel3: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool, b0228: bool, b0229: bool, b0230: bool, b0231: bool, b0232: bool, b0233: bool, b0234: bool, b0235: bool, b0236: bool, b0237: bool, b0238: bool, b0239: bool, b0240: bool, b0241: bool, b0242: bool, b0243: bool, b0244: bool, b0245: bool, b0246: bool, b0247: bool, b0248: bool, b0249: bool, b0250: bool, b0251: bool, b0252: bool, b0253: bool, b0254: bool, b0255: bool, b0256: bool, b0257: bool, b0258: bool, b0259: bool, b0260: bool, b0261: bool, b0262: bool, b0263: bool, b0264: bool, b0265: bool, b0266: bool, b0267: bool, b0268: bool, b0269: bool, b0270: bool, b0271: bool, b0272: bool, b0273: bool) : bool
{
  0 + (if b0000 then 0 else 109000) + (if b0001 then 0 else 109000) + (if b0002 then 0 else 109000) + (if b0003 then 0 else 109000) + (if b0005 then 0 else 109000) + (if b0007 then 0 else 109000) + (if b0008 then 0 else 109000) + (if b0009 then 0 else 109000) + (if b0010 then 0 else 109000) + (if b0012 then 0 else 109000) + (if b0014 then 0 else 109000) + (if b0016 then 0 else 109000) + (if b0017 then 0 else 109000) + (if b0018 then 0 else 109000) + (if b0020 then 0 else 109000) + (if b0022 then 0 else 109000) + (if b0023 then 0 else 109000) + (if b0026 then 0 else 109000) + (if b0028 then 0 else 109000) + (if b0031 then 0 else 109000) + (if b0032 then 0 else 109000) + (if b0033 then 0 else 109000) + (if b0034 then 0 else 109000) + (if b0039 then 0 else 109000) + (if b0040 then 0 else 109000) + (if b0041 then 0 else 109000) + (if b0042 then 0 else 109000) + (if b0045 then 0 else 109000) + (if b0047 then 0 else 109000) + (if b0048 then 0 else 109000) + (if b0049 then 0 else 109000) + (if b0050 then 0 else 109000) + (if b0054 then 0 else 109000) + (if b0055 then 0 else 109000) + (if b0058 then 0 else 109000) + (if b0060 then 0 else 109000) + (if b0061 then 0 else 109000) + (if b0062 then 0 else 109000) + (if b0063 then 0 else 109000) + (if b0064 then 0 else 109000) + (if b0065 then 0 else 109000) + (if b0072 then 0 else 109000) + (if b0074 then 0 else 109000) + (if b0076 then 0 else 109000) + (if b0077 then 0 else 109000) + (if b0078 then 0 else 109000) + (if b0079 then 0 else 109000) + (if b0080 then 0 else 109000) + (if b0081 then 0 else 109000) + (if b0082 then 0 else 109000) + (if b0091 then 0 else 109000) + (if b0092 then 0 else 109000) + (if b0095 then 0 else 109000) + (if b0097 then 0 else 109000) + (if b0098 then 0 else 109000) + (if b0099 then 0 else 109000) + (if b0100 then 0 else 109000) + (if b0101 then 0 else 109000) + (if b0102 then 0 else 109000) + (if b0103 then 0 else 109000) + (if b0104 then 0 else 109000) + (if b0105 then 0 else 109000) + (if b0151 then 0 else 109000) + (if b0152 then 0 else 109000) + (if b0153 then 0 else 109000) + (if b0154 then 0 else 109000) + (if b0155 then 0 else 109000) + (if b0156 then 0 else 109000) + (if b0157 then 0 else 109000) + (if b0159 then 0 else 109000) + (if b0203 then 0 else 109000) + (if b0204 then 0 else 109000) + (if b0205 then 0 else 109000) + (if b0206 then 0 else 109000) + (if b0207 then 0 else 109000) + (if b0208 then 0 else 109000) + (if b0209 then 0 else 109000) + (if b0210 then 0 else 109000) + (if b0211 then 0 else 109000) + (if b0212 then 0 else 109000) + (if b0213 then 0 else 109000) + (if b0215 then 0 else 109000) + (if b0216 then 0 else 109000) + (if b0244 then 0 else 109000) + (if b0245 then 0 else 109000) + (if b0246 then 0 else 109000) + (if b0247 then 0 else 109000) + (if b0248 then 0 else 109000) + (if b0249 then 0 else 109000) + (if b0250 then 0 else 109000) + (if b0251 then 0 else 109000) + (if b0252 then 0 else 109000) + (if b0253 then 0 else 109000) + (if b0254 then 0 else 109000) + (if b0255 then 0 else 109000) + (if b0256 then 0 else 109000) + (if b0257 then 0 else 109000) + (if b0258 then 0 else 109000) + (if b0259 then 0 else 109000) + (if b0260 then 0 else 109000) + (if b0261 then 0 else 109000) + (if b0262 then 0 else 109000) + (if b0263 then 0 else 109000) + (if b0264 then 0 else 109000) + (if b0265 then 0 else 109000) + (if b0266 then 0 else 109000) + (if b0267 then 0 else 109000) + (if b0268 then 0 else 109000) + (if b0269 then 0 else 109000) + (if b0270 then 0 else 109000) + (if b0271 then 0 else 109000) + (if b0272 then 0 else 109000) + (if b0273 then 0 else 109000) < 441
}
Prover Time taken = 4.283908
Added Horn clause: 91 && 81 && 92 && 71 && 99 && 0 && 0 && 0 && 100 && 0 && 101 => 102
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/datamining/covariance/kernel3.bpl.ice2.bpl
Total learner time was 00:00:00.1330610
Verifying $kernel3: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool, b0228: bool, b0229: bool, b0230: bool, b0231: bool, b0232: bool, b0233: bool, b0234: bool, b0235: bool, b0236: bool, b0237: bool, b0238: bool, b0239: bool, b0240: bool, b0241: bool, b0242: bool, b0243: bool, b0244: bool, b0245: bool, b0246: bool, b0247: bool, b0248: bool, b0249: bool, b0250: bool, b0251: bool, b0252: bool, b0253: bool, b0254: bool, b0255: bool, b0256: bool, b0257: bool, b0258: bool, b0259: bool, b0260: bool, b0261: bool, b0262: bool, b0263: bool, b0264: bool, b0265: bool, b0266: bool, b0267: bool, b0268: bool, b0269: bool, b0270: bool, b0271: bool, b0272: bool, b0273: bool) : bool
{
  0 + (if b0000 then 0 else 109000) + (if b0001 then 0 else 109000) + (if b0002 then 0 else 109000) + (if b0003 then 0 else 109000) + (if b0005 then 0 else 109000) + (if b0007 then 0 else 109000) + (if b0008 then 0 else 109000) + (if b0009 then 0 else 109000) + (if b0010 then 0 else 109000) + (if b0012 then 0 else 109000) + (if b0014 then 0 else 109000) + (if b0016 then 0 else 109000) + (if b0017 then 0 else 109000) + (if b0018 then 0 else 109000) + (if b0020 then 0 else 109000) + (if b0022 then 0 else 109000) + (if b0023 then 0 else 109000) + (if b0026 then 0 else 109000) + (if b0028 then 0 else 109000) + (if b0031 then 0 else 109000) + (if b0032 then 0 else 109000) + (if b0033 then 0 else 109000) + (if b0034 then 0 else 109000) + (if b0039 then 0 else 109000) + (if b0040 then 0 else 109000) + (if b0041 then 0 else 109000) + (if b0042 then 0 else 109000) + (if b0045 then 0 else 109000) + (if b0047 then 0 else 109000) + (if b0048 then 0 else 109000) + (if b0049 then 0 else 109000) + (if b0054 then 0 else 109000) + (if b0055 then 0 else 109000) + (if b0058 then 0 else 109000) + (if b0060 then 0 else 109000) + (if b0061 then 0 else 109000) + (if b0062 then 0 else 109000) + (if b0063 then 0 else 109000) + (if b0064 then 0 else 109000) + (if b0065 then 0 else 109000) + (if b0072 then 0 else 109000) + (if b0074 then 0 else 109000) + (if b0076 then 0 else 109000) + (if b0077 then 0 else 109000) + (if b0078 then 0 else 109000) + (if b0079 then 0 else 109000) + (if b0080 then 0 else 109000) + (if b0081 then 0 else 109000) + (if b0082 then 0 else 109000) + (if b0091 then 0 else 109000) + (if b0092 then 0 else 109000) + (if b0095 then 0 else 109000) + (if b0097 then 0 else 109000) + (if b0098 then 0 else 109000) + (if b0099 then 0 else 109000) + (if b0100 then 0 else 109000) + (if b0101 then 0 else 109000) + (if b0102 then 0 else 109000) + (if b0103 then 0 else 109000) + (if b0104 then 0 else 109000) + (if b0105 then 0 else 109000) + (if b0151 then 0 else 109000) + (if b0152 then 0 else 109000) + (if b0153 then 0 else 109000) + (if b0154 then 0 else 109000) + (if b0155 then 0 else 109000) + (if b0156 then 0 else 109000) + (if b0157 then 0 else 109000) + (if b0159 then 0 else 109000) + (if b0203 then 0 else 109000) + (if b0204 then 0 else 109000) + (if b0205 then 0 else 109000) + (if b0206 then 0 else 109000) + (if b0207 then 0 else 109000) + (if b0208 then 0 else 109000) + (if b0209 then 0 else 109000) + (if b0210 then 0 else 109000) + (if b0211 then 0 else 109000) + (if b0212 then 0 else 109000) + (if b0213 then 0 else 109000) + (if b0215 then 0 else 109000) + (if b0216 then 0 else 109000) + (if b0244 then 0 else 109000) + (if b0245 then 0 else 109000) + (if b0246 then 0 else 109000) + (if b0247 then 0 else 109000) + (if b0248 then 0 else 109000) + (if b0249 then 0 else 109000) + (if b0250 then 0 else 109000) + (if b0251 then 0 else 109000) + (if b0252 then 0 else 109000) + (if b0253 then 0 else 109000) + (if b0254 then 0 else 109000) + (if b0255 then 0 else 109000) + (if b0256 then 0 else 109000) + (if b0257 then 0 else 109000) + (if b0258 then 0 else 109000) + (if b0259 then 0 else 109000) + (if b0260 then 0 else 109000) + (if b0261 then 0 else 109000) + (if b0262 then 0 else 109000) + (if b0263 then 0 else 109000) + (if b0264 then 0 else 109000) + (if b0265 then 0 else 109000) + (if b0266 then 0 else 109000) + (if b0267 then 0 else 109000) + (if b0268 then 0 else 109000) + (if b0269 then 0 else 109000) + (if b0270 then 0 else 109000) + (if b0271 then 0 else 109000) + (if b0272 then 0 else 109000) + (if b0273 then 0 else 109000) < 441
}
Prover Time taken = 40.892134
Added Horn clause: 5 && 103 && 0 && 104 && 6 && 0 && 0 && 0 && 61 => 105
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/datamining/covariance/kernel3.bpl.ice2.bpl
Total learner time was 00:00:00.1332970
Verifying $kernel3: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool, b0228: bool, b0229: bool, b0230: bool, b0231: bool, b0232: bool, b0233: bool, b0234: bool, b0235: bool, b0236: bool, b0237: bool, b0238: bool, b0239: bool, b0240: bool, b0241: bool, b0242: bool, b0243: bool, b0244: bool, b0245: bool, b0246: bool, b0247: bool, b0248: bool, b0249: bool, b0250: bool, b0251: bool, b0252: bool, b0253: bool, b0254: bool, b0255: bool, b0256: bool, b0257: bool, b0258: bool, b0259: bool, b0260: bool, b0261: bool, b0262: bool, b0263: bool, b0264: bool, b0265: bool, b0266: bool, b0267: bool, b0268: bool, b0269: bool, b0270: bool, b0271: bool, b0272: bool, b0273: bool) : bool
{
  0 + (if b0000 then 0 else 109000) + (if b0001 then 0 else 109000) + (if b0002 then 0 else 109000) + (if b0003 then 0 else 109000) + (if b0005 then 0 else 109000) + (if b0007 then 0 else 109000) + (if b0008 then 0 else 109000) + (if b0009 then 0 else 109000) + (if b0010 then 0 else 109000) + (if b0012 then 0 else 109000) + (if b0014 then 0 else 109000) + (if b0016 then 0 else 109000) + (if b0017 then 0 else 109000) + (if b0018 then 0 else 109000) + (if b0020 then 0 else 109000) + (if b0022 then 0 else 109000) + (if b0023 then 0 else 109000) + (if b0026 then 0 else 109000) + (if b0028 then 0 else 109000) + (if b0031 then 0 else 109000) + (if b0032 then 0 else 109000) + (if b0033 then 0 else 109000) + (if b0034 then 0 else 109000) + (if b0039 then 0 else 109000) + (if b0040 then 0 else 109000) + (if b0041 then 0 else 109000) + (if b0042 then 0 else 109000) + (if b0045 then 0 else 109000) + (if b0047 then 0 else 109000) + (if b0048 then 0 else 109000) + (if b0049 then 0 else 109000) + (if b0054 then 0 else 109000) + (if b0055 then 0 else 109000) + (if b0058 then 0 else 109000) + (if b0060 then 0 else 109000) + (if b0061 then 0 else 109000) + (if b0062 then 0 else 109000) + (if b0063 then 0 else 109000) + (if b0064 then 0 else 109000) + (if b0065 then 0 else 109000) + (if b0072 then 0 else 109000) + (if b0074 then 0 else 109000) + (if b0076 then 0 else 109000) + (if b0077 then 0 else 109000) + (if b0078 then 0 else 109000) + (if b0079 then 0 else 109000) + (if b0080 then 0 else 109000) + (if b0081 then 0 else 109000) + (if b0091 then 0 else 109000) + (if b0092 then 0 else 109000) + (if b0095 then 0 else 109000) + (if b0097 then 0 else 109000) + (if b0098 then 0 else 109000) + (if b0099 then 0 else 109000) + (if b0100 then 0 else 109000) + (if b0101 then 0 else 109000) + (if b0102 then 0 else 109000) + (if b0103 then 0 else 109000) + (if b0104 then 0 else 109000) + (if b0105 then 0 else 109000) + (if b0151 then 0 else 109000) + (if b0152 then 0 else 109000) + (if b0153 then 0 else 109000) + (if b0154 then 0 else 109000) + (if b0155 then 0 else 109000) + (if b0156 then 0 else 109000) + (if b0157 then 0 else 109000) + (if b0159 then 0 else 109000) + (if b0203 then 0 else 109000) + (if b0204 then 0 else 109000) + (if b0205 then 0 else 109000) + (if b0206 then 0 else 109000) + (if b0207 then 0 else 109000) + (if b0208 then 0 else 109000) + (if b0209 then 0 else 109000) + (if b0210 then 0 else 109000) + (if b0211 then 0 else 109000) + (if b0212 then 0 else 109000) + (if b0213 then 0 else 109000) + (if b0215 then 0 else 109000) + (if b0216 then 0 else 109000) + (if b0244 then 0 else 109000) + (if b0245 then 0 else 109000) + (if b0246 then 0 else 109000) + (if b0247 then 0 else 109000) + (if b0248 then 0 else 109000) + (if b0249 then 0 else 109000) + (if b0250 then 0 else 109000) + (if b0251 then 0 else 109000) + (if b0252 then 0 else 109000) + (if b0253 then 0 else 109000) + (if b0254 then 0 else 109000) + (if b0255 then 0 else 109000) + (if b0256 then 0 else 109000) + (if b0257 then 0 else 109000) + (if b0258 then 0 else 109000) + (if b0259 then 0 else 109000) + (if b0260 then 0 else 109000) + (if b0261 then 0 else 109000) + (if b0262 then 0 else 109000) + (if b0263 then 0 else 109000) + (if b0264 then 0 else 109000) + (if b0265 then 0 else 109000) + (if b0266 then 0 else 109000) + (if b0267 then 0 else 109000) + (if b0268 then 0 else 109000) + (if b0269 then 0 else 109000) + (if b0270 then 0 else 109000) + (if b0271 then 0 else 109000) + (if b0272 then 0 else 109000) + (if b0273 then 0 else 109000) < 441
}
Prover Time taken = 321.434669
Prover time = 945.69
Number of prover queries = 55
Learner time = 6.90
Number of learner queries = 54
Total time: 958.50
Number of positive examples:5
Number of negative examples:0
Number of Horn clauses:49
verified

Boogie program verifier finished with 1 verified, 0 errors
17.22user 8.74system 16:00.45elapsed 2%CPU (0avgtext+0avgdata 94024maxresident)k
488inputs+6792outputs (1major+439891minor)pagefaults 0swaps
FILE:polybench/datamining/covariance/kernel3.bpl.ice2.bpl
#################
Wed May 12 03:36:18 UTC 2021
KEY=awinnow
OUTPUT=/root/Docker/winnow_gpu_timeout.txt
[TRACE] Using prover: /root/Docker/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/root/Docker/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a winnow
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/errorLimit:1
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/linear-algebra/kernels/3mm/kernel3.bpl.ice2.bpl
--------------------
Parsing /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/linear-algebra/kernels/3mm/kernel3.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /root/Docker/z3/bin/z3
#parameters: 466
Generating VC of $kernel3
Verifying $kernel3: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool, b0228: bool, b0229: bool, b0230: bool, b0231: bool, b0232: bool, b0233: bool, b0234: bool, b0235: bool, b0236: bool, b0237: bool, b0238: bool, b0239: bool, b0240: bool, b0241: bool, b0242: bool, b0243: bool, b0244: bool, b0245: bool, b0246: bool, b0247: bool, b0248: bool, b0249: bool, b0250: bool, b0251: bool, b0252: bool, b0253: bool, b0254: bool, b0255: bool, b0256: bool, b0257: bool, b0258: bool, b0259: bool, b0260: bool, b0261: bool, b0262: bool, b0263: bool, b0264: bool, b0265: bool, b0266: bool, b0267: bool, b0268: bool, b0269: bool, b0270: bool, b0271: bool, b0272: bool, b0273: bool, b0274: bool, b0275: bool, b0276: bool, b0277: bool, b0278: bool, b0279: bool, b0280: bool, b0281: bool, b0282: bool, b0283: bool, b0284: bool, b0285: bool, b0286: bool, b0287: bool, b0288: bool, b0289: bool, b0290: bool, b0291: bool, b0292: bool, b0293: bool, b0294: bool, b0295: bool, b0296: bool, b0297: bool, b0298: bool, b0299: bool, b0300: bool, b0301: bool, b0302: bool, b0303: bool, b0304: bool, b0305: bool, b0306: bool, b0307: bool, b0308: bool, b0309: bool, b0310: bool, b0311: bool, b0312: bool, b0313: bool, b0314: bool, b0315: bool, b0316: bool, b0317: bool, b0318: bool, b0319: bool, b0320: bool, b0321: bool, b0322: bool, b0323: bool, b0324: bool, b0325: bool, b0326: bool, b0327: bool, b0328: bool, b0329: bool, b0330: bool, b0331: bool, b0332: bool, b0333: bool, b0334: bool, b0335: bool, b0336: bool, b0337: bool, b0338: bool, b0339: bool, b0340: bool, b0341: bool, b0342: bool, b0343: bool, b0344: bool, b0345: bool, b0346: bool, b0347: bool, b0348: bool, b0349: bool, b0350: bool, b0351: bool, b0352: bool, b0353: bool, b0354: bool, b0355: bool, b0356: bool, b0357: bool, b0358: bool, b0359: bool, b0360: bool, b0361: bool, b0362: bool, b0363: bool, b0364: bool, b0365: bool, b0366: bool, b0367: bool, b0368: bool, b0369: bool, b0370: bool, b0371: bool, b0372: bool, b0373: bool, b0374: bool, b0375: bool, b0376: bool, b0377: bool, b0378: bool, b0379: bool, b0380: bool, b0381: bool, b0382: bool, b0383: bool, b0384: bool, b0385: bool, b0386: bool, b0387: bool, b0388: bool, b0389: bool, b0390: bool, b0391: bool, b0392: bool, b0393: bool, b0394: bool, b0395: bool, b0396: bool, b0397: bool, b0398: bool, b0399: bool, b0400: bool, b0401: bool, b0402: bool, b0403: bool, b0404: bool, b0405: bool, b0406: bool, b0407: bool, b0408: bool, b0409: bool, b0410: bool, b0411: bool, b0412: bool, b0413: bool, b0414: bool, b0415: bool, b0416: bool, b0417: bool, b0418: bool, b0419: bool, b0420: bool, b0421: bool, b0422: bool, b0423: bool, b0424: bool, b0425: bool, b0426: bool, b0427: bool, b0428: bool, b0429: bool, b0430: bool, b0431: bool, b0432: bool, b0433: bool, b0434: bool, b0435: bool, b0436: bool, b0437: bool, b0438: bool, b0439: bool, b0440: bool, b0441: bool, b0442: bool, b0443: bool, b0444: bool, b0445: bool, b0446: bool, b0447: bool, b0448: bool, b0449: bool, b0450: bool, b0451: bool, b0452: bool, b0453: bool, b0454: bool, b0455: bool, b0456: bool, b0457: bool, b0458: bool, b0459: bool, b0460: bool, b0461: bool, b0462: bool, b0463: bool, b0464: bool, b0465: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.192199
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/linear-algebra/kernels/3mm/kernel3.bpl.ice2.bpl
Total learner time was 00:00:00.1199840
Verifying $kernel3: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool, b0228: bool, b0229: bool, b0230: bool, b0231: bool, b0232: bool, b0233: bool, b0234: bool, b0235: bool, b0236: bool, b0237: bool, b0238: bool, b0239: bool, b0240: bool, b0241: bool, b0242: bool, b0243: bool, b0244: bool, b0245: bool, b0246: bool, b0247: bool, b0248: bool, b0249: bool, b0250: bool, b0251: bool, b0252: bool, b0253: bool, b0254: bool, b0255: bool, b0256: bool, b0257: bool, b0258: bool, b0259: bool, b0260: bool, b0261: bool, b0262: bool, b0263: bool, b0264: bool, b0265: bool, b0266: bool, b0267: bool, b0268: bool, b0269: bool, b0270: bool, b0271: bool, b0272: bool, b0273: bool, b0274: bool, b0275: bool, b0276: bool, b0277: bool, b0278: bool, b0279: bool, b0280: bool, b0281: bool, b0282: bool, b0283: bool, b0284: bool, b0285: bool, b0286: bool, b0287: bool, b0288: bool, b0289: bool, b0290: bool, b0291: bool, b0292: bool, b0293: bool, b0294: bool, b0295: bool, b0296: bool, b0297: bool, b0298: bool, b0299: bool, b0300: bool, b0301: bool, b0302: bool, b0303: bool, b0304: bool, b0305: bool, b0306: bool, b0307: bool, b0308: bool, b0309: bool, b0310: bool, b0311: bool, b0312: bool, b0313: bool, b0314: bool, b0315: bool, b0316: bool, b0317: bool, b0318: bool, b0319: bool, b0320: bool, b0321: bool, b0322: bool, b0323: bool, b0324: bool, b0325: bool, b0326: bool, b0327: bool, b0328: bool, b0329: bool, b0330: bool, b0331: bool, b0332: bool, b0333: bool, b0334: bool, b0335: bool, b0336: bool, b0337: bool, b0338: bool, b0339: bool, b0340: bool, b0341: bool, b0342: bool, b0343: bool, b0344: bool, b0345: bool, b0346: bool, b0347: bool, b0348: bool, b0349: bool, b0350: bool, b0351: bool, b0352: bool, b0353: bool, b0354: bool, b0355: bool, b0356: bool, b0357: bool, b0358: bool, b0359: bool, b0360: bool, b0361: bool, b0362: bool, b0363: bool, b0364: bool, b0365: bool, b0366: bool, b0367: bool, b0368: bool, b0369: bool, b0370: bool, b0371: bool, b0372: bool, b0373: bool, b0374: bool, b0375: bool, b0376: bool, b0377: bool, b0378: bool, b0379: bool, b0380: bool, b0381: bool, b0382: bool, b0383: bool, b0384: bool, b0385: bool, b0386: bool, b0387: bool, b0388: bool, b0389: bool, b0390: bool, b0391: bool, b0392: bool, b0393: bool, b0394: bool, b0395: bool, b0396: bool, b0397: bool, b0398: bool, b0399: bool, b0400: bool, b0401: bool, b0402: bool, b0403: bool, b0404: bool, b0405: bool, b0406: bool, b0407: bool, b0408: bool, b0409: bool, b0410: bool, b0411: bool, b0412: bool, b0413: bool, b0414: bool, b0415: bool, b0416: bool, b0417: bool, b0418: bool, b0419: bool, b0420: bool, b0421: bool, b0422: bool, b0423: bool, b0424: bool, b0425: bool, b0426: bool, b0427: bool, b0428: bool, b0429: bool, b0430: bool, b0431: bool, b0432: bool, b0433: bool, b0434: bool, b0435: bool, b0436: bool, b0437: bool, b0438: bool, b0439: bool, b0440: bool, b0441: bool, b0442: bool, b0443: bool, b0444: bool, b0445: bool, b0446: bool, b0447: bool, b0448: bool, b0449: bool, b0450: bool, b0451: bool, b0452: bool, b0453: bool, b0454: bool, b0455: bool, b0456: bool, b0457: bool, b0458: bool, b0459: bool, b0460: bool, b0461: bool, b0462: bool, b0463: bool, b0464: bool, b0465: bool) : bool
{
  0 + (if b0000 then 0 else 186000) + (if b0001 then 0 else 186000) + (if b0002 then 0 else 186000) + (if b0003 then 0 else 186000) + (if b0004 then 0 else 186000) + (if b0005 then 0 else 186000) + (if b0006 then 0 else 186000) + (if b0007 then 0 else 186000) + (if b0008 then 0 else 186000) + (if b0009 then 0 else 186000) + (if b0010 then 0 else 186000) + (if b0011 then 0 else 186000) + (if b0012 then 0 else 186000) + (if b0013 then 0 else 186000) + (if b0014 then 0 else 186000) + (if b0015 then 0 else 186000) + (if b0016 then 0 else 186000) + (if b0017 then 0 else 186000) + (if b0018 then 0 else 186000) + (if b0019 then 0 else 186000) + (if b0020 then 0 else 186000) + (if b0021 then 0 else 186000) + (if b0022 then 0 else 186000) + (if b0023 then 0 else 186000) + (if b0024 then 0 else 186000) + (if b0025 then 0 else 186000) + (if b0026 then 0 else 186000) + (if b0027 then 0 else 186000) + (if b0028 then 0 else 186000) + (if b0029 then 0 else 186000) + (if b0030 then 0 else 186000) + (if b0031 then 0 else 186000) + (if b0032 then 0 else 186000) + (if b0033 then 0 else 186000) + (if b0034 then 0 else 186000) + (if b0035 then 0 else 186000) + (if b0036 then 0 else 186000) + (if b0037 then 0 else 186000) + (if b0038 then 0 else 186000) + (if b0039 then 0 else 186000) + (if b0040 then 0 else 186000) + (if b0041 then 0 else 186000) + (if b0042 then 0 else 186000) + (if b0043 then 0 else 186000) + (if b0044 then 0 else 186000) + (if b0045 then 0 else 186000) + (if b0046 then 0 else 186000) + (if b0047 then 0 else 186000) + (if b0048 then 0 else 186000) + (if b0049 then 0 else 186000) + (if b0050 then 0 else 186000) + (if b0051 then 0 else 186000) + (if b0052 then 0 else 186000) + (if b0053 then 0 else 186000) + (if b0054 then 0 else 186000) + (if b0055 then 0 else 186000) + (if b0056 then 0 else 186000) + (if b0057 then 0 else 186000) + (if b0058 then 0 else 186000) + (if b0059 then 0 else 186000) + (if b0060 then 0 else 186000) + (if b0061 then 0 else 186000) + (if b0062 then 0 else 186000) + (if b0063 then 0 else 186000) + (if b0064 then 0 else 186000) + (if b0065 then 0 else 186000) + (if b0066 then 0 else 186000) + (if b0067 then 0 else 186000) + (if b0068 then 0 else 186000) + (if b0069 then 0 else 186000) + (if b0070 then 0 else 186000) + (if b0071 then 0 else 186000) + (if b0072 then 0 else 186000) + (if b0073 then 0 else 186000) + (if b0074 then 0 else 186000) + (if b0075 then 0 else 186000) + (if b0076 then 0 else 186000) + (if b0077 then 0 else 186000) + (if b0078 then 0 else 186000) + (if b0079 then 0 else 186000) + (if b0080 then 0 else 186000) + (if b0081 then 0 else 186000) + (if b0082 then 0 else 186000) + (if b0083 then 0 else 186000) + (if b0084 then 0 else 186000) + (if b0085 then 0 else 186000) + (if b0086 then 0 else 186000) + (if b0087 then 0 else 186000) + (if b0088 then 0 else 186000) + (if b0089 then 0 else 186000) + (if b0090 then 0 else 186000) + (if b0091 then 0 else 186000) + (if b0092 then 0 else 186000) + (if b0093 then 0 else 186000) + (if b0094 then 0 else 186000) + (if b0095 then 0 else 186000) + (if b0096 then 0 else 186000) + (if b0097 then 0 else 186000) + (if b0098 then 0 else 186000) + (if b0099 then 0 else 186000) + (if b0100 then 0 else 186000) + (if b0101 then 0 else 186000) + (if b0102 then 0 else 186000) + (if b0103 then 0 else 186000) + (if b0104 then 0 else 186000) + (if b0105 then 0 else 186000) + (if b0106 then 0 else 186000) + (if b0107 then 0 else 186000) + (if b0108 then 0 else 186000) + (if b0109 then 0 else 186000) + (if b0110 then 0 else 186000) + (if b0111 then 0 else 186000) + (if b0112 then 0 else 186000) + (if b0113 then 0 else 186000) + (if b0114 then 0 else 186000) + (if b0115 then 0 else 186000) + (if b0116 then 0 else 186000) + (if b0117 then 0 else 186000) + (if b0118 then 0 else 186000) + (if b0119 then 0 else 186000) + (if b0120 then 0 else 186000) + (if b0121 then 0 else 186000) + (if b0122 then 0 else 186000) + (if b0123 then 0 else 186000) + (if b0124 then 0 else 186000) + (if b0125 then 0 else 186000) + (if b0126 then 0 else 186000) + (if b0127 then 0 else 186000) + (if b0128 then 0 else 186000) + (if b0129 then 0 else 186000) + (if b0130 then 0 else 186000) + (if b0131 then 0 else 186000) + (if b0132 then 0 else 186000) + (if b0133 then 0 else 186000) + (if b0134 then 0 else 186000) + (if b0135 then 0 else 186000) + (if b0136 then 0 else 186000) + (if b0137 then 0 else 186000) + (if b0138 then 0 else 186000) + (if b0139 then 0 else 186000) + (if b0140 then 0 else 186000) + (if b0141 then 0 else 186000) + (if b0142 then 0 else 186000) + (if b0143 then 0 else 186000) + (if b0144 then 0 else 186000) + (if b0145 then 0 else 186000) + (if b0146 then 0 else 186000) + (if b0147 then 0 else 186000) + (if b0148 then 0 else 186000) + (if b0149 then 0 else 186000) + (if b0150 then 0 else 186000) + (if b0151 then 0 else 186000) + (if b0152 then 0 else 186000) + (if b0153 then 0 else 186000) + (if b0154 then 0 else 186000) + (if b0155 then 0 else 186000) + (if b0156 then 0 else 186000) + (if b0157 then 0 else 186000) + (if b0158 then 0 else 186000) + (if b0159 then 0 else 186000) + (if b0160 then 0 else 186000) + (if b0161 then 0 else 186000) + (if b0162 then 0 else 186000) + (if b0163 then 0 else 186000) + (if b0164 then 0 else 186000) + (if b0165 then 0 else 186000) + (if b0166 then 0 else 186000) + (if b0167 then 0 else 186000) + (if b0168 then 0 else 186000) + (if b0169 then 0 else 186000) + (if b0170 then 0 else 186000) + (if b0171 then 0 else 186000) + (if b0172 then 0 else 186000) + (if b0173 then 0 else 186000) + (if b0174 then 0 else 186000) + (if b0175 then 0 else 186000) + (if b0176 then 0 else 186000) + (if b0177 then 0 else 186000) + (if b0178 then 0 else 186000) + (if b0179 then 0 else 186000) + (if b0180 then 0 else 186000) + (if b0181 then 0 else 186000) + (if b0182 then 0 else 186000) + (if b0183 then 0 else 186000) + (if b0184 then 0 else 186000) + (if b0185 then 0 else 186000) + (if b0186 then 0 else 186000) + (if b0187 then 0 else 186000) + (if b0188 then 0 else 186000) + (if b0189 then 0 else 186000) + (if b0190 then 0 else 186000) + (if b0191 then 0 else 186000) + (if b0192 then 0 else 186000) + (if b0193 then 0 else 186000) + (if b0194 then 0 else 186000) + (if b0195 then 0 else 186000) + (if b0196 then 0 else 186000) + (if b0197 then 0 else 186000) + (if b0198 then 0 else 186000) + (if b0199 then 0 else 186000) + (if b0200 then 0 else 186000) + (if b0201 then 0 else 186000) + (if b0202 then 0 else 186000) + (if b0203 then 0 else 186000) + (if b0204 then 0 else 186000) + (if b0205 then 0 else 186000) + (if b0206 then 0 else 186000) + (if b0207 then 0 else 186000) + (if b0208 then 0 else 186000) + (if b0209 then 0 else 186000) + (if b0210 then 0 else 186000) + (if b0211 then 0 else 186000) + (if b0212 then 0 else 186000) + (if b0213 then 0 else 186000) + (if b0214 then 0 else 186000) + (if b0215 then 0 else 186000) + (if b0216 then 0 else 186000) + (if b0217 then 0 else 186000) + (if b0218 then 0 else 186000) + (if b0219 then 0 else 186000) + (if b0220 then 0 else 186000) + (if b0221 then 0 else 186000) + (if b0222 then 0 else 186000) + (if b0223 then 0 else 186000) + (if b0224 then 0 else 186000) + (if b0225 then 0 else 186000) + (if b0226 then 0 else 186000) + (if b0227 then 0 else 186000) + (if b0228 then 0 else 186000) + (if b0229 then 0 else 186000) + (if b0230 then 0 else 186000) + (if b0231 then 0 else 186000) + (if b0232 then 0 else 186000) + (if b0233 then 0 else 186000) + (if b0234 then 0 else 186000) + (if b0235 then 0 else 186000) + (if b0236 then 0 else 186000) + (if b0237 then 0 else 186000) + (if b0238 then 0 else 186000) + (if b0239 then 0 else 186000) + (if b0240 then 0 else 186000) + (if b0241 then 0 else 186000) + (if b0242 then 0 else 186000) + (if b0243 then 0 else 186000) + (if b0244 then 0 else 186000) + (if b0245 then 0 else 186000) + (if b0246 then 0 else 186000) + (if b0247 then 0 else 186000) + (if b0248 then 0 else 186000) + (if b0249 then 0 else 186000) + (if b0250 then 0 else 186000) + (if b0251 then 0 else 186000) + (if b0252 then 0 else 186000) + (if b0253 then 0 else 186000) + (if b0254 then 0 else 186000) + (if b0255 then 0 else 186000) + (if b0256 then 0 else 186000) + (if b0257 then 0 else 186000) + (if b0258 then 0 else 186000) + (if b0259 then 0 else 186000) + (if b0260 then 0 else 186000) + (if b0261 then 0 else 186000) + (if b0262 then 0 else 186000) + (if b0263 then 0 else 186000) + (if b0264 then 0 else 186000) + (if b0265 then 0 else 186000) + (if b0266 then 0 else 186000) + (if b0267 then 0 else 186000) + (if b0268 then 0 else 186000) + (if b0269 then 0 else 186000) + (if b0270 then 0 else 186000) + (if b0271 then 0 else 186000) + (if b0272 then 0 else 186000) + (if b0273 then 0 else 186000) + (if b0274 then 0 else 186000) + (if b0275 then 0 else 186000) + (if b0276 then 0 else 186000) + (if b0277 then 0 else 186000) + (if b0278 then 0 else 186000) + (if b0279 then 0 else 186000) + (if b0280 then 0 else 186000) + (if b0281 then 0 else 186000) + (if b0282 then 0 else 186000) + (if b0283 then 0 else 186000) + (if b0284 then 0 else 186000) + (if b0285 then 0 else 186000) + (if b0286 then 0 else 186000) + (if b0287 then 0 else 186000) + (if b0288 then 0 else 186000) + (if b0289 then 0 else 186000) + (if b0290 then 0 else 186000) + (if b0291 then 0 else 186000) + (if b0292 then 0 else 186000) + (if b0293 then 0 else 186000) + (if b0294 then 0 else 186000) + (if b0295 then 0 else 186000) + (if b0296 then 0 else 186000) + (if b0297 then 0 else 186000) + (if b0298 then 0 else 186000) + (if b0299 then 0 else 186000) + (if b0300 then 0 else 186000) + (if b0301 then 0 else 186000) + (if b0302 then 0 else 186000) + (if b0303 then 0 else 186000) + (if b0304 then 0 else 186000) + (if b0305 then 0 else 186000) + (if b0306 then 0 else 186000) + (if b0307 then 0 else 186000) + (if b0308 then 0 else 186000) + (if b0309 then 0 else 186000) + (if b0310 then 0 else 186000) + (if b0311 then 0 else 186000) + (if b0312 then 0 else 186000) + (if b0313 then 0 else 186000) + (if b0314 then 0 else 186000) + (if b0315 then 0 else 186000) + (if b0316 then 0 else 186000) + (if b0317 then 0 else 186000) + (if b0318 then 0 else 186000) + (if b0319 then 0 else 186000) + (if b0320 then 0 else 186000) + (if b0321 then 0 else 186000) + (if b0322 then 0 else 186000) + (if b0323 then 0 else 186000) + (if b0324 then 0 else 186000) + (if b0325 then 0 else 186000) + (if b0326 then 0 else 186000) + (if b0327 then 0 else 186000) + (if b0328 then 0 else 186000) + (if b0329 then 0 else 186000) + (if b0330 then 0 else 186000) + (if b0331 then 0 else 186000) + (if b0332 then 0 else 186000) + (if b0333 then 0 else 186000) + (if b0334 then 0 else 186000) + (if b0335 then 0 else 186000) + (if b0336 then 0 else 186000) + (if b0337 then 0 else 186000) + (if b0338 then 0 else 186000) + (if b0339 then 0 else 186000) + (if b0340 then 0 else 186000) + (if b0341 then 0 else 186000) + (if b0342 then 0 else 186000) + (if b0343 then 0 else 186000) + (if b0344 then 0 else 186000) + (if b0345 then 0 else 186000) + (if b0346 then 0 else 186000) + (if b0347 then 0 else 186000) + (if b0348 then 0 else 186000) + (if b0349 then 0 else 186000) + (if b0350 then 0 else 186000) + (if b0351 then 0 else 186000) + (if b0352 then 0 else 186000) + (if b0353 then 0 else 186000) + (if b0354 then 0 else 186000) + (if b0355 then 0 else 186000) + (if b0356 then 0 else 186000) + (if b0357 then 0 else 186000) + (if b0358 then 0 else 186000) + (if b0359 then 0 else 186000) + (if b0360 then 0 else 186000) + (if b0361 then 0 else 186000) + (if b0362 then 0 else 186000) + (if b0363 then 0 else 186000) + (if b0364 then 0 else 186000) + (if b0365 then 0 else 186000) + (if b0366 then 0 else 186000) + (if b0367 then 0 else 186000) + (if b0368 then 0 else 186000) + (if b0369 then 0 else 186000) + (if b0370 then 0 else 186000) + (if b0371 then 0 else 186000) + (if b0372 then 0 else 186000) + (if b0373 then 0 else 186000) + (if b0374 then 0 else 186000) + (if b0375 then 0 else 186000) + (if b0376 then 0 else 186000) + (if b0377 then 0 else 186000) + (if b0378 then 0 else 186000) + (if b0379 then 0 else 186000) + (if b0380 then 0 else 186000) + (if b0381 then 0 else 186000) + (if b0382 then 0 else 186000) + (if b0383 then 0 else 186000) + (if b0384 then 0 else 186000) + (if b0385 then 0 else 186000) + (if b0386 then 0 else 186000) + (if b0387 then 0 else 186000) + (if b0388 then 0 else 186000) + (if b0389 then 0 else 186000) + (if b0390 then 0 else 186000) + (if b0391 then 0 else 186000) + (if b0392 then 0 else 186000) + (if b0393 then 0 else 186000) + (if b0394 then 0 else 186000) + (if b0395 then 0 else 186000) + (if b0396 then 0 else 186000) + (if b0397 then 0 else 186000) + (if b0398 then 0 else 186000) + (if b0399 then 0 else 186000) + (if b0400 then 0 else 186000) + (if b0401 then 0 else 186000) + (if b0402 then 0 else 186000) + (if b0403 then 0 else 186000) + (if b0404 then 0 else 186000) + (if b0405 then 0 else 186000) + (if b0406 then 0 else 186000) + (if b0407 then 0 else 186000) + (if b0408 then 0 else 186000) + (if b0409 then 0 else 186000) + (if b0410 then 0 else 186000) + (if b0411 then 0 else 186000) + (if b0412 then 0 else 186000) + (if b0413 then 0 else 186000) + (if b0414 then 0 else 186000) + (if b0415 then 0 else 186000) + (if b0416 then 0 else 186000) + (if b0417 then 0 else 186000) + (if b0418 then 0 else 186000) + (if b0419 then 0 else 186000) + (if b0420 then 0 else 186000) + (if b0421 then 0 else 186000) + (if b0422 then 0 else 186000) + (if b0423 then 0 else 186000) + (if b0424 then 0 else 186000) + (if b0425 then 0 else 186000) + (if b0426 then 0 else 186000) + (if b0427 then 0 else 186000) + (if b0428 then 0 else 186000) + (if b0429 then 0 else 186000) + (if b0430 then 0 else 186000) + (if b0431 then 0 else 186000) + (if b0432 then 0 else 186000) + (if b0433 then 0 else 186000) + (if b0434 then 0 else 186000) + (if b0435 then 0 else 186000) + (if b0436 then 0 else 186000) + (if b0437 then 0 else 186000) + (if b0438 then 0 else 186000) + (if b0439 then 0 else 186000) + (if b0440 then 0 else 186000) + (if b0441 then 0 else 186000) + (if b0442 then 0 else 186000) + (if b0443 then 0 else 186000) + (if b0444 then 0 else 186000) + (if b0445 then 0 else 186000) + (if b0446 then 0 else 186000) + (if b0447 then 0 else 186000) + (if b0448 then 0 else 186000) + (if b0449 then 0 else 186000) + (if b0450 then 0 else 186000) + (if b0451 then 0 else 186000) + (if b0452 then 0 else 186000) + (if b0453 then 0 else 186000) + (if b0454 then 0 else 186000) + (if b0455 then 0 else 186000) + (if b0456 then 0 else 186000) + (if b0457 then 0 else 186000) + (if b0458 then 0 else 186000) + (if b0459 then 0 else 186000) + (if b0460 then 0 else 186000) + (if b0461 then 0 else 186000) + (if b0462 then 0 else 186000) + (if b0463 then 0 else 186000) + (if b0464 then 0 else 186000) + (if b0465 then 0 else 186000) < 441
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,0,0,1,1,0,0,1,0,1,1,1,0,0,1,1,1,1,0,1,0,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 12.489447
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/linear-algebra/kernels/3mm/kernel3.bpl.ice2.bpl
Total learner time was 00:00:00.1234620
Verifying $kernel3: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool, b0228: bool, b0229: bool, b0230: bool, b0231: bool, b0232: bool, b0233: bool, b0234: bool, b0235: bool, b0236: bool, b0237: bool, b0238: bool, b0239: bool, b0240: bool, b0241: bool, b0242: bool, b0243: bool, b0244: bool, b0245: bool, b0246: bool, b0247: bool, b0248: bool, b0249: bool, b0250: bool, b0251: bool, b0252: bool, b0253: bool, b0254: bool, b0255: bool, b0256: bool, b0257: bool, b0258: bool, b0259: bool, b0260: bool, b0261: bool, b0262: bool, b0263: bool, b0264: bool, b0265: bool, b0266: bool, b0267: bool, b0268: bool, b0269: bool, b0270: bool, b0271: bool, b0272: bool, b0273: bool, b0274: bool, b0275: bool, b0276: bool, b0277: bool, b0278: bool, b0279: bool, b0280: bool, b0281: bool, b0282: bool, b0283: bool, b0284: bool, b0285: bool, b0286: bool, b0287: bool, b0288: bool, b0289: bool, b0290: bool, b0291: bool, b0292: bool, b0293: bool, b0294: bool, b0295: bool, b0296: bool, b0297: bool, b0298: bool, b0299: bool, b0300: bool, b0301: bool, b0302: bool, b0303: bool, b0304: bool, b0305: bool, b0306: bool, b0307: bool, b0308: bool, b0309: bool, b0310: bool, b0311: bool, b0312: bool, b0313: bool, b0314: bool, b0315: bool, b0316: bool, b0317: bool, b0318: bool, b0319: bool, b0320: bool, b0321: bool, b0322: bool, b0323: bool, b0324: bool, b0325: bool, b0326: bool, b0327: bool, b0328: bool, b0329: bool, b0330: bool, b0331: bool, b0332: bool, b0333: bool, b0334: bool, b0335: bool, b0336: bool, b0337: bool, b0338: bool, b0339: bool, b0340: bool, b0341: bool, b0342: bool, b0343: bool, b0344: bool, b0345: bool, b0346: bool, b0347: bool, b0348: bool, b0349: bool, b0350: bool, b0351: bool, b0352: bool, b0353: bool, b0354: bool, b0355: bool, b0356: bool, b0357: bool, b0358: bool, b0359: bool, b0360: bool, b0361: bool, b0362: bool, b0363: bool, b0364: bool, b0365: bool, b0366: bool, b0367: bool, b0368: bool, b0369: bool, b0370: bool, b0371: bool, b0372: bool, b0373: bool, b0374: bool, b0375: bool, b0376: bool, b0377: bool, b0378: bool, b0379: bool, b0380: bool, b0381: bool, b0382: bool, b0383: bool, b0384: bool, b0385: bool, b0386: bool, b0387: bool, b0388: bool, b0389: bool, b0390: bool, b0391: bool, b0392: bool, b0393: bool, b0394: bool, b0395: bool, b0396: bool, b0397: bool, b0398: bool, b0399: bool, b0400: bool, b0401: bool, b0402: bool, b0403: bool, b0404: bool, b0405: bool, b0406: bool, b0407: bool, b0408: bool, b0409: bool, b0410: bool, b0411: bool, b0412: bool, b0413: bool, b0414: bool, b0415: bool, b0416: bool, b0417: bool, b0418: bool, b0419: bool, b0420: bool, b0421: bool, b0422: bool, b0423: bool, b0424: bool, b0425: bool, b0426: bool, b0427: bool, b0428: bool, b0429: bool, b0430: bool, b0431: bool, b0432: bool, b0433: bool, b0434: bool, b0435: bool, b0436: bool, b0437: bool, b0438: bool, b0439: bool, b0440: bool, b0441: bool, b0442: bool, b0443: bool, b0444: bool, b0445: bool, b0446: bool, b0447: bool, b0448: bool, b0449: bool, b0450: bool, b0451: bool, b0452: bool, b0453: bool, b0454: bool, b0455: bool, b0456: bool, b0457: bool, b0458: bool, b0459: bool, b0460: bool, b0461: bool, b0462: bool, b0463: bool, b0464: bool, b0465: bool) : bool
{
  0 + (if b0000 then 0 else 186000) + (if b0001 then 0 else 186000) + (if b0002 then 0 else 186000) + (if b0003 then 0 else 186000) + (if b0004 then 0 else 186000) + (if b0005 then 0 else 186000) + (if b0006 then 0 else 186000) + (if b0007 then 0 else 186000) + (if b0008 then 0 else 186000) + (if b0009 then 0 else 186000) + (if b0010 then 0 else 186000) + (if b0011 then 0 else 186000) + (if b0012 then 0 else 186000) + (if b0013 then 0 else 186000) + (if b0014 then 0 else 186000) + (if b0015 then 0 else 186000) + (if b0016 then 0 else 186000) + (if b0017 then 0 else 186000) + (if b0018 then 0 else 186000) + (if b0019 then 0 else 186000) + (if b0020 then 0 else 186000) + (if b0021 then 0 else 186000) + (if b0022 then 0 else 186000) + (if b0023 then 0 else 186000) + (if b0024 then 0 else 186000) + (if b0025 then 0 else 186000) + (if b0026 then 0 else 186000) + (if b0027 then 0 else 186000) + (if b0028 then 0 else 186000) + (if b0029 then 0 else 186000) + (if b0030 then 0 else 186000) + (if b0031 then 0 else 186000) + (if b0032 then 0 else 186000) + (if b0033 then 0 else 186000) + (if b0034 then 0 else 186000) + (if b0035 then 0 else 186000) + (if b0036 then 0 else 186000) + (if b0037 then 0 else 186000) + (if b0038 then 0 else 186000) + (if b0039 then 0 else 186000) + (if b0040 then 0 else 186000) + (if b0041 then 0 else 186000) + (if b0042 then 0 else 186000) + (if b0043 then 0 else 186000) + (if b0044 then 0 else 186000) + (if b0045 then 0 else 186000) + (if b0046 then 0 else 186000) + (if b0047 then 0 else 186000) + (if b0048 then 0 else 186000) + (if b0049 then 0 else 186000) + (if b0050 then 0 else 186000) + (if b0051 then 0 else 186000) + (if b0052 then 0 else 186000) + (if b0053 then 0 else 186000) + (if b0054 then 0 else 186000) + (if b0055 then 0 else 186000) + (if b0056 then 0 else 186000) + (if b0057 then 0 else 186000) + (if b0058 then 0 else 186000) + (if b0059 then 0 else 186000) + (if b0060 then 0 else 186000) + (if b0061 then 0 else 186000) + (if b0062 then 0 else 186000) + (if b0063 then 0 else 186000) + (if b0064 then 0 else 186000) + (if b0065 then 0 else 186000) + (if b0066 then 0 else 186000) + (if b0067 then 0 else 186000) + (if b0068 then 0 else 186000) + (if b0069 then 0 else 186000) + (if b0070 then 0 else 186000) + (if b0071 then 0 else 186000) + (if b0072 then 0 else 186000) + (if b0073 then 0 else 186000) + (if b0074 then 0 else 186000) + (if b0075 then 0 else 186000) + (if b0076 then 0 else 186000) + (if b0077 then 0 else 186000) + (if b0078 then 0 else 186000) + (if b0079 then 0 else 186000) + (if b0080 then 0 else 186000) + (if b0081 then 0 else 186000) + (if b0082 then 0 else 186000) + (if b0083 then 0 else 186000) + (if b0084 then 0 else 186000) + (if b0085 then 0 else 186000) + (if b0086 then 0 else 186000) + (if b0087 then 0 else 186000) + (if b0088 then 0 else 186000) + (if b0089 then 0 else 186000) + (if b0090 then 0 else 186000) + (if b0091 then 0 else 186000) + (if b0092 then 0 else 186000) + (if b0093 then 0 else 186000) + (if b0094 then 0 else 186000) + (if b0095 then 0 else 186000) + (if b0096 then 0 else 186000) + (if b0097 then 0 else 186000) + (if b0098 then 0 else 186000) + (if b0099 then 0 else 186000) + (if b0100 then 0 else 186000) + (if b0101 then 0 else 186000) + (if b0102 then 0 else 186000) + (if b0103 then 0 else 186000) + (if b0104 then 0 else 186000) + (if b0105 then 0 else 186000) + (if b0106 then 0 else 186000) + (if b0107 then 0 else 186000) + (if b0108 then 0 else 186000) + (if b0109 then 0 else 186000) + (if b0110 then 0 else 186000) + (if b0111 then 0 else 186000) + (if b0112 then 0 else 186000) + (if b0113 then 0 else 186000) + (if b0114 then 0 else 186000) + (if b0115 then 0 else 186000) + (if b0116 then 0 else 186000) + (if b0117 then 0 else 186000) + (if b0118 then 0 else 186000) + (if b0119 then 0 else 186000) + (if b0120 then 0 else 186000) + (if b0121 then 0 else 186000) + (if b0122 then 0 else 186000) + (if b0123 then 0 else 186000) + (if b0124 then 0 else 186000) + (if b0125 then 0 else 186000) + (if b0126 then 0 else 186000) + (if b0127 then 0 else 186000) + (if b0128 then 0 else 186000) + (if b0129 then 0 else 186000) + (if b0130 then 0 else 186000) + (if b0131 then 0 else 186000) + (if b0132 then 0 else 186000) + (if b0133 then 0 else 186000) + (if b0134 then 0 else 186000) + (if b0135 then 0 else 186000) + (if b0136 then 0 else 186000) + (if b0137 then 0 else 186000) + (if b0138 then 0 else 186000) + (if b0139 then 0 else 186000) + (if b0140 then 0 else 186000) + (if b0141 then 0 else 186000) + (if b0142 then 0 else 186000) + (if b0143 then 0 else 186000) + (if b0144 then 0 else 186000) + (if b0145 then 0 else 186000) + (if b0146 then 0 else 186000) + (if b0147 then 0 else 186000) + (if b0148 then 0 else 186000) + (if b0149 then 0 else 186000) + (if b0150 then 0 else 186000) + (if b0151 then 0 else 186000) + (if b0152 then 0 else 186000) + (if b0153 then 0 else 186000) + (if b0154 then 0 else 186000) + (if b0155 then 0 else 186000) + (if b0156 then 0 else 186000) + (if b0157 then 0 else 186000) + (if b0158 then 0 else 186000) + (if b0159 then 0 else 186000) + (if b0160 then 0 else 186000) + (if b0161 then 0 else 186000) + (if b0162 then 0 else 186000) + (if b0163 then 0 else 186000) + (if b0164 then 0 else 186000) + (if b0165 then 0 else 186000) + (if b0166 then 0 else 186000) + (if b0167 then 0 else 186000) + (if b0168 then 0 else 186000) + (if b0169 then 0 else 186000) + (if b0170 then 0 else 186000) + (if b0171 then 0 else 186000) + (if b0172 then 0 else 186000) + (if b0173 then 0 else 186000) + (if b0174 then 0 else 186000) + (if b0175 then 0 else 186000) + (if b0176 then 0 else 186000) + (if b0177 then 0 else 186000) + (if b0178 then 0 else 186000) + (if b0179 then 0 else 186000) + (if b0180 then 0 else 186000) + (if b0181 then 0 else 186000) + (if b0182 then 0 else 186000) + (if b0183 then 0 else 186000) + (if b0184 then 0 else 186000) + (if b0185 then 0 else 186000) + (if b0186 then 0 else 186000) + (if b0187 then 0 else 186000) + (if b0188 then 0 else 186000) + (if b0189 then 0 else 186000) + (if b0190 then 0 else 186000) + (if b0191 then 0 else 186000) + (if b0192 then 0 else 186000) + (if b0193 then 0 else 186000) + (if b0194 then 0 else 186000) + (if b0195 then 0 else 186000) + (if b0196 then 0 else 186000) + (if b0197 then 0 else 186000) + (if b0198 then 0 else 186000) + (if b0199 then 0 else 186000) + (if b0200 then 0 else 186000) + (if b0201 then 0 else 186000) + (if b0202 then 0 else 186000) + (if b0203 then 0 else 186000) + (if b0204 then 0 else 186000) + (if b0205 then 0 else 186000) + (if b0206 then 0 else 186000) + (if b0207 then 0 else 186000) + (if b0208 then 0 else 186000) + (if b0209 then 0 else 186000) + (if b0210 then 0 else 186000) + (if b0211 then 0 else 186000) + (if b0212 then 0 else 186000) + (if b0213 then 0 else 186000) + (if b0214 then 0 else 186000) + (if b0215 then 0 else 186000) + (if b0216 then 0 else 186000) + (if b0217 then 0 else 186000) + (if b0218 then 0 else 186000) + (if b0219 then 0 else 186000) + (if b0220 then 0 else 186000) + (if b0221 then 0 else 186000) + (if b0222 then 0 else 186000) + (if b0223 then 0 else 186000) + (if b0224 then 0 else 186000) + (if b0225 then 0 else 186000) + (if b0226 then 0 else 186000) + (if b0227 then 0 else 186000) + (if b0228 then 0 else 186000) + (if b0229 then 0 else 186000) + (if b0230 then 0 else 186000) + (if b0231 then 0 else 186000) + (if b0232 then 0 else 186000) + (if b0233 then 0 else 186000) + (if b0234 then 0 else 186000) + (if b0235 then 0 else 186000) + (if b0236 then 0 else 186000) + (if b0237 then 0 else 186000) + (if b0238 then 0 else 186000) + (if b0239 then 0 else 186000) + (if b0240 then 0 else 186000) + (if b0241 then 0 else 186000) + (if b0242 then 0 else 186000) + (if b0243 then 0 else 186000) + (if b0244 then 0 else 186000) + (if b0245 then 0 else 186000) + (if b0246 then 0 else 186000) + (if b0247 then 0 else 186000) + (if b0248 then 0 else 186000) + (if b0249 then 0 else 186000) + (if b0250 then 0 else 186000) + (if b0251 then 0 else 186000) + (if b0252 then 0 else 186000) + (if b0253 then 0 else 186000) + (if b0254 then 0 else 186000) + (if b0255 then 0 else 186000) + (if b0256 then 0 else 186000) + (if b0257 then 0 else 186000) + (if b0258 then 0 else 186000) + (if b0259 then 0 else 186000) + (if b0260 then 0 else 186000) + (if b0261 then 0 else 186000) + (if b0262 then 0 else 186000) + (if b0263 then 0 else 186000) + (if b0264 then 0 else 186000) + (if b0265 then 0 else 186000) + (if b0266 then 0 else 186000) + (if b0267 then 0 else 186000) + (if b0268 then 0 else 186000) + (if b0269 then 0 else 186000) + (if b0270 then 0 else 186000) + (if b0271 then 0 else 186000) + (if b0272 then 0 else 186000) + (if b0273 then 0 else 186000) + (if b0274 then 0 else 186000) + (if b0275 then 0 else 186000) + (if b0276 then 0 else 186000) + (if b0277 then 0 else 186000) + (if b0278 then 0 else 186000) + (if b0279 then 0 else 186000) + (if b0280 then 0 else 186000) + (if b0281 then 0 else 186000) + (if b0282 then 0 else 186000) + (if b0283 then 0 else 186000) + (if b0284 then 0 else 186000) + (if b0285 then 0 else 186000) + (if b0286 then 0 else 186000) + (if b0287 then 0 else 186000) + (if b0288 then 0 else 186000) + (if b0289 then 0 else 186000) + (if b0290 then 0 else 186000) + (if b0291 then 0 else 186000) + (if b0292 then 0 else 186000) + (if b0293 then 0 else 186000) + (if b0294 then 0 else 186000) + (if b0295 then 0 else 186000) + (if b0296 then 0 else 186000) + (if b0297 then 0 else 186000) + (if b0298 then 0 else 186000) + (if b0299 then 0 else 186000) + (if b0300 then 0 else 186000) + (if b0301 then 0 else 186000) + (if b0302 then 0 else 186000) + (if b0303 then 0 else 186000) + (if b0304 then 0 else 186000) + (if b0305 then 0 else 186000) + (if b0306 then 0 else 186000) + (if b0307 then 0 else 186000) + (if b0308 then 0 else 186000) + (if b0309 then 0 else 186000) + (if b0310 then 0 else 186000) + (if b0311 then 0 else 186000) + (if b0312 then 0 else 186000) + (if b0313 then 0 else 186000) + (if b0314 then 0 else 186000) + (if b0315 then 0 else 186000) + (if b0316 then 0 else 186000) + (if b0317 then 0 else 186000) + (if b0318 then 0 else 186000) + (if b0319 then 0 else 186000) + (if b0320 then 0 else 186000) + (if b0321 then 0 else 186000) + (if b0322 then 0 else 186000) + (if b0323 then 0 else 186000) + (if b0324 then 0 else 186000) + (if b0325 then 0 else 186000) + (if b0326 then 0 else 186000) + (if b0327 then 0 else 186000) + (if b0328 then 0 else 186000) + (if b0329 then 0 else 186000) + (if b0330 then 0 else 186000) + (if b0331 then 0 else 186000) + (if b0332 then 0 else 186000) + (if b0333 then 0 else 186000) + (if b0334 then 0 else 186000) + (if b0335 then 0 else 186000) + (if b0336 then 0 else 186000) + (if b0337 then 0 else 186000) + (if b0338 then 0 else 186000) + (if b0339 then 0 else 186000) + (if b0340 then 0 else 186000) + (if b0341 then 0 else 186000) + (if b0343 then 0 else 186000) + (if b0344 then 0 else 186000) + (if b0345 then 0 else 186000) + (if b0348 then 0 else 186000) + (if b0349 then 0 else 186000) + (if b0352 then 0 else 186000) + (if b0354 then 0 else 186000) + (if b0355 then 0 else 186000) + (if b0356 then 0 else 186000) + (if b0359 then 0 else 186000) + (if b0360 then 0 else 186000) + (if b0361 then 0 else 186000) + (if b0362 then 0 else 186000) + (if b0364 then 0 else 186000) + (if b0366 then 0 else 186000) + (if b0367 then 0 else 186000) + (if b0368 then 0 else 186000) + (if b0371 then 0 else 186000) + (if b0372 then 0 else 186000) + (if b0373 then 0 else 186000) + (if b0374 then 0 else 186000) + (if b0375 then 0 else 186000) + (if b0376 then 0 else 186000) + (if b0377 then 0 else 186000) + (if b0378 then 0 else 186000) + (if b0379 then 0 else 186000) + (if b0380 then 0 else 186000) + (if b0381 then 0 else 186000) + (if b0382 then 0 else 186000) + (if b0383 then 0 else 186000) + (if b0384 then 0 else 186000) + (if b0385 then 0 else 186000) + (if b0386 then 0 else 186000) + (if b0387 then 0 else 186000) + (if b0388 then 0 else 186000) + (if b0389 then 0 else 186000) + (if b0390 then 0 else 186000) + (if b0391 then 0 else 186000) + (if b0392 then 0 else 186000) + (if b0393 then 0 else 186000) + (if b0394 then 0 else 186000) + (if b0395 then 0 else 186000) + (if b0396 then 0 else 186000) + (if b0397 then 0 else 186000) + (if b0398 then 0 else 186000) + (if b0399 then 0 else 186000) + (if b0400 then 0 else 186000) + (if b0401 then 0 else 186000) + (if b0402 then 0 else 186000) + (if b0403 then 0 else 186000) + (if b0404 then 0 else 186000) + (if b0405 then 0 else 186000) + (if b0406 then 0 else 186000) + (if b0407 then 0 else 186000) + (if b0408 then 0 else 186000) + (if b0409 then 0 else 186000) + (if b0410 then 0 else 186000) + (if b0411 then 0 else 186000) + (if b0412 then 0 else 186000) + (if b0413 then 0 else 186000) + (if b0414 then 0 else 186000) + (if b0415 then 0 else 186000) + (if b0416 then 0 else 186000) + (if b0417 then 0 else 186000) + (if b0418 then 0 else 186000) + (if b0419 then 0 else 186000) + (if b0420 then 0 else 186000) + (if b0421 then 0 else 186000) + (if b0422 then 0 else 186000) + (if b0423 then 0 else 186000) + (if b0424 then 0 else 186000) + (if b0425 then 0 else 186000) + (if b0426 then 0 else 186000) + (if b0427 then 0 else 186000) + (if b0428 then 0 else 186000) + (if b0429 then 0 else 186000) + (if b0430 then 0 else 186000) + (if b0431 then 0 else 186000) + (if b0432 then 0 else 186000) + (if b0433 then 0 else 186000) + (if b0434 then 0 else 186000) + (if b0435 then 0 else 186000) + (if b0436 then 0 else 186000) + (if b0437 then 0 else 186000) + (if b0438 then 0 else 186000) + (if b0439 then 0 else 186000) + (if b0440 then 0 else 186000) + (if b0441 then 0 else 186000) + (if b0442 then 0 else 186000) + (if b0443 then 0 else 186000) + (if b0444 then 0 else 186000) + (if b0445 then 0 else 186000) + (if b0446 then 0 else 186000) + (if b0447 then 0 else 186000) + (if b0448 then 0 else 186000) + (if b0449 then 0 else 186000) + (if b0450 then 0 else 186000) + (if b0451 then 0 else 186000) + (if b0452 then 0 else 186000) + (if b0453 then 0 else 186000) + (if b0454 then 0 else 186000) + (if b0455 then 0 else 186000) + (if b0456 then 0 else 186000) + (if b0457 then 0 else 186000) + (if b0458 then 0 else 186000) + (if b0459 then 0 else 186000) + (if b0460 then 0 else 186000) + (if b0461 then 0 else 186000) + (if b0462 then 0 else 186000) + (if b0463 then 0 else 186000) + (if b0464 then 0 else 186000) + (if b0465 then 0 else 186000) < 441
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,0,1,1,1,1,0,1,1,0,1,1,1,1,1,1,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 6.75084
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/linear-algebra/kernels/3mm/kernel3.bpl.ice2.bpl
Total learner time was 00:00:00.1227190
Verifying $kernel3: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool, b0228: bool, b0229: bool, b0230: bool, b0231: bool, b0232: bool, b0233: bool, b0234: bool, b0235: bool, b0236: bool, b0237: bool, b0238: bool, b0239: bool, b0240: bool, b0241: bool, b0242: bool, b0243: bool, b0244: bool, b0245: bool, b0246: bool, b0247: bool, b0248: bool, b0249: bool, b0250: bool, b0251: bool, b0252: bool, b0253: bool, b0254: bool, b0255: bool, b0256: bool, b0257: bool, b0258: bool, b0259: bool, b0260: bool, b0261: bool, b0262: bool, b0263: bool, b0264: bool, b0265: bool, b0266: bool, b0267: bool, b0268: bool, b0269: bool, b0270: bool, b0271: bool, b0272: bool, b0273: bool, b0274: bool, b0275: bool, b0276: bool, b0277: bool, b0278: bool, b0279: bool, b0280: bool, b0281: bool, b0282: bool, b0283: bool, b0284: bool, b0285: bool, b0286: bool, b0287: bool, b0288: bool, b0289: bool, b0290: bool, b0291: bool, b0292: bool, b0293: bool, b0294: bool, b0295: bool, b0296: bool, b0297: bool, b0298: bool, b0299: bool, b0300: bool, b0301: bool, b0302: bool, b0303: bool, b0304: bool, b0305: bool, b0306: bool, b0307: bool, b0308: bool, b0309: bool, b0310: bool, b0311: bool, b0312: bool, b0313: bool, b0314: bool, b0315: bool, b0316: bool, b0317: bool, b0318: bool, b0319: bool, b0320: bool, b0321: bool, b0322: bool, b0323: bool, b0324: bool, b0325: bool, b0326: bool, b0327: bool, b0328: bool, b0329: bool, b0330: bool, b0331: bool, b0332: bool, b0333: bool, b0334: bool, b0335: bool, b0336: bool, b0337: bool, b0338: bool, b0339: bool, b0340: bool, b0341: bool, b0342: bool, b0343: bool, b0344: bool, b0345: bool, b0346: bool, b0347: bool, b0348: bool, b0349: bool, b0350: bool, b0351: bool, b0352: bool, b0353: bool, b0354: bool, b0355: bool, b0356: bool, b0357: bool, b0358: bool, b0359: bool, b0360: bool, b0361: bool, b0362: bool, b0363: bool, b0364: bool, b0365: bool, b0366: bool, b0367: bool, b0368: bool, b0369: bool, b0370: bool, b0371: bool, b0372: bool, b0373: bool, b0374: bool, b0375: bool, b0376: bool, b0377: bool, b0378: bool, b0379: bool, b0380: bool, b0381: bool, b0382: bool, b0383: bool, b0384: bool, b0385: bool, b0386: bool, b0387: bool, b0388: bool, b0389: bool, b0390: bool, b0391: bool, b0392: bool, b0393: bool, b0394: bool, b0395: bool, b0396: bool, b0397: bool, b0398: bool, b0399: bool, b0400: bool, b0401: bool, b0402: bool, b0403: bool, b0404: bool, b0405: bool, b0406: bool, b0407: bool, b0408: bool, b0409: bool, b0410: bool, b0411: bool, b0412: bool, b0413: bool, b0414: bool, b0415: bool, b0416: bool, b0417: bool, b0418: bool, b0419: bool, b0420: bool, b0421: bool, b0422: bool, b0423: bool, b0424: bool, b0425: bool, b0426: bool, b0427: bool, b0428: bool, b0429: bool, b0430: bool, b0431: bool, b0432: bool, b0433: bool, b0434: bool, b0435: bool, b0436: bool, b0437: bool, b0438: bool, b0439: bool, b0440: bool, b0441: bool, b0442: bool, b0443: bool, b0444: bool, b0445: bool, b0446: bool, b0447: bool, b0448: bool, b0449: bool, b0450: bool, b0451: bool, b0452: bool, b0453: bool, b0454: bool, b0455: bool, b0456: bool, b0457: bool, b0458: bool, b0459: bool, b0460: bool, b0461: bool, b0462: bool, b0463: bool, b0464: bool, b0465: bool) : bool
{
  0 + (if b0000 then 0 else 186000) + (if b0001 then 0 else 186000) + (if b0002 then 0 else 186000) + (if b0003 then 0 else 186000) + (if b0004 then 0 else 186000) + (if b0005 then 0 else 186000) + (if b0006 then 0 else 186000) + (if b0007 then 0 else 186000) + (if b0008 then 0 else 186000) + (if b0009 then 0 else 186000) + (if b0010 then 0 else 186000) + (if b0011 then 0 else 186000) + (if b0012 then 0 else 186000) + (if b0013 then 0 else 186000) + (if b0014 then 0 else 186000) + (if b0015 then 0 else 186000) + (if b0016 then 0 else 186000) + (if b0017 then 0 else 186000) + (if b0018 then 0 else 186000) + (if b0019 then 0 else 186000) + (if b0020 then 0 else 186000) + (if b0021 then 0 else 186000) + (if b0022 then 0 else 186000) + (if b0023 then 0 else 186000) + (if b0024 then 0 else 186000) + (if b0025 then 0 else 186000) + (if b0026 then 0 else 186000) + (if b0027 then 0 else 186000) + (if b0028 then 0 else 186000) + (if b0029 then 0 else 186000) + (if b0030 then 0 else 186000) + (if b0031 then 0 else 186000) + (if b0032 then 0 else 186000) + (if b0033 then 0 else 186000) + (if b0034 then 0 else 186000) + (if b0035 then 0 else 186000) + (if b0036 then 0 else 186000) + (if b0037 then 0 else 186000) + (if b0038 then 0 else 186000) + (if b0039 then 0 else 186000) + (if b0040 then 0 else 186000) + (if b0041 then 0 else 186000) + (if b0042 then 0 else 186000) + (if b0043 then 0 else 186000) + (if b0044 then 0 else 186000) + (if b0045 then 0 else 186000) + (if b0046 then 0 else 186000) + (if b0047 then 0 else 186000) + (if b0048 then 0 else 186000) + (if b0049 then 0 else 186000) + (if b0050 then 0 else 186000) + (if b0051 then 0 else 186000) + (if b0052 then 0 else 186000) + (if b0053 then 0 else 186000) + (if b0054 then 0 else 186000) + (if b0055 then 0 else 186000) + (if b0056 then 0 else 186000) + (if b0057 then 0 else 186000) + (if b0058 then 0 else 186000) + (if b0059 then 0 else 186000) + (if b0060 then 0 else 186000) + (if b0061 then 0 else 186000) + (if b0062 then 0 else 186000) + (if b0063 then 0 else 186000) + (if b0064 then 0 else 186000) + (if b0065 then 0 else 186000) + (if b0066 then 0 else 186000) + (if b0067 then 0 else 186000) + (if b0068 then 0 else 186000) + (if b0069 then 0 else 186000) + (if b0070 then 0 else 186000) + (if b0071 then 0 else 186000) + (if b0072 then 0 else 186000) + (if b0073 then 0 else 186000) + (if b0074 then 0 else 186000) + (if b0075 then 0 else 186000) + (if b0076 then 0 else 186000) + (if b0077 then 0 else 186000) + (if b0078 then 0 else 186000) + (if b0079 then 0 else 186000) + (if b0080 then 0 else 186000) + (if b0081 then 0 else 186000) + (if b0082 then 0 else 186000) + (if b0083 then 0 else 186000) + (if b0084 then 0 else 186000) + (if b0085 then 0 else 186000) + (if b0086 then 0 else 186000) + (if b0087 then 0 else 186000) + (if b0088 then 0 else 186000) + (if b0089 then 0 else 186000) + (if b0090 then 0 else 186000) + (if b0091 then 0 else 186000) + (if b0092 then 0 else 186000) + (if b0093 then 0 else 186000) + (if b0094 then 0 else 186000) + (if b0095 then 0 else 186000) + (if b0096 then 0 else 186000) + (if b0097 then 0 else 186000) + (if b0098 then 0 else 186000) + (if b0099 then 0 else 186000) + (if b0100 then 0 else 186000) + (if b0101 then 0 else 186000) + (if b0102 then 0 else 186000) + (if b0103 then 0 else 186000) + (if b0104 then 0 else 186000) + (if b0105 then 0 else 186000) + (if b0106 then 0 else 186000) + (if b0107 then 0 else 186000) + (if b0108 then 0 else 186000) + (if b0109 then 0 else 186000) + (if b0110 then 0 else 186000) + (if b0111 then 0 else 186000) + (if b0112 then 0 else 186000) + (if b0113 then 0 else 186000) + (if b0114 then 0 else 186000) + (if b0115 then 0 else 186000) + (if b0116 then 0 else 186000) + (if b0117 then 0 else 186000) + (if b0118 then 0 else 186000) + (if b0119 then 0 else 186000) + (if b0120 then 0 else 186000) + (if b0121 then 0 else 186000) + (if b0122 then 0 else 186000) + (if b0123 then 0 else 186000) + (if b0124 then 0 else 186000) + (if b0125 then 0 else 186000) + (if b0126 then 0 else 186000) + (if b0127 then 0 else 186000) + (if b0128 then 0 else 186000) + (if b0129 then 0 else 186000) + (if b0130 then 0 else 186000) + (if b0131 then 0 else 186000) + (if b0132 then 0 else 186000) + (if b0133 then 0 else 186000) + (if b0134 then 0 else 186000) + (if b0135 then 0 else 186000) + (if b0136 then 0 else 186000) + (if b0137 then 0 else 186000) + (if b0138 then 0 else 186000) + (if b0139 then 0 else 186000) + (if b0140 then 0 else 186000) + (if b0141 then 0 else 186000) + (if b0142 then 0 else 186000) + (if b0143 then 0 else 186000) + (if b0144 then 0 else 186000) + (if b0145 then 0 else 186000) + (if b0146 then 0 else 186000) + (if b0147 then 0 else 186000) + (if b0148 then 0 else 186000) + (if b0149 then 0 else 186000) + (if b0150 then 0 else 186000) + (if b0151 then 0 else 186000) + (if b0152 then 0 else 186000) + (if b0153 then 0 else 186000) + (if b0154 then 0 else 186000) + (if b0155 then 0 else 186000) + (if b0156 then 0 else 186000) + (if b0157 then 0 else 186000) + (if b0158 then 0 else 186000) + (if b0159 then 0 else 186000) + (if b0160 then 0 else 186000) + (if b0161 then 0 else 186000) + (if b0162 then 0 else 186000) + (if b0163 then 0 else 186000) + (if b0164 then 0 else 186000) + (if b0165 then 0 else 186000) + (if b0166 then 0 else 186000) + (if b0167 then 0 else 186000) + (if b0168 then 0 else 186000) + (if b0169 then 0 else 186000) + (if b0170 then 0 else 186000) + (if b0171 then 0 else 186000) + (if b0172 then 0 else 186000) + (if b0173 then 0 else 186000) + (if b0174 then 0 else 186000) + (if b0175 then 0 else 186000) + (if b0176 then 0 else 186000) + (if b0177 then 0 else 186000) + (if b0178 then 0 else 186000) + (if b0179 then 0 else 186000) + (if b0180 then 0 else 186000) + (if b0181 then 0 else 186000) + (if b0182 then 0 else 186000) + (if b0183 then 0 else 186000) + (if b0184 then 0 else 186000) + (if b0185 then 0 else 186000) + (if b0186 then 0 else 186000) + (if b0187 then 0 else 186000) + (if b0188 then 0 else 186000) + (if b0189 then 0 else 186000) + (if b0190 then 0 else 186000) + (if b0191 then 0 else 186000) + (if b0192 then 0 else 186000) + (if b0193 then 0 else 186000) + (if b0194 then 0 else 186000) + (if b0195 then 0 else 186000) + (if b0196 then 0 else 186000) + (if b0197 then 0 else 186000) + (if b0198 then 0 else 186000) + (if b0199 then 0 else 186000) + (if b0200 then 0 else 186000) + (if b0201 then 0 else 186000) + (if b0202 then 0 else 186000) + (if b0203 then 0 else 186000) + (if b0204 then 0 else 186000) + (if b0205 then 0 else 186000) + (if b0206 then 0 else 186000) + (if b0207 then 0 else 186000) + (if b0208 then 0 else 186000) + (if b0209 then 0 else 186000) + (if b0210 then 0 else 186000) + (if b0211 then 0 else 186000) + (if b0212 then 0 else 186000) + (if b0213 then 0 else 186000) + (if b0214 then 0 else 186000) + (if b0215 then 0 else 186000) + (if b0216 then 0 else 186000) + (if b0217 then 0 else 186000) + (if b0218 then 0 else 186000) + (if b0219 then 0 else 186000) + (if b0220 then 0 else 186000) + (if b0221 then 0 else 186000) + (if b0222 then 0 else 186000) + (if b0223 then 0 else 186000) + (if b0224 then 0 else 186000) + (if b0225 then 0 else 186000) + (if b0226 then 0 else 186000) + (if b0227 then 0 else 186000) + (if b0228 then 0 else 186000) + (if b0229 then 0 else 186000) + (if b0230 then 0 else 186000) + (if b0231 then 0 else 186000) + (if b0232 then 0 else 186000) + (if b0233 then 0 else 186000) + (if b0234 then 0 else 186000) + (if b0235 then 0 else 186000) + (if b0236 then 0 else 186000) + (if b0237 then 0 else 186000) + (if b0238 then 0 else 186000) + (if b0239 then 0 else 186000) + (if b0240 then 0 else 186000) + (if b0241 then 0 else 186000) + (if b0242 then 0 else 186000) + (if b0243 then 0 else 186000) + (if b0244 then 0 else 186000) + (if b0245 then 0 else 186000) + (if b0246 then 0 else 186000) + (if b0247 then 0 else 186000) + (if b0248 then 0 else 186000) + (if b0249 then 0 else 186000) + (if b0250 then 0 else 186000) + (if b0251 then 0 else 186000) + (if b0252 then 0 else 186000) + (if b0253 then 0 else 186000) + (if b0254 then 0 else 186000) + (if b0255 then 0 else 186000) + (if b0256 then 0 else 186000) + (if b0257 then 0 else 186000) + (if b0258 then 0 else 186000) + (if b0259 then 0 else 186000) + (if b0260 then 0 else 186000) + (if b0261 then 0 else 186000) + (if b0262 then 0 else 186000) + (if b0263 then 0 else 186000) + (if b0264 then 0 else 186000) + (if b0265 then 0 else 186000) + (if b0266 then 0 else 186000) + (if b0267 then 0 else 186000) + (if b0268 then 0 else 186000) + (if b0269 then 0 else 186000) + (if b0270 then 0 else 186000) + (if b0271 then 0 else 186000) + (if b0272 then 0 else 186000) + (if b0273 then 0 else 186000) + (if b0274 then 0 else 186000) + (if b0275 then 0 else 186000) + (if b0276 then 0 else 186000) + (if b0277 then 0 else 186000) + (if b0278 then 0 else 186000) + (if b0279 then 0 else 186000) + (if b0280 then 0 else 186000) + (if b0281 then 0 else 186000) + (if b0282 then 0 else 186000) + (if b0283 then 0 else 186000) + (if b0284 then 0 else 186000) + (if b0285 then 0 else 186000) + (if b0286 then 0 else 186000) + (if b0287 then 0 else 186000) + (if b0288 then 0 else 186000) + (if b0289 then 0 else 186000) + (if b0290 then 0 else 186000) + (if b0291 then 0 else 186000) + (if b0292 then 0 else 186000) + (if b0293 then 0 else 186000) + (if b0294 then 0 else 186000) + (if b0295 then 0 else 186000) + (if b0296 then 0 else 186000) + (if b0297 then 0 else 186000) + (if b0298 then 0 else 186000) + (if b0299 then 0 else 186000) + (if b0300 then 0 else 186000) + (if b0301 then 0 else 186000) + (if b0302 then 0 else 186000) + (if b0303 then 0 else 186000) + (if b0304 then 0 else 186000) + (if b0305 then 0 else 186000) + (if b0306 then 0 else 186000) + (if b0307 then 0 else 186000) + (if b0308 then 0 else 186000) + (if b0309 then 0 else 186000) + (if b0310 then 0 else 186000) + (if b0311 then 0 else 186000) + (if b0312 then 0 else 186000) + (if b0313 then 0 else 186000) + (if b0314 then 0 else 186000) + (if b0315 then 0 else 186000) + (if b0316 then 0 else 186000) + (if b0317 then 0 else 186000) + (if b0318 then 0 else 186000) + (if b0319 then 0 else 186000) + (if b0320 then 0 else 186000) + (if b0321 then 0 else 186000) + (if b0322 then 0 else 186000) + (if b0323 then 0 else 186000) + (if b0324 then 0 else 186000) + (if b0325 then 0 else 186000) + (if b0326 then 0 else 186000) + (if b0327 then 0 else 186000) + (if b0328 then 0 else 186000) + (if b0329 then 0 else 186000) + (if b0330 then 0 else 186000) + (if b0331 then 0 else 186000) + (if b0332 then 0 else 186000) + (if b0333 then 0 else 186000) + (if b0334 then 0 else 186000) + (if b0335 then 0 else 186000) + (if b0336 then 0 else 186000) + (if b0337 then 0 else 186000) + (if b0338 then 0 else 186000) + (if b0339 then 0 else 186000) + (if b0340 then 0 else 186000) + (if b0341 then 0 else 186000) + (if b0343 then 0 else 186000) + (if b0345 then 0 else 186000) + (if b0348 then 0 else 186000) + (if b0354 then 0 else 186000) + (if b0355 then 0 else 186000) + (if b0356 then 0 else 186000) + (if b0362 then 0 else 186000) + (if b0364 then 0 else 186000) + (if b0366 then 0 else 186000) + (if b0367 then 0 else 186000) + (if b0368 then 0 else 186000) + (if b0371 then 0 else 186000) + (if b0372 then 0 else 186000) + (if b0373 then 0 else 186000) + (if b0376 then 0 else 186000) + (if b0377 then 0 else 186000) + (if b0378 then 0 else 186000) + (if b0379 then 0 else 186000) + (if b0380 then 0 else 186000) + (if b0381 then 0 else 186000) + (if b0382 then 0 else 186000) + (if b0383 then 0 else 186000) + (if b0384 then 0 else 186000) + (if b0385 then 0 else 186000) + (if b0386 then 0 else 186000) + (if b0387 then 0 else 186000) + (if b0388 then 0 else 186000) + (if b0389 then 0 else 186000) + (if b0390 then 0 else 186000) + (if b0391 then 0 else 186000) + (if b0392 then 0 else 186000) + (if b0393 then 0 else 186000) + (if b0394 then 0 else 186000) + (if b0395 then 0 else 186000) + (if b0396 then 0 else 186000) + (if b0397 then 0 else 186000) + (if b0398 then 0 else 186000) + (if b0399 then 0 else 186000) + (if b0400 then 0 else 186000) + (if b0401 then 0 else 186000) + (if b0402 then 0 else 186000) + (if b0403 then 0 else 186000) + (if b0404 then 0 else 186000) + (if b0405 then 0 else 186000) + (if b0406 then 0 else 186000) + (if b0407 then 0 else 186000) + (if b0408 then 0 else 186000) + (if b0409 then 0 else 186000) + (if b0410 then 0 else 186000) + (if b0411 then 0 else 186000) + (if b0412 then 0 else 186000) + (if b0413 then 0 else 186000) + (if b0414 then 0 else 186000) + (if b0415 then 0 else 186000) + (if b0416 then 0 else 186000) + (if b0417 then 0 else 186000) + (if b0418 then 0 else 186000) + (if b0419 then 0 else 186000) + (if b0420 then 0 else 186000) + (if b0421 then 0 else 186000) + (if b0422 then 0 else 186000) + (if b0423 then 0 else 186000) + (if b0424 then 0 else 186000) + (if b0425 then 0 else 186000) + (if b0426 then 0 else 186000) + (if b0427 then 0 else 186000) + (if b0428 then 0 else 186000) + (if b0429 then 0 else 186000) + (if b0430 then 0 else 186000) + (if b0431 then 0 else 186000) + (if b0432 then 0 else 186000) + (if b0433 then 0 else 186000) + (if b0434 then 0 else 186000) + (if b0435 then 0 else 186000) + (if b0436 then 0 else 186000) + (if b0437 then 0 else 186000) + (if b0438 then 0 else 186000) + (if b0439 then 0 else 186000) + (if b0440 then 0 else 186000) + (if b0441 then 0 else 186000) + (if b0442 then 0 else 186000) + (if b0443 then 0 else 186000) + (if b0444 then 0 else 186000) + (if b0445 then 0 else 186000) + (if b0446 then 0 else 186000) + (if b0447 then 0 else 186000) + (if b0448 then 0 else 186000) + (if b0449 then 0 else 186000) + (if b0450 then 0 else 186000) + (if b0451 then 0 else 186000) + (if b0452 then 0 else 186000) + (if b0453 then 0 else 186000) + (if b0454 then 0 else 186000) + (if b0455 then 0 else 186000) + (if b0456 then 0 else 186000) + (if b0457 then 0 else 186000) + (if b0458 then 0 else 186000) + (if b0459 then 0 else 186000) + (if b0460 then 0 else 186000) + (if b0461 then 0 else 186000) + (if b0462 then 0 else 186000) + (if b0463 then 0 else 186000) + (if b0464 then 0 else 186000) + (if b0465 then 0 else 186000) < 441
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,0,0,0,1,1,1,1,1,1,1,1,1,0,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 11.271485
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/linear-algebra/kernels/3mm/kernel3.bpl.ice2.bpl
Total learner time was 00:00:00.1222370
Verifying $kernel3: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool, b0228: bool, b0229: bool, b0230: bool, b0231: bool, b0232: bool, b0233: bool, b0234: bool, b0235: bool, b0236: bool, b0237: bool, b0238: bool, b0239: bool, b0240: bool, b0241: bool, b0242: bool, b0243: bool, b0244: bool, b0245: bool, b0246: bool, b0247: bool, b0248: bool, b0249: bool, b0250: bool, b0251: bool, b0252: bool, b0253: bool, b0254: bool, b0255: bool, b0256: bool, b0257: bool, b0258: bool, b0259: bool, b0260: bool, b0261: bool, b0262: bool, b0263: bool, b0264: bool, b0265: bool, b0266: bool, b0267: bool, b0268: bool, b0269: bool, b0270: bool, b0271: bool, b0272: bool, b0273: bool, b0274: bool, b0275: bool, b0276: bool, b0277: bool, b0278: bool, b0279: bool, b0280: bool, b0281: bool, b0282: bool, b0283: bool, b0284: bool, b0285: bool, b0286: bool, b0287: bool, b0288: bool, b0289: bool, b0290: bool, b0291: bool, b0292: bool, b0293: bool, b0294: bool, b0295: bool, b0296: bool, b0297: bool, b0298: bool, b0299: bool, b0300: bool, b0301: bool, b0302: bool, b0303: bool, b0304: bool, b0305: bool, b0306: bool, b0307: bool, b0308: bool, b0309: bool, b0310: bool, b0311: bool, b0312: bool, b0313: bool, b0314: bool, b0315: bool, b0316: bool, b0317: bool, b0318: bool, b0319: bool, b0320: bool, b0321: bool, b0322: bool, b0323: bool, b0324: bool, b0325: bool, b0326: bool, b0327: bool, b0328: bool, b0329: bool, b0330: bool, b0331: bool, b0332: bool, b0333: bool, b0334: bool, b0335: bool, b0336: bool, b0337: bool, b0338: bool, b0339: bool, b0340: bool, b0341: bool, b0342: bool, b0343: bool, b0344: bool, b0345: bool, b0346: bool, b0347: bool, b0348: bool, b0349: bool, b0350: bool, b0351: bool, b0352: bool, b0353: bool, b0354: bool, b0355: bool, b0356: bool, b0357: bool, b0358: bool, b0359: bool, b0360: bool, b0361: bool, b0362: bool, b0363: bool, b0364: bool, b0365: bool, b0366: bool, b0367: bool, b0368: bool, b0369: bool, b0370: bool, b0371: bool, b0372: bool, b0373: bool, b0374: bool, b0375: bool, b0376: bool, b0377: bool, b0378: bool, b0379: bool, b0380: bool, b0381: bool, b0382: bool, b0383: bool, b0384: bool, b0385: bool, b0386: bool, b0387: bool, b0388: bool, b0389: bool, b0390: bool, b0391: bool, b0392: bool, b0393: bool, b0394: bool, b0395: bool, b0396: bool, b0397: bool, b0398: bool, b0399: bool, b0400: bool, b0401: bool, b0402: bool, b0403: bool, b0404: bool, b0405: bool, b0406: bool, b0407: bool, b0408: bool, b0409: bool, b0410: bool, b0411: bool, b0412: bool, b0413: bool, b0414: bool, b0415: bool, b0416: bool, b0417: bool, b0418: bool, b0419: bool, b0420: bool, b0421: bool, b0422: bool, b0423: bool, b0424: bool, b0425: bool, b0426: bool, b0427: bool, b0428: bool, b0429: bool, b0430: bool, b0431: bool, b0432: bool, b0433: bool, b0434: bool, b0435: bool, b0436: bool, b0437: bool, b0438: bool, b0439: bool, b0440: bool, b0441: bool, b0442: bool, b0443: bool, b0444: bool, b0445: bool, b0446: bool, b0447: bool, b0448: bool, b0449: bool, b0450: bool, b0451: bool, b0452: bool, b0453: bool, b0454: bool, b0455: bool, b0456: bool, b0457: bool, b0458: bool, b0459: bool, b0460: bool, b0461: bool, b0462: bool, b0463: bool, b0464: bool, b0465: bool) : bool
{
  0 + (if b0000 then 0 else 186000) + (if b0001 then 0 else 186000) + (if b0002 then 0 else 186000) + (if b0003 then 0 else 186000) + (if b0004 then 0 else 186000) + (if b0005 then 0 else 186000) + (if b0006 then 0 else 186000) + (if b0007 then 0 else 186000) + (if b0008 then 0 else 186000) + (if b0009 then 0 else 186000) + (if b0010 then 0 else 186000) + (if b0011 then 0 else 186000) + (if b0012 then 0 else 186000) + (if b0013 then 0 else 186000) + (if b0014 then 0 else 186000) + (if b0015 then 0 else 186000) + (if b0016 then 0 else 186000) + (if b0017 then 0 else 186000) + (if b0018 then 0 else 186000) + (if b0019 then 0 else 186000) + (if b0020 then 0 else 186000) + (if b0021 then 0 else 186000) + (if b0022 then 0 else 186000) + (if b0023 then 0 else 186000) + (if b0024 then 0 else 186000) + (if b0025 then 0 else 186000) + (if b0026 then 0 else 186000) + (if b0027 then 0 else 186000) + (if b0028 then 0 else 186000) + (if b0029 then 0 else 186000) + (if b0030 then 0 else 186000) + (if b0031 then 0 else 186000) + (if b0032 then 0 else 186000) + (if b0033 then 0 else 186000) + (if b0034 then 0 else 186000) + (if b0035 then 0 else 186000) + (if b0036 then 0 else 186000) + (if b0037 then 0 else 186000) + (if b0038 then 0 else 186000) + (if b0039 then 0 else 186000) + (if b0040 then 0 else 186000) + (if b0041 then 0 else 186000) + (if b0042 then 0 else 186000) + (if b0043 then 0 else 186000) + (if b0044 then 0 else 186000) + (if b0045 then 0 else 186000) + (if b0046 then 0 else 186000) + (if b0047 then 0 else 186000) + (if b0048 then 0 else 186000) + (if b0049 then 0 else 186000) + (if b0050 then 0 else 186000) + (if b0051 then 0 else 186000) + (if b0052 then 0 else 186000) + (if b0053 then 0 else 186000) + (if b0054 then 0 else 186000) + (if b0055 then 0 else 186000) + (if b0056 then 0 else 186000) + (if b0057 then 0 else 186000) + (if b0058 then 0 else 186000) + (if b0059 then 0 else 186000) + (if b0060 then 0 else 186000) + (if b0061 then 0 else 186000) + (if b0062 then 0 else 186000) + (if b0063 then 0 else 186000) + (if b0064 then 0 else 186000) + (if b0065 then 0 else 186000) + (if b0066 then 0 else 186000) + (if b0067 then 0 else 186000) + (if b0068 then 0 else 186000) + (if b0069 then 0 else 186000) + (if b0070 then 0 else 186000) + (if b0071 then 0 else 186000) + (if b0072 then 0 else 186000) + (if b0073 then 0 else 186000) + (if b0074 then 0 else 186000) + (if b0075 then 0 else 186000) + (if b0076 then 0 else 186000) + (if b0077 then 0 else 186000) + (if b0078 then 0 else 186000) + (if b0079 then 0 else 186000) + (if b0080 then 0 else 186000) + (if b0081 then 0 else 186000) + (if b0082 then 0 else 186000) + (if b0083 then 0 else 186000) + (if b0084 then 0 else 186000) + (if b0085 then 0 else 186000) + (if b0086 then 0 else 186000) + (if b0087 then 0 else 186000) + (if b0088 then 0 else 186000) + (if b0089 then 0 else 186000) + (if b0090 then 0 else 186000) + (if b0091 then 0 else 186000) + (if b0092 then 0 else 186000) + (if b0093 then 0 else 186000) + (if b0094 then 0 else 186000) + (if b0095 then 0 else 186000) + (if b0096 then 0 else 186000) + (if b0097 then 0 else 186000) + (if b0098 then 0 else 186000) + (if b0099 then 0 else 186000) + (if b0100 then 0 else 186000) + (if b0101 then 0 else 186000) + (if b0102 then 0 else 186000) + (if b0103 then 0 else 186000) + (if b0104 then 0 else 186000) + (if b0105 then 0 else 186000) + (if b0106 then 0 else 186000) + (if b0107 then 0 else 186000) + (if b0108 then 0 else 186000) + (if b0109 then 0 else 186000) + (if b0110 then 0 else 186000) + (if b0111 then 0 else 186000) + (if b0112 then 0 else 186000) + (if b0113 then 0 else 186000) + (if b0114 then 0 else 186000) + (if b0115 then 0 else 186000) + (if b0116 then 0 else 186000) + (if b0117 then 0 else 186000) + (if b0118 then 0 else 186000) + (if b0119 then 0 else 186000) + (if b0120 then 0 else 186000) + (if b0121 then 0 else 186000) + (if b0122 then 0 else 186000) + (if b0123 then 0 else 186000) + (if b0124 then 0 else 186000) + (if b0125 then 0 else 186000) + (if b0126 then 0 else 186000) + (if b0127 then 0 else 186000) + (if b0128 then 0 else 186000) + (if b0129 then 0 else 186000) + (if b0130 then 0 else 186000) + (if b0131 then 0 else 186000) + (if b0132 then 0 else 186000) + (if b0133 then 0 else 186000) + (if b0134 then 0 else 186000) + (if b0135 then 0 else 186000) + (if b0136 then 0 else 186000) + (if b0137 then 0 else 186000) + (if b0138 then 0 else 186000) + (if b0139 then 0 else 186000) + (if b0140 then 0 else 186000) + (if b0141 then 0 else 186000) + (if b0142 then 0 else 186000) + (if b0143 then 0 else 186000) + (if b0144 then 0 else 186000) + (if b0145 then 0 else 186000) + (if b0146 then 0 else 186000) + (if b0147 then 0 else 186000) + (if b0148 then 0 else 186000) + (if b0149 then 0 else 186000) + (if b0150 then 0 else 186000) + (if b0151 then 0 else 186000) + (if b0152 then 0 else 186000) + (if b0153 then 0 else 186000) + (if b0154 then 0 else 186000) + (if b0155 then 0 else 186000) + (if b0156 then 0 else 186000) + (if b0157 then 0 else 186000) + (if b0158 then 0 else 186000) + (if b0159 then 0 else 186000) + (if b0160 then 0 else 186000) + (if b0161 then 0 else 186000) + (if b0162 then 0 else 186000) + (if b0163 then 0 else 186000) + (if b0164 then 0 else 186000) + (if b0165 then 0 else 186000) + (if b0166 then 0 else 186000) + (if b0167 then 0 else 186000) + (if b0168 then 0 else 186000) + (if b0169 then 0 else 186000) + (if b0170 then 0 else 186000) + (if b0171 then 0 else 186000) + (if b0172 then 0 else 186000) + (if b0173 then 0 else 186000) + (if b0174 then 0 else 186000) + (if b0175 then 0 else 186000) + (if b0176 then 0 else 186000) + (if b0177 then 0 else 186000) + (if b0178 then 0 else 186000) + (if b0179 then 0 else 186000) + (if b0180 then 0 else 186000) + (if b0181 then 0 else 186000) + (if b0182 then 0 else 186000) + (if b0183 then 0 else 186000) + (if b0184 then 0 else 186000) + (if b0185 then 0 else 186000) + (if b0186 then 0 else 186000) + (if b0187 then 0 else 186000) + (if b0188 then 0 else 186000) + (if b0189 then 0 else 186000) + (if b0190 then 0 else 186000) + (if b0191 then 0 else 186000) + (if b0192 then 0 else 186000) + (if b0193 then 0 else 186000) + (if b0194 then 0 else 186000) + (if b0195 then 0 else 186000) + (if b0196 then 0 else 186000) + (if b0197 then 0 else 186000) + (if b0198 then 0 else 186000) + (if b0199 then 0 else 186000) + (if b0200 then 0 else 186000) + (if b0201 then 0 else 186000) + (if b0202 then 0 else 186000) + (if b0203 then 0 else 186000) + (if b0204 then 0 else 186000) + (if b0205 then 0 else 186000) + (if b0206 then 0 else 186000) + (if b0207 then 0 else 186000) + (if b0208 then 0 else 186000) + (if b0209 then 0 else 186000) + (if b0210 then 0 else 186000) + (if b0211 then 0 else 186000) + (if b0212 then 0 else 186000) + (if b0213 then 0 else 186000) + (if b0214 then 0 else 186000) + (if b0215 then 0 else 186000) + (if b0216 then 0 else 186000) + (if b0217 then 0 else 186000) + (if b0218 then 0 else 186000) + (if b0219 then 0 else 186000) + (if b0220 then 0 else 186000) + (if b0221 then 0 else 186000) + (if b0222 then 0 else 186000) + (if b0223 then 0 else 186000) + (if b0224 then 0 else 186000) + (if b0225 then 0 else 186000) + (if b0226 then 0 else 186000) + (if b0227 then 0 else 186000) + (if b0228 then 0 else 186000) + (if b0229 then 0 else 186000) + (if b0230 then 0 else 186000) + (if b0231 then 0 else 186000) + (if b0232 then 0 else 186000) + (if b0233 then 0 else 186000) + (if b0234 then 0 else 186000) + (if b0235 then 0 else 186000) + (if b0236 then 0 else 186000) + (if b0237 then 0 else 186000) + (if b0238 then 0 else 186000) + (if b0239 then 0 else 186000) + (if b0240 then 0 else 186000) + (if b0241 then 0 else 186000) + (if b0242 then 0 else 186000) + (if b0243 then 0 else 186000) + (if b0244 then 0 else 186000) + (if b0245 then 0 else 186000) + (if b0246 then 0 else 186000) + (if b0247 then 0 else 186000) + (if b0248 then 0 else 186000) + (if b0249 then 0 else 186000) + (if b0250 then 0 else 186000) + (if b0251 then 0 else 186000) + (if b0252 then 0 else 186000) + (if b0253 then 0 else 186000) + (if b0254 then 0 else 186000) + (if b0255 then 0 else 186000) + (if b0256 then 0 else 186000) + (if b0257 then 0 else 186000) + (if b0258 then 0 else 186000) + (if b0259 then 0 else 186000) + (if b0260 then 0 else 186000) + (if b0261 then 0 else 186000) + (if b0262 then 0 else 186000) + (if b0263 then 0 else 186000) + (if b0264 then 0 else 186000) + (if b0265 then 0 else 186000) + (if b0266 then 0 else 186000) + (if b0267 then 0 else 186000) + (if b0268 then 0 else 186000) + (if b0269 then 0 else 186000) + (if b0270 then 0 else 186000) + (if b0271 then 0 else 186000) + (if b0272 then 0 else 186000) + (if b0273 then 0 else 186000) + (if b0274 then 0 else 186000) + (if b0275 then 0 else 186000) + (if b0276 then 0 else 186000) + (if b0277 then 0 else 186000) + (if b0278 then 0 else 186000) + (if b0279 then 0 else 186000) + (if b0280 then 0 else 186000) + (if b0281 then 0 else 186000) + (if b0282 then 0 else 186000) + (if b0283 then 0 else 186000) + (if b0284 then 0 else 186000) + (if b0285 then 0 else 186000) + (if b0286 then 0 else 186000) + (if b0287 then 0 else 186000) + (if b0288 then 0 else 186000) + (if b0289 then 0 else 186000) + (if b0290 then 0 else 186000) + (if b0291 then 0 else 186000) + (if b0292 then 0 else 186000) + (if b0293 then 0 else 186000) + (if b0294 then 0 else 186000) + (if b0295 then 0 else 186000) + (if b0296 then 0 else 186000) + (if b0297 then 0 else 186000) + (if b0298 then 0 else 186000) + (if b0299 then 0 else 186000) + (if b0300 then 0 else 186000) + (if b0301 then 0 else 186000) + (if b0302 then 0 else 186000) + (if b0303 then 0 else 186000) + (if b0304 then 0 else 186000) + (if b0305 then 0 else 186000) + (if b0306 then 0 else 186000) + (if b0307 then 0 else 186000) + (if b0308 then 0 else 186000) + (if b0309 then 0 else 186000) + (if b0310 then 0 else 186000) + (if b0311 then 0 else 186000) + (if b0312 then 0 else 186000) + (if b0313 then 0 else 186000) + (if b0314 then 0 else 186000) + (if b0315 then 0 else 186000) + (if b0316 then 0 else 186000) + (if b0317 then 0 else 186000) + (if b0318 then 0 else 186000) + (if b0319 then 0 else 186000) + (if b0320 then 0 else 186000) + (if b0321 then 0 else 186000) + (if b0322 then 0 else 186000) + (if b0323 then 0 else 186000) + (if b0324 then 0 else 186000) + (if b0325 then 0 else 186000) + (if b0326 then 0 else 186000) + (if b0327 then 0 else 186000) + (if b0328 then 0 else 186000) + (if b0329 then 0 else 186000) + (if b0330 then 0 else 186000) + (if b0331 then 0 else 186000) + (if b0332 then 0 else 186000) + (if b0333 then 0 else 186000) + (if b0334 then 0 else 186000) + (if b0335 then 0 else 186000) + (if b0336 then 0 else 186000) + (if b0337 then 0 else 186000) + (if b0338 then 0 else 186000) + (if b0339 then 0 else 186000) + (if b0340 then 0 else 186000) + (if b0341 then 0 else 186000) + (if b0343 then 0 else 186000) + (if b0348 then 0 else 186000) + (if b0362 then 0 else 186000) + (if b0364 then 0 else 186000) + (if b0367 then 0 else 186000) + (if b0368 then 0 else 186000) + (if b0373 then 0 else 186000) + (if b0376 then 0 else 186000) + (if b0377 then 0 else 186000) + (if b0378 then 0 else 186000) + (if b0379 then 0 else 186000) + (if b0380 then 0 else 186000) + (if b0381 then 0 else 186000) + (if b0382 then 0 else 186000) + (if b0383 then 0 else 186000) + (if b0384 then 0 else 186000) + (if b0385 then 0 else 186000) + (if b0386 then 0 else 186000) + (if b0387 then 0 else 186000) + (if b0388 then 0 else 186000) + (if b0389 then 0 else 186000) + (if b0390 then 0 else 186000) + (if b0391 then 0 else 186000) + (if b0392 then 0 else 186000) + (if b0393 then 0 else 186000) + (if b0394 then 0 else 186000) + (if b0395 then 0 else 186000) + (if b0396 then 0 else 186000) + (if b0397 then 0 else 186000) + (if b0398 then 0 else 186000) + (if b0399 then 0 else 186000) + (if b0400 then 0 else 186000) + (if b0401 then 0 else 186000) + (if b0402 then 0 else 186000) + (if b0403 then 0 else 186000) + (if b0404 then 0 else 186000) + (if b0405 then 0 else 186000) + (if b0406 then 0 else 186000) + (if b0407 then 0 else 186000) + (if b0408 then 0 else 186000) + (if b0409 then 0 else 186000) + (if b0410 then 0 else 186000) + (if b0411 then 0 else 186000) + (if b0412 then 0 else 186000) + (if b0413 then 0 else 186000) + (if b0414 then 0 else 186000) + (if b0415 then 0 else 186000) + (if b0416 then 0 else 186000) + (if b0417 then 0 else 186000) + (if b0418 then 0 else 186000) + (if b0419 then 0 else 186000) + (if b0420 then 0 else 186000) + (if b0421 then 0 else 186000) + (if b0422 then 0 else 186000) + (if b0423 then 0 else 186000) + (if b0424 then 0 else 186000) + (if b0425 then 0 else 186000) + (if b0426 then 0 else 186000) + (if b0427 then 0 else 186000) + (if b0428 then 0 else 186000) + (if b0429 then 0 else 186000) + (if b0430 then 0 else 186000) + (if b0431 then 0 else 186000) + (if b0432 then 0 else 186000) + (if b0433 then 0 else 186000) + (if b0434 then 0 else 186000) + (if b0435 then 0 else 186000) + (if b0436 then 0 else 186000) + (if b0437 then 0 else 186000) + (if b0438 then 0 else 186000) + (if b0439 then 0 else 186000) + (if b0440 then 0 else 186000) + (if b0441 then 0 else 186000) + (if b0442 then 0 else 186000) + (if b0443 then 0 else 186000) + (if b0444 then 0 else 186000) + (if b0445 then 0 else 186000) + (if b0446 then 0 else 186000) + (if b0447 then 0 else 186000) + (if b0448 then 0 else 186000) + (if b0449 then 0 else 186000) + (if b0450 then 0 else 186000) + (if b0451 then 0 else 186000) + (if b0452 then 0 else 186000) + (if b0453 then 0 else 186000) + (if b0454 then 0 else 186000) + (if b0455 then 0 else 186000) + (if b0456 then 0 else 186000) + (if b0457 then 0 else 186000) + (if b0458 then 0 else 186000) + (if b0459 then 0 else 186000) + (if b0460 then 0 else 186000) + (if b0461 then 0 else 186000) + (if b0462 then 0 else 186000) + (if b0463 then 0 else 186000) + (if b0464 then 0 else 186000) + (if b0465 then 0 else 186000) < 441
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,0,1,1,0,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 8.59431
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/linear-algebra/kernels/3mm/kernel3.bpl.ice2.bpl
Total learner time was 00:00:00.1224620
Verifying $kernel3: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool, b0228: bool, b0229: bool, b0230: bool, b0231: bool, b0232: bool, b0233: bool, b0234: bool, b0235: bool, b0236: bool, b0237: bool, b0238: bool, b0239: bool, b0240: bool, b0241: bool, b0242: bool, b0243: bool, b0244: bool, b0245: bool, b0246: bool, b0247: bool, b0248: bool, b0249: bool, b0250: bool, b0251: bool, b0252: bool, b0253: bool, b0254: bool, b0255: bool, b0256: bool, b0257: bool, b0258: bool, b0259: bool, b0260: bool, b0261: bool, b0262: bool, b0263: bool, b0264: bool, b0265: bool, b0266: bool, b0267: bool, b0268: bool, b0269: bool, b0270: bool, b0271: bool, b0272: bool, b0273: bool, b0274: bool, b0275: bool, b0276: bool, b0277: bool, b0278: bool, b0279: bool, b0280: bool, b0281: bool, b0282: bool, b0283: bool, b0284: bool, b0285: bool, b0286: bool, b0287: bool, b0288: bool, b0289: bool, b0290: bool, b0291: bool, b0292: bool, b0293: bool, b0294: bool, b0295: bool, b0296: bool, b0297: bool, b0298: bool, b0299: bool, b0300: bool, b0301: bool, b0302: bool, b0303: bool, b0304: bool, b0305: bool, b0306: bool, b0307: bool, b0308: bool, b0309: bool, b0310: bool, b0311: bool, b0312: bool, b0313: bool, b0314: bool, b0315: bool, b0316: bool, b0317: bool, b0318: bool, b0319: bool, b0320: bool, b0321: bool, b0322: bool, b0323: bool, b0324: bool, b0325: bool, b0326: bool, b0327: bool, b0328: bool, b0329: bool, b0330: bool, b0331: bool, b0332: bool, b0333: bool, b0334: bool, b0335: bool, b0336: bool, b0337: bool, b0338: bool, b0339: bool, b0340: bool, b0341: bool, b0342: bool, b0343: bool, b0344: bool, b0345: bool, b0346: bool, b0347: bool, b0348: bool, b0349: bool, b0350: bool, b0351: bool, b0352: bool, b0353: bool, b0354: bool, b0355: bool, b0356: bool, b0357: bool, b0358: bool, b0359: bool, b0360: bool, b0361: bool, b0362: bool, b0363: bool, b0364: bool, b0365: bool, b0366: bool, b0367: bool, b0368: bool, b0369: bool, b0370: bool, b0371: bool, b0372: bool, b0373: bool, b0374: bool, b0375: bool, b0376: bool, b0377: bool, b0378: bool, b0379: bool, b0380: bool, b0381: bool, b0382: bool, b0383: bool, b0384: bool, b0385: bool, b0386: bool, b0387: bool, b0388: bool, b0389: bool, b0390: bool, b0391: bool, b0392: bool, b0393: bool, b0394: bool, b0395: bool, b0396: bool, b0397: bool, b0398: bool, b0399: bool, b0400: bool, b0401: bool, b0402: bool, b0403: bool, b0404: bool, b0405: bool, b0406: bool, b0407: bool, b0408: bool, b0409: bool, b0410: bool, b0411: bool, b0412: bool, b0413: bool, b0414: bool, b0415: bool, b0416: bool, b0417: bool, b0418: bool, b0419: bool, b0420: bool, b0421: bool, b0422: bool, b0423: bool, b0424: bool, b0425: bool, b0426: bool, b0427: bool, b0428: bool, b0429: bool, b0430: bool, b0431: bool, b0432: bool, b0433: bool, b0434: bool, b0435: bool, b0436: bool, b0437: bool, b0438: bool, b0439: bool, b0440: bool, b0441: bool, b0442: bool, b0443: bool, b0444: bool, b0445: bool, b0446: bool, b0447: bool, b0448: bool, b0449: bool, b0450: bool, b0451: bool, b0452: bool, b0453: bool, b0454: bool, b0455: bool, b0456: bool, b0457: bool, b0458: bool, b0459: bool, b0460: bool, b0461: bool, b0462: bool, b0463: bool, b0464: bool, b0465: bool) : bool
{
  0 + (if b0000 then 0 else 186000) + (if b0001 then 0 else 186000) + (if b0002 then 0 else 186000) + (if b0003 then 0 else 186000) + (if b0004 then 0 else 186000) + (if b0005 then 0 else 186000) + (if b0006 then 0 else 186000) + (if b0007 then 0 else 186000) + (if b0008 then 0 else 186000) + (if b0009 then 0 else 186000) + (if b0010 then 0 else 186000) + (if b0011 then 0 else 186000) + (if b0012 then 0 else 186000) + (if b0013 then 0 else 186000) + (if b0014 then 0 else 186000) + (if b0015 then 0 else 186000) + (if b0016 then 0 else 186000) + (if b0017 then 0 else 186000) + (if b0018 then 0 else 186000) + (if b0019 then 0 else 186000) + (if b0020 then 0 else 186000) + (if b0021 then 0 else 186000) + (if b0022 then 0 else 186000) + (if b0023 then 0 else 186000) + (if b0024 then 0 else 186000) + (if b0025 then 0 else 186000) + (if b0026 then 0 else 186000) + (if b0027 then 0 else 186000) + (if b0028 then 0 else 186000) + (if b0029 then 0 else 186000) + (if b0030 then 0 else 186000) + (if b0031 then 0 else 186000) + (if b0032 then 0 else 186000) + (if b0033 then 0 else 186000) + (if b0034 then 0 else 186000) + (if b0035 then 0 else 186000) + (if b0036 then 0 else 186000) + (if b0037 then 0 else 186000) + (if b0038 then 0 else 186000) + (if b0039 then 0 else 186000) + (if b0040 then 0 else 186000) + (if b0041 then 0 else 186000) + (if b0042 then 0 else 186000) + (if b0043 then 0 else 186000) + (if b0044 then 0 else 186000) + (if b0045 then 0 else 186000) + (if b0046 then 0 else 186000) + (if b0047 then 0 else 186000) + (if b0048 then 0 else 186000) + (if b0049 then 0 else 186000) + (if b0050 then 0 else 186000) + (if b0051 then 0 else 186000) + (if b0052 then 0 else 186000) + (if b0053 then 0 else 186000) + (if b0054 then 0 else 186000) + (if b0055 then 0 else 186000) + (if b0056 then 0 else 186000) + (if b0057 then 0 else 186000) + (if b0058 then 0 else 186000) + (if b0059 then 0 else 186000) + (if b0060 then 0 else 186000) + (if b0061 then 0 else 186000) + (if b0062 then 0 else 186000) + (if b0063 then 0 else 186000) + (if b0064 then 0 else 186000) + (if b0065 then 0 else 186000) + (if b0066 then 0 else 186000) + (if b0067 then 0 else 186000) + (if b0068 then 0 else 186000) + (if b0069 then 0 else 186000) + (if b0070 then 0 else 186000) + (if b0071 then 0 else 186000) + (if b0072 then 0 else 186000) + (if b0073 then 0 else 186000) + (if b0074 then 0 else 186000) + (if b0075 then 0 else 186000) + (if b0076 then 0 else 186000) + (if b0077 then 0 else 186000) + (if b0078 then 0 else 186000) + (if b0079 then 0 else 186000) + (if b0080 then 0 else 186000) + (if b0081 then 0 else 186000) + (if b0082 then 0 else 186000) + (if b0083 then 0 else 186000) + (if b0084 then 0 else 186000) + (if b0085 then 0 else 186000) + (if b0086 then 0 else 186000) + (if b0087 then 0 else 186000) + (if b0088 then 0 else 186000) + (if b0089 then 0 else 186000) + (if b0090 then 0 else 186000) + (if b0091 then 0 else 186000) + (if b0092 then 0 else 186000) + (if b0093 then 0 else 186000) + (if b0094 then 0 else 186000) + (if b0095 then 0 else 186000) + (if b0096 then 0 else 186000) + (if b0097 then 0 else 186000) + (if b0098 then 0 else 186000) + (if b0099 then 0 else 186000) + (if b0100 then 0 else 186000) + (if b0101 then 0 else 186000) + (if b0102 then 0 else 186000) + (if b0103 then 0 else 186000) + (if b0104 then 0 else 186000) + (if b0105 then 0 else 186000) + (if b0106 then 0 else 186000) + (if b0107 then 0 else 186000) + (if b0108 then 0 else 186000) + (if b0109 then 0 else 186000) + (if b0110 then 0 else 186000) + (if b0111 then 0 else 186000) + (if b0112 then 0 else 186000) + (if b0113 then 0 else 186000) + (if b0114 then 0 else 186000) + (if b0115 then 0 else 186000) + (if b0116 then 0 else 186000) + (if b0117 then 0 else 186000) + (if b0118 then 0 else 186000) + (if b0119 then 0 else 186000) + (if b0120 then 0 else 186000) + (if b0121 then 0 else 186000) + (if b0122 then 0 else 186000) + (if b0123 then 0 else 186000) + (if b0124 then 0 else 186000) + (if b0125 then 0 else 186000) + (if b0126 then 0 else 186000) + (if b0127 then 0 else 186000) + (if b0128 then 0 else 186000) + (if b0129 then 0 else 186000) + (if b0130 then 0 else 186000) + (if b0131 then 0 else 186000) + (if b0132 then 0 else 186000) + (if b0133 then 0 else 186000) + (if b0134 then 0 else 186000) + (if b0135 then 0 else 186000) + (if b0136 then 0 else 186000) + (if b0137 then 0 else 186000) + (if b0138 then 0 else 186000) + (if b0139 then 0 else 186000) + (if b0140 then 0 else 186000) + (if b0141 then 0 else 186000) + (if b0142 then 0 else 186000) + (if b0143 then 0 else 186000) + (if b0144 then 0 else 186000) + (if b0145 then 0 else 186000) + (if b0146 then 0 else 186000) + (if b0147 then 0 else 186000) + (if b0148 then 0 else 186000) + (if b0149 then 0 else 186000) + (if b0150 then 0 else 186000) + (if b0151 then 0 else 186000) + (if b0152 then 0 else 186000) + (if b0153 then 0 else 186000) + (if b0154 then 0 else 186000) + (if b0155 then 0 else 186000) + (if b0156 then 0 else 186000) + (if b0157 then 0 else 186000) + (if b0158 then 0 else 186000) + (if b0159 then 0 else 186000) + (if b0160 then 0 else 186000) + (if b0161 then 0 else 186000) + (if b0162 then 0 else 186000) + (if b0163 then 0 else 186000) + (if b0164 then 0 else 186000) + (if b0165 then 0 else 186000) + (if b0166 then 0 else 186000) + (if b0167 then 0 else 186000) + (if b0168 then 0 else 186000) + (if b0169 then 0 else 186000) + (if b0170 then 0 else 186000) + (if b0171 then 0 else 186000) + (if b0172 then 0 else 186000) + (if b0173 then 0 else 186000) + (if b0174 then 0 else 186000) + (if b0175 then 0 else 186000) + (if b0176 then 0 else 186000) + (if b0177 then 0 else 186000) + (if b0178 then 0 else 186000) + (if b0179 then 0 else 186000) + (if b0180 then 0 else 186000) + (if b0181 then 0 else 186000) + (if b0182 then 0 else 186000) + (if b0183 then 0 else 186000) + (if b0184 then 0 else 186000) + (if b0185 then 0 else 186000) + (if b0186 then 0 else 186000) + (if b0187 then 0 else 186000) + (if b0188 then 0 else 186000) + (if b0189 then 0 else 186000) + (if b0190 then 0 else 186000) + (if b0191 then 0 else 186000) + (if b0192 then 0 else 186000) + (if b0193 then 0 else 186000) + (if b0194 then 0 else 186000) + (if b0195 then 0 else 186000) + (if b0196 then 0 else 186000) + (if b0197 then 0 else 186000) + (if b0198 then 0 else 186000) + (if b0199 then 0 else 186000) + (if b0200 then 0 else 186000) + (if b0201 then 0 else 186000) + (if b0202 then 0 else 186000) + (if b0203 then 0 else 186000) + (if b0204 then 0 else 186000) + (if b0205 then 0 else 186000) + (if b0206 then 0 else 186000) + (if b0207 then 0 else 186000) + (if b0208 then 0 else 186000) + (if b0209 then 0 else 186000) + (if b0210 then 0 else 186000) + (if b0211 then 0 else 186000) + (if b0212 then 0 else 186000) + (if b0213 then 0 else 186000) + (if b0214 then 0 else 186000) + (if b0215 then 0 else 186000) + (if b0216 then 0 else 186000) + (if b0217 then 0 else 186000) + (if b0218 then 0 else 186000) + (if b0219 then 0 else 186000) + (if b0220 then 0 else 186000) + (if b0221 then 0 else 186000) + (if b0222 then 0 else 186000) + (if b0223 then 0 else 186000) + (if b0224 then 0 else 186000) + (if b0225 then 0 else 186000) + (if b0226 then 0 else 186000) + (if b0227 then 0 else 186000) + (if b0228 then 0 else 186000) + (if b0229 then 0 else 186000) + (if b0230 then 0 else 186000) + (if b0231 then 0 else 186000) + (if b0232 then 0 else 186000) + (if b0233 then 0 else 186000) + (if b0234 then 0 else 186000) + (if b0235 then 0 else 186000) + (if b0236 then 0 else 186000) + (if b0237 then 0 else 186000) + (if b0238 then 0 else 186000) + (if b0239 then 0 else 186000) + (if b0240 then 0 else 186000) + (if b0241 then 0 else 186000) + (if b0242 then 0 else 186000) + (if b0243 then 0 else 186000) + (if b0244 then 0 else 186000) + (if b0245 then 0 else 186000) + (if b0246 then 0 else 186000) + (if b0247 then 0 else 186000) + (if b0248 then 0 else 186000) + (if b0249 then 0 else 186000) + (if b0250 then 0 else 186000) + (if b0251 then 0 else 186000) + (if b0252 then 0 else 186000) + (if b0253 then 0 else 186000) + (if b0254 then 0 else 186000) + (if b0255 then 0 else 186000) + (if b0256 then 0 else 186000) + (if b0257 then 0 else 186000) + (if b0258 then 0 else 186000) + (if b0259 then 0 else 186000) + (if b0260 then 0 else 186000) + (if b0261 then 0 else 186000) + (if b0262 then 0 else 186000) + (if b0263 then 0 else 186000) + (if b0264 then 0 else 186000) + (if b0265 then 0 else 186000) + (if b0266 then 0 else 186000) + (if b0267 then 0 else 186000) + (if b0268 then 0 else 186000) + (if b0269 then 0 else 186000) + (if b0270 then 0 else 186000) + (if b0271 then 0 else 186000) + (if b0272 then 0 else 186000) + (if b0273 then 0 else 186000) + (if b0274 then 0 else 186000) + (if b0275 then 0 else 186000) + (if b0276 then 0 else 186000) + (if b0277 then 0 else 186000) + (if b0278 then 0 else 186000) + (if b0279 then 0 else 186000) + (if b0280 then 0 else 186000) + (if b0281 then 0 else 186000) + (if b0282 then 0 else 186000) + (if b0283 then 0 else 186000) + (if b0284 then 0 else 186000) + (if b0285 then 0 else 186000) + (if b0286 then 0 else 186000) + (if b0287 then 0 else 186000) + (if b0288 then 0 else 186000) + (if b0289 then 0 else 186000) + (if b0290 then 0 else 186000) + (if b0291 then 0 else 186000) + (if b0292 then 0 else 186000) + (if b0293 then 0 else 186000) + (if b0294 then 0 else 186000) + (if b0295 then 0 else 186000) + (if b0296 then 0 else 186000) + (if b0297 then 0 else 186000) + (if b0298 then 0 else 186000) + (if b0299 then 0 else 186000) + (if b0300 then 0 else 186000) + (if b0301 then 0 else 186000) + (if b0302 then 0 else 186000) + (if b0303 then 0 else 186000) + (if b0304 then 0 else 186000) + (if b0305 then 0 else 186000) + (if b0306 then 0 else 186000) + (if b0307 then 0 else 186000) + (if b0308 then 0 else 186000) + (if b0309 then 0 else 186000) + (if b0310 then 0 else 186000) + (if b0311 then 0 else 186000) + (if b0312 then 0 else 186000) + (if b0313 then 0 else 186000) + (if b0314 then 0 else 186000) + (if b0315 then 0 else 186000) + (if b0316 then 0 else 186000) + (if b0317 then 0 else 186000) + (if b0318 then 0 else 186000) + (if b0319 then 0 else 186000) + (if b0320 then 0 else 186000) + (if b0321 then 0 else 186000) + (if b0322 then 0 else 186000) + (if b0323 then 0 else 186000) + (if b0324 then 0 else 186000) + (if b0325 then 0 else 186000) + (if b0326 then 0 else 186000) + (if b0327 then 0 else 186000) + (if b0328 then 0 else 186000) + (if b0329 then 0 else 186000) + (if b0330 then 0 else 186000) + (if b0331 then 0 else 186000) + (if b0332 then 0 else 186000) + (if b0333 then 0 else 186000) + (if b0334 then 0 else 186000) + (if b0335 then 0 else 186000) + (if b0336 then 0 else 186000) + (if b0337 then 0 else 186000) + (if b0338 then 0 else 186000) + (if b0339 then 0 else 186000) + (if b0340 then 0 else 186000) + (if b0341 then 0 else 186000) + (if b0343 then 0 else 186000) + (if b0348 then 0 else 186000) + (if b0368 then 0 else 186000) + (if b0376 then 0 else 186000) + (if b0377 then 0 else 186000) + (if b0378 then 0 else 186000) + (if b0379 then 0 else 186000) + (if b0380 then 0 else 186000) + (if b0381 then 0 else 186000) + (if b0382 then 0 else 186000) + (if b0383 then 0 else 186000) + (if b0384 then 0 else 186000) + (if b0385 then 0 else 186000) + (if b0386 then 0 else 186000) + (if b0387 then 0 else 186000) + (if b0388 then 0 else 186000) + (if b0389 then 0 else 186000) + (if b0390 then 0 else 186000) + (if b0391 then 0 else 186000) + (if b0392 then 0 else 186000) + (if b0393 then 0 else 186000) + (if b0394 then 0 else 186000) + (if b0395 then 0 else 186000) + (if b0396 then 0 else 186000) + (if b0397 then 0 else 186000) + (if b0398 then 0 else 186000) + (if b0399 then 0 else 186000) + (if b0400 then 0 else 186000) + (if b0401 then 0 else 186000) + (if b0402 then 0 else 186000) + (if b0403 then 0 else 186000) + (if b0404 then 0 else 186000) + (if b0405 then 0 else 186000) + (if b0406 then 0 else 186000) + (if b0407 then 0 else 186000) + (if b0408 then 0 else 186000) + (if b0409 then 0 else 186000) + (if b0410 then 0 else 186000) + (if b0411 then 0 else 186000) + (if b0412 then 0 else 186000) + (if b0413 then 0 else 186000) + (if b0414 then 0 else 186000) + (if b0415 then 0 else 186000) + (if b0416 then 0 else 186000) + (if b0417 then 0 else 186000) + (if b0418 then 0 else 186000) + (if b0419 then 0 else 186000) + (if b0420 then 0 else 186000) + (if b0421 then 0 else 186000) + (if b0422 then 0 else 186000) + (if b0423 then 0 else 186000) + (if b0424 then 0 else 186000) + (if b0425 then 0 else 186000) + (if b0426 then 0 else 186000) + (if b0427 then 0 else 186000) + (if b0428 then 0 else 186000) + (if b0429 then 0 else 186000) + (if b0430 then 0 else 186000) + (if b0431 then 0 else 186000) + (if b0432 then 0 else 186000) + (if b0433 then 0 else 186000) + (if b0434 then 0 else 186000) + (if b0435 then 0 else 186000) + (if b0436 then 0 else 186000) + (if b0437 then 0 else 186000) + (if b0438 then 0 else 186000) + (if b0439 then 0 else 186000) + (if b0440 then 0 else 186000) + (if b0441 then 0 else 186000) + (if b0442 then 0 else 186000) + (if b0443 then 0 else 186000) + (if b0444 then 0 else 186000) + (if b0445 then 0 else 186000) + (if b0446 then 0 else 186000) + (if b0447 then 0 else 186000) + (if b0448 then 0 else 186000) + (if b0449 then 0 else 186000) + (if b0450 then 0 else 186000) + (if b0451 then 0 else 186000) + (if b0452 then 0 else 186000) + (if b0453 then 0 else 186000) + (if b0454 then 0 else 186000) + (if b0455 then 0 else 186000) + (if b0456 then 0 else 186000) + (if b0457 then 0 else 186000) + (if b0458 then 0 else 186000) + (if b0459 then 0 else 186000) + (if b0460 then 0 else 186000) + (if b0461 then 0 else 186000) + (if b0462 then 0 else 186000) + (if b0463 then 0 else 186000) + (if b0464 then 0 else 186000) + (if b0465 then 0 else 186000) < 441
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 7.452228
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/linear-algebra/kernels/3mm/kernel3.bpl.ice2.bpl
Total learner time was 00:00:00.1263250
Verifying $kernel3: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool, b0228: bool, b0229: bool, b0230: bool, b0231: bool, b0232: bool, b0233: bool, b0234: bool, b0235: bool, b0236: bool, b0237: bool, b0238: bool, b0239: bool, b0240: bool, b0241: bool, b0242: bool, b0243: bool, b0244: bool, b0245: bool, b0246: bool, b0247: bool, b0248: bool, b0249: bool, b0250: bool, b0251: bool, b0252: bool, b0253: bool, b0254: bool, b0255: bool, b0256: bool, b0257: bool, b0258: bool, b0259: bool, b0260: bool, b0261: bool, b0262: bool, b0263: bool, b0264: bool, b0265: bool, b0266: bool, b0267: bool, b0268: bool, b0269: bool, b0270: bool, b0271: bool, b0272: bool, b0273: bool, b0274: bool, b0275: bool, b0276: bool, b0277: bool, b0278: bool, b0279: bool, b0280: bool, b0281: bool, b0282: bool, b0283: bool, b0284: bool, b0285: bool, b0286: bool, b0287: bool, b0288: bool, b0289: bool, b0290: bool, b0291: bool, b0292: bool, b0293: bool, b0294: bool, b0295: bool, b0296: bool, b0297: bool, b0298: bool, b0299: bool, b0300: bool, b0301: bool, b0302: bool, b0303: bool, b0304: bool, b0305: bool, b0306: bool, b0307: bool, b0308: bool, b0309: bool, b0310: bool, b0311: bool, b0312: bool, b0313: bool, b0314: bool, b0315: bool, b0316: bool, b0317: bool, b0318: bool, b0319: bool, b0320: bool, b0321: bool, b0322: bool, b0323: bool, b0324: bool, b0325: bool, b0326: bool, b0327: bool, b0328: bool, b0329: bool, b0330: bool, b0331: bool, b0332: bool, b0333: bool, b0334: bool, b0335: bool, b0336: bool, b0337: bool, b0338: bool, b0339: bool, b0340: bool, b0341: bool, b0342: bool, b0343: bool, b0344: bool, b0345: bool, b0346: bool, b0347: bool, b0348: bool, b0349: bool, b0350: bool, b0351: bool, b0352: bool, b0353: bool, b0354: bool, b0355: bool, b0356: bool, b0357: bool, b0358: bool, b0359: bool, b0360: bool, b0361: bool, b0362: bool, b0363: bool, b0364: bool, b0365: bool, b0366: bool, b0367: bool, b0368: bool, b0369: bool, b0370: bool, b0371: bool, b0372: bool, b0373: bool, b0374: bool, b0375: bool, b0376: bool, b0377: bool, b0378: bool, b0379: bool, b0380: bool, b0381: bool, b0382: bool, b0383: bool, b0384: bool, b0385: bool, b0386: bool, b0387: bool, b0388: bool, b0389: bool, b0390: bool, b0391: bool, b0392: bool, b0393: bool, b0394: bool, b0395: bool, b0396: bool, b0397: bool, b0398: bool, b0399: bool, b0400: bool, b0401: bool, b0402: bool, b0403: bool, b0404: bool, b0405: bool, b0406: bool, b0407: bool, b0408: bool, b0409: bool, b0410: bool, b0411: bool, b0412: bool, b0413: bool, b0414: bool, b0415: bool, b0416: bool, b0417: bool, b0418: bool, b0419: bool, b0420: bool, b0421: bool, b0422: bool, b0423: bool, b0424: bool, b0425: bool, b0426: bool, b0427: bool, b0428: bool, b0429: bool, b0430: bool, b0431: bool, b0432: bool, b0433: bool, b0434: bool, b0435: bool, b0436: bool, b0437: bool, b0438: bool, b0439: bool, b0440: bool, b0441: bool, b0442: bool, b0443: bool, b0444: bool, b0445: bool, b0446: bool, b0447: bool, b0448: bool, b0449: bool, b0450: bool, b0451: bool, b0452: bool, b0453: bool, b0454: bool, b0455: bool, b0456: bool, b0457: bool, b0458: bool, b0459: bool, b0460: bool, b0461: bool, b0462: bool, b0463: bool, b0464: bool, b0465: bool) : bool
{
  0 + (if b0000 then 0 else 186000) + (if b0001 then 0 else 186000) + (if b0002 then 0 else 186000) + (if b0003 then 0 else 186000) + (if b0004 then 0 else 186000) + (if b0005 then 0 else 186000) + (if b0006 then 0 else 186000) + (if b0007 then 0 else 186000) + (if b0008 then 0 else 186000) + (if b0009 then 0 else 186000) + (if b0010 then 0 else 186000) + (if b0011 then 0 else 186000) + (if b0012 then 0 else 186000) + (if b0013 then 0 else 186000) + (if b0014 then 0 else 186000) + (if b0015 then 0 else 186000) + (if b0016 then 0 else 186000) + (if b0017 then 0 else 186000) + (if b0018 then 0 else 186000) + (if b0019 then 0 else 186000) + (if b0020 then 0 else 186000) + (if b0021 then 0 else 186000) + (if b0022 then 0 else 186000) + (if b0023 then 0 else 186000) + (if b0024 then 0 else 186000) + (if b0025 then 0 else 186000) + (if b0026 then 0 else 186000) + (if b0027 then 0 else 186000) + (if b0028 then 0 else 186000) + (if b0029 then 0 else 186000) + (if b0030 then 0 else 186000) + (if b0031 then 0 else 186000) + (if b0032 then 0 else 186000) + (if b0033 then 0 else 186000) + (if b0034 then 0 else 186000) + (if b0035 then 0 else 186000) + (if b0036 then 0 else 186000) + (if b0037 then 0 else 186000) + (if b0038 then 0 else 186000) + (if b0039 then 0 else 186000) + (if b0040 then 0 else 186000) + (if b0041 then 0 else 186000) + (if b0042 then 0 else 186000) + (if b0043 then 0 else 186000) + (if b0044 then 0 else 186000) + (if b0045 then 0 else 186000) + (if b0046 then 0 else 186000) + (if b0047 then 0 else 186000) + (if b0048 then 0 else 186000) + (if b0049 then 0 else 186000) + (if b0050 then 0 else 186000) + (if b0051 then 0 else 186000) + (if b0052 then 0 else 186000) + (if b0053 then 0 else 186000) + (if b0054 then 0 else 186000) + (if b0055 then 0 else 186000) + (if b0056 then 0 else 186000) + (if b0057 then 0 else 186000) + (if b0058 then 0 else 186000) + (if b0059 then 0 else 186000) + (if b0060 then 0 else 186000) + (if b0061 then 0 else 186000) + (if b0062 then 0 else 186000) + (if b0063 then 0 else 186000) + (if b0064 then 0 else 186000) + (if b0065 then 0 else 186000) + (if b0066 then 0 else 186000) + (if b0067 then 0 else 186000) + (if b0068 then 0 else 186000) + (if b0069 then 0 else 186000) + (if b0070 then 0 else 186000) + (if b0071 then 0 else 186000) + (if b0072 then 0 else 186000) + (if b0073 then 0 else 186000) + (if b0074 then 0 else 186000) + (if b0075 then 0 else 186000) + (if b0076 then 0 else 186000) + (if b0077 then 0 else 186000) + (if b0078 then 0 else 186000) + (if b0079 then 0 else 186000) + (if b0080 then 0 else 186000) + (if b0081 then 0 else 186000) + (if b0082 then 0 else 186000) + (if b0083 then 0 else 186000) + (if b0084 then 0 else 186000) + (if b0085 then 0 else 186000) + (if b0086 then 0 else 186000) + (if b0087 then 0 else 186000) + (if b0088 then 0 else 186000) + (if b0089 then 0 else 186000) + (if b0090 then 0 else 186000) + (if b0091 then 0 else 186000) + (if b0092 then 0 else 186000) + (if b0093 then 0 else 186000) + (if b0094 then 0 else 186000) + (if b0095 then 0 else 186000) + (if b0096 then 0 else 186000) + (if b0097 then 0 else 186000) + (if b0098 then 0 else 186000) + (if b0099 then 0 else 186000) + (if b0100 then 0 else 186000) + (if b0101 then 0 else 186000) + (if b0102 then 0 else 186000) + (if b0103 then 0 else 186000) + (if b0104 then 0 else 186000) + (if b0105 then 0 else 186000) + (if b0106 then 0 else 186000) + (if b0107 then 0 else 186000) + (if b0108 then 0 else 186000) + (if b0109 then 0 else 186000) + (if b0110 then 0 else 186000) + (if b0111 then 0 else 186000) + (if b0112 then 0 else 186000) + (if b0113 then 0 else 186000) + (if b0114 then 0 else 186000) + (if b0115 then 0 else 186000) + (if b0116 then 0 else 186000) + (if b0117 then 0 else 186000) + (if b0118 then 0 else 186000) + (if b0119 then 0 else 186000) + (if b0120 then 0 else 186000) + (if b0121 then 0 else 186000) + (if b0122 then 0 else 186000) + (if b0123 then 0 else 186000) + (if b0124 then 0 else 186000) + (if b0125 then 0 else 186000) + (if b0126 then 0 else 186000) + (if b0127 then 0 else 186000) + (if b0128 then 0 else 186000) + (if b0129 then 0 else 186000) + (if b0130 then 0 else 186000) + (if b0131 then 0 else 186000) + (if b0132 then 0 else 186000) + (if b0133 then 0 else 186000) + (if b0134 then 0 else 186000) + (if b0135 then 0 else 186000) + (if b0136 then 0 else 186000) + (if b0137 then 0 else 186000) + (if b0138 then 0 else 186000) + (if b0139 then 0 else 186000) + (if b0140 then 0 else 186000) + (if b0141 then 0 else 186000) + (if b0142 then 0 else 186000) + (if b0143 then 0 else 186000) + (if b0144 then 0 else 186000) + (if b0145 then 0 else 186000) + (if b0146 then 0 else 186000) + (if b0147 then 0 else 186000) + (if b0148 then 0 else 186000) + (if b0149 then 0 else 186000) + (if b0150 then 0 else 186000) + (if b0151 then 0 else 186000) + (if b0152 then 0 else 186000) + (if b0153 then 0 else 186000) + (if b0154 then 0 else 186000) + (if b0155 then 0 else 186000) + (if b0156 then 0 else 186000) + (if b0157 then 0 else 186000) + (if b0158 then 0 else 186000) + (if b0159 then 0 else 186000) + (if b0160 then 0 else 186000) + (if b0161 then 0 else 186000) + (if b0162 then 0 else 186000) + (if b0163 then 0 else 186000) + (if b0164 then 0 else 186000) + (if b0165 then 0 else 186000) + (if b0166 then 0 else 186000) + (if b0167 then 0 else 186000) + (if b0168 then 0 else 186000) + (if b0169 then 0 else 186000) + (if b0170 then 0 else 186000) + (if b0171 then 0 else 186000) + (if b0172 then 0 else 186000) + (if b0173 then 0 else 186000) + (if b0174 then 0 else 186000) + (if b0175 then 0 else 186000) + (if b0176 then 0 else 186000) + (if b0177 then 0 else 186000) + (if b0178 then 0 else 186000) + (if b0179 then 0 else 186000) + (if b0180 then 0 else 186000) + (if b0181 then 0 else 186000) + (if b0182 then 0 else 186000) + (if b0183 then 0 else 186000) + (if b0184 then 0 else 186000) + (if b0185 then 0 else 186000) + (if b0186 then 0 else 186000) + (if b0187 then 0 else 186000) + (if b0188 then 0 else 186000) + (if b0189 then 0 else 186000) + (if b0190 then 0 else 186000) + (if b0191 then 0 else 186000) + (if b0192 then 0 else 186000) + (if b0193 then 0 else 186000) + (if b0194 then 0 else 186000) + (if b0195 then 0 else 186000) + (if b0196 then 0 else 186000) + (if b0197 then 0 else 186000) + (if b0198 then 0 else 186000) + (if b0199 then 0 else 186000) + (if b0200 then 0 else 186000) + (if b0201 then 0 else 186000) + (if b0202 then 0 else 186000) + (if b0203 then 0 else 186000) + (if b0204 then 0 else 186000) + (if b0205 then 0 else 186000) + (if b0206 then 0 else 186000) + (if b0207 then 0 else 186000) + (if b0208 then 0 else 186000) + (if b0209 then 0 else 186000) + (if b0210 then 0 else 186000) + (if b0211 then 0 else 186000) + (if b0212 then 0 else 186000) + (if b0213 then 0 else 186000) + (if b0214 then 0 else 186000) + (if b0215 then 0 else 186000) + (if b0216 then 0 else 186000) + (if b0217 then 0 else 186000) + (if b0218 then 0 else 186000) + (if b0219 then 0 else 186000) + (if b0220 then 0 else 186000) + (if b0221 then 0 else 186000) + (if b0222 then 0 else 186000) + (if b0223 then 0 else 186000) + (if b0224 then 0 else 186000) + (if b0225 then 0 else 186000) + (if b0226 then 0 else 186000) + (if b0227 then 0 else 186000) + (if b0228 then 0 else 186000) + (if b0229 then 0 else 186000) + (if b0230 then 0 else 186000) + (if b0231 then 0 else 186000) + (if b0232 then 0 else 186000) + (if b0233 then 0 else 186000) + (if b0234 then 0 else 186000) + (if b0235 then 0 else 186000) + (if b0236 then 0 else 186000) + (if b0237 then 0 else 186000) + (if b0238 then 0 else 186000) + (if b0239 then 0 else 186000) + (if b0240 then 0 else 186000) + (if b0241 then 0 else 186000) + (if b0242 then 0 else 186000) + (if b0243 then 0 else 186000) + (if b0244 then 0 else 186000) + (if b0245 then 0 else 186000) + (if b0246 then 0 else 186000) + (if b0247 then 0 else 186000) + (if b0248 then 0 else 186000) + (if b0249 then 0 else 186000) + (if b0250 then 0 else 186000) + (if b0251 then 0 else 186000) + (if b0252 then 0 else 186000) + (if b0253 then 0 else 186000) + (if b0254 then 0 else 186000) + (if b0255 then 0 else 186000) + (if b0256 then 0 else 186000) + (if b0257 then 0 else 186000) + (if b0258 then 0 else 186000) + (if b0259 then 0 else 186000) + (if b0260 then 0 else 186000) + (if b0261 then 0 else 186000) + (if b0262 then 0 else 186000) + (if b0263 then 0 else 186000) + (if b0264 then 0 else 186000) + (if b0265 then 0 else 186000) + (if b0266 then 0 else 186000) + (if b0267 then 0 else 186000) + (if b0268 then 0 else 186000) + (if b0269 then 0 else 186000) + (if b0270 then 0 else 186000) + (if b0271 then 0 else 186000) + (if b0272 then 0 else 186000) + (if b0273 then 0 else 186000) + (if b0274 then 0 else 186000) + (if b0275 then 0 else 186000) + (if b0276 then 0 else 186000) + (if b0277 then 0 else 186000) + (if b0278 then 0 else 186000) + (if b0279 then 0 else 186000) + (if b0280 then 0 else 186000) + (if b0281 then 0 else 186000) + (if b0282 then 0 else 186000) + (if b0283 then 0 else 186000) + (if b0284 then 0 else 186000) + (if b0285 then 0 else 186000) + (if b0286 then 0 else 186000) + (if b0287 then 0 else 186000) + (if b0288 then 0 else 186000) + (if b0289 then 0 else 186000) + (if b0290 then 0 else 186000) + (if b0291 then 0 else 186000) + (if b0292 then 0 else 186000) + (if b0293 then 0 else 186000) + (if b0294 then 0 else 186000) + (if b0295 then 0 else 186000) + (if b0296 then 0 else 186000) + (if b0297 then 0 else 186000) + (if b0298 then 0 else 186000) + (if b0299 then 0 else 186000) + (if b0300 then 0 else 186000) + (if b0301 then 0 else 186000) + (if b0302 then 0 else 186000) + (if b0303 then 0 else 186000) + (if b0304 then 0 else 186000) + (if b0305 then 0 else 186000) + (if b0306 then 0 else 186000) + (if b0307 then 0 else 186000) + (if b0308 then 0 else 186000) + (if b0309 then 0 else 186000) + (if b0310 then 0 else 186000) + (if b0311 then 0 else 186000) + (if b0312 then 0 else 186000) + (if b0313 then 0 else 186000) + (if b0314 then 0 else 186000) + (if b0315 then 0 else 186000) + (if b0316 then 0 else 186000) + (if b0317 then 0 else 186000) + (if b0318 then 0 else 186000) + (if b0319 then 0 else 186000) + (if b0320 then 0 else 186000) + (if b0321 then 0 else 186000) + (if b0322 then 0 else 186000) + (if b0323 then 0 else 186000) + (if b0324 then 0 else 186000) + (if b0325 then 0 else 186000) + (if b0326 then 0 else 186000) + (if b0327 then 0 else 186000) + (if b0328 then 0 else 186000) + (if b0329 then 0 else 186000) + (if b0330 then 0 else 186000) + (if b0331 then 0 else 186000) + (if b0332 then 0 else 186000) + (if b0333 then 0 else 186000) + (if b0334 then 0 else 186000) + (if b0335 then 0 else 186000) + (if b0336 then 0 else 186000) + (if b0337 then 0 else 186000) + (if b0338 then 0 else 186000) + (if b0339 then 0 else 186000) + (if b0340 then 0 else 186000) + (if b0341 then 0 else 186000) + (if b0343 then 0 else 186000) + (if b0376 then 0 else 186000) + (if b0377 then 0 else 186000) + (if b0378 then 0 else 186000) + (if b0379 then 0 else 186000) + (if b0380 then 0 else 186000) + (if b0381 then 0 else 186000) + (if b0382 then 0 else 186000) + (if b0383 then 0 else 186000) + (if b0384 then 0 else 186000) + (if b0385 then 0 else 186000) + (if b0386 then 0 else 186000) + (if b0387 then 0 else 186000) + (if b0388 then 0 else 186000) + (if b0389 then 0 else 186000) + (if b0390 then 0 else 186000) + (if b0391 then 0 else 186000) + (if b0392 then 0 else 186000) + (if b0393 then 0 else 186000) + (if b0394 then 0 else 186000) + (if b0395 then 0 else 186000) + (if b0396 then 0 else 186000) + (if b0397 then 0 else 186000) + (if b0398 then 0 else 186000) + (if b0399 then 0 else 186000) + (if b0400 then 0 else 186000) + (if b0401 then 0 else 186000) + (if b0402 then 0 else 186000) + (if b0403 then 0 else 186000) + (if b0404 then 0 else 186000) + (if b0405 then 0 else 186000) + (if b0406 then 0 else 186000) + (if b0407 then 0 else 186000) + (if b0408 then 0 else 186000) + (if b0409 then 0 else 186000) + (if b0410 then 0 else 186000) + (if b0411 then 0 else 186000) + (if b0412 then 0 else 186000) + (if b0413 then 0 else 186000) + (if b0414 then 0 else 186000) + (if b0415 then 0 else 186000) + (if b0416 then 0 else 186000) + (if b0417 then 0 else 186000) + (if b0418 then 0 else 186000) + (if b0419 then 0 else 186000) + (if b0420 then 0 else 186000) + (if b0421 then 0 else 186000) + (if b0422 then 0 else 186000) + (if b0423 then 0 else 186000) + (if b0424 then 0 else 186000) + (if b0425 then 0 else 186000) + (if b0426 then 0 else 186000) + (if b0427 then 0 else 186000) + (if b0428 then 0 else 186000) + (if b0429 then 0 else 186000) + (if b0430 then 0 else 186000) + (if b0431 then 0 else 186000) + (if b0432 then 0 else 186000) + (if b0433 then 0 else 186000) + (if b0434 then 0 else 186000) + (if b0435 then 0 else 186000) + (if b0436 then 0 else 186000) + (if b0437 then 0 else 186000) + (if b0438 then 0 else 186000) + (if b0439 then 0 else 186000) + (if b0440 then 0 else 186000) + (if b0441 then 0 else 186000) + (if b0442 then 0 else 186000) + (if b0443 then 0 else 186000) + (if b0444 then 0 else 186000) + (if b0445 then 0 else 186000) + (if b0446 then 0 else 186000) + (if b0447 then 0 else 186000) + (if b0448 then 0 else 186000) + (if b0449 then 0 else 186000) + (if b0450 then 0 else 186000) + (if b0451 then 0 else 186000) + (if b0452 then 0 else 186000) + (if b0453 then 0 else 186000) + (if b0454 then 0 else 186000) + (if b0455 then 0 else 186000) + (if b0456 then 0 else 186000) + (if b0457 then 0 else 186000) + (if b0458 then 0 else 186000) + (if b0459 then 0 else 186000) + (if b0460 then 0 else 186000) + (if b0461 then 0 else 186000) + (if b0462 then 0 else 186000) + (if b0463 then 0 else 186000) + (if b0464 then 0 else 186000) + (if b0465 then 0 else 186000) < 441
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 8.26714
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/linear-algebra/kernels/3mm/kernel3.bpl.ice2.bpl
Total learner time was 00:00:00.1228160
Verifying $kernel3: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool, b0228: bool, b0229: bool, b0230: bool, b0231: bool, b0232: bool, b0233: bool, b0234: bool, b0235: bool, b0236: bool, b0237: bool, b0238: bool, b0239: bool, b0240: bool, b0241: bool, b0242: bool, b0243: bool, b0244: bool, b0245: bool, b0246: bool, b0247: bool, b0248: bool, b0249: bool, b0250: bool, b0251: bool, b0252: bool, b0253: bool, b0254: bool, b0255: bool, b0256: bool, b0257: bool, b0258: bool, b0259: bool, b0260: bool, b0261: bool, b0262: bool, b0263: bool, b0264: bool, b0265: bool, b0266: bool, b0267: bool, b0268: bool, b0269: bool, b0270: bool, b0271: bool, b0272: bool, b0273: bool, b0274: bool, b0275: bool, b0276: bool, b0277: bool, b0278: bool, b0279: bool, b0280: bool, b0281: bool, b0282: bool, b0283: bool, b0284: bool, b0285: bool, b0286: bool, b0287: bool, b0288: bool, b0289: bool, b0290: bool, b0291: bool, b0292: bool, b0293: bool, b0294: bool, b0295: bool, b0296: bool, b0297: bool, b0298: bool, b0299: bool, b0300: bool, b0301: bool, b0302: bool, b0303: bool, b0304: bool, b0305: bool, b0306: bool, b0307: bool, b0308: bool, b0309: bool, b0310: bool, b0311: bool, b0312: bool, b0313: bool, b0314: bool, b0315: bool, b0316: bool, b0317: bool, b0318: bool, b0319: bool, b0320: bool, b0321: bool, b0322: bool, b0323: bool, b0324: bool, b0325: bool, b0326: bool, b0327: bool, b0328: bool, b0329: bool, b0330: bool, b0331: bool, b0332: bool, b0333: bool, b0334: bool, b0335: bool, b0336: bool, b0337: bool, b0338: bool, b0339: bool, b0340: bool, b0341: bool, b0342: bool, b0343: bool, b0344: bool, b0345: bool, b0346: bool, b0347: bool, b0348: bool, b0349: bool, b0350: bool, b0351: bool, b0352: bool, b0353: bool, b0354: bool, b0355: bool, b0356: bool, b0357: bool, b0358: bool, b0359: bool, b0360: bool, b0361: bool, b0362: bool, b0363: bool, b0364: bool, b0365: bool, b0366: bool, b0367: bool, b0368: bool, b0369: bool, b0370: bool, b0371: bool, b0372: bool, b0373: bool, b0374: bool, b0375: bool, b0376: bool, b0377: bool, b0378: bool, b0379: bool, b0380: bool, b0381: bool, b0382: bool, b0383: bool, b0384: bool, b0385: bool, b0386: bool, b0387: bool, b0388: bool, b0389: bool, b0390: bool, b0391: bool, b0392: bool, b0393: bool, b0394: bool, b0395: bool, b0396: bool, b0397: bool, b0398: bool, b0399: bool, b0400: bool, b0401: bool, b0402: bool, b0403: bool, b0404: bool, b0405: bool, b0406: bool, b0407: bool, b0408: bool, b0409: bool, b0410: bool, b0411: bool, b0412: bool, b0413: bool, b0414: bool, b0415: bool, b0416: bool, b0417: bool, b0418: bool, b0419: bool, b0420: bool, b0421: bool, b0422: bool, b0423: bool, b0424: bool, b0425: bool, b0426: bool, b0427: bool, b0428: bool, b0429: bool, b0430: bool, b0431: bool, b0432: bool, b0433: bool, b0434: bool, b0435: bool, b0436: bool, b0437: bool, b0438: bool, b0439: bool, b0440: bool, b0441: bool, b0442: bool, b0443: bool, b0444: bool, b0445: bool, b0446: bool, b0447: bool, b0448: bool, b0449: bool, b0450: bool, b0451: bool, b0452: bool, b0453: bool, b0454: bool, b0455: bool, b0456: bool, b0457: bool, b0458: bool, b0459: bool, b0460: bool, b0461: bool, b0462: bool, b0463: bool, b0464: bool, b0465: bool) : bool
{
  0 + (if b0000 then 0 else 186000) + (if b0001 then 0 else 186000) + (if b0002 then 0 else 186000) + (if b0003 then 0 else 186000) + (if b0004 then 0 else 186000) + (if b0005 then 0 else 186000) + (if b0006 then 0 else 186000) + (if b0007 then 0 else 186000) + (if b0008 then 0 else 186000) + (if b0009 then 0 else 186000) + (if b0010 then 0 else 186000) + (if b0011 then 0 else 186000) + (if b0012 then 0 else 186000) + (if b0013 then 0 else 186000) + (if b0014 then 0 else 186000) + (if b0015 then 0 else 186000) + (if b0016 then 0 else 186000) + (if b0017 then 0 else 186000) + (if b0018 then 0 else 186000) + (if b0019 then 0 else 186000) + (if b0020 then 0 else 186000) + (if b0021 then 0 else 186000) + (if b0022 then 0 else 186000) + (if b0023 then 0 else 186000) + (if b0024 then 0 else 186000) + (if b0025 then 0 else 186000) + (if b0026 then 0 else 186000) + (if b0027 then 0 else 186000) + (if b0028 then 0 else 186000) + (if b0029 then 0 else 186000) + (if b0030 then 0 else 186000) + (if b0031 then 0 else 186000) + (if b0032 then 0 else 186000) + (if b0033 then 0 else 186000) + (if b0034 then 0 else 186000) + (if b0035 then 0 else 186000) + (if b0036 then 0 else 186000) + (if b0037 then 0 else 186000) + (if b0038 then 0 else 186000) + (if b0039 then 0 else 186000) + (if b0040 then 0 else 186000) + (if b0041 then 0 else 186000) + (if b0042 then 0 else 186000) + (if b0043 then 0 else 186000) + (if b0044 then 0 else 186000) + (if b0045 then 0 else 186000) + (if b0046 then 0 else 186000) + (if b0047 then 0 else 186000) + (if b0048 then 0 else 186000) + (if b0049 then 0 else 186000) + (if b0050 then 0 else 186000) + (if b0051 then 0 else 186000) + (if b0052 then 0 else 186000) + (if b0053 then 0 else 186000) + (if b0054 then 0 else 186000) + (if b0055 then 0 else 186000) + (if b0056 then 0 else 186000) + (if b0057 then 0 else 186000) + (if b0058 then 0 else 186000) + (if b0059 then 0 else 186000) + (if b0060 then 0 else 186000) + (if b0061 then 0 else 186000) + (if b0062 then 0 else 186000) + (if b0063 then 0 else 186000) + (if b0064 then 0 else 186000) + (if b0065 then 0 else 186000) + (if b0066 then 0 else 186000) + (if b0067 then 0 else 186000) + (if b0068 then 0 else 186000) + (if b0069 then 0 else 186000) + (if b0070 then 0 else 186000) + (if b0071 then 0 else 186000) + (if b0072 then 0 else 186000) + (if b0073 then 0 else 186000) + (if b0074 then 0 else 186000) + (if b0075 then 0 else 186000) + (if b0076 then 0 else 186000) + (if b0077 then 0 else 186000) + (if b0078 then 0 else 186000) + (if b0079 then 0 else 186000) + (if b0080 then 0 else 186000) + (if b0081 then 0 else 186000) + (if b0082 then 0 else 186000) + (if b0083 then 0 else 186000) + (if b0084 then 0 else 186000) + (if b0085 then 0 else 186000) + (if b0086 then 0 else 186000) + (if b0087 then 0 else 186000) + (if b0088 then 0 else 186000) + (if b0089 then 0 else 186000) + (if b0090 then 0 else 186000) + (if b0091 then 0 else 186000) + (if b0092 then 0 else 186000) + (if b0093 then 0 else 186000) + (if b0094 then 0 else 186000) + (if b0095 then 0 else 186000) + (if b0096 then 0 else 186000) + (if b0097 then 0 else 186000) + (if b0098 then 0 else 186000) + (if b0099 then 0 else 186000) + (if b0100 then 0 else 186000) + (if b0101 then 0 else 186000) + (if b0102 then 0 else 186000) + (if b0103 then 0 else 186000) + (if b0104 then 0 else 186000) + (if b0105 then 0 else 186000) + (if b0106 then 0 else 186000) + (if b0107 then 0 else 186000) + (if b0108 then 0 else 186000) + (if b0109 then 0 else 186000) + (if b0110 then 0 else 186000) + (if b0111 then 0 else 186000) + (if b0112 then 0 else 186000) + (if b0113 then 0 else 186000) + (if b0114 then 0 else 186000) + (if b0115 then 0 else 186000) + (if b0116 then 0 else 186000) + (if b0117 then 0 else 186000) + (if b0118 then 0 else 186000) + (if b0119 then 0 else 186000) + (if b0120 then 0 else 186000) + (if b0121 then 0 else 186000) + (if b0122 then 0 else 186000) + (if b0123 then 0 else 186000) + (if b0124 then 0 else 186000) + (if b0125 then 0 else 186000) + (if b0126 then 0 else 186000) + (if b0127 then 0 else 186000) + (if b0128 then 0 else 186000) + (if b0129 then 0 else 186000) + (if b0130 then 0 else 186000) + (if b0131 then 0 else 186000) + (if b0132 then 0 else 186000) + (if b0133 then 0 else 186000) + (if b0134 then 0 else 186000) + (if b0135 then 0 else 186000) + (if b0136 then 0 else 186000) + (if b0137 then 0 else 186000) + (if b0138 then 0 else 186000) + (if b0139 then 0 else 186000) + (if b0140 then 0 else 186000) + (if b0141 then 0 else 186000) + (if b0142 then 0 else 186000) + (if b0143 then 0 else 186000) + (if b0144 then 0 else 186000) + (if b0145 then 0 else 186000) + (if b0146 then 0 else 186000) + (if b0147 then 0 else 186000) + (if b0148 then 0 else 186000) + (if b0149 then 0 else 186000) + (if b0150 then 0 else 186000) + (if b0151 then 0 else 186000) + (if b0152 then 0 else 186000) + (if b0153 then 0 else 186000) + (if b0154 then 0 else 186000) + (if b0155 then 0 else 186000) + (if b0156 then 0 else 186000) + (if b0157 then 0 else 186000) + (if b0158 then 0 else 186000) + (if b0159 then 0 else 186000) + (if b0160 then 0 else 186000) + (if b0161 then 0 else 186000) + (if b0162 then 0 else 186000) + (if b0163 then 0 else 186000) + (if b0164 then 0 else 186000) + (if b0165 then 0 else 186000) + (if b0166 then 0 else 186000) + (if b0167 then 0 else 186000) + (if b0168 then 0 else 186000) + (if b0169 then 0 else 186000) + (if b0170 then 0 else 186000) + (if b0171 then 0 else 186000) + (if b0172 then 0 else 186000) + (if b0173 then 0 else 186000) + (if b0174 then 0 else 186000) + (if b0175 then 0 else 186000) + (if b0176 then 0 else 186000) + (if b0177 then 0 else 186000) + (if b0178 then 0 else 186000) + (if b0179 then 0 else 186000) + (if b0180 then 0 else 186000) + (if b0181 then 0 else 186000) + (if b0182 then 0 else 186000) + (if b0183 then 0 else 186000) + (if b0184 then 0 else 186000) + (if b0185 then 0 else 186000) + (if b0186 then 0 else 186000) + (if b0187 then 0 else 186000) + (if b0188 then 0 else 186000) + (if b0189 then 0 else 186000) + (if b0190 then 0 else 186000) + (if b0191 then 0 else 186000) + (if b0192 then 0 else 186000) + (if b0193 then 0 else 186000) + (if b0194 then 0 else 186000) + (if b0195 then 0 else 186000) + (if b0196 then 0 else 186000) + (if b0197 then 0 else 186000) + (if b0198 then 0 else 186000) + (if b0199 then 0 else 186000) + (if b0200 then 0 else 186000) + (if b0201 then 0 else 186000) + (if b0202 then 0 else 186000) + (if b0203 then 0 else 186000) + (if b0204 then 0 else 186000) + (if b0205 then 0 else 186000) + (if b0206 then 0 else 186000) + (if b0207 then 0 else 186000) + (if b0208 then 0 else 186000) + (if b0209 then 0 else 186000) + (if b0210 then 0 else 186000) + (if b0211 then 0 else 186000) + (if b0212 then 0 else 186000) + (if b0213 then 0 else 186000) + (if b0214 then 0 else 186000) + (if b0215 then 0 else 186000) + (if b0216 then 0 else 186000) + (if b0217 then 0 else 186000) + (if b0218 then 0 else 186000) + (if b0219 then 0 else 186000) + (if b0220 then 0 else 186000) + (if b0221 then 0 else 186000) + (if b0222 then 0 else 186000) + (if b0223 then 0 else 186000) + (if b0224 then 0 else 186000) + (if b0225 then 0 else 186000) + (if b0226 then 0 else 186000) + (if b0227 then 0 else 186000) + (if b0228 then 0 else 186000) + (if b0229 then 0 else 186000) + (if b0230 then 0 else 186000) + (if b0231 then 0 else 186000) + (if b0232 then 0 else 186000) + (if b0233 then 0 else 186000) + (if b0234 then 0 else 186000) + (if b0235 then 0 else 186000) + (if b0236 then 0 else 186000) + (if b0237 then 0 else 186000) + (if b0238 then 0 else 186000) + (if b0239 then 0 else 186000) + (if b0240 then 0 else 186000) + (if b0241 then 0 else 186000) + (if b0242 then 0 else 186000) + (if b0243 then 0 else 186000) + (if b0244 then 0 else 186000) + (if b0245 then 0 else 186000) + (if b0246 then 0 else 186000) + (if b0247 then 0 else 186000) + (if b0248 then 0 else 186000) + (if b0249 then 0 else 186000) + (if b0250 then 0 else 186000) + (if b0251 then 0 else 186000) + (if b0252 then 0 else 186000) + (if b0253 then 0 else 186000) + (if b0254 then 0 else 186000) + (if b0255 then 0 else 186000) + (if b0256 then 0 else 186000) + (if b0257 then 0 else 186000) + (if b0258 then 0 else 186000) + (if b0259 then 0 else 186000) + (if b0260 then 0 else 186000) + (if b0261 then 0 else 186000) + (if b0262 then 0 else 186000) + (if b0263 then 0 else 186000) + (if b0264 then 0 else 186000) + (if b0265 then 0 else 186000) + (if b0266 then 0 else 186000) + (if b0267 then 0 else 186000) + (if b0268 then 0 else 186000) + (if b0269 then 0 else 186000) + (if b0270 then 0 else 186000) + (if b0271 then 0 else 186000) + (if b0272 then 0 else 186000) + (if b0273 then 0 else 186000) + (if b0274 then 0 else 186000) + (if b0275 then 0 else 186000) + (if b0276 then 0 else 186000) + (if b0277 then 0 else 186000) + (if b0278 then 0 else 186000) + (if b0279 then 0 else 186000) + (if b0280 then 0 else 186000) + (if b0281 then 0 else 186000) + (if b0282 then 0 else 186000) + (if b0283 then 0 else 186000) + (if b0284 then 0 else 186000) + (if b0285 then 0 else 186000) + (if b0286 then 0 else 186000) + (if b0287 then 0 else 186000) + (if b0288 then 0 else 186000) + (if b0289 then 0 else 186000) + (if b0290 then 0 else 186000) + (if b0291 then 0 else 186000) + (if b0292 then 0 else 186000) + (if b0293 then 0 else 186000) + (if b0294 then 0 else 186000) + (if b0295 then 0 else 186000) + (if b0296 then 0 else 186000) + (if b0297 then 0 else 186000) + (if b0298 then 0 else 186000) + (if b0299 then 0 else 186000) + (if b0300 then 0 else 186000) + (if b0301 then 0 else 186000) + (if b0302 then 0 else 186000) + (if b0303 then 0 else 186000) + (if b0304 then 0 else 186000) + (if b0305 then 0 else 186000) + (if b0306 then 0 else 186000) + (if b0307 then 0 else 186000) + (if b0308 then 0 else 186000) + (if b0309 then 0 else 186000) + (if b0310 then 0 else 186000) + (if b0311 then 0 else 186000) + (if b0312 then 0 else 186000) + (if b0313 then 0 else 186000) + (if b0314 then 0 else 186000) + (if b0315 then 0 else 186000) + (if b0316 then 0 else 186000) + (if b0317 then 0 else 186000) + (if b0318 then 0 else 186000) + (if b0319 then 0 else 186000) + (if b0320 then 0 else 186000) + (if b0321 then 0 else 186000) + (if b0322 then 0 else 186000) + (if b0323 then 0 else 186000) + (if b0324 then 0 else 186000) + (if b0325 then 0 else 186000) + (if b0326 then 0 else 186000) + (if b0327 then 0 else 186000) + (if b0328 then 0 else 186000) + (if b0329 then 0 else 186000) + (if b0330 then 0 else 186000) + (if b0331 then 0 else 186000) + (if b0332 then 0 else 186000) + (if b0333 then 0 else 186000) + (if b0334 then 0 else 186000) + (if b0335 then 0 else 186000) + (if b0336 then 0 else 186000) + (if b0337 then 0 else 186000) + (if b0338 then 0 else 186000) + (if b0339 then 0 else 186000) + (if b0340 then 0 else 186000) + (if b0341 then 0 else 186000) + (if b0376 then 0 else 186000) + (if b0377 then 0 else 186000) + (if b0378 then 0 else 186000) + (if b0379 then 0 else 186000) + (if b0380 then 0 else 186000) + (if b0381 then 0 else 186000) + (if b0382 then 0 else 186000) + (if b0383 then 0 else 186000) + (if b0384 then 0 else 186000) + (if b0385 then 0 else 186000) + (if b0386 then 0 else 186000) + (if b0387 then 0 else 186000) + (if b0388 then 0 else 186000) + (if b0389 then 0 else 186000) + (if b0390 then 0 else 186000) + (if b0391 then 0 else 186000) + (if b0392 then 0 else 186000) + (if b0393 then 0 else 186000) + (if b0394 then 0 else 186000) + (if b0395 then 0 else 186000) + (if b0396 then 0 else 186000) + (if b0397 then 0 else 186000) + (if b0398 then 0 else 186000) + (if b0399 then 0 else 186000) + (if b0400 then 0 else 186000) + (if b0401 then 0 else 186000) + (if b0402 then 0 else 186000) + (if b0403 then 0 else 186000) + (if b0404 then 0 else 186000) + (if b0405 then 0 else 186000) + (if b0406 then 0 else 186000) + (if b0407 then 0 else 186000) + (if b0408 then 0 else 186000) + (if b0409 then 0 else 186000) + (if b0410 then 0 else 186000) + (if b0411 then 0 else 186000) + (if b0412 then 0 else 186000) + (if b0413 then 0 else 186000) + (if b0414 then 0 else 186000) + (if b0415 then 0 else 186000) + (if b0416 then 0 else 186000) + (if b0417 then 0 else 186000) + (if b0418 then 0 else 186000) + (if b0419 then 0 else 186000) + (if b0420 then 0 else 186000) + (if b0421 then 0 else 186000) + (if b0422 then 0 else 186000) + (if b0423 then 0 else 186000) + (if b0424 then 0 else 186000) + (if b0425 then 0 else 186000) + (if b0426 then 0 else 186000) + (if b0427 then 0 else 186000) + (if b0428 then 0 else 186000) + (if b0429 then 0 else 186000) + (if b0430 then 0 else 186000) + (if b0431 then 0 else 186000) + (if b0432 then 0 else 186000) + (if b0433 then 0 else 186000) + (if b0434 then 0 else 186000) + (if b0435 then 0 else 186000) + (if b0436 then 0 else 186000) + (if b0437 then 0 else 186000) + (if b0438 then 0 else 186000) + (if b0439 then 0 else 186000) + (if b0440 then 0 else 186000) + (if b0441 then 0 else 186000) + (if b0442 then 0 else 186000) + (if b0443 then 0 else 186000) + (if b0444 then 0 else 186000) + (if b0445 then 0 else 186000) + (if b0446 then 0 else 186000) + (if b0447 then 0 else 186000) + (if b0448 then 0 else 186000) + (if b0449 then 0 else 186000) + (if b0450 then 0 else 186000) + (if b0451 then 0 else 186000) + (if b0452 then 0 else 186000) + (if b0453 then 0 else 186000) + (if b0454 then 0 else 186000) + (if b0455 then 0 else 186000) + (if b0456 then 0 else 186000) + (if b0457 then 0 else 186000) + (if b0458 then 0 else 186000) + (if b0459 then 0 else 186000) + (if b0460 then 0 else 186000) + (if b0461 then 0 else 186000) + (if b0462 then 0 else 186000) + (if b0463 then 0 else 186000) + (if b0464 then 0 else 186000) + (if b0465 then 0 else 186000) < 441
}
Prover Time taken = 9.55149
Added Horn clause: 7 => 8
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/linear-algebra/kernels/3mm/kernel3.bpl.ice2.bpl
Total learner time was 00:00:00.1308150
Verifying $kernel3: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool, b0228: bool, b0229: bool, b0230: bool, b0231: bool, b0232: bool, b0233: bool, b0234: bool, b0235: bool, b0236: bool, b0237: bool, b0238: bool, b0239: bool, b0240: bool, b0241: bool, b0242: bool, b0243: bool, b0244: bool, b0245: bool, b0246: bool, b0247: bool, b0248: bool, b0249: bool, b0250: bool, b0251: bool, b0252: bool, b0253: bool, b0254: bool, b0255: bool, b0256: bool, b0257: bool, b0258: bool, b0259: bool, b0260: bool, b0261: bool, b0262: bool, b0263: bool, b0264: bool, b0265: bool, b0266: bool, b0267: bool, b0268: bool, b0269: bool, b0270: bool, b0271: bool, b0272: bool, b0273: bool, b0274: bool, b0275: bool, b0276: bool, b0277: bool, b0278: bool, b0279: bool, b0280: bool, b0281: bool, b0282: bool, b0283: bool, b0284: bool, b0285: bool, b0286: bool, b0287: bool, b0288: bool, b0289: bool, b0290: bool, b0291: bool, b0292: bool, b0293: bool, b0294: bool, b0295: bool, b0296: bool, b0297: bool, b0298: bool, b0299: bool, b0300: bool, b0301: bool, b0302: bool, b0303: bool, b0304: bool, b0305: bool, b0306: bool, b0307: bool, b0308: bool, b0309: bool, b0310: bool, b0311: bool, b0312: bool, b0313: bool, b0314: bool, b0315: bool, b0316: bool, b0317: bool, b0318: bool, b0319: bool, b0320: bool, b0321: bool, b0322: bool, b0323: bool, b0324: bool, b0325: bool, b0326: bool, b0327: bool, b0328: bool, b0329: bool, b0330: bool, b0331: bool, b0332: bool, b0333: bool, b0334: bool, b0335: bool, b0336: bool, b0337: bool, b0338: bool, b0339: bool, b0340: bool, b0341: bool, b0342: bool, b0343: bool, b0344: bool, b0345: bool, b0346: bool, b0347: bool, b0348: bool, b0349: bool, b0350: bool, b0351: bool, b0352: bool, b0353: bool, b0354: bool, b0355: bool, b0356: bool, b0357: bool, b0358: bool, b0359: bool, b0360: bool, b0361: bool, b0362: bool, b0363: bool, b0364: bool, b0365: bool, b0366: bool, b0367: bool, b0368: bool, b0369: bool, b0370: bool, b0371: bool, b0372: bool, b0373: bool, b0374: bool, b0375: bool, b0376: bool, b0377: bool, b0378: bool, b0379: bool, b0380: bool, b0381: bool, b0382: bool, b0383: bool, b0384: bool, b0385: bool, b0386: bool, b0387: bool, b0388: bool, b0389: bool, b0390: bool, b0391: bool, b0392: bool, b0393: bool, b0394: bool, b0395: bool, b0396: bool, b0397: bool, b0398: bool, b0399: bool, b0400: bool, b0401: bool, b0402: bool, b0403: bool, b0404: bool, b0405: bool, b0406: bool, b0407: bool, b0408: bool, b0409: bool, b0410: bool, b0411: bool, b0412: bool, b0413: bool, b0414: bool, b0415: bool, b0416: bool, b0417: bool, b0418: bool, b0419: bool, b0420: bool, b0421: bool, b0422: bool, b0423: bool, b0424: bool, b0425: bool, b0426: bool, b0427: bool, b0428: bool, b0429: bool, b0430: bool, b0431: bool, b0432: bool, b0433: bool, b0434: bool, b0435: bool, b0436: bool, b0437: bool, b0438: bool, b0439: bool, b0440: bool, b0441: bool, b0442: bool, b0443: bool, b0444: bool, b0445: bool, b0446: bool, b0447: bool, b0448: bool, b0449: bool, b0450: bool, b0451: bool, b0452: bool, b0453: bool, b0454: bool, b0455: bool, b0456: bool, b0457: bool, b0458: bool, b0459: bool, b0460: bool, b0461: bool, b0462: bool, b0463: bool, b0464: bool, b0465: bool) : bool
{
  0 + (if b0000 then 0 else 186000) + (if b0001 then 0 else 186000) + (if b0002 then 0 else 186000) + (if b0003 then 0 else 186000) + (if b0004 then 0 else 186000) + (if b0005 then 0 else 186000) + (if b0006 then 0 else 186000) + (if b0007 then 0 else 186000) + (if b0008 then 0 else 186000) + (if b0009 then 0 else 186000) + (if b0010 then 0 else 186000) + (if b0011 then 0 else 186000) + (if b0012 then 0 else 186000) + (if b0013 then 0 else 186000) + (if b0014 then 0 else 186000) + (if b0015 then 0 else 186000) + (if b0016 then 0 else 186000) + (if b0017 then 0 else 186000) + (if b0018 then 0 else 186000) + (if b0019 then 0 else 186000) + (if b0020 then 0 else 186000) + (if b0021 then 0 else 186000) + (if b0022 then 0 else 186000) + (if b0023 then 0 else 186000) + (if b0024 then 0 else 186000) + (if b0025 then 0 else 186000) + (if b0026 then 0 else 186000) + (if b0027 then 0 else 186000) + (if b0028 then 0 else 186000) + (if b0029 then 0 else 186000) + (if b0030 then 0 else 186000) + (if b0031 then 0 else 186000) + (if b0032 then 0 else 186000) + (if b0033 then 0 else 186000) + (if b0034 then 0 else 186000) + (if b0035 then 0 else 186000) + (if b0036 then 0 else 186000) + (if b0037 then 0 else 186000) + (if b0038 then 0 else 186000) + (if b0039 then 0 else 186000) + (if b0040 then 0 else 186000) + (if b0041 then 0 else 186000) + (if b0042 then 0 else 186000) + (if b0043 then 0 else 186000) + (if b0044 then 0 else 186000) + (if b0045 then 0 else 186000) + (if b0046 then 0 else 186000) + (if b0047 then 0 else 186000) + (if b0048 then 0 else 186000) + (if b0049 then 0 else 186000) + (if b0050 then 0 else 186000) + (if b0051 then 0 else 186000) + (if b0052 then 0 else 186000) + (if b0053 then 0 else 186000) + (if b0054 then 0 else 186000) + (if b0055 then 0 else 186000) + (if b0056 then 0 else 186000) + (if b0057 then 0 else 186000) + (if b0058 then 0 else 186000) + (if b0059 then 0 else 186000) + (if b0060 then 0 else 186000) + (if b0061 then 0 else 186000) + (if b0062 then 0 else 186000) + (if b0063 then 0 else 186000) + (if b0064 then 0 else 186000) + (if b0065 then 0 else 186000) + (if b0066 then 0 else 186000) + (if b0067 then 0 else 186000) + (if b0068 then 0 else 186000) + (if b0069 then 0 else 186000) + (if b0070 then 0 else 186000) + (if b0071 then 0 else 186000) + (if b0072 then 0 else 186000) + (if b0073 then 0 else 186000) + (if b0074 then 0 else 186000) + (if b0075 then 0 else 186000) + (if b0076 then 0 else 186000) + (if b0077 then 0 else 186000) + (if b0078 then 0 else 186000) + (if b0079 then 0 else 186000) + (if b0080 then 0 else 186000) + (if b0081 then 0 else 186000) + (if b0082 then 0 else 186000) + (if b0083 then 0 else 186000) + (if b0084 then 0 else 186000) + (if b0085 then 0 else 186000) + (if b0086 then 0 else 186000) + (if b0087 then 0 else 186000) + (if b0088 then 0 else 186000) + (if b0089 then 0 else 186000) + (if b0090 then 0 else 186000) + (if b0091 then 0 else 186000) + (if b0092 then 0 else 186000) + (if b0093 then 0 else 186000) + (if b0094 then 0 else 186000) + (if b0095 then 0 else 186000) + (if b0096 then 0 else 186000) + (if b0097 then 0 else 186000) + (if b0098 then 0 else 186000) + (if b0099 then 0 else 186000) + (if b0100 then 0 else 186000) + (if b0101 then 0 else 186000) + (if b0102 then 0 else 186000) + (if b0103 then 0 else 186000) + (if b0104 then 0 else 186000) + (if b0105 then 0 else 186000) + (if b0106 then 0 else 186000) + (if b0107 then 0 else 186000) + (if b0108 then 0 else 186000) + (if b0109 then 0 else 186000) + (if b0110 then 0 else 186000) + (if b0111 then 0 else 186000) + (if b0112 then 0 else 186000) + (if b0113 then 0 else 186000) + (if b0114 then 0 else 186000) + (if b0115 then 0 else 186000) + (if b0116 then 0 else 186000) + (if b0117 then 0 else 186000) + (if b0118 then 0 else 186000) + (if b0119 then 0 else 186000) + (if b0120 then 0 else 186000) + (if b0121 then 0 else 186000) + (if b0122 then 0 else 186000) + (if b0123 then 0 else 186000) + (if b0124 then 0 else 186000) + (if b0125 then 0 else 186000) + (if b0126 then 0 else 186000) + (if b0127 then 0 else 186000) + (if b0128 then 0 else 186000) + (if b0129 then 0 else 186000) + (if b0130 then 0 else 186000) + (if b0131 then 0 else 186000) + (if b0132 then 0 else 186000) + (if b0133 then 0 else 186000) + (if b0134 then 0 else 186000) + (if b0135 then 0 else 186000) + (if b0136 then 0 else 186000) + (if b0137 then 0 else 186000) + (if b0138 then 0 else 186000) + (if b0139 then 0 else 186000) + (if b0140 then 0 else 186000) + (if b0141 then 0 else 186000) + (if b0142 then 0 else 186000) + (if b0143 then 0 else 186000) + (if b0144 then 0 else 186000) + (if b0145 then 0 else 186000) + (if b0146 then 0 else 186000) + (if b0147 then 0 else 186000) + (if b0148 then 0 else 186000) + (if b0149 then 0 else 186000) + (if b0150 then 0 else 186000) + (if b0151 then 0 else 186000) + (if b0152 then 0 else 186000) + (if b0153 then 0 else 186000) + (if b0154 then 0 else 186000) + (if b0155 then 0 else 186000) + (if b0156 then 0 else 186000) + (if b0157 then 0 else 186000) + (if b0158 then 0 else 186000) + (if b0159 then 0 else 186000) + (if b0160 then 0 else 186000) + (if b0161 then 0 else 186000) + (if b0162 then 0 else 186000) + (if b0163 then 0 else 186000) + (if b0164 then 0 else 186000) + (if b0165 then 0 else 186000) + (if b0166 then 0 else 186000) + (if b0167 then 0 else 186000) + (if b0168 then 0 else 186000) + (if b0169 then 0 else 186000) + (if b0170 then 0 else 186000) + (if b0171 then 0 else 186000) + (if b0172 then 0 else 186000) + (if b0173 then 0 else 186000) + (if b0174 then 0 else 186000) + (if b0175 then 0 else 186000) + (if b0176 then 0 else 186000) + (if b0177 then 0 else 186000) + (if b0178 then 0 else 186000) + (if b0179 then 0 else 186000) + (if b0180 then 0 else 186000) + (if b0181 then 0 else 186000) + (if b0182 then 0 else 186000) + (if b0183 then 0 else 186000) + (if b0184 then 0 else 186000) + (if b0185 then 0 else 186000) + (if b0186 then 0 else 186000) + (if b0187 then 0 else 186000) + (if b0188 then 0 else 186000) + (if b0189 then 0 else 186000) + (if b0190 then 0 else 186000) + (if b0191 then 0 else 186000) + (if b0192 then 0 else 186000) + (if b0193 then 0 else 186000) + (if b0194 then 0 else 186000) + (if b0195 then 0 else 186000) + (if b0196 then 0 else 186000) + (if b0197 then 0 else 186000) + (if b0198 then 0 else 186000) + (if b0199 then 0 else 186000) + (if b0200 then 0 else 186000) + (if b0201 then 0 else 186000) + (if b0202 then 0 else 186000) + (if b0203 then 0 else 186000) + (if b0204 then 0 else 186000) + (if b0205 then 0 else 186000) + (if b0206 then 0 else 186000) + (if b0207 then 0 else 186000) + (if b0208 then 0 else 186000) + (if b0209 then 0 else 186000) + (if b0210 then 0 else 186000) + (if b0211 then 0 else 186000) + (if b0212 then 0 else 186000) + (if b0213 then 0 else 186000) + (if b0214 then 0 else 186000) + (if b0215 then 0 else 186000) + (if b0216 then 0 else 186000) + (if b0217 then 0 else 186000) + (if b0218 then 0 else 186000) + (if b0219 then 0 else 186000) + (if b0220 then 0 else 186000) + (if b0221 then 0 else 186000) + (if b0222 then 0 else 186000) + (if b0223 then 0 else 186000) + (if b0224 then 0 else 186000) + (if b0225 then 0 else 186000) + (if b0226 then 0 else 186000) + (if b0227 then 0 else 186000) + (if b0228 then 0 else 186000) + (if b0229 then 0 else 186000) + (if b0230 then 0 else 186000) + (if b0231 then 0 else 186000) + (if b0232 then 0 else 186000) + (if b0233 then 0 else 186000) + (if b0234 then 0 else 186000) + (if b0235 then 0 else 186000) + (if b0236 then 0 else 186000) + (if b0237 then 0 else 186000) + (if b0238 then 0 else 186000) + (if b0239 then 0 else 186000) + (if b0240 then 0 else 186000) + (if b0241 then 0 else 186000) + (if b0242 then 0 else 186000) + (if b0243 then 0 else 186000) + (if b0244 then 0 else 186000) + (if b0245 then 0 else 186000) + (if b0246 then 0 else 186000) + (if b0247 then 0 else 186000) + (if b0248 then 0 else 186000) + (if b0249 then 0 else 186000) + (if b0250 then 0 else 186000) + (if b0251 then 0 else 186000) + (if b0252 then 0 else 186000) + (if b0253 then 0 else 186000) + (if b0254 then 0 else 186000) + (if b0255 then 0 else 186000) + (if b0256 then 0 else 186000) + (if b0257 then 0 else 186000) + (if b0258 then 0 else 186000) + (if b0259 then 0 else 186000) + (if b0260 then 0 else 186000) + (if b0261 then 0 else 186000) + (if b0262 then 0 else 186000) + (if b0263 then 0 else 186000) + (if b0264 then 0 else 186000) + (if b0265 then 0 else 186000) + (if b0266 then 0 else 186000) + (if b0267 then 0 else 186000) + (if b0268 then 0 else 186000) + (if b0269 then 0 else 186000) + (if b0270 then 0 else 186000) + (if b0271 then 0 else 186000) + (if b0272 then 0 else 186000) + (if b0273 then 0 else 186000) + (if b0274 then 0 else 186000) + (if b0275 then 0 else 186000) + (if b0276 then 0 else 186000) + (if b0277 then 0 else 186000) + (if b0278 then 0 else 186000) + (if b0279 then 0 else 186000) + (if b0280 then 0 else 186000) + (if b0281 then 0 else 186000) + (if b0282 then 0 else 186000) + (if b0283 then 0 else 186000) + (if b0284 then 0 else 186000) + (if b0285 then 0 else 186000) + (if b0286 then 0 else 186000) + (if b0287 then 0 else 186000) + (if b0288 then 0 else 186000) + (if b0289 then 0 else 186000) + (if b0290 then 0 else 186000) + (if b0291 then 0 else 186000) + (if b0292 then 0 else 186000) + (if b0293 then 0 else 186000) + (if b0294 then 0 else 186000) + (if b0295 then 0 else 186000) + (if b0296 then 0 else 186000) + (if b0297 then 0 else 186000) + (if b0298 then 0 else 186000) + (if b0299 then 0 else 186000) + (if b0300 then 0 else 186000) + (if b0301 then 0 else 186000) + (if b0302 then 0 else 186000) + (if b0303 then 0 else 186000) + (if b0304 then 0 else 186000) + (if b0305 then 0 else 186000) + (if b0306 then 0 else 186000) + (if b0307 then 0 else 186000) + (if b0308 then 0 else 186000) + (if b0309 then 0 else 186000) + (if b0310 then 0 else 186000) + (if b0311 then 0 else 186000) + (if b0312 then 0 else 186000) + (if b0313 then 0 else 186000) + (if b0314 then 0 else 186000) + (if b0315 then 0 else 186000) + (if b0316 then 0 else 186000) + (if b0317 then 0 else 186000) + (if b0318 then 0 else 186000) + (if b0319 then 0 else 186000) + (if b0320 then 0 else 186000) + (if b0321 then 0 else 186000) + (if b0322 then 0 else 186000) + (if b0323 then 0 else 186000) + (if b0324 then 0 else 186000) + (if b0325 then 0 else 186000) + (if b0326 then 0 else 186000) + (if b0327 then 0 else 186000) + (if b0328 then 0 else 186000) + (if b0329 then 0 else 186000) + (if b0330 then 0 else 186000) + (if b0331 then 0 else 186000) + (if b0332 then 0 else 186000) + (if b0333 then 0 else 186000) + (if b0334 then 0 else 186000) + (if b0335 then 0 else 186000) + (if b0336 then 0 else 186000) + (if b0337 then 0 else 186000) + (if b0338 then 0 else 186000) + (if b0339 then 0 else 186000) + (if b0340 then 0 else 186000) + (if b0341 then 0 else 186000) + (if b0376 then 0 else 186000) + (if b0377 then 0 else 186000) + (if b0378 then 0 else 186000) + (if b0379 then 0 else 186000) + (if b0380 then 0 else 186000) + (if b0381 then 0 else 186000) + (if b0382 then 0 else 186000) + (if b0383 then 0 else 186000) + (if b0384 then 0 else 186000) + (if b0385 then 0 else 186000) + (if b0386 then 0 else 186000) + (if b0387 then 0 else 186000) + (if b0388 then 0 else 186000) + (if b0389 then 0 else 186000) + (if b0390 then 0 else 186000) + (if b0391 then 0 else 186000) + (if b0392 then 0 else 186000) + (if b0393 then 0 else 186000) + (if b0394 then 0 else 186000) + (if b0395 then 0 else 186000) + (if b0396 then 0 else 186000) + (if b0397 then 0 else 186000) + (if b0398 then 0 else 186000) + (if b0399 then 0 else 186000) + (if b0400 then 0 else 186000) + (if b0401 then 0 else 186000) + (if b0402 then 0 else 186000) + (if b0403 then 0 else 186000) + (if b0404 then 0 else 186000) + (if b0405 then 0 else 186000) + (if b0406 then 0 else 186000) + (if b0407 then 0 else 186000) + (if b0408 then 0 else 186000) + (if b0409 then 0 else 186000) + (if b0410 then 0 else 186000) + (if b0411 then 0 else 186000) + (if b0412 then 0 else 186000) + (if b0413 then 0 else 186000) + (if b0414 then 0 else 186000) + (if b0415 then 0 else 186000) + (if b0416 then 0 else 186000) + (if b0417 then 0 else 186000) + (if b0418 then 0 else 186000) + (if b0420 then 0 else 186000) + (if b0421 then 0 else 186000) + (if b0422 then 0 else 186000) + (if b0423 then 0 else 186000) + (if b0424 then 0 else 186000) + (if b0425 then 0 else 186000) + (if b0426 then 0 else 186000) + (if b0427 then 0 else 186000) + (if b0428 then 0 else 186000) + (if b0429 then 0 else 186000) + (if b0430 then 0 else 186000) + (if b0431 then 0 else 186000) + (if b0432 then 0 else 186000) + (if b0433 then 0 else 186000) + (if b0434 then 0 else 186000) + (if b0435 then 0 else 186000) + (if b0436 then 0 else 186000) + (if b0437 then 0 else 186000) + (if b0438 then 0 else 186000) + (if b0439 then 0 else 186000) + (if b0440 then 0 else 186000) + (if b0441 then 0 else 186000) + (if b0442 then 0 else 186000) + (if b0443 then 0 else 186000) + (if b0444 then 0 else 186000) + (if b0445 then 0 else 186000) + (if b0446 then 0 else 186000) + (if b0447 then 0 else 186000) + (if b0448 then 0 else 186000) + (if b0449 then 0 else 186000) + (if b0450 then 0 else 186000) + (if b0451 then 0 else 186000) + (if b0452 then 0 else 186000) + (if b0453 then 0 else 186000) + (if b0454 then 0 else 186000) + (if b0455 then 0 else 186000) + (if b0456 then 0 else 186000) + (if b0457 then 0 else 186000) + (if b0458 then 0 else 186000) + (if b0459 then 0 else 186000) + (if b0460 then 0 else 186000) + (if b0461 then 0 else 186000) + (if b0462 then 0 else 186000) + (if b0463 then 0 else 186000) + (if b0464 then 0 else 186000) + (if b0465 then 0 else 186000) < 441
}
Prover Time taken = 6.879428
Added Horn clause: 9 => 10
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/linear-algebra/kernels/3mm/kernel3.bpl.ice2.bpl
Total learner time was 00:00:00.1224250
Verifying $kernel3: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool, b0228: bool, b0229: bool, b0230: bool, b0231: bool, b0232: bool, b0233: bool, b0234: bool, b0235: bool, b0236: bool, b0237: bool, b0238: bool, b0239: bool, b0240: bool, b0241: bool, b0242: bool, b0243: bool, b0244: bool, b0245: bool, b0246: bool, b0247: bool, b0248: bool, b0249: bool, b0250: bool, b0251: bool, b0252: bool, b0253: bool, b0254: bool, b0255: bool, b0256: bool, b0257: bool, b0258: bool, b0259: bool, b0260: bool, b0261: bool, b0262: bool, b0263: bool, b0264: bool, b0265: bool, b0266: bool, b0267: bool, b0268: bool, b0269: bool, b0270: bool, b0271: bool, b0272: bool, b0273: bool, b0274: bool, b0275: bool, b0276: bool, b0277: bool, b0278: bool, b0279: bool, b0280: bool, b0281: bool, b0282: bool, b0283: bool, b0284: bool, b0285: bool, b0286: bool, b0287: bool, b0288: bool, b0289: bool, b0290: bool, b0291: bool, b0292: bool, b0293: bool, b0294: bool, b0295: bool, b0296: bool, b0297: bool, b0298: bool, b0299: bool, b0300: bool, b0301: bool, b0302: bool, b0303: bool, b0304: bool, b0305: bool, b0306: bool, b0307: bool, b0308: bool, b0309: bool, b0310: bool, b0311: bool, b0312: bool, b0313: bool, b0314: bool, b0315: bool, b0316: bool, b0317: bool, b0318: bool, b0319: bool, b0320: bool, b0321: bool, b0322: bool, b0323: bool, b0324: bool, b0325: bool, b0326: bool, b0327: bool, b0328: bool, b0329: bool, b0330: bool, b0331: bool, b0332: bool, b0333: bool, b0334: bool, b0335: bool, b0336: bool, b0337: bool, b0338: bool, b0339: bool, b0340: bool, b0341: bool, b0342: bool, b0343: bool, b0344: bool, b0345: bool, b0346: bool, b0347: bool, b0348: bool, b0349: bool, b0350: bool, b0351: bool, b0352: bool, b0353: bool, b0354: bool, b0355: bool, b0356: bool, b0357: bool, b0358: bool, b0359: bool, b0360: bool, b0361: bool, b0362: bool, b0363: bool, b0364: bool, b0365: bool, b0366: bool, b0367: bool, b0368: bool, b0369: bool, b0370: bool, b0371: bool, b0372: bool, b0373: bool, b0374: bool, b0375: bool, b0376: bool, b0377: bool, b0378: bool, b0379: bool, b0380: bool, b0381: bool, b0382: bool, b0383: bool, b0384: bool, b0385: bool, b0386: bool, b0387: bool, b0388: bool, b0389: bool, b0390: bool, b0391: bool, b0392: bool, b0393: bool, b0394: bool, b0395: bool, b0396: bool, b0397: bool, b0398: bool, b0399: bool, b0400: bool, b0401: bool, b0402: bool, b0403: bool, b0404: bool, b0405: bool, b0406: bool, b0407: bool, b0408: bool, b0409: bool, b0410: bool, b0411: bool, b0412: bool, b0413: bool, b0414: bool, b0415: bool, b0416: bool, b0417: bool, b0418: bool, b0419: bool, b0420: bool, b0421: bool, b0422: bool, b0423: bool, b0424: bool, b0425: bool, b0426: bool, b0427: bool, b0428: bool, b0429: bool, b0430: bool, b0431: bool, b0432: bool, b0433: bool, b0434: bool, b0435: bool, b0436: bool, b0437: bool, b0438: bool, b0439: bool, b0440: bool, b0441: bool, b0442: bool, b0443: bool, b0444: bool, b0445: bool, b0446: bool, b0447: bool, b0448: bool, b0449: bool, b0450: bool, b0451: bool, b0452: bool, b0453: bool, b0454: bool, b0455: bool, b0456: bool, b0457: bool, b0458: bool, b0459: bool, b0460: bool, b0461: bool, b0462: bool, b0463: bool, b0464: bool, b0465: bool) : bool
{
  0 + (if b0000 then 0 else 186000) + (if b0001 then 0 else 186000) + (if b0002 then 0 else 186000) + (if b0003 then 0 else 186000) + (if b0004 then 0 else 186000) + (if b0005 then 0 else 186000) + (if b0006 then 0 else 186000) + (if b0007 then 0 else 186000) + (if b0008 then 0 else 186000) + (if b0009 then 0 else 186000) + (if b0010 then 0 else 186000) + (if b0011 then 0 else 186000) + (if b0012 then 0 else 186000) + (if b0013 then 0 else 186000) + (if b0014 then 0 else 186000) + (if b0015 then 0 else 186000) + (if b0016 then 0 else 186000) + (if b0017 then 0 else 186000) + (if b0018 then 0 else 186000) + (if b0019 then 0 else 186000) + (if b0020 then 0 else 186000) + (if b0021 then 0 else 186000) + (if b0022 then 0 else 186000) + (if b0023 then 0 else 186000) + (if b0024 then 0 else 186000) + (if b0025 then 0 else 186000) + (if b0026 then 0 else 186000) + (if b0027 then 0 else 186000) + (if b0028 then 0 else 186000) + (if b0029 then 0 else 186000) + (if b0030 then 0 else 186000) + (if b0031 then 0 else 186000) + (if b0032 then 0 else 186000) + (if b0033 then 0 else 186000) + (if b0034 then 0 else 186000) + (if b0035 then 0 else 186000) + (if b0036 then 0 else 186000) + (if b0037 then 0 else 186000) + (if b0038 then 0 else 186000) + (if b0039 then 0 else 186000) + (if b0040 then 0 else 186000) + (if b0041 then 0 else 186000) + (if b0042 then 0 else 186000) + (if b0043 then 0 else 186000) + (if b0044 then 0 else 186000) + (if b0045 then 0 else 186000) + (if b0046 then 0 else 186000) + (if b0047 then 0 else 186000) + (if b0048 then 0 else 186000) + (if b0049 then 0 else 186000) + (if b0050 then 0 else 186000) + (if b0051 then 0 else 186000) + (if b0052 then 0 else 186000) + (if b0053 then 0 else 186000) + (if b0054 then 0 else 186000) + (if b0055 then 0 else 186000) + (if b0056 then 0 else 186000) + (if b0057 then 0 else 186000) + (if b0058 then 0 else 186000) + (if b0059 then 0 else 186000) + (if b0060 then 0 else 186000) + (if b0061 then 0 else 186000) + (if b0062 then 0 else 186000) + (if b0063 then 0 else 186000) + (if b0064 then 0 else 186000) + (if b0065 then 0 else 186000) + (if b0066 then 0 else 186000) + (if b0067 then 0 else 186000) + (if b0068 then 0 else 186000) + (if b0069 then 0 else 186000) + (if b0070 then 0 else 186000) + (if b0071 then 0 else 186000) + (if b0072 then 0 else 186000) + (if b0073 then 0 else 186000) + (if b0074 then 0 else 186000) + (if b0075 then 0 else 186000) + (if b0076 then 0 else 186000) + (if b0077 then 0 else 186000) + (if b0078 then 0 else 186000) + (if b0079 then 0 else 186000) + (if b0080 then 0 else 186000) + (if b0081 then 0 else 186000) + (if b0082 then 0 else 186000) + (if b0083 then 0 else 186000) + (if b0084 then 0 else 186000) + (if b0085 then 0 else 186000) + (if b0086 then 0 else 186000) + (if b0087 then 0 else 186000) + (if b0088 then 0 else 186000) + (if b0089 then 0 else 186000) + (if b0090 then 0 else 186000) + (if b0091 then 0 else 186000) + (if b0092 then 0 else 186000) + (if b0093 then 0 else 186000) + (if b0094 then 0 else 186000) + (if b0095 then 0 else 186000) + (if b0096 then 0 else 186000) + (if b0097 then 0 else 186000) + (if b0098 then 0 else 186000) + (if b0099 then 0 else 186000) + (if b0100 then 0 else 186000) + (if b0101 then 0 else 186000) + (if b0102 then 0 else 186000) + (if b0103 then 0 else 186000) + (if b0104 then 0 else 186000) + (if b0105 then 0 else 186000) + (if b0106 then 0 else 186000) + (if b0107 then 0 else 186000) + (if b0108 then 0 else 186000) + (if b0109 then 0 else 186000) + (if b0110 then 0 else 186000) + (if b0111 then 0 else 186000) + (if b0112 then 0 else 186000) + (if b0113 then 0 else 186000) + (if b0114 then 0 else 186000) + (if b0115 then 0 else 186000) + (if b0116 then 0 else 186000) + (if b0117 then 0 else 186000) + (if b0118 then 0 else 186000) + (if b0119 then 0 else 186000) + (if b0120 then 0 else 186000) + (if b0121 then 0 else 186000) + (if b0122 then 0 else 186000) + (if b0123 then 0 else 186000) + (if b0124 then 0 else 186000) + (if b0125 then 0 else 186000) + (if b0126 then 0 else 186000) + (if b0127 then 0 else 186000) + (if b0128 then 0 else 186000) + (if b0129 then 0 else 186000) + (if b0130 then 0 else 186000) + (if b0131 then 0 else 186000) + (if b0132 then 0 else 186000) + (if b0133 then 0 else 186000) + (if b0134 then 0 else 186000) + (if b0135 then 0 else 186000) + (if b0136 then 0 else 186000) + (if b0137 then 0 else 186000) + (if b0138 then 0 else 186000) + (if b0139 then 0 else 186000) + (if b0140 then 0 else 186000) + (if b0141 then 0 else 186000) + (if b0142 then 0 else 186000) + (if b0143 then 0 else 186000) + (if b0144 then 0 else 186000) + (if b0145 then 0 else 186000) + (if b0146 then 0 else 186000) + (if b0147 then 0 else 186000) + (if b0148 then 0 else 186000) + (if b0149 then 0 else 186000) + (if b0150 then 0 else 186000) + (if b0151 then 0 else 186000) + (if b0152 then 0 else 186000) + (if b0153 then 0 else 186000) + (if b0154 then 0 else 186000) + (if b0155 then 0 else 186000) + (if b0156 then 0 else 186000) + (if b0157 then 0 else 186000) + (if b0158 then 0 else 186000) + (if b0159 then 0 else 186000) + (if b0160 then 0 else 186000) + (if b0161 then 0 else 186000) + (if b0162 then 0 else 186000) + (if b0163 then 0 else 186000) + (if b0164 then 0 else 186000) + (if b0165 then 0 else 186000) + (if b0166 then 0 else 186000) + (if b0167 then 0 else 186000) + (if b0168 then 0 else 186000) + (if b0169 then 0 else 186000) + (if b0170 then 0 else 186000) + (if b0171 then 0 else 186000) + (if b0172 then 0 else 186000) + (if b0173 then 0 else 186000) + (if b0174 then 0 else 186000) + (if b0175 then 0 else 186000) + (if b0176 then 0 else 186000) + (if b0177 then 0 else 186000) + (if b0178 then 0 else 186000) + (if b0179 then 0 else 186000) + (if b0180 then 0 else 186000) + (if b0181 then 0 else 186000) + (if b0182 then 0 else 186000) + (if b0183 then 0 else 186000) + (if b0184 then 0 else 186000) + (if b0185 then 0 else 186000) + (if b0186 then 0 else 186000) + (if b0187 then 0 else 186000) + (if b0188 then 0 else 186000) + (if b0189 then 0 else 186000) + (if b0190 then 0 else 186000) + (if b0191 then 0 else 186000) + (if b0192 then 0 else 186000) + (if b0193 then 0 else 186000) + (if b0194 then 0 else 186000) + (if b0195 then 0 else 186000) + (if b0196 then 0 else 186000) + (if b0197 then 0 else 186000) + (if b0198 then 0 else 186000) + (if b0199 then 0 else 186000) + (if b0200 then 0 else 186000) + (if b0201 then 0 else 186000) + (if b0202 then 0 else 186000) + (if b0203 then 0 else 186000) + (if b0204 then 0 else 186000) + (if b0205 then 0 else 186000) + (if b0206 then 0 else 186000) + (if b0207 then 0 else 186000) + (if b0208 then 0 else 186000) + (if b0209 then 0 else 186000) + (if b0210 then 0 else 186000) + (if b0211 then 0 else 186000) + (if b0212 then 0 else 186000) + (if b0213 then 0 else 186000) + (if b0214 then 0 else 186000) + (if b0215 then 0 else 186000) + (if b0216 then 0 else 186000) + (if b0217 then 0 else 186000) + (if b0218 then 0 else 186000) + (if b0219 then 0 else 186000) + (if b0220 then 0 else 186000) + (if b0221 then 0 else 186000) + (if b0222 then 0 else 186000) + (if b0223 then 0 else 186000) + (if b0224 then 0 else 186000) + (if b0225 then 0 else 186000) + (if b0226 then 0 else 186000) + (if b0227 then 0 else 186000) + (if b0228 then 0 else 186000) + (if b0229 then 0 else 186000) + (if b0230 then 0 else 186000) + (if b0231 then 0 else 186000) + (if b0232 then 0 else 186000) + (if b0233 then 0 else 186000) + (if b0234 then 0 else 186000) + (if b0235 then 0 else 186000) + (if b0236 then 0 else 186000) + (if b0237 then 0 else 186000) + (if b0238 then 0 else 186000) + (if b0239 then 0 else 186000) + (if b0240 then 0 else 186000) + (if b0241 then 0 else 186000) + (if b0242 then 0 else 186000) + (if b0243 then 0 else 186000) + (if b0244 then 0 else 186000) + (if b0245 then 0 else 186000) + (if b0246 then 0 else 186000) + (if b0247 then 0 else 186000) + (if b0248 then 0 else 186000) + (if b0249 then 0 else 186000) + (if b0250 then 0 else 186000) + (if b0251 then 0 else 186000) + (if b0252 then 0 else 186000) + (if b0253 then 0 else 186000) + (if b0254 then 0 else 186000) + (if b0255 then 0 else 186000) + (if b0256 then 0 else 186000) + (if b0257 then 0 else 186000) + (if b0258 then 0 else 186000) + (if b0259 then 0 else 186000) + (if b0260 then 0 else 186000) + (if b0261 then 0 else 186000) + (if b0262 then 0 else 186000) + (if b0263 then 0 else 186000) + (if b0264 then 0 else 186000) + (if b0265 then 0 else 186000) + (if b0266 then 0 else 186000) + (if b0267 then 0 else 186000) + (if b0268 then 0 else 186000) + (if b0269 then 0 else 186000) + (if b0270 then 0 else 186000) + (if b0271 then 0 else 186000) + (if b0272 then 0 else 186000) + (if b0273 then 0 else 186000) + (if b0274 then 0 else 186000) + (if b0275 then 0 else 186000) + (if b0276 then 0 else 186000) + (if b0277 then 0 else 186000) + (if b0278 then 0 else 186000) + (if b0279 then 0 else 186000) + (if b0280 then 0 else 186000) + (if b0281 then 0 else 186000) + (if b0282 then 0 else 186000) + (if b0283 then 0 else 186000) + (if b0284 then 0 else 186000) + (if b0285 then 0 else 186000) + (if b0286 then 0 else 186000) + (if b0287 then 0 else 186000) + (if b0288 then 0 else 186000) + (if b0289 then 0 else 186000) + (if b0290 then 0 else 186000) + (if b0291 then 0 else 186000) + (if b0292 then 0 else 186000) + (if b0293 then 0 else 186000) + (if b0294 then 0 else 186000) + (if b0295 then 0 else 186000) + (if b0296 then 0 else 186000) + (if b0297 then 0 else 186000) + (if b0298 then 0 else 186000) + (if b0299 then 0 else 186000) + (if b0300 then 0 else 186000) + (if b0301 then 0 else 186000) + (if b0302 then 0 else 186000) + (if b0303 then 0 else 186000) + (if b0304 then 0 else 186000) + (if b0305 then 0 else 186000) + (if b0306 then 0 else 186000) + (if b0307 then 0 else 186000) + (if b0308 then 0 else 186000) + (if b0309 then 0 else 186000) + (if b0310 then 0 else 186000) + (if b0311 then 0 else 186000) + (if b0312 then 0 else 186000) + (if b0313 then 0 else 186000) + (if b0314 then 0 else 186000) + (if b0315 then 0 else 186000) + (if b0316 then 0 else 186000) + (if b0317 then 0 else 186000) + (if b0318 then 0 else 186000) + (if b0319 then 0 else 186000) + (if b0320 then 0 else 186000) + (if b0321 then 0 else 186000) + (if b0322 then 0 else 186000) + (if b0323 then 0 else 186000) + (if b0324 then 0 else 186000) + (if b0325 then 0 else 186000) + (if b0326 then 0 else 186000) + (if b0327 then 0 else 186000) + (if b0328 then 0 else 186000) + (if b0329 then 0 else 186000) + (if b0330 then 0 else 186000) + (if b0331 then 0 else 186000) + (if b0332 then 0 else 186000) + (if b0333 then 0 else 186000) + (if b0334 then 0 else 186000) + (if b0335 then 0 else 186000) + (if b0336 then 0 else 186000) + (if b0337 then 0 else 186000) + (if b0338 then 0 else 186000) + (if b0339 then 0 else 186000) + (if b0340 then 0 else 186000) + (if b0341 then 0 else 186000) + (if b0376 then 0 else 186000) + (if b0377 then 0 else 186000) + (if b0378 then 0 else 186000) + (if b0379 then 0 else 186000) + (if b0380 then 0 else 186000) + (if b0381 then 0 else 186000) + (if b0382 then 0 else 186000) + (if b0383 then 0 else 186000) + (if b0384 then 0 else 186000) + (if b0385 then 0 else 186000) + (if b0386 then 0 else 186000) + (if b0387 then 0 else 186000) + (if b0388 then 0 else 186000) + (if b0389 then 0 else 186000) + (if b0390 then 0 else 186000) + (if b0422 then 0 else 186000) + (if b0423 then 0 else 186000) + (if b0424 then 0 else 186000) + (if b0425 then 0 else 186000) + (if b0426 then 0 else 186000) + (if b0427 then 0 else 186000) + (if b0428 then 0 else 186000) + (if b0429 then 0 else 186000) + (if b0430 then 0 else 186000) + (if b0431 then 0 else 186000) + (if b0432 then 0 else 186000) + (if b0433 then 0 else 186000) + (if b0434 then 0 else 186000) + (if b0435 then 0 else 186000) + (if b0436 then 0 else 186000) + (if b0437 then 0 else 186000) + (if b0438 then 0 else 186000) + (if b0439 then 0 else 186000) + (if b0440 then 0 else 186000) + (if b0441 then 0 else 186000) + (if b0442 then 0 else 186000) + (if b0443 then 0 else 186000) + (if b0444 then 0 else 186000) + (if b0445 then 0 else 186000) + (if b0446 then 0 else 186000) + (if b0447 then 0 else 186000) + (if b0448 then 0 else 186000) + (if b0449 then 0 else 186000) + (if b0450 then 0 else 186000) + (if b0451 then 0 else 186000) + (if b0452 then 0 else 186000) + (if b0453 then 0 else 186000) + (if b0454 then 0 else 186000) + (if b0455 then 0 else 186000) + (if b0456 then 0 else 186000) + (if b0457 then 0 else 186000) + (if b0458 then 0 else 186000) + (if b0459 then 0 else 186000) + (if b0460 then 0 else 186000) + (if b0461 then 0 else 186000) + (if b0462 then 0 else 186000) + (if b0463 then 0 else 186000) + (if b0464 then 0 else 186000) + (if b0465 then 0 else 186000) < 441
}
Prover Time taken = 9.374033
Added Horn clause: 11 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 => 12
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/linear-algebra/kernels/3mm/kernel3.bpl.ice2.bpl
Total learner time was 00:00:00.1241090
Verifying $kernel3: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool, b0228: bool, b0229: bool, b0230: bool, b0231: bool, b0232: bool, b0233: bool, b0234: bool, b0235: bool, b0236: bool, b0237: bool, b0238: bool, b0239: bool, b0240: bool, b0241: bool, b0242: bool, b0243: bool, b0244: bool, b0245: bool, b0246: bool, b0247: bool, b0248: bool, b0249: bool, b0250: bool, b0251: bool, b0252: bool, b0253: bool, b0254: bool, b0255: bool, b0256: bool, b0257: bool, b0258: bool, b0259: bool, b0260: bool, b0261: bool, b0262: bool, b0263: bool, b0264: bool, b0265: bool, b0266: bool, b0267: bool, b0268: bool, b0269: bool, b0270: bool, b0271: bool, b0272: bool, b0273: bool, b0274: bool, b0275: bool, b0276: bool, b0277: bool, b0278: bool, b0279: bool, b0280: bool, b0281: bool, b0282: bool, b0283: bool, b0284: bool, b0285: bool, b0286: bool, b0287: bool, b0288: bool, b0289: bool, b0290: bool, b0291: bool, b0292: bool, b0293: bool, b0294: bool, b0295: bool, b0296: bool, b0297: bool, b0298: bool, b0299: bool, b0300: bool, b0301: bool, b0302: bool, b0303: bool, b0304: bool, b0305: bool, b0306: bool, b0307: bool, b0308: bool, b0309: bool, b0310: bool, b0311: bool, b0312: bool, b0313: bool, b0314: bool, b0315: bool, b0316: bool, b0317: bool, b0318: bool, b0319: bool, b0320: bool, b0321: bool, b0322: bool, b0323: bool, b0324: bool, b0325: bool, b0326: bool, b0327: bool, b0328: bool, b0329: bool, b0330: bool, b0331: bool, b0332: bool, b0333: bool, b0334: bool, b0335: bool, b0336: bool, b0337: bool, b0338: bool, b0339: bool, b0340: bool, b0341: bool, b0342: bool, b0343: bool, b0344: bool, b0345: bool, b0346: bool, b0347: bool, b0348: bool, b0349: bool, b0350: bool, b0351: bool, b0352: bool, b0353: bool, b0354: bool, b0355: bool, b0356: bool, b0357: bool, b0358: bool, b0359: bool, b0360: bool, b0361: bool, b0362: bool, b0363: bool, b0364: bool, b0365: bool, b0366: bool, b0367: bool, b0368: bool, b0369: bool, b0370: bool, b0371: bool, b0372: bool, b0373: bool, b0374: bool, b0375: bool, b0376: bool, b0377: bool, b0378: bool, b0379: bool, b0380: bool, b0381: bool, b0382: bool, b0383: bool, b0384: bool, b0385: bool, b0386: bool, b0387: bool, b0388: bool, b0389: bool, b0390: bool, b0391: bool, b0392: bool, b0393: bool, b0394: bool, b0395: bool, b0396: bool, b0397: bool, b0398: bool, b0399: bool, b0400: bool, b0401: bool, b0402: bool, b0403: bool, b0404: bool, b0405: bool, b0406: bool, b0407: bool, b0408: bool, b0409: bool, b0410: bool, b0411: bool, b0412: bool, b0413: bool, b0414: bool, b0415: bool, b0416: bool, b0417: bool, b0418: bool, b0419: bool, b0420: bool, b0421: bool, b0422: bool, b0423: bool, b0424: bool, b0425: bool, b0426: bool, b0427: bool, b0428: bool, b0429: bool, b0430: bool, b0431: bool, b0432: bool, b0433: bool, b0434: bool, b0435: bool, b0436: bool, b0437: bool, b0438: bool, b0439: bool, b0440: bool, b0441: bool, b0442: bool, b0443: bool, b0444: bool, b0445: bool, b0446: bool, b0447: bool, b0448: bool, b0449: bool, b0450: bool, b0451: bool, b0452: bool, b0453: bool, b0454: bool, b0455: bool, b0456: bool, b0457: bool, b0458: bool, b0459: bool, b0460: bool, b0461: bool, b0462: bool, b0463: bool, b0464: bool, b0465: bool) : bool
{
  0 + (if b0000 then 0 else 186000) + (if b0001 then 0 else 186000) + (if b0002 then 0 else 186000) + (if b0003 then 0 else 186000) + (if b0004 then 0 else 186000) + (if b0005 then 0 else 186000) + (if b0006 then 0 else 186000) + (if b0007 then 0 else 186000) + (if b0008 then 0 else 186000) + (if b0009 then 0 else 186000) + (if b0010 then 0 else 186000) + (if b0011 then 0 else 186000) + (if b0012 then 0 else 186000) + (if b0013 then 0 else 186000) + (if b0014 then 0 else 186000) + (if b0015 then 0 else 186000) + (if b0016 then 0 else 186000) + (if b0017 then 0 else 186000) + (if b0018 then 0 else 186000) + (if b0019 then 0 else 186000) + (if b0020 then 0 else 186000) + (if b0021 then 0 else 186000) + (if b0022 then 0 else 186000) + (if b0023 then 0 else 186000) + (if b0024 then 0 else 186000) + (if b0025 then 0 else 186000) + (if b0026 then 0 else 186000) + (if b0027 then 0 else 186000) + (if b0028 then 0 else 186000) + (if b0029 then 0 else 186000) + (if b0030 then 0 else 186000) + (if b0031 then 0 else 186000) + (if b0032 then 0 else 186000) + (if b0033 then 0 else 186000) + (if b0034 then 0 else 186000) + (if b0035 then 0 else 186000) + (if b0036 then 0 else 186000) + (if b0037 then 0 else 186000) + (if b0038 then 0 else 186000) + (if b0039 then 0 else 186000) + (if b0040 then 0 else 186000) + (if b0041 then 0 else 186000) + (if b0042 then 0 else 186000) + (if b0043 then 0 else 186000) + (if b0044 then 0 else 186000) + (if b0045 then 0 else 186000) + (if b0046 then 0 else 186000) + (if b0047 then 0 else 186000) + (if b0048 then 0 else 186000) + (if b0049 then 0 else 186000) + (if b0050 then 0 else 186000) + (if b0051 then 0 else 186000) + (if b0052 then 0 else 186000) + (if b0053 then 0 else 186000) + (if b0054 then 0 else 186000) + (if b0055 then 0 else 186000) + (if b0056 then 0 else 186000) + (if b0057 then 0 else 186000) + (if b0058 then 0 else 186000) + (if b0059 then 0 else 186000) + (if b0060 then 0 else 186000) + (if b0061 then 0 else 186000) + (if b0062 then 0 else 186000) + (if b0063 then 0 else 186000) + (if b0064 then 0 else 186000) + (if b0065 then 0 else 186000) + (if b0066 then 0 else 186000) + (if b0067 then 0 else 186000) + (if b0068 then 0 else 186000) + (if b0069 then 0 else 186000) + (if b0070 then 0 else 186000) + (if b0071 then 0 else 186000) + (if b0072 then 0 else 186000) + (if b0073 then 0 else 186000) + (if b0074 then 0 else 186000) + (if b0075 then 0 else 186000) + (if b0076 then 0 else 186000) + (if b0077 then 0 else 186000) + (if b0078 then 0 else 186000) + (if b0079 then 0 else 186000) + (if b0080 then 0 else 186000) + (if b0081 then 0 else 186000) + (if b0082 then 0 else 186000) + (if b0083 then 0 else 186000) + (if b0084 then 0 else 186000) + (if b0085 then 0 else 186000) + (if b0086 then 0 else 186000) + (if b0087 then 0 else 186000) + (if b0088 then 0 else 186000) + (if b0089 then 0 else 186000) + (if b0090 then 0 else 186000) + (if b0091 then 0 else 186000) + (if b0092 then 0 else 186000) + (if b0093 then 0 else 186000) + (if b0094 then 0 else 186000) + (if b0095 then 0 else 186000) + (if b0096 then 0 else 186000) + (if b0097 then 0 else 186000) + (if b0098 then 0 else 186000) + (if b0099 then 0 else 186000) + (if b0100 then 0 else 186000) + (if b0101 then 0 else 186000) + (if b0102 then 0 else 186000) + (if b0103 then 0 else 186000) + (if b0104 then 0 else 186000) + (if b0105 then 0 else 186000) + (if b0106 then 0 else 186000) + (if b0107 then 0 else 186000) + (if b0108 then 0 else 186000) + (if b0109 then 0 else 186000) + (if b0110 then 0 else 186000) + (if b0111 then 0 else 186000) + (if b0112 then 0 else 186000) + (if b0113 then 0 else 186000) + (if b0114 then 0 else 186000) + (if b0115 then 0 else 186000) + (if b0116 then 0 else 186000) + (if b0118 then 0 else 186000) + (if b0120 then 0 else 186000) + (if b0121 then 0 else 186000) + (if b0122 then 0 else 186000) + (if b0123 then 0 else 186000) + (if b0124 then 0 else 186000) + (if b0125 then 0 else 186000) + (if b0126 then 0 else 186000) + (if b0127 then 0 else 186000) + (if b0128 then 0 else 186000) + (if b0129 then 0 else 186000) + (if b0130 then 0 else 186000) + (if b0131 then 0 else 186000) + (if b0132 then 0 else 186000) + (if b0133 then 0 else 186000) + (if b0134 then 0 else 186000) + (if b0135 then 0 else 186000) + (if b0136 then 0 else 186000) + (if b0137 then 0 else 186000) + (if b0138 then 0 else 186000) + (if b0139 then 0 else 186000) + (if b0140 then 0 else 186000) + (if b0141 then 0 else 186000) + (if b0142 then 0 else 186000) + (if b0143 then 0 else 186000) + (if b0144 then 0 else 186000) + (if b0145 then 0 else 186000) + (if b0146 then 0 else 186000) + (if b0147 then 0 else 186000) + (if b0148 then 0 else 186000) + (if b0149 then 0 else 186000) + (if b0150 then 0 else 186000) + (if b0151 then 0 else 186000) + (if b0152 then 0 else 186000) + (if b0153 then 0 else 186000) + (if b0154 then 0 else 186000) + (if b0155 then 0 else 186000) + (if b0156 then 0 else 186000) + (if b0157 then 0 else 186000) + (if b0158 then 0 else 186000) + (if b0159 then 0 else 186000) + (if b0160 then 0 else 186000) + (if b0161 then 0 else 186000) + (if b0162 then 0 else 186000) + (if b0163 then 0 else 186000) + (if b0164 then 0 else 186000) + (if b0165 then 0 else 186000) + (if b0166 then 0 else 186000) + (if b0167 then 0 else 186000) + (if b0168 then 0 else 186000) + (if b0169 then 0 else 186000) + (if b0170 then 0 else 186000) + (if b0171 then 0 else 186000) + (if b0172 then 0 else 186000) + (if b0173 then 0 else 186000) + (if b0174 then 0 else 186000) + (if b0175 then 0 else 186000) + (if b0176 then 0 else 186000) + (if b0177 then 0 else 186000) + (if b0178 then 0 else 186000) + (if b0179 then 0 else 186000) + (if b0180 then 0 else 186000) + (if b0181 then 0 else 186000) + (if b0182 then 0 else 186000) + (if b0183 then 0 else 186000) + (if b0184 then 0 else 186000) + (if b0185 then 0 else 186000) + (if b0186 then 0 else 186000) + (if b0187 then 0 else 186000) + (if b0188 then 0 else 186000) + (if b0189 then 0 else 186000) + (if b0190 then 0 else 186000) + (if b0191 then 0 else 186000) + (if b0192 then 0 else 186000) + (if b0193 then 0 else 186000) + (if b0194 then 0 else 186000) + (if b0195 then 0 else 186000) + (if b0196 then 0 else 186000) + (if b0197 then 0 else 186000) + (if b0198 then 0 else 186000) + (if b0199 then 0 else 186000) + (if b0200 then 0 else 186000) + (if b0201 then 0 else 186000) + (if b0202 then 0 else 186000) + (if b0203 then 0 else 186000) + (if b0204 then 0 else 186000) + (if b0205 then 0 else 186000) + (if b0206 then 0 else 186000) + (if b0207 then 0 else 186000) + (if b0208 then 0 else 186000) + (if b0209 then 0 else 186000) + (if b0210 then 0 else 186000) + (if b0211 then 0 else 186000) + (if b0212 then 0 else 186000) + (if b0213 then 0 else 186000) + (if b0214 then 0 else 186000) + (if b0215 then 0 else 186000) + (if b0216 then 0 else 186000) + (if b0217 then 0 else 186000) + (if b0218 then 0 else 186000) + (if b0219 then 0 else 186000) + (if b0220 then 0 else 186000) + (if b0221 then 0 else 186000) + (if b0222 then 0 else 186000) + (if b0223 then 0 else 186000) + (if b0224 then 0 else 186000) + (if b0225 then 0 else 186000) + (if b0226 then 0 else 186000) + (if b0227 then 0 else 186000) + (if b0228 then 0 else 186000) + (if b0229 then 0 else 186000) + (if b0230 then 0 else 186000) + (if b0231 then 0 else 186000) + (if b0232 then 0 else 186000) + (if b0233 then 0 else 186000) + (if b0234 then 0 else 186000) + (if b0235 then 0 else 186000) + (if b0236 then 0 else 186000) + (if b0237 then 0 else 186000) + (if b0238 then 0 else 186000) + (if b0239 then 0 else 186000) + (if b0240 then 0 else 186000) + (if b0241 then 0 else 186000) + (if b0242 then 0 else 186000) + (if b0243 then 0 else 186000) + (if b0244 then 0 else 186000) + (if b0245 then 0 else 186000) + (if b0246 then 0 else 186000) + (if b0247 then 0 else 186000) + (if b0248 then 0 else 186000) + (if b0249 then 0 else 186000) + (if b0250 then 0 else 186000) + (if b0251 then 0 else 186000) + (if b0252 then 0 else 186000) + (if b0253 then 0 else 186000) + (if b0254 then 0 else 186000) + (if b0255 then 0 else 186000) + (if b0256 then 0 else 186000) + (if b0257 then 0 else 186000) + (if b0258 then 0 else 186000) + (if b0259 then 0 else 186000) + (if b0260 then 0 else 186000) + (if b0261 then 0 else 186000) + (if b0262 then 0 else 186000) + (if b0263 then 0 else 186000) + (if b0264 then 0 else 186000) + (if b0265 then 0 else 186000) + (if b0266 then 0 else 186000) + (if b0267 then 0 else 186000) + (if b0268 then 0 else 186000) + (if b0269 then 0 else 186000) + (if b0270 then 0 else 186000) + (if b0271 then 0 else 186000) + (if b0272 then 0 else 186000) + (if b0273 then 0 else 186000) + (if b0274 then 0 else 186000) + (if b0275 then 0 else 186000) + (if b0276 then 0 else 186000) + (if b0277 then 0 else 186000) + (if b0278 then 0 else 186000) + (if b0279 then 0 else 186000) + (if b0280 then 0 else 186000) + (if b0281 then 0 else 186000) + (if b0282 then 0 else 186000) + (if b0283 then 0 else 186000) + (if b0284 then 0 else 186000) + (if b0285 then 0 else 186000) + (if b0286 then 0 else 186000) + (if b0287 then 0 else 186000) + (if b0288 then 0 else 186000) + (if b0289 then 0 else 186000) + (if b0290 then 0 else 186000) + (if b0291 then 0 else 186000) + (if b0292 then 0 else 186000) + (if b0293 then 0 else 186000) + (if b0294 then 0 else 186000) + (if b0295 then 0 else 186000) + (if b0296 then 0 else 186000) + (if b0297 then 0 else 186000) + (if b0298 then 0 else 186000) + (if b0299 then 0 else 186000) + (if b0300 then 0 else 186000) + (if b0301 then 0 else 186000) + (if b0302 then 0 else 186000) + (if b0303 then 0 else 186000) + (if b0304 then 0 else 186000) + (if b0305 then 0 else 186000) + (if b0306 then 0 else 186000) + (if b0307 then 0 else 186000) + (if b0308 then 0 else 186000) + (if b0309 then 0 else 186000) + (if b0310 then 0 else 186000) + (if b0311 then 0 else 186000) + (if b0312 then 0 else 186000) + (if b0313 then 0 else 186000) + (if b0314 then 0 else 186000) + (if b0315 then 0 else 186000) + (if b0316 then 0 else 186000) + (if b0317 then 0 else 186000) + (if b0318 then 0 else 186000) + (if b0319 then 0 else 186000) + (if b0320 then 0 else 186000) + (if b0321 then 0 else 186000) + (if b0322 then 0 else 186000) + (if b0323 then 0 else 186000) + (if b0324 then 0 else 186000) + (if b0325 then 0 else 186000) + (if b0326 then 0 else 186000) + (if b0327 then 0 else 186000) + (if b0328 then 0 else 186000) + (if b0329 then 0 else 186000) + (if b0330 then 0 else 186000) + (if b0331 then 0 else 186000) + (if b0332 then 0 else 186000) + (if b0333 then 0 else 186000) + (if b0334 then 0 else 186000) + (if b0335 then 0 else 186000) + (if b0336 then 0 else 186000) + (if b0337 then 0 else 186000) + (if b0338 then 0 else 186000) + (if b0339 then 0 else 186000) + (if b0340 then 0 else 186000) + (if b0341 then 0 else 186000) + (if b0376 then 0 else 186000) + (if b0377 then 0 else 186000) + (if b0378 then 0 else 186000) + (if b0379 then 0 else 186000) + (if b0380 then 0 else 186000) + (if b0381 then 0 else 186000) + (if b0382 then 0 else 186000) + (if b0383 then 0 else 186000) + (if b0384 then 0 else 186000) + (if b0385 then 0 else 186000) + (if b0386 then 0 else 186000) + (if b0387 then 0 else 186000) + (if b0388 then 0 else 186000) + (if b0389 then 0 else 186000) + (if b0390 then 0 else 186000) + (if b0422 then 0 else 186000) + (if b0423 then 0 else 186000) + (if b0424 then 0 else 186000) + (if b0425 then 0 else 186000) + (if b0426 then 0 else 186000) + (if b0427 then 0 else 186000) + (if b0428 then 0 else 186000) + (if b0429 then 0 else 186000) + (if b0430 then 0 else 186000) + (if b0431 then 0 else 186000) + (if b0432 then 0 else 186000) + (if b0433 then 0 else 186000) + (if b0434 then 0 else 186000) + (if b0435 then 0 else 186000) + (if b0436 then 0 else 186000) + (if b0437 then 0 else 186000) + (if b0438 then 0 else 186000) + (if b0439 then 0 else 186000) + (if b0440 then 0 else 186000) + (if b0441 then 0 else 186000) + (if b0442 then 0 else 186000) + (if b0443 then 0 else 186000) + (if b0444 then 0 else 186000) + (if b0445 then 0 else 186000) + (if b0446 then 0 else 186000) + (if b0447 then 0 else 186000) + (if b0448 then 0 else 186000) + (if b0449 then 0 else 186000) + (if b0450 then 0 else 186000) + (if b0451 then 0 else 186000) + (if b0452 then 0 else 186000) + (if b0453 then 0 else 186000) + (if b0454 then 0 else 186000) + (if b0455 then 0 else 186000) + (if b0456 then 0 else 186000) + (if b0457 then 0 else 186000) + (if b0458 then 0 else 186000) + (if b0459 then 0 else 186000) + (if b0460 then 0 else 186000) + (if b0461 then 0 else 186000) + (if b0462 then 0 else 186000) + (if b0463 then 0 else 186000) + (if b0464 then 0 else 186000) + (if b0465 then 0 else 186000) < 441
}
Prover Time taken = 8.016726
Added Horn clause: 6 && 13 && 0 => 14
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/linear-algebra/kernels/3mm/kernel3.bpl.ice2.bpl
Total learner time was 00:00:00.1248210
Verifying $kernel3: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool, b0228: bool, b0229: bool, b0230: bool, b0231: bool, b0232: bool, b0233: bool, b0234: bool, b0235: bool, b0236: bool, b0237: bool, b0238: bool, b0239: bool, b0240: bool, b0241: bool, b0242: bool, b0243: bool, b0244: bool, b0245: bool, b0246: bool, b0247: bool, b0248: bool, b0249: bool, b0250: bool, b0251: bool, b0252: bool, b0253: bool, b0254: bool, b0255: bool, b0256: bool, b0257: bool, b0258: bool, b0259: bool, b0260: bool, b0261: bool, b0262: bool, b0263: bool, b0264: bool, b0265: bool, b0266: bool, b0267: bool, b0268: bool, b0269: bool, b0270: bool, b0271: bool, b0272: bool, b0273: bool, b0274: bool, b0275: bool, b0276: bool, b0277: bool, b0278: bool, b0279: bool, b0280: bool, b0281: bool, b0282: bool, b0283: bool, b0284: bool, b0285: bool, b0286: bool, b0287: bool, b0288: bool, b0289: bool, b0290: bool, b0291: bool, b0292: bool, b0293: bool, b0294: bool, b0295: bool, b0296: bool, b0297: bool, b0298: bool, b0299: bool, b0300: bool, b0301: bool, b0302: bool, b0303: bool, b0304: bool, b0305: bool, b0306: bool, b0307: bool, b0308: bool, b0309: bool, b0310: bool, b0311: bool, b0312: bool, b0313: bool, b0314: bool, b0315: bool, b0316: bool, b0317: bool, b0318: bool, b0319: bool, b0320: bool, b0321: bool, b0322: bool, b0323: bool, b0324: bool, b0325: bool, b0326: bool, b0327: bool, b0328: bool, b0329: bool, b0330: bool, b0331: bool, b0332: bool, b0333: bool, b0334: bool, b0335: bool, b0336: bool, b0337: bool, b0338: bool, b0339: bool, b0340: bool, b0341: bool, b0342: bool, b0343: bool, b0344: bool, b0345: bool, b0346: bool, b0347: bool, b0348: bool, b0349: bool, b0350: bool, b0351: bool, b0352: bool, b0353: bool, b0354: bool, b0355: bool, b0356: bool, b0357: bool, b0358: bool, b0359: bool, b0360: bool, b0361: bool, b0362: bool, b0363: bool, b0364: bool, b0365: bool, b0366: bool, b0367: bool, b0368: bool, b0369: bool, b0370: bool, b0371: bool, b0372: bool, b0373: bool, b0374: bool, b0375: bool, b0376: bool, b0377: bool, b0378: bool, b0379: bool, b0380: bool, b0381: bool, b0382: bool, b0383: bool, b0384: bool, b0385: bool, b0386: bool, b0387: bool, b0388: bool, b0389: bool, b0390: bool, b0391: bool, b0392: bool, b0393: bool, b0394: bool, b0395: bool, b0396: bool, b0397: bool, b0398: bool, b0399: bool, b0400: bool, b0401: bool, b0402: bool, b0403: bool, b0404: bool, b0405: bool, b0406: bool, b0407: bool, b0408: bool, b0409: bool, b0410: bool, b0411: bool, b0412: bool, b0413: bool, b0414: bool, b0415: bool, b0416: bool, b0417: bool, b0418: bool, b0419: bool, b0420: bool, b0421: bool, b0422: bool, b0423: bool, b0424: bool, b0425: bool, b0426: bool, b0427: bool, b0428: bool, b0429: bool, b0430: bool, b0431: bool, b0432: bool, b0433: bool, b0434: bool, b0435: bool, b0436: bool, b0437: bool, b0438: bool, b0439: bool, b0440: bool, b0441: bool, b0442: bool, b0443: bool, b0444: bool, b0445: bool, b0446: bool, b0447: bool, b0448: bool, b0449: bool, b0450: bool, b0451: bool, b0452: bool, b0453: bool, b0454: bool, b0455: bool, b0456: bool, b0457: bool, b0458: bool, b0459: bool, b0460: bool, b0461: bool, b0462: bool, b0463: bool, b0464: bool, b0465: bool) : bool
{
  0 + (if b0000 then 0 else 186000) + (if b0001 then 0 else 186000) + (if b0002 then 0 else 186000) + (if b0003 then 0 else 186000) + (if b0004 then 0 else 186000) + (if b0005 then 0 else 186000) + (if b0006 then 0 else 186000) + (if b0007 then 0 else 186000) + (if b0008 then 0 else 186000) + (if b0009 then 0 else 186000) + (if b0010 then 0 else 186000) + (if b0011 then 0 else 186000) + (if b0012 then 0 else 186000) + (if b0013 then 0 else 186000) + (if b0014 then 0 else 186000) + (if b0015 then 0 else 186000) + (if b0016 then 0 else 186000) + (if b0017 then 0 else 186000) + (if b0018 then 0 else 186000) + (if b0019 then 0 else 186000) + (if b0020 then 0 else 186000) + (if b0021 then 0 else 186000) + (if b0022 then 0 else 186000) + (if b0023 then 0 else 186000) + (if b0024 then 0 else 186000) + (if b0025 then 0 else 186000) + (if b0026 then 0 else 186000) + (if b0027 then 0 else 186000) + (if b0028 then 0 else 186000) + (if b0029 then 0 else 186000) + (if b0030 then 0 else 186000) + (if b0031 then 0 else 186000) + (if b0032 then 0 else 186000) + (if b0033 then 0 else 186000) + (if b0034 then 0 else 186000) + (if b0035 then 0 else 186000) + (if b0036 then 0 else 186000) + (if b0037 then 0 else 186000) + (if b0038 then 0 else 186000) + (if b0039 then 0 else 186000) + (if b0040 then 0 else 186000) + (if b0041 then 0 else 186000) + (if b0042 then 0 else 186000) + (if b0043 then 0 else 186000) + (if b0044 then 0 else 186000) + (if b0045 then 0 else 186000) + (if b0046 then 0 else 186000) + (if b0047 then 0 else 186000) + (if b0048 then 0 else 186000) + (if b0049 then 0 else 186000) + (if b0050 then 0 else 186000) + (if b0051 then 0 else 186000) + (if b0052 then 0 else 186000) + (if b0053 then 0 else 186000) + (if b0054 then 0 else 186000) + (if b0055 then 0 else 186000) + (if b0056 then 0 else 186000) + (if b0057 then 0 else 186000) + (if b0058 then 0 else 186000) + (if b0059 then 0 else 186000) + (if b0060 then 0 else 186000) + (if b0061 then 0 else 186000) + (if b0062 then 0 else 186000) + (if b0063 then 0 else 186000) + (if b0064 then 0 else 186000) + (if b0065 then 0 else 186000) + (if b0066 then 0 else 186000) + (if b0067 then 0 else 186000) + (if b0068 then 0 else 186000) + (if b0069 then 0 else 186000) + (if b0070 then 0 else 186000) + (if b0071 then 0 else 186000) + (if b0072 then 0 else 186000) + (if b0073 then 0 else 186000) + (if b0074 then 0 else 186000) + (if b0075 then 0 else 186000) + (if b0076 then 0 else 186000) + (if b0077 then 0 else 186000) + (if b0078 then 0 else 186000) + (if b0079 then 0 else 186000) + (if b0080 then 0 else 186000) + (if b0081 then 0 else 186000) + (if b0082 then 0 else 186000) + (if b0083 then 0 else 186000) + (if b0084 then 0 else 186000) + (if b0085 then 0 else 186000) + (if b0086 then 0 else 186000) + (if b0087 then 0 else 186000) + (if b0088 then 0 else 186000) + (if b0089 then 0 else 186000) + (if b0090 then 0 else 186000) + (if b0091 then 0 else 186000) + (if b0092 then 0 else 186000) + (if b0093 then 0 else 186000) + (if b0094 then 0 else 186000) + (if b0095 then 0 else 186000) + (if b0096 then 0 else 186000) + (if b0097 then 0 else 186000) + (if b0098 then 0 else 186000) + (if b0099 then 0 else 186000) + (if b0100 then 0 else 186000) + (if b0101 then 0 else 186000) + (if b0102 then 0 else 186000) + (if b0103 then 0 else 186000) + (if b0104 then 0 else 186000) + (if b0105 then 0 else 186000) + (if b0106 then 0 else 186000) + (if b0107 then 0 else 186000) + (if b0108 then 0 else 186000) + (if b0109 then 0 else 186000) + (if b0110 then 0 else 186000) + (if b0111 then 0 else 186000) + (if b0112 then 0 else 186000) + (if b0113 then 0 else 186000) + (if b0114 then 0 else 186000) + (if b0115 then 0 else 186000) + (if b0116 then 0 else 186000) + (if b0118 then 0 else 186000) + (if b0120 then 0 else 186000) + (if b0121 then 0 else 186000) + (if b0122 then 0 else 186000) + (if b0123 then 0 else 186000) + (if b0124 then 0 else 186000) + (if b0125 then 0 else 186000) + (if b0126 then 0 else 186000) + (if b0127 then 0 else 186000) + (if b0128 then 0 else 186000) + (if b0129 then 0 else 186000) + (if b0130 then 0 else 186000) + (if b0131 then 0 else 186000) + (if b0132 then 0 else 186000) + (if b0133 then 0 else 186000) + (if b0134 then 0 else 186000) + (if b0135 then 0 else 186000) + (if b0136 then 0 else 186000) + (if b0137 then 0 else 186000) + (if b0138 then 0 else 186000) + (if b0139 then 0 else 186000) + (if b0140 then 0 else 186000) + (if b0141 then 0 else 186000) + (if b0142 then 0 else 186000) + (if b0143 then 0 else 186000) + (if b0144 then 0 else 186000) + (if b0145 then 0 else 186000) + (if b0146 then 0 else 186000) + (if b0147 then 0 else 186000) + (if b0148 then 0 else 186000) + (if b0149 then 0 else 186000) + (if b0150 then 0 else 186000) + (if b0151 then 0 else 186000) + (if b0152 then 0 else 186000) + (if b0153 then 0 else 186000) + (if b0154 then 0 else 186000) + (if b0155 then 0 else 186000) + (if b0156 then 0 else 186000) + (if b0157 then 0 else 186000) + (if b0158 then 0 else 186000) + (if b0159 then 0 else 186000) + (if b0160 then 0 else 186000) + (if b0161 then 0 else 186000) + (if b0162 then 0 else 186000) + (if b0163 then 0 else 186000) + (if b0164 then 0 else 186000) + (if b0165 then 0 else 186000) + (if b0166 then 0 else 186000) + (if b0167 then 0 else 186000) + (if b0168 then 0 else 186000) + (if b0169 then 0 else 186000) + (if b0170 then 0 else 186000) + (if b0171 then 0 else 186000) + (if b0172 then 0 else 186000) + (if b0173 then 0 else 186000) + (if b0174 then 0 else 186000) + (if b0175 then 0 else 186000) + (if b0176 then 0 else 186000) + (if b0177 then 0 else 186000) + (if b0178 then 0 else 186000) + (if b0179 then 0 else 186000) + (if b0180 then 0 else 186000) + (if b0181 then 0 else 186000) + (if b0182 then 0 else 186000) + (if b0183 then 0 else 186000) + (if b0184 then 0 else 186000) + (if b0185 then 0 else 186000) + (if b0186 then 0 else 186000) + (if b0187 then 0 else 186000) + (if b0188 then 0 else 186000) + (if b0189 then 0 else 186000) + (if b0190 then 0 else 186000) + (if b0191 then 0 else 186000) + (if b0192 then 0 else 186000) + (if b0193 then 0 else 186000) + (if b0194 then 0 else 186000) + (if b0195 then 0 else 186000) + (if b0196 then 0 else 186000) + (if b0197 then 0 else 186000) + (if b0198 then 0 else 186000) + (if b0199 then 0 else 186000) + (if b0200 then 0 else 186000) + (if b0201 then 0 else 186000) + (if b0202 then 0 else 186000) + (if b0203 then 0 else 186000) + (if b0204 then 0 else 186000) + (if b0205 then 0 else 186000) + (if b0206 then 0 else 186000) + (if b0207 then 0 else 186000) + (if b0208 then 0 else 186000) + (if b0209 then 0 else 186000) + (if b0210 then 0 else 186000) + (if b0211 then 0 else 186000) + (if b0212 then 0 else 186000) + (if b0213 then 0 else 186000) + (if b0214 then 0 else 186000) + (if b0215 then 0 else 186000) + (if b0216 then 0 else 186000) + (if b0217 then 0 else 186000) + (if b0218 then 0 else 186000) + (if b0219 then 0 else 186000) + (if b0220 then 0 else 186000) + (if b0221 then 0 else 186000) + (if b0222 then 0 else 186000) + (if b0223 then 0 else 186000) + (if b0224 then 0 else 186000) + (if b0225 then 0 else 186000) + (if b0226 then 0 else 186000) + (if b0227 then 0 else 186000) + (if b0228 then 0 else 186000) + (if b0229 then 0 else 186000) + (if b0230 then 0 else 186000) + (if b0231 then 0 else 186000) + (if b0232 then 0 else 186000) + (if b0234 then 0 else 186000) + (if b0235 then 0 else 186000) + (if b0236 then 0 else 186000) + (if b0237 then 0 else 186000) + (if b0238 then 0 else 186000) + (if b0239 then 0 else 186000) + (if b0240 then 0 else 186000) + (if b0241 then 0 else 186000) + (if b0242 then 0 else 186000) + (if b0243 then 0 else 186000) + (if b0244 then 0 else 186000) + (if b0245 then 0 else 186000) + (if b0246 then 0 else 186000) + (if b0247 then 0 else 186000) + (if b0248 then 0 else 186000) + (if b0249 then 0 else 186000) + (if b0250 then 0 else 186000) + (if b0251 then 0 else 186000) + (if b0252 then 0 else 186000) + (if b0253 then 0 else 186000) + (if b0254 then 0 else 186000) + (if b0255 then 0 else 186000) + (if b0256 then 0 else 186000) + (if b0257 then 0 else 186000) + (if b0258 then 0 else 186000) + (if b0259 then 0 else 186000) + (if b0260 then 0 else 186000) + (if b0261 then 0 else 186000) + (if b0262 then 0 else 186000) + (if b0263 then 0 else 186000) + (if b0264 then 0 else 186000) + (if b0265 then 0 else 186000) + (if b0266 then 0 else 186000) + (if b0267 then 0 else 186000) + (if b0268 then 0 else 186000) + (if b0269 then 0 else 186000) + (if b0270 then 0 else 186000) + (if b0271 then 0 else 186000) + (if b0272 then 0 else 186000) + (if b0273 then 0 else 186000) + (if b0274 then 0 else 186000) + (if b0275 then 0 else 186000) + (if b0276 then 0 else 186000) + (if b0277 then 0 else 186000) + (if b0278 then 0 else 186000) + (if b0279 then 0 else 186000) + (if b0280 then 0 else 186000) + (if b0281 then 0 else 186000) + (if b0282 then 0 else 186000) + (if b0283 then 0 else 186000) + (if b0284 then 0 else 186000) + (if b0285 then 0 else 186000) + (if b0286 then 0 else 186000) + (if b0287 then 0 else 186000) + (if b0288 then 0 else 186000) + (if b0289 then 0 else 186000) + (if b0290 then 0 else 186000) + (if b0291 then 0 else 186000) + (if b0292 then 0 else 186000) + (if b0293 then 0 else 186000) + (if b0294 then 0 else 186000) + (if b0295 then 0 else 186000) + (if b0296 then 0 else 186000) + (if b0297 then 0 else 186000) + (if b0298 then 0 else 186000) + (if b0299 then 0 else 186000) + (if b0300 then 0 else 186000) + (if b0301 then 0 else 186000) + (if b0302 then 0 else 186000) + (if b0303 then 0 else 186000) + (if b0304 then 0 else 186000) + (if b0305 then 0 else 186000) + (if b0306 then 0 else 186000) + (if b0307 then 0 else 186000) + (if b0308 then 0 else 186000) + (if b0309 then 0 else 186000) + (if b0310 then 0 else 186000) + (if b0311 then 0 else 186000) + (if b0312 then 0 else 186000) + (if b0313 then 0 else 186000) + (if b0314 then 0 else 186000) + (if b0315 then 0 else 186000) + (if b0316 then 0 else 186000) + (if b0317 then 0 else 186000) + (if b0318 then 0 else 186000) + (if b0319 then 0 else 186000) + (if b0320 then 0 else 186000) + (if b0321 then 0 else 186000) + (if b0322 then 0 else 186000) + (if b0323 then 0 else 186000) + (if b0324 then 0 else 186000) + (if b0325 then 0 else 186000) + (if b0326 then 0 else 186000) + (if b0327 then 0 else 186000) + (if b0328 then 0 else 186000) + (if b0329 then 0 else 186000) + (if b0330 then 0 else 186000) + (if b0331 then 0 else 186000) + (if b0332 then 0 else 186000) + (if b0333 then 0 else 186000) + (if b0334 then 0 else 186000) + (if b0335 then 0 else 186000) + (if b0336 then 0 else 186000) + (if b0337 then 0 else 186000) + (if b0338 then 0 else 186000) + (if b0339 then 0 else 186000) + (if b0340 then 0 else 186000) + (if b0341 then 0 else 186000) + (if b0376 then 0 else 186000) + (if b0377 then 0 else 186000) + (if b0378 then 0 else 186000) + (if b0379 then 0 else 186000) + (if b0380 then 0 else 186000) + (if b0381 then 0 else 186000) + (if b0382 then 0 else 186000) + (if b0383 then 0 else 186000) + (if b0384 then 0 else 186000) + (if b0385 then 0 else 186000) + (if b0386 then 0 else 186000) + (if b0387 then 0 else 186000) + (if b0388 then 0 else 186000) + (if b0389 then 0 else 186000) + (if b0390 then 0 else 186000) + (if b0422 then 0 else 186000) + (if b0423 then 0 else 186000) + (if b0424 then 0 else 186000) + (if b0425 then 0 else 186000) + (if b0426 then 0 else 186000) + (if b0427 then 0 else 186000) + (if b0428 then 0 else 186000) + (if b0429 then 0 else 186000) + (if b0430 then 0 else 186000) + (if b0431 then 0 else 186000) + (if b0432 then 0 else 186000) + (if b0433 then 0 else 186000) + (if b0434 then 0 else 186000) + (if b0435 then 0 else 186000) + (if b0436 then 0 else 186000) + (if b0437 then 0 else 186000) + (if b0438 then 0 else 186000) + (if b0439 then 0 else 186000) + (if b0440 then 0 else 186000) + (if b0441 then 0 else 186000) + (if b0442 then 0 else 186000) + (if b0443 then 0 else 186000) + (if b0444 then 0 else 186000) + (if b0445 then 0 else 186000) + (if b0446 then 0 else 186000) + (if b0447 then 0 else 186000) + (if b0448 then 0 else 186000) + (if b0449 then 0 else 186000) + (if b0450 then 0 else 186000) + (if b0451 then 0 else 186000) + (if b0452 then 0 else 186000) + (if b0453 then 0 else 186000) + (if b0454 then 0 else 186000) + (if b0455 then 0 else 186000) + (if b0456 then 0 else 186000) + (if b0457 then 0 else 186000) + (if b0458 then 0 else 186000) + (if b0459 then 0 else 186000) + (if b0460 then 0 else 186000) + (if b0461 then 0 else 186000) + (if b0462 then 0 else 186000) + (if b0463 then 0 else 186000) + (if b0464 then 0 else 186000) + (if b0465 then 0 else 186000) < 441
}
Prover Time taken = 8.389277
Added Horn clause: 11 && 15 && 0 && 0 && 14 => 16
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/linear-algebra/kernels/3mm/kernel3.bpl.ice2.bpl
Total learner time was 00:00:00.1252870
Verifying $kernel3: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool, b0228: bool, b0229: bool, b0230: bool, b0231: bool, b0232: bool, b0233: bool, b0234: bool, b0235: bool, b0236: bool, b0237: bool, b0238: bool, b0239: bool, b0240: bool, b0241: bool, b0242: bool, b0243: bool, b0244: bool, b0245: bool, b0246: bool, b0247: bool, b0248: bool, b0249: bool, b0250: bool, b0251: bool, b0252: bool, b0253: bool, b0254: bool, b0255: bool, b0256: bool, b0257: bool, b0258: bool, b0259: bool, b0260: bool, b0261: bool, b0262: bool, b0263: bool, b0264: bool, b0265: bool, b0266: bool, b0267: bool, b0268: bool, b0269: bool, b0270: bool, b0271: bool, b0272: bool, b0273: bool, b0274: bool, b0275: bool, b0276: bool, b0277: bool, b0278: bool, b0279: bool, b0280: bool, b0281: bool, b0282: bool, b0283: bool, b0284: bool, b0285: bool, b0286: bool, b0287: bool, b0288: bool, b0289: bool, b0290: bool, b0291: bool, b0292: bool, b0293: bool, b0294: bool, b0295: bool, b0296: bool, b0297: bool, b0298: bool, b0299: bool, b0300: bool, b0301: bool, b0302: bool, b0303: bool, b0304: bool, b0305: bool, b0306: bool, b0307: bool, b0308: bool, b0309: bool, b0310: bool, b0311: bool, b0312: bool, b0313: bool, b0314: bool, b0315: bool, b0316: bool, b0317: bool, b0318: bool, b0319: bool, b0320: bool, b0321: bool, b0322: bool, b0323: bool, b0324: bool, b0325: bool, b0326: bool, b0327: bool, b0328: bool, b0329: bool, b0330: bool, b0331: bool, b0332: bool, b0333: bool, b0334: bool, b0335: bool, b0336: bool, b0337: bool, b0338: bool, b0339: bool, b0340: bool, b0341: bool, b0342: bool, b0343: bool, b0344: bool, b0345: bool, b0346: bool, b0347: bool, b0348: bool, b0349: bool, b0350: bool, b0351: bool, b0352: bool, b0353: bool, b0354: bool, b0355: bool, b0356: bool, b0357: bool, b0358: bool, b0359: bool, b0360: bool, b0361: bool, b0362: bool, b0363: bool, b0364: bool, b0365: bool, b0366: bool, b0367: bool, b0368: bool, b0369: bool, b0370: bool, b0371: bool, b0372: bool, b0373: bool, b0374: bool, b0375: bool, b0376: bool, b0377: bool, b0378: bool, b0379: bool, b0380: bool, b0381: bool, b0382: bool, b0383: bool, b0384: bool, b0385: bool, b0386: bool, b0387: bool, b0388: bool, b0389: bool, b0390: bool, b0391: bool, b0392: bool, b0393: bool, b0394: bool, b0395: bool, b0396: bool, b0397: bool, b0398: bool, b0399: bool, b0400: bool, b0401: bool, b0402: bool, b0403: bool, b0404: bool, b0405: bool, b0406: bool, b0407: bool, b0408: bool, b0409: bool, b0410: bool, b0411: bool, b0412: bool, b0413: bool, b0414: bool, b0415: bool, b0416: bool, b0417: bool, b0418: bool, b0419: bool, b0420: bool, b0421: bool, b0422: bool, b0423: bool, b0424: bool, b0425: bool, b0426: bool, b0427: bool, b0428: bool, b0429: bool, b0430: bool, b0431: bool, b0432: bool, b0433: bool, b0434: bool, b0435: bool, b0436: bool, b0437: bool, b0438: bool, b0439: bool, b0440: bool, b0441: bool, b0442: bool, b0443: bool, b0444: bool, b0445: bool, b0446: bool, b0447: bool, b0448: bool, b0449: bool, b0450: bool, b0451: bool, b0452: bool, b0453: bool, b0454: bool, b0455: bool, b0456: bool, b0457: bool, b0458: bool, b0459: bool, b0460: bool, b0461: bool, b0462: bool, b0463: bool, b0464: bool, b0465: bool) : bool
{
  0 + (if b0000 then 0 else 186000) + (if b0001 then 0 else 186000) + (if b0002 then 0 else 186000) + (if b0003 then 0 else 186000) + (if b0004 then 0 else 186000) + (if b0005 then 0 else 186000) + (if b0006 then 0 else 186000) + (if b0007 then 0 else 186000) + (if b0008 then 0 else 186000) + (if b0009 then 0 else 186000) + (if b0010 then 0 else 186000) + (if b0011 then 0 else 186000) + (if b0012 then 0 else 186000) + (if b0013 then 0 else 186000) + (if b0014 then 0 else 186000) + (if b0015 then 0 else 186000) + (if b0016 then 0 else 186000) + (if b0017 then 0 else 186000) + (if b0018 then 0 else 186000) + (if b0019 then 0 else 186000) + (if b0020 then 0 else 186000) + (if b0021 then 0 else 186000) + (if b0022 then 0 else 186000) + (if b0023 then 0 else 186000) + (if b0024 then 0 else 186000) + (if b0025 then 0 else 186000) + (if b0026 then 0 else 186000) + (if b0027 then 0 else 186000) + (if b0028 then 0 else 186000) + (if b0029 then 0 else 186000) + (if b0030 then 0 else 186000) + (if b0031 then 0 else 186000) + (if b0032 then 0 else 186000) + (if b0033 then 0 else 186000) + (if b0034 then 0 else 186000) + (if b0035 then 0 else 186000) + (if b0036 then 0 else 186000) + (if b0037 then 0 else 186000) + (if b0038 then 0 else 186000) + (if b0039 then 0 else 186000) + (if b0040 then 0 else 186000) + (if b0041 then 0 else 186000) + (if b0042 then 0 else 186000) + (if b0043 then 0 else 186000) + (if b0044 then 0 else 186000) + (if b0045 then 0 else 186000) + (if b0046 then 0 else 186000) + (if b0047 then 0 else 186000) + (if b0048 then 0 else 186000) + (if b0049 then 0 else 186000) + (if b0050 then 0 else 186000) + (if b0051 then 0 else 186000) + (if b0052 then 0 else 186000) + (if b0053 then 0 else 186000) + (if b0054 then 0 else 186000) + (if b0055 then 0 else 186000) + (if b0056 then 0 else 186000) + (if b0057 then 0 else 186000) + (if b0058 then 0 else 186000) + (if b0059 then 0 else 186000) + (if b0060 then 0 else 186000) + (if b0061 then 0 else 186000) + (if b0062 then 0 else 186000) + (if b0063 then 0 else 186000) + (if b0064 then 0 else 186000) + (if b0065 then 0 else 186000) + (if b0066 then 0 else 186000) + (if b0067 then 0 else 186000) + (if b0068 then 0 else 186000) + (if b0069 then 0 else 186000) + (if b0070 then 0 else 186000) + (if b0071 then 0 else 186000) + (if b0072 then 0 else 186000) + (if b0073 then 0 else 186000) + (if b0074 then 0 else 186000) + (if b0075 then 0 else 186000) + (if b0076 then 0 else 186000) + (if b0077 then 0 else 186000) + (if b0078 then 0 else 186000) + (if b0079 then 0 else 186000) + (if b0080 then 0 else 186000) + (if b0081 then 0 else 186000) + (if b0082 then 0 else 186000) + (if b0083 then 0 else 186000) + (if b0084 then 0 else 186000) + (if b0085 then 0 else 186000) + (if b0086 then 0 else 186000) + (if b0087 then 0 else 186000) + (if b0088 then 0 else 186000) + (if b0089 then 0 else 186000) + (if b0090 then 0 else 186000) + (if b0091 then 0 else 186000) + (if b0092 then 0 else 186000) + (if b0093 then 0 else 186000) + (if b0094 then 0 else 186000) + (if b0095 then 0 else 186000) + (if b0096 then 0 else 186000) + (if b0097 then 0 else 186000) + (if b0098 then 0 else 186000) + (if b0099 then 0 else 186000) + (if b0100 then 0 else 186000) + (if b0101 then 0 else 186000) + (if b0102 then 0 else 186000) + (if b0103 then 0 else 186000) + (if b0104 then 0 else 186000) + (if b0105 then 0 else 186000) + (if b0106 then 0 else 186000) + (if b0107 then 0 else 186000) + (if b0108 then 0 else 186000) + (if b0109 then 0 else 186000) + (if b0110 then 0 else 186000) + (if b0111 then 0 else 186000) + (if b0112 then 0 else 186000) + (if b0113 then 0 else 186000) + (if b0114 then 0 else 186000) + (if b0115 then 0 else 186000) + (if b0116 then 0 else 186000) + (if b0118 then 0 else 186000) + (if b0120 then 0 else 186000) + (if b0121 then 0 else 186000) + (if b0122 then 0 else 186000) + (if b0123 then 0 else 186000) + (if b0124 then 0 else 186000) + (if b0125 then 0 else 186000) + (if b0126 then 0 else 186000) + (if b0127 then 0 else 186000) + (if b0128 then 0 else 186000) + (if b0129 then 0 else 186000) + (if b0130 then 0 else 186000) + (if b0131 then 0 else 186000) + (if b0132 then 0 else 186000) + (if b0133 then 0 else 186000) + (if b0134 then 0 else 186000) + (if b0135 then 0 else 186000) + (if b0136 then 0 else 186000) + (if b0137 then 0 else 186000) + (if b0138 then 0 else 186000) + (if b0139 then 0 else 186000) + (if b0140 then 0 else 186000) + (if b0141 then 0 else 186000) + (if b0142 then 0 else 186000) + (if b0143 then 0 else 186000) + (if b0144 then 0 else 186000) + (if b0145 then 0 else 186000) + (if b0146 then 0 else 186000) + (if b0147 then 0 else 186000) + (if b0148 then 0 else 186000) + (if b0149 then 0 else 186000) + (if b0150 then 0 else 186000) + (if b0151 then 0 else 186000) + (if b0152 then 0 else 186000) + (if b0153 then 0 else 186000) + (if b0154 then 0 else 186000) + (if b0155 then 0 else 186000) + (if b0156 then 0 else 186000) + (if b0157 then 0 else 186000) + (if b0158 then 0 else 186000) + (if b0159 then 0 else 186000) + (if b0160 then 0 else 186000) + (if b0161 then 0 else 186000) + (if b0162 then 0 else 186000) + (if b0163 then 0 else 186000) + (if b0164 then 0 else 186000) + (if b0165 then 0 else 186000) + (if b0166 then 0 else 186000) + (if b0167 then 0 else 186000) + (if b0168 then 0 else 186000) + (if b0169 then 0 else 186000) + (if b0170 then 0 else 186000) + (if b0171 then 0 else 186000) + (if b0172 then 0 else 186000) + (if b0173 then 0 else 186000) + (if b0174 then 0 else 186000) + (if b0175 then 0 else 186000) + (if b0176 then 0 else 186000) + (if b0177 then 0 else 186000) + (if b0178 then 0 else 186000) + (if b0179 then 0 else 186000) + (if b0180 then 0 else 186000) + (if b0181 then 0 else 186000) + (if b0182 then 0 else 186000) + (if b0183 then 0 else 186000) + (if b0184 then 0 else 186000) + (if b0185 then 0 else 186000) + (if b0186 then 0 else 186000) + (if b0187 then 0 else 186000) + (if b0188 then 0 else 186000) + (if b0189 then 0 else 186000) + (if b0190 then 0 else 186000) + (if b0191 then 0 else 186000) + (if b0192 then 0 else 186000) + (if b0193 then 0 else 186000) + (if b0194 then 0 else 186000) + (if b0195 then 0 else 186000) + (if b0196 then 0 else 186000) + (if b0197 then 0 else 186000) + (if b0198 then 0 else 186000) + (if b0199 then 0 else 186000) + (if b0200 then 0 else 186000) + (if b0201 then 0 else 186000) + (if b0202 then 0 else 186000) + (if b0203 then 0 else 186000) + (if b0204 then 0 else 186000) + (if b0205 then 0 else 186000) + (if b0206 then 0 else 186000) + (if b0207 then 0 else 186000) + (if b0208 then 0 else 186000) + (if b0209 then 0 else 186000) + (if b0210 then 0 else 186000) + (if b0211 then 0 else 186000) + (if b0212 then 0 else 186000) + (if b0213 then 0 else 186000) + (if b0214 then 0 else 186000) + (if b0215 then 0 else 186000) + (if b0216 then 0 else 186000) + (if b0217 then 0 else 186000) + (if b0218 then 0 else 186000) + (if b0219 then 0 else 186000) + (if b0220 then 0 else 186000) + (if b0221 then 0 else 186000) + (if b0222 then 0 else 186000) + (if b0223 then 0 else 186000) + (if b0224 then 0 else 186000) + (if b0225 then 0 else 186000) + (if b0226 then 0 else 186000) + (if b0227 then 0 else 186000) + (if b0228 then 0 else 186000) + (if b0229 then 0 else 186000) + (if b0230 then 0 else 186000) + (if b0231 then 0 else 186000) + (if b0232 then 0 else 186000) + (if b0235 then 0 else 186000) + (if b0237 then 0 else 186000) + (if b0238 then 0 else 186000) + (if b0239 then 0 else 186000) + (if b0240 then 0 else 186000) + (if b0241 then 0 else 186000) + (if b0242 then 0 else 186000) + (if b0243 then 0 else 186000) + (if b0244 then 0 else 186000) + (if b0245 then 0 else 186000) + (if b0246 then 0 else 186000) + (if b0247 then 0 else 186000) + (if b0248 then 0 else 186000) + (if b0249 then 0 else 186000) + (if b0250 then 0 else 186000) + (if b0251 then 0 else 186000) + (if b0252 then 0 else 186000) + (if b0253 then 0 else 186000) + (if b0254 then 0 else 186000) + (if b0255 then 0 else 186000) + (if b0256 then 0 else 186000) + (if b0257 then 0 else 186000) + (if b0258 then 0 else 186000) + (if b0259 then 0 else 186000) + (if b0260 then 0 else 186000) + (if b0261 then 0 else 186000) + (if b0262 then 0 else 186000) + (if b0263 then 0 else 186000) + (if b0264 then 0 else 186000) + (if b0265 then 0 else 186000) + (if b0266 then 0 else 186000) + (if b0267 then 0 else 186000) + (if b0268 then 0 else 186000) + (if b0269 then 0 else 186000) + (if b0270 then 0 else 186000) + (if b0271 then 0 else 186000) + (if b0272 then 0 else 186000) + (if b0273 then 0 else 186000) + (if b0274 then 0 else 186000) + (if b0275 then 0 else 186000) + (if b0276 then 0 else 186000) + (if b0277 then 0 else 186000) + (if b0278 then 0 else 186000) + (if b0279 then 0 else 186000) + (if b0280 then 0 else 186000) + (if b0281 then 0 else 186000) + (if b0282 then 0 else 186000) + (if b0283 then 0 else 186000) + (if b0284 then 0 else 186000) + (if b0285 then 0 else 186000) + (if b0286 then 0 else 186000) + (if b0287 then 0 else 186000) + (if b0288 then 0 else 186000) + (if b0289 then 0 else 186000) + (if b0290 then 0 else 186000) + (if b0291 then 0 else 186000) + (if b0292 then 0 else 186000) + (if b0293 then 0 else 186000) + (if b0294 then 0 else 186000) + (if b0295 then 0 else 186000) + (if b0296 then 0 else 186000) + (if b0297 then 0 else 186000) + (if b0298 then 0 else 186000) + (if b0299 then 0 else 186000) + (if b0300 then 0 else 186000) + (if b0301 then 0 else 186000) + (if b0302 then 0 else 186000) + (if b0303 then 0 else 186000) + (if b0304 then 0 else 186000) + (if b0305 then 0 else 186000) + (if b0306 then 0 else 186000) + (if b0307 then 0 else 186000) + (if b0308 then 0 else 186000) + (if b0309 then 0 else 186000) + (if b0310 then 0 else 186000) + (if b0311 then 0 else 186000) + (if b0312 then 0 else 186000) + (if b0313 then 0 else 186000) + (if b0314 then 0 else 186000) + (if b0315 then 0 else 186000) + (if b0316 then 0 else 186000) + (if b0317 then 0 else 186000) + (if b0318 then 0 else 186000) + (if b0319 then 0 else 186000) + (if b0320 then 0 else 186000) + (if b0321 then 0 else 186000) + (if b0322 then 0 else 186000) + (if b0323 then 0 else 186000) + (if b0324 then 0 else 186000) + (if b0325 then 0 else 186000) + (if b0326 then 0 else 186000) + (if b0327 then 0 else 186000) + (if b0328 then 0 else 186000) + (if b0329 then 0 else 186000) + (if b0330 then 0 else 186000) + (if b0331 then 0 else 186000) + (if b0332 then 0 else 186000) + (if b0333 then 0 else 186000) + (if b0334 then 0 else 186000) + (if b0335 then 0 else 186000) + (if b0336 then 0 else 186000) + (if b0337 then 0 else 186000) + (if b0338 then 0 else 186000) + (if b0339 then 0 else 186000) + (if b0340 then 0 else 186000) + (if b0341 then 0 else 186000) + (if b0376 then 0 else 186000) + (if b0377 then 0 else 186000) + (if b0378 then 0 else 186000) + (if b0379 then 0 else 186000) + (if b0380 then 0 else 186000) + (if b0381 then 0 else 186000) + (if b0382 then 0 else 186000) + (if b0383 then 0 else 186000) + (if b0384 then 0 else 186000) + (if b0385 then 0 else 186000) + (if b0386 then 0 else 186000) + (if b0387 then 0 else 186000) + (if b0388 then 0 else 186000) + (if b0389 then 0 else 186000) + (if b0390 then 0 else 186000) + (if b0422 then 0 else 186000) + (if b0423 then 0 else 186000) + (if b0424 then 0 else 186000) + (if b0425 then 0 else 186000) + (if b0426 then 0 else 186000) + (if b0427 then 0 else 186000) + (if b0428 then 0 else 186000) + (if b0429 then 0 else 186000) + (if b0430 then 0 else 186000) + (if b0431 then 0 else 186000) + (if b0432 then 0 else 186000) + (if b0433 then 0 else 186000) + (if b0434 then 0 else 186000) + (if b0435 then 0 else 186000) + (if b0436 then 0 else 186000) + (if b0437 then 0 else 186000) + (if b0438 then 0 else 186000) + (if b0439 then 0 else 186000) + (if b0440 then 0 else 186000) + (if b0441 then 0 else 186000) + (if b0442 then 0 else 186000) + (if b0443 then 0 else 186000) + (if b0444 then 0 else 186000) + (if b0445 then 0 else 186000) + (if b0446 then 0 else 186000) + (if b0447 then 0 else 186000) + (if b0448 then 0 else 186000) + (if b0449 then 0 else 186000) + (if b0450 then 0 else 186000) + (if b0451 then 0 else 186000) + (if b0452 then 0 else 186000) + (if b0453 then 0 else 186000) + (if b0454 then 0 else 186000) + (if b0455 then 0 else 186000) + (if b0456 then 0 else 186000) + (if b0457 then 0 else 186000) + (if b0458 then 0 else 186000) + (if b0459 then 0 else 186000) + (if b0460 then 0 else 186000) + (if b0461 then 0 else 186000) + (if b0462 then 0 else 186000) + (if b0463 then 0 else 186000) + (if b0464 then 0 else 186000) + (if b0465 then 0 else 186000) < 441
}
Prover Time taken = 10.909975
Added Horn clause: 17 && 18 && 0 && 0 && 19 => 20
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/linear-algebra/kernels/3mm/kernel3.bpl.ice2.bpl
Total learner time was 00:00:00.1305080
Verifying $kernel3: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool, b0228: bool, b0229: bool, b0230: bool, b0231: bool, b0232: bool, b0233: bool, b0234: bool, b0235: bool, b0236: bool, b0237: bool, b0238: bool, b0239: bool, b0240: bool, b0241: bool, b0242: bool, b0243: bool, b0244: bool, b0245: bool, b0246: bool, b0247: bool, b0248: bool, b0249: bool, b0250: bool, b0251: bool, b0252: bool, b0253: bool, b0254: bool, b0255: bool, b0256: bool, b0257: bool, b0258: bool, b0259: bool, b0260: bool, b0261: bool, b0262: bool, b0263: bool, b0264: bool, b0265: bool, b0266: bool, b0267: bool, b0268: bool, b0269: bool, b0270: bool, b0271: bool, b0272: bool, b0273: bool, b0274: bool, b0275: bool, b0276: bool, b0277: bool, b0278: bool, b0279: bool, b0280: bool, b0281: bool, b0282: bool, b0283: bool, b0284: bool, b0285: bool, b0286: bool, b0287: bool, b0288: bool, b0289: bool, b0290: bool, b0291: bool, b0292: bool, b0293: bool, b0294: bool, b0295: bool, b0296: bool, b0297: bool, b0298: bool, b0299: bool, b0300: bool, b0301: bool, b0302: bool, b0303: bool, b0304: bool, b0305: bool, b0306: bool, b0307: bool, b0308: bool, b0309: bool, b0310: bool, b0311: bool, b0312: bool, b0313: bool, b0314: bool, b0315: bool, b0316: bool, b0317: bool, b0318: bool, b0319: bool, b0320: bool, b0321: bool, b0322: bool, b0323: bool, b0324: bool, b0325: bool, b0326: bool, b0327: bool, b0328: bool, b0329: bool, b0330: bool, b0331: bool, b0332: bool, b0333: bool, b0334: bool, b0335: bool, b0336: bool, b0337: bool, b0338: bool, b0339: bool, b0340: bool, b0341: bool, b0342: bool, b0343: bool, b0344: bool, b0345: bool, b0346: bool, b0347: bool, b0348: bool, b0349: bool, b0350: bool, b0351: bool, b0352: bool, b0353: bool, b0354: bool, b0355: bool, b0356: bool, b0357: bool, b0358: bool, b0359: bool, b0360: bool, b0361: bool, b0362: bool, b0363: bool, b0364: bool, b0365: bool, b0366: bool, b0367: bool, b0368: bool, b0369: bool, b0370: bool, b0371: bool, b0372: bool, b0373: bool, b0374: bool, b0375: bool, b0376: bool, b0377: bool, b0378: bool, b0379: bool, b0380: bool, b0381: bool, b0382: bool, b0383: bool, b0384: bool, b0385: bool, b0386: bool, b0387: bool, b0388: bool, b0389: bool, b0390: bool, b0391: bool, b0392: bool, b0393: bool, b0394: bool, b0395: bool, b0396: bool, b0397: bool, b0398: bool, b0399: bool, b0400: bool, b0401: bool, b0402: bool, b0403: bool, b0404: bool, b0405: bool, b0406: bool, b0407: bool, b0408: bool, b0409: bool, b0410: bool, b0411: bool, b0412: bool, b0413: bool, b0414: bool, b0415: bool, b0416: bool, b0417: bool, b0418: bool, b0419: bool, b0420: bool, b0421: bool, b0422: bool, b0423: bool, b0424: bool, b0425: bool, b0426: bool, b0427: bool, b0428: bool, b0429: bool, b0430: bool, b0431: bool, b0432: bool, b0433: bool, b0434: bool, b0435: bool, b0436: bool, b0437: bool, b0438: bool, b0439: bool, b0440: bool, b0441: bool, b0442: bool, b0443: bool, b0444: bool, b0445: bool, b0446: bool, b0447: bool, b0448: bool, b0449: bool, b0450: bool, b0451: bool, b0452: bool, b0453: bool, b0454: bool, b0455: bool, b0456: bool, b0457: bool, b0458: bool, b0459: bool, b0460: bool, b0461: bool, b0462: bool, b0463: bool, b0464: bool, b0465: bool) : bool
{
  0 + (if b0000 then 0 else 186000) + (if b0001 then 0 else 186000) + (if b0002 then 0 else 186000) + (if b0003 then 0 else 186000) + (if b0004 then 0 else 186000) + (if b0005 then 0 else 186000) + (if b0006 then 0 else 186000) + (if b0007 then 0 else 186000) + (if b0008 then 0 else 186000) + (if b0009 then 0 else 186000) + (if b0010 then 0 else 186000) + (if b0011 then 0 else 186000) + (if b0012 then 0 else 186000) + (if b0013 then 0 else 186000) + (if b0014 then 0 else 186000) + (if b0015 then 0 else 186000) + (if b0016 then 0 else 186000) + (if b0017 then 0 else 186000) + (if b0018 then 0 else 186000) + (if b0019 then 0 else 186000) + (if b0020 then 0 else 186000) + (if b0021 then 0 else 186000) + (if b0022 then 0 else 186000) + (if b0023 then 0 else 186000) + (if b0024 then 0 else 186000) + (if b0025 then 0 else 186000) + (if b0026 then 0 else 186000) + (if b0027 then 0 else 186000) + (if b0028 then 0 else 186000) + (if b0029 then 0 else 186000) + (if b0030 then 0 else 186000) + (if b0031 then 0 else 186000) + (if b0032 then 0 else 186000) + (if b0033 then 0 else 186000) + (if b0034 then 0 else 186000) + (if b0035 then 0 else 186000) + (if b0036 then 0 else 186000) + (if b0037 then 0 else 186000) + (if b0038 then 0 else 186000) + (if b0039 then 0 else 186000) + (if b0040 then 0 else 186000) + (if b0041 then 0 else 186000) + (if b0042 then 0 else 186000) + (if b0043 then 0 else 186000) + (if b0044 then 0 else 186000) + (if b0045 then 0 else 186000) + (if b0046 then 0 else 186000) + (if b0047 then 0 else 186000) + (if b0048 then 0 else 186000) + (if b0049 then 0 else 186000) + (if b0050 then 0 else 186000) + (if b0051 then 0 else 186000) + (if b0052 then 0 else 186000) + (if b0053 then 0 else 186000) + (if b0054 then 0 else 186000) + (if b0055 then 0 else 186000) + (if b0056 then 0 else 186000) + (if b0057 then 0 else 186000) + (if b0058 then 0 else 186000) + (if b0059 then 0 else 186000) + (if b0060 then 0 else 186000) + (if b0061 then 0 else 186000) + (if b0062 then 0 else 186000) + (if b0063 then 0 else 186000) + (if b0064 then 0 else 186000) + (if b0065 then 0 else 186000) + (if b0066 then 0 else 186000) + (if b0067 then 0 else 186000) + (if b0068 then 0 else 186000) + (if b0069 then 0 else 186000) + (if b0070 then 0 else 186000) + (if b0071 then 0 else 186000) + (if b0072 then 0 else 186000) + (if b0073 then 0 else 186000) + (if b0074 then 0 else 186000) + (if b0075 then 0 else 186000) + (if b0076 then 0 else 186000) + (if b0077 then 0 else 186000) + (if b0078 then 0 else 186000) + (if b0079 then 0 else 186000) + (if b0080 then 0 else 186000) + (if b0081 then 0 else 186000) + (if b0082 then 0 else 186000) + (if b0083 then 0 else 186000) + (if b0084 then 0 else 186000) + (if b0085 then 0 else 186000) + (if b0086 then 0 else 186000) + (if b0087 then 0 else 186000) + (if b0088 then 0 else 186000) + (if b0089 then 0 else 186000) + (if b0090 then 0 else 186000) + (if b0091 then 0 else 186000) + (if b0092 then 0 else 186000) + (if b0093 then 0 else 186000) + (if b0094 then 0 else 186000) + (if b0095 then 0 else 186000) + (if b0096 then 0 else 186000) + (if b0097 then 0 else 186000) + (if b0098 then 0 else 186000) + (if b0099 then 0 else 186000) + (if b0100 then 0 else 186000) + (if b0101 then 0 else 186000) + (if b0102 then 0 else 186000) + (if b0103 then 0 else 186000) + (if b0104 then 0 else 186000) + (if b0105 then 0 else 186000) + (if b0106 then 0 else 186000) + (if b0107 then 0 else 186000) + (if b0108 then 0 else 186000) + (if b0109 then 0 else 186000) + (if b0110 then 0 else 186000) + (if b0111 then 0 else 186000) + (if b0112 then 0 else 186000) + (if b0113 then 0 else 186000) + (if b0114 then 0 else 186000) + (if b0115 then 0 else 186000) + (if b0116 then 0 else 186000) + (if b0118 then 0 else 186000) + (if b0120 then 0 else 186000) + (if b0121 then 0 else 186000) + (if b0122 then 0 else 186000) + (if b0123 then 0 else 186000) + (if b0124 then 0 else 186000) + (if b0125 then 0 else 186000) + (if b0126 then 0 else 186000) + (if b0127 then 0 else 186000) + (if b0128 then 0 else 186000) + (if b0129 then 0 else 186000) + (if b0130 then 0 else 186000) + (if b0131 then 0 else 186000) + (if b0132 then 0 else 186000) + (if b0133 then 0 else 186000) + (if b0134 then 0 else 186000) + (if b0135 then 0 else 186000) + (if b0136 then 0 else 186000) + (if b0137 then 0 else 186000) + (if b0138 then 0 else 186000) + (if b0139 then 0 else 186000) + (if b0140 then 0 else 186000) + (if b0141 then 0 else 186000) + (if b0142 then 0 else 186000) + (if b0143 then 0 else 186000) + (if b0144 then 0 else 186000) + (if b0145 then 0 else 186000) + (if b0146 then 0 else 186000) + (if b0147 then 0 else 186000) + (if b0148 then 0 else 186000) + (if b0149 then 0 else 186000) + (if b0150 then 0 else 186000) + (if b0151 then 0 else 186000) + (if b0152 then 0 else 186000) + (if b0153 then 0 else 186000) + (if b0154 then 0 else 186000) + (if b0155 then 0 else 186000) + (if b0156 then 0 else 186000) + (if b0157 then 0 else 186000) + (if b0158 then 0 else 186000) + (if b0159 then 0 else 186000) + (if b0160 then 0 else 186000) + (if b0161 then 0 else 186000) + (if b0162 then 0 else 186000) + (if b0163 then 0 else 186000) + (if b0164 then 0 else 186000) + (if b0165 then 0 else 186000) + (if b0166 then 0 else 186000) + (if b0167 then 0 else 186000) + (if b0168 then 0 else 186000) + (if b0169 then 0 else 186000) + (if b0171 then 0 else 186000) + (if b0172 then 0 else 186000) + (if b0173 then 0 else 186000) + (if b0174 then 0 else 186000) + (if b0175 then 0 else 186000) + (if b0176 then 0 else 186000) + (if b0177 then 0 else 186000) + (if b0178 then 0 else 186000) + (if b0179 then 0 else 186000) + (if b0180 then 0 else 186000) + (if b0181 then 0 else 186000) + (if b0182 then 0 else 186000) + (if b0183 then 0 else 186000) + (if b0184 then 0 else 186000) + (if b0185 then 0 else 186000) + (if b0186 then 0 else 186000) + (if b0187 then 0 else 186000) + (if b0188 then 0 else 186000) + (if b0189 then 0 else 186000) + (if b0190 then 0 else 186000) + (if b0191 then 0 else 186000) + (if b0192 then 0 else 186000) + (if b0193 then 0 else 186000) + (if b0194 then 0 else 186000) + (if b0195 then 0 else 186000) + (if b0196 then 0 else 186000) + (if b0197 then 0 else 186000) + (if b0198 then 0 else 186000) + (if b0199 then 0 else 186000) + (if b0200 then 0 else 186000) + (if b0201 then 0 else 186000) + (if b0202 then 0 else 186000) + (if b0203 then 0 else 186000) + (if b0204 then 0 else 186000) + (if b0205 then 0 else 186000) + (if b0206 then 0 else 186000) + (if b0207 then 0 else 186000) + (if b0208 then 0 else 186000) + (if b0209 then 0 else 186000) + (if b0210 then 0 else 186000) + (if b0211 then 0 else 186000) + (if b0212 then 0 else 186000) + (if b0213 then 0 else 186000) + (if b0214 then 0 else 186000) + (if b0215 then 0 else 186000) + (if b0216 then 0 else 186000) + (if b0217 then 0 else 186000) + (if b0218 then 0 else 186000) + (if b0219 then 0 else 186000) + (if b0220 then 0 else 186000) + (if b0221 then 0 else 186000) + (if b0222 then 0 else 186000) + (if b0223 then 0 else 186000) + (if b0224 then 0 else 186000) + (if b0225 then 0 else 186000) + (if b0226 then 0 else 186000) + (if b0227 then 0 else 186000) + (if b0228 then 0 else 186000) + (if b0229 then 0 else 186000) + (if b0230 then 0 else 186000) + (if b0231 then 0 else 186000) + (if b0232 then 0 else 186000) + (if b0235 then 0 else 186000) + (if b0237 then 0 else 186000) + (if b0238 then 0 else 186000) + (if b0239 then 0 else 186000) + (if b0240 then 0 else 186000) + (if b0241 then 0 else 186000) + (if b0242 then 0 else 186000) + (if b0243 then 0 else 186000) + (if b0244 then 0 else 186000) + (if b0245 then 0 else 186000) + (if b0246 then 0 else 186000) + (if b0247 then 0 else 186000) + (if b0248 then 0 else 186000) + (if b0249 then 0 else 186000) + (if b0250 then 0 else 186000) + (if b0251 then 0 else 186000) + (if b0252 then 0 else 186000) + (if b0253 then 0 else 186000) + (if b0254 then 0 else 186000) + (if b0255 then 0 else 186000) + (if b0256 then 0 else 186000) + (if b0257 then 0 else 186000) + (if b0258 then 0 else 186000) + (if b0259 then 0 else 186000) + (if b0260 then 0 else 186000) + (if b0261 then 0 else 186000) + (if b0262 then 0 else 186000) + (if b0263 then 0 else 186000) + (if b0264 then 0 else 186000) + (if b0265 then 0 else 186000) + (if b0266 then 0 else 186000) + (if b0267 then 0 else 186000) + (if b0268 then 0 else 186000) + (if b0269 then 0 else 186000) + (if b0270 then 0 else 186000) + (if b0271 then 0 else 186000) + (if b0272 then 0 else 186000) + (if b0273 then 0 else 186000) + (if b0274 then 0 else 186000) + (if b0275 then 0 else 186000) + (if b0276 then 0 else 186000) + (if b0277 then 0 else 186000) + (if b0278 then 0 else 186000) + (if b0279 then 0 else 186000) + (if b0280 then 0 else 186000) + (if b0281 then 0 else 186000) + (if b0282 then 0 else 186000) + (if b0283 then 0 else 186000) + (if b0284 then 0 else 186000) + (if b0285 then 0 else 186000) + (if b0286 then 0 else 186000) + (if b0287 then 0 else 186000) + (if b0288 then 0 else 186000) + (if b0289 then 0 else 186000) + (if b0290 then 0 else 186000) + (if b0291 then 0 else 186000) + (if b0292 then 0 else 186000) + (if b0293 then 0 else 186000) + (if b0294 then 0 else 186000) + (if b0295 then 0 else 186000) + (if b0296 then 0 else 186000) + (if b0297 then 0 else 186000) + (if b0298 then 0 else 186000) + (if b0299 then 0 else 186000) + (if b0300 then 0 else 186000) + (if b0301 then 0 else 186000) + (if b0302 then 0 else 186000) + (if b0303 then 0 else 186000) + (if b0304 then 0 else 186000) + (if b0305 then 0 else 186000) + (if b0306 then 0 else 186000) + (if b0307 then 0 else 186000) + (if b0308 then 0 else 186000) + (if b0309 then 0 else 186000) + (if b0310 then 0 else 186000) + (if b0311 then 0 else 186000) + (if b0312 then 0 else 186000) + (if b0313 then 0 else 186000) + (if b0314 then 0 else 186000) + (if b0315 then 0 else 186000) + (if b0316 then 0 else 186000) + (if b0317 then 0 else 186000) + (if b0318 then 0 else 186000) + (if b0319 then 0 else 186000) + (if b0320 then 0 else 186000) + (if b0321 then 0 else 186000) + (if b0322 then 0 else 186000) + (if b0323 then 0 else 186000) + (if b0324 then 0 else 186000) + (if b0325 then 0 else 186000) + (if b0326 then 0 else 186000) + (if b0327 then 0 else 186000) + (if b0328 then 0 else 186000) + (if b0329 then 0 else 186000) + (if b0330 then 0 else 186000) + (if b0331 then 0 else 186000) + (if b0332 then 0 else 186000) + (if b0333 then 0 else 186000) + (if b0334 then 0 else 186000) + (if b0335 then 0 else 186000) + (if b0336 then 0 else 186000) + (if b0337 then 0 else 186000) + (if b0338 then 0 else 186000) + (if b0339 then 0 else 186000) + (if b0340 then 0 else 186000) + (if b0341 then 0 else 186000) + (if b0376 then 0 else 186000) + (if b0377 then 0 else 186000) + (if b0378 then 0 else 186000) + (if b0379 then 0 else 186000) + (if b0380 then 0 else 186000) + (if b0381 then 0 else 186000) + (if b0382 then 0 else 186000) + (if b0383 then 0 else 186000) + (if b0384 then 0 else 186000) + (if b0385 then 0 else 186000) + (if b0386 then 0 else 186000) + (if b0387 then 0 else 186000) + (if b0388 then 0 else 186000) + (if b0389 then 0 else 186000) + (if b0390 then 0 else 186000) + (if b0422 then 0 else 186000) + (if b0423 then 0 else 186000) + (if b0424 then 0 else 186000) + (if b0425 then 0 else 186000) + (if b0426 then 0 else 186000) + (if b0427 then 0 else 186000) + (if b0428 then 0 else 186000) + (if b0429 then 0 else 186000) + (if b0430 then 0 else 186000) + (if b0431 then 0 else 186000) + (if b0432 then 0 else 186000) + (if b0433 then 0 else 186000) + (if b0434 then 0 else 186000) + (if b0435 then 0 else 186000) + (if b0436 then 0 else 186000) + (if b0437 then 0 else 186000) + (if b0438 then 0 else 186000) + (if b0439 then 0 else 186000) + (if b0440 then 0 else 186000) + (if b0441 then 0 else 186000) + (if b0442 then 0 else 186000) + (if b0443 then 0 else 186000) + (if b0444 then 0 else 186000) + (if b0445 then 0 else 186000) + (if b0446 then 0 else 186000) + (if b0447 then 0 else 186000) + (if b0448 then 0 else 186000) + (if b0449 then 0 else 186000) + (if b0450 then 0 else 186000) + (if b0451 then 0 else 186000) + (if b0452 then 0 else 186000) + (if b0453 then 0 else 186000) + (if b0454 then 0 else 186000) + (if b0455 then 0 else 186000) + (if b0456 then 0 else 186000) + (if b0457 then 0 else 186000) + (if b0458 then 0 else 186000) + (if b0459 then 0 else 186000) + (if b0460 then 0 else 186000) + (if b0461 then 0 else 186000) + (if b0462 then 0 else 186000) + (if b0463 then 0 else 186000) + (if b0464 then 0 else 186000) + (if b0465 then 0 else 186000) < 441
}
Prover Time taken = 8.948103
Added Horn clause: 6 && 21 && 0 && 0 && 16 && 0 && 0 => 22
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/linear-algebra/kernels/3mm/kernel3.bpl.ice2.bpl
Total learner time was 00:00:00.1263390
Verifying $kernel3: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool, b0228: bool, b0229: bool, b0230: bool, b0231: bool, b0232: bool, b0233: bool, b0234: bool, b0235: bool, b0236: bool, b0237: bool, b0238: bool, b0239: bool, b0240: bool, b0241: bool, b0242: bool, b0243: bool, b0244: bool, b0245: bool, b0246: bool, b0247: bool, b0248: bool, b0249: bool, b0250: bool, b0251: bool, b0252: bool, b0253: bool, b0254: bool, b0255: bool, b0256: bool, b0257: bool, b0258: bool, b0259: bool, b0260: bool, b0261: bool, b0262: bool, b0263: bool, b0264: bool, b0265: bool, b0266: bool, b0267: bool, b0268: bool, b0269: bool, b0270: bool, b0271: bool, b0272: bool, b0273: bool, b0274: bool, b0275: bool, b0276: bool, b0277: bool, b0278: bool, b0279: bool, b0280: bool, b0281: bool, b0282: bool, b0283: bool, b0284: bool, b0285: bool, b0286: bool, b0287: bool, b0288: bool, b0289: bool, b0290: bool, b0291: bool, b0292: bool, b0293: bool, b0294: bool, b0295: bool, b0296: bool, b0297: bool, b0298: bool, b0299: bool, b0300: bool, b0301: bool, b0302: bool, b0303: bool, b0304: bool, b0305: bool, b0306: bool, b0307: bool, b0308: bool, b0309: bool, b0310: bool, b0311: bool, b0312: bool, b0313: bool, b0314: bool, b0315: bool, b0316: bool, b0317: bool, b0318: bool, b0319: bool, b0320: bool, b0321: bool, b0322: bool, b0323: bool, b0324: bool, b0325: bool, b0326: bool, b0327: bool, b0328: bool, b0329: bool, b0330: bool, b0331: bool, b0332: bool, b0333: bool, b0334: bool, b0335: bool, b0336: bool, b0337: bool, b0338: bool, b0339: bool, b0340: bool, b0341: bool, b0342: bool, b0343: bool, b0344: bool, b0345: bool, b0346: bool, b0347: bool, b0348: bool, b0349: bool, b0350: bool, b0351: bool, b0352: bool, b0353: bool, b0354: bool, b0355: bool, b0356: bool, b0357: bool, b0358: bool, b0359: bool, b0360: bool, b0361: bool, b0362: bool, b0363: bool, b0364: bool, b0365: bool, b0366: bool, b0367: bool, b0368: bool, b0369: bool, b0370: bool, b0371: bool, b0372: bool, b0373: bool, b0374: bool, b0375: bool, b0376: bool, b0377: bool, b0378: bool, b0379: bool, b0380: bool, b0381: bool, b0382: bool, b0383: bool, b0384: bool, b0385: bool, b0386: bool, b0387: bool, b0388: bool, b0389: bool, b0390: bool, b0391: bool, b0392: bool, b0393: bool, b0394: bool, b0395: bool, b0396: bool, b0397: bool, b0398: bool, b0399: bool, b0400: bool, b0401: bool, b0402: bool, b0403: bool, b0404: bool, b0405: bool, b0406: bool, b0407: bool, b0408: bool, b0409: bool, b0410: bool, b0411: bool, b0412: bool, b0413: bool, b0414: bool, b0415: bool, b0416: bool, b0417: bool, b0418: bool, b0419: bool, b0420: bool, b0421: bool, b0422: bool, b0423: bool, b0424: bool, b0425: bool, b0426: bool, b0427: bool, b0428: bool, b0429: bool, b0430: bool, b0431: bool, b0432: bool, b0433: bool, b0434: bool, b0435: bool, b0436: bool, b0437: bool, b0438: bool, b0439: bool, b0440: bool, b0441: bool, b0442: bool, b0443: bool, b0444: bool, b0445: bool, b0446: bool, b0447: bool, b0448: bool, b0449: bool, b0450: bool, b0451: bool, b0452: bool, b0453: bool, b0454: bool, b0455: bool, b0456: bool, b0457: bool, b0458: bool, b0459: bool, b0460: bool, b0461: bool, b0462: bool, b0463: bool, b0464: bool, b0465: bool) : bool
{
  0 + (if b0000 then 0 else 186000) + (if b0001 then 0 else 186000) + (if b0002 then 0 else 186000) + (if b0003 then 0 else 186000) + (if b0004 then 0 else 186000) + (if b0005 then 0 else 186000) + (if b0006 then 0 else 186000) + (if b0007 then 0 else 186000) + (if b0008 then 0 else 186000) + (if b0009 then 0 else 186000) + (if b0010 then 0 else 186000) + (if b0011 then 0 else 186000) + (if b0012 then 0 else 186000) + (if b0013 then 0 else 186000) + (if b0014 then 0 else 186000) + (if b0015 then 0 else 186000) + (if b0016 then 0 else 186000) + (if b0017 then 0 else 186000) + (if b0018 then 0 else 186000) + (if b0019 then 0 else 186000) + (if b0020 then 0 else 186000) + (if b0021 then 0 else 186000) + (if b0022 then 0 else 186000) + (if b0023 then 0 else 186000) + (if b0024 then 0 else 186000) + (if b0025 then 0 else 186000) + (if b0026 then 0 else 186000) + (if b0027 then 0 else 186000) + (if b0028 then 0 else 186000) + (if b0029 then 0 else 186000) + (if b0030 then 0 else 186000) + (if b0031 then 0 else 186000) + (if b0032 then 0 else 186000) + (if b0033 then 0 else 186000) + (if b0034 then 0 else 186000) + (if b0035 then 0 else 186000) + (if b0036 then 0 else 186000) + (if b0037 then 0 else 186000) + (if b0038 then 0 else 186000) + (if b0039 then 0 else 186000) + (if b0040 then 0 else 186000) + (if b0041 then 0 else 186000) + (if b0042 then 0 else 186000) + (if b0043 then 0 else 186000) + (if b0044 then 0 else 186000) + (if b0045 then 0 else 186000) + (if b0046 then 0 else 186000) + (if b0047 then 0 else 186000) + (if b0048 then 0 else 186000) + (if b0049 then 0 else 186000) + (if b0050 then 0 else 186000) + (if b0051 then 0 else 186000) + (if b0052 then 0 else 186000) + (if b0053 then 0 else 186000) + (if b0054 then 0 else 186000) + (if b0055 then 0 else 186000) + (if b0056 then 0 else 186000) + (if b0057 then 0 else 186000) + (if b0058 then 0 else 186000) + (if b0059 then 0 else 186000) + (if b0060 then 0 else 186000) + (if b0061 then 0 else 186000) + (if b0062 then 0 else 186000) + (if b0063 then 0 else 186000) + (if b0064 then 0 else 186000) + (if b0065 then 0 else 186000) + (if b0066 then 0 else 186000) + (if b0067 then 0 else 186000) + (if b0068 then 0 else 186000) + (if b0069 then 0 else 186000) + (if b0070 then 0 else 186000) + (if b0071 then 0 else 186000) + (if b0072 then 0 else 186000) + (if b0073 then 0 else 186000) + (if b0074 then 0 else 186000) + (if b0075 then 0 else 186000) + (if b0076 then 0 else 186000) + (if b0077 then 0 else 186000) + (if b0078 then 0 else 186000) + (if b0079 then 0 else 186000) + (if b0080 then 0 else 186000) + (if b0081 then 0 else 186000) + (if b0082 then 0 else 186000) + (if b0083 then 0 else 186000) + (if b0084 then 0 else 186000) + (if b0085 then 0 else 186000) + (if b0086 then 0 else 186000) + (if b0087 then 0 else 186000) + (if b0088 then 0 else 186000) + (if b0089 then 0 else 186000) + (if b0090 then 0 else 186000) + (if b0091 then 0 else 186000) + (if b0092 then 0 else 186000) + (if b0093 then 0 else 186000) + (if b0094 then 0 else 186000) + (if b0095 then 0 else 186000) + (if b0096 then 0 else 186000) + (if b0097 then 0 else 186000) + (if b0098 then 0 else 186000) + (if b0099 then 0 else 186000) + (if b0100 then 0 else 186000) + (if b0101 then 0 else 186000) + (if b0102 then 0 else 186000) + (if b0103 then 0 else 186000) + (if b0104 then 0 else 186000) + (if b0105 then 0 else 186000) + (if b0106 then 0 else 186000) + (if b0107 then 0 else 186000) + (if b0108 then 0 else 186000) + (if b0109 then 0 else 186000) + (if b0110 then 0 else 186000) + (if b0111 then 0 else 186000) + (if b0112 then 0 else 186000) + (if b0113 then 0 else 186000) + (if b0114 then 0 else 186000) + (if b0115 then 0 else 186000) + (if b0116 then 0 else 186000) + (if b0118 then 0 else 186000) + (if b0120 then 0 else 186000) + (if b0121 then 0 else 186000) + (if b0122 then 0 else 186000) + (if b0123 then 0 else 186000) + (if b0124 then 0 else 186000) + (if b0125 then 0 else 186000) + (if b0126 then 0 else 186000) + (if b0127 then 0 else 186000) + (if b0128 then 0 else 186000) + (if b0129 then 0 else 186000) + (if b0130 then 0 else 186000) + (if b0131 then 0 else 186000) + (if b0132 then 0 else 186000) + (if b0133 then 0 else 186000) + (if b0134 then 0 else 186000) + (if b0135 then 0 else 186000) + (if b0136 then 0 else 186000) + (if b0137 then 0 else 186000) + (if b0138 then 0 else 186000) + (if b0139 then 0 else 186000) + (if b0140 then 0 else 186000) + (if b0141 then 0 else 186000) + (if b0142 then 0 else 186000) + (if b0143 then 0 else 186000) + (if b0144 then 0 else 186000) + (if b0145 then 0 else 186000) + (if b0146 then 0 else 186000) + (if b0147 then 0 else 186000) + (if b0148 then 0 else 186000) + (if b0149 then 0 else 186000) + (if b0150 then 0 else 186000) + (if b0151 then 0 else 186000) + (if b0152 then 0 else 186000) + (if b0153 then 0 else 186000) + (if b0154 then 0 else 186000) + (if b0155 then 0 else 186000) + (if b0156 then 0 else 186000) + (if b0157 then 0 else 186000) + (if b0158 then 0 else 186000) + (if b0159 then 0 else 186000) + (if b0160 then 0 else 186000) + (if b0161 then 0 else 186000) + (if b0162 then 0 else 186000) + (if b0163 then 0 else 186000) + (if b0164 then 0 else 186000) + (if b0165 then 0 else 186000) + (if b0166 then 0 else 186000) + (if b0167 then 0 else 186000) + (if b0168 then 0 else 186000) + (if b0169 then 0 else 186000) + (if b0171 then 0 else 186000) + (if b0172 then 0 else 186000) + (if b0173 then 0 else 186000) + (if b0174 then 0 else 186000) + (if b0175 then 0 else 186000) + (if b0176 then 0 else 186000) + (if b0177 then 0 else 186000) + (if b0178 then 0 else 186000) + (if b0179 then 0 else 186000) + (if b0180 then 0 else 186000) + (if b0181 then 0 else 186000) + (if b0182 then 0 else 186000) + (if b0183 then 0 else 186000) + (if b0184 then 0 else 186000) + (if b0185 then 0 else 186000) + (if b0186 then 0 else 186000) + (if b0187 then 0 else 186000) + (if b0188 then 0 else 186000) + (if b0189 then 0 else 186000) + (if b0190 then 0 else 186000) + (if b0191 then 0 else 186000) + (if b0192 then 0 else 186000) + (if b0193 then 0 else 186000) + (if b0194 then 0 else 186000) + (if b0195 then 0 else 186000) + (if b0196 then 0 else 186000) + (if b0197 then 0 else 186000) + (if b0198 then 0 else 186000) + (if b0199 then 0 else 186000) + (if b0200 then 0 else 186000) + (if b0201 then 0 else 186000) + (if b0202 then 0 else 186000) + (if b0203 then 0 else 186000) + (if b0205 then 0 else 186000) + (if b0206 then 0 else 186000) + (if b0207 then 0 else 186000) + (if b0208 then 0 else 186000) + (if b0209 then 0 else 186000) + (if b0210 then 0 else 186000) + (if b0211 then 0 else 186000) + (if b0212 then 0 else 186000) + (if b0213 then 0 else 186000) + (if b0214 then 0 else 186000) + (if b0215 then 0 else 186000) + (if b0216 then 0 else 186000) + (if b0217 then 0 else 186000) + (if b0218 then 0 else 186000) + (if b0219 then 0 else 186000) + (if b0220 then 0 else 186000) + (if b0221 then 0 else 186000) + (if b0222 then 0 else 186000) + (if b0223 then 0 else 186000) + (if b0224 then 0 else 186000) + (if b0225 then 0 else 186000) + (if b0226 then 0 else 186000) + (if b0227 then 0 else 186000) + (if b0228 then 0 else 186000) + (if b0229 then 0 else 186000) + (if b0230 then 0 else 186000) + (if b0231 then 0 else 186000) + (if b0232 then 0 else 186000) + (if b0235 then 0 else 186000) + (if b0237 then 0 else 186000) + (if b0238 then 0 else 186000) + (if b0239 then 0 else 186000) + (if b0240 then 0 else 186000) + (if b0241 then 0 else 186000) + (if b0242 then 0 else 186000) + (if b0243 then 0 else 186000) + (if b0244 then 0 else 186000) + (if b0245 then 0 else 186000) + (if b0246 then 0 else 186000) + (if b0247 then 0 else 186000) + (if b0248 then 0 else 186000) + (if b0249 then 0 else 186000) + (if b0250 then 0 else 186000) + (if b0251 then 0 else 186000) + (if b0252 then 0 else 186000) + (if b0253 then 0 else 186000) + (if b0254 then 0 else 186000) + (if b0255 then 0 else 186000) + (if b0256 then 0 else 186000) + (if b0257 then 0 else 186000) + (if b0258 then 0 else 186000) + (if b0259 then 0 else 186000) + (if b0260 then 0 else 186000) + (if b0261 then 0 else 186000) + (if b0262 then 0 else 186000) + (if b0263 then 0 else 186000) + (if b0264 then 0 else 186000) + (if b0265 then 0 else 186000) + (if b0266 then 0 else 186000) + (if b0267 then 0 else 186000) + (if b0268 then 0 else 186000) + (if b0269 then 0 else 186000) + (if b0270 then 0 else 186000) + (if b0271 then 0 else 186000) + (if b0272 then 0 else 186000) + (if b0273 then 0 else 186000) + (if b0274 then 0 else 186000) + (if b0275 then 0 else 186000) + (if b0276 then 0 else 186000) + (if b0277 then 0 else 186000) + (if b0278 then 0 else 186000) + (if b0279 then 0 else 186000) + (if b0280 then 0 else 186000) + (if b0281 then 0 else 186000) + (if b0282 then 0 else 186000) + (if b0283 then 0 else 186000) + (if b0284 then 0 else 186000) + (if b0285 then 0 else 186000) + (if b0286 then 0 else 186000) + (if b0287 then 0 else 186000) + (if b0288 then 0 else 186000) + (if b0289 then 0 else 186000) + (if b0290 then 0 else 186000) + (if b0291 then 0 else 186000) + (if b0292 then 0 else 186000) + (if b0293 then 0 else 186000) + (if b0294 then 0 else 186000) + (if b0295 then 0 else 186000) + (if b0296 then 0 else 186000) + (if b0297 then 0 else 186000) + (if b0298 then 0 else 186000) + (if b0299 then 0 else 186000) + (if b0300 then 0 else 186000) + (if b0301 then 0 else 186000) + (if b0302 then 0 else 186000) + (if b0303 then 0 else 186000) + (if b0304 then 0 else 186000) + (if b0305 then 0 else 186000) + (if b0306 then 0 else 186000) + (if b0307 then 0 else 186000) + (if b0308 then 0 else 186000) + (if b0309 then 0 else 186000) + (if b0310 then 0 else 186000) + (if b0311 then 0 else 186000) + (if b0312 then 0 else 186000) + (if b0313 then 0 else 186000) + (if b0314 then 0 else 186000) + (if b0315 then 0 else 186000) + (if b0316 then 0 else 186000) + (if b0317 then 0 else 186000) + (if b0318 then 0 else 186000) + (if b0319 then 0 else 186000) + (if b0320 then 0 else 186000) + (if b0321 then 0 else 186000) + (if b0322 then 0 else 186000) + (if b0323 then 0 else 186000) + (if b0324 then 0 else 186000) + (if b0325 then 0 else 186000) + (if b0326 then 0 else 186000) + (if b0327 then 0 else 186000) + (if b0328 then 0 else 186000) + (if b0329 then 0 else 186000) + (if b0330 then 0 else 186000) + (if b0331 then 0 else 186000) + (if b0332 then 0 else 186000) + (if b0333 then 0 else 186000) + (if b0334 then 0 else 186000) + (if b0335 then 0 else 186000) + (if b0336 then 0 else 186000) + (if b0337 then 0 else 186000) + (if b0338 then 0 else 186000) + (if b0339 then 0 else 186000) + (if b0340 then 0 else 186000) + (if b0341 then 0 else 186000) + (if b0376 then 0 else 186000) + (if b0377 then 0 else 186000) + (if b0378 then 0 else 186000) + (if b0379 then 0 else 186000) + (if b0380 then 0 else 186000) + (if b0381 then 0 else 186000) + (if b0382 then 0 else 186000) + (if b0383 then 0 else 186000) + (if b0384 then 0 else 186000) + (if b0385 then 0 else 186000) + (if b0386 then 0 else 186000) + (if b0387 then 0 else 186000) + (if b0388 then 0 else 186000) + (if b0389 then 0 else 186000) + (if b0390 then 0 else 186000) + (if b0422 then 0 else 186000) + (if b0423 then 0 else 186000) + (if b0424 then 0 else 186000) + (if b0425 then 0 else 186000) + (if b0426 then 0 else 186000) + (if b0427 then 0 else 186000) + (if b0428 then 0 else 186000) + (if b0429 then 0 else 186000) + (if b0430 then 0 else 186000) + (if b0431 then 0 else 186000) + (if b0432 then 0 else 186000) + (if b0433 then 0 else 186000) + (if b0434 then 0 else 186000) + (if b0435 then 0 else 186000) + (if b0436 then 0 else 186000) + (if b0437 then 0 else 186000) + (if b0438 then 0 else 186000) + (if b0439 then 0 else 186000) + (if b0440 then 0 else 186000) + (if b0441 then 0 else 186000) + (if b0442 then 0 else 186000) + (if b0443 then 0 else 186000) + (if b0444 then 0 else 186000) + (if b0445 then 0 else 186000) + (if b0446 then 0 else 186000) + (if b0447 then 0 else 186000) + (if b0448 then 0 else 186000) + (if b0449 then 0 else 186000) + (if b0450 then 0 else 186000) + (if b0451 then 0 else 186000) + (if b0452 then 0 else 186000) + (if b0453 then 0 else 186000) + (if b0454 then 0 else 186000) + (if b0455 then 0 else 186000) + (if b0456 then 0 else 186000) + (if b0457 then 0 else 186000) + (if b0458 then 0 else 186000) + (if b0459 then 0 else 186000) + (if b0460 then 0 else 186000) + (if b0461 then 0 else 186000) + (if b0462 then 0 else 186000) + (if b0463 then 0 else 186000) + (if b0464 then 0 else 186000) + (if b0465 then 0 else 186000) < 441
}
Prover Time taken = 7.870554
Added Horn clause: 6 && 23 && 0 && 0 && 16 && 0 && 20 && 0 && 0 => 24
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/linear-algebra/kernels/3mm/kernel3.bpl.ice2.bpl
Total learner time was 00:00:00.1259830
Verifying $kernel3: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool, b0228: bool, b0229: bool, b0230: bool, b0231: bool, b0232: bool, b0233: bool, b0234: bool, b0235: bool, b0236: bool, b0237: bool, b0238: bool, b0239: bool, b0240: bool, b0241: bool, b0242: bool, b0243: bool, b0244: bool, b0245: bool, b0246: bool, b0247: bool, b0248: bool, b0249: bool, b0250: bool, b0251: bool, b0252: bool, b0253: bool, b0254: bool, b0255: bool, b0256: bool, b0257: bool, b0258: bool, b0259: bool, b0260: bool, b0261: bool, b0262: bool, b0263: bool, b0264: bool, b0265: bool, b0266: bool, b0267: bool, b0268: bool, b0269: bool, b0270: bool, b0271: bool, b0272: bool, b0273: bool, b0274: bool, b0275: bool, b0276: bool, b0277: bool, b0278: bool, b0279: bool, b0280: bool, b0281: bool, b0282: bool, b0283: bool, b0284: bool, b0285: bool, b0286: bool, b0287: bool, b0288: bool, b0289: bool, b0290: bool, b0291: bool, b0292: bool, b0293: bool, b0294: bool, b0295: bool, b0296: bool, b0297: bool, b0298: bool, b0299: bool, b0300: bool, b0301: bool, b0302: bool, b0303: bool, b0304: bool, b0305: bool, b0306: bool, b0307: bool, b0308: bool, b0309: bool, b0310: bool, b0311: bool, b0312: bool, b0313: bool, b0314: bool, b0315: bool, b0316: bool, b0317: bool, b0318: bool, b0319: bool, b0320: bool, b0321: bool, b0322: bool, b0323: bool, b0324: bool, b0325: bool, b0326: bool, b0327: bool, b0328: bool, b0329: bool, b0330: bool, b0331: bool, b0332: bool, b0333: bool, b0334: bool, b0335: bool, b0336: bool, b0337: bool, b0338: bool, b0339: bool, b0340: bool, b0341: bool, b0342: bool, b0343: bool, b0344: bool, b0345: bool, b0346: bool, b0347: bool, b0348: bool, b0349: bool, b0350: bool, b0351: bool, b0352: bool, b0353: bool, b0354: bool, b0355: bool, b0356: bool, b0357: bool, b0358: bool, b0359: bool, b0360: bool, b0361: bool, b0362: bool, b0363: bool, b0364: bool, b0365: bool, b0366: bool, b0367: bool, b0368: bool, b0369: bool, b0370: bool, b0371: bool, b0372: bool, b0373: bool, b0374: bool, b0375: bool, b0376: bool, b0377: bool, b0378: bool, b0379: bool, b0380: bool, b0381: bool, b0382: bool, b0383: bool, b0384: bool, b0385: bool, b0386: bool, b0387: bool, b0388: bool, b0389: bool, b0390: bool, b0391: bool, b0392: bool, b0393: bool, b0394: bool, b0395: bool, b0396: bool, b0397: bool, b0398: bool, b0399: bool, b0400: bool, b0401: bool, b0402: bool, b0403: bool, b0404: bool, b0405: bool, b0406: bool, b0407: bool, b0408: bool, b0409: bool, b0410: bool, b0411: bool, b0412: bool, b0413: bool, b0414: bool, b0415: bool, b0416: bool, b0417: bool, b0418: bool, b0419: bool, b0420: bool, b0421: bool, b0422: bool, b0423: bool, b0424: bool, b0425: bool, b0426: bool, b0427: bool, b0428: bool, b0429: bool, b0430: bool, b0431: bool, b0432: bool, b0433: bool, b0434: bool, b0435: bool, b0436: bool, b0437: bool, b0438: bool, b0439: bool, b0440: bool, b0441: bool, b0442: bool, b0443: bool, b0444: bool, b0445: bool, b0446: bool, b0447: bool, b0448: bool, b0449: bool, b0450: bool, b0451: bool, b0452: bool, b0453: bool, b0454: bool, b0455: bool, b0456: bool, b0457: bool, b0458: bool, b0459: bool, b0460: bool, b0461: bool, b0462: bool, b0463: bool, b0464: bool, b0465: bool) : bool
{
  0 + (if b0000 then 0 else 186000) + (if b0001 then 0 else 186000) + (if b0002 then 0 else 186000) + (if b0003 then 0 else 186000) + (if b0004 then 0 else 186000) + (if b0005 then 0 else 186000) + (if b0006 then 0 else 186000) + (if b0007 then 0 else 186000) + (if b0008 then 0 else 186000) + (if b0009 then 0 else 186000) + (if b0010 then 0 else 186000) + (if b0011 then 0 else 186000) + (if b0012 then 0 else 186000) + (if b0013 then 0 else 186000) + (if b0014 then 0 else 186000) + (if b0015 then 0 else 186000) + (if b0016 then 0 else 186000) + (if b0017 then 0 else 186000) + (if b0018 then 0 else 186000) + (if b0019 then 0 else 186000) + (if b0020 then 0 else 186000) + (if b0021 then 0 else 186000) + (if b0022 then 0 else 186000) + (if b0023 then 0 else 186000) + (if b0024 then 0 else 186000) + (if b0025 then 0 else 186000) + (if b0026 then 0 else 186000) + (if b0027 then 0 else 186000) + (if b0028 then 0 else 186000) + (if b0029 then 0 else 186000) + (if b0030 then 0 else 186000) + (if b0031 then 0 else 186000) + (if b0032 then 0 else 186000) + (if b0033 then 0 else 186000) + (if b0034 then 0 else 186000) + (if b0035 then 0 else 186000) + (if b0036 then 0 else 186000) + (if b0037 then 0 else 186000) + (if b0038 then 0 else 186000) + (if b0039 then 0 else 186000) + (if b0040 then 0 else 186000) + (if b0041 then 0 else 186000) + (if b0042 then 0 else 186000) + (if b0043 then 0 else 186000) + (if b0044 then 0 else 186000) + (if b0045 then 0 else 186000) + (if b0046 then 0 else 186000) + (if b0047 then 0 else 186000) + (if b0048 then 0 else 186000) + (if b0049 then 0 else 186000) + (if b0050 then 0 else 186000) + (if b0051 then 0 else 186000) + (if b0052 then 0 else 186000) + (if b0053 then 0 else 186000) + (if b0054 then 0 else 186000) + (if b0055 then 0 else 186000) + (if b0056 then 0 else 186000) + (if b0057 then 0 else 186000) + (if b0058 then 0 else 186000) + (if b0059 then 0 else 186000) + (if b0060 then 0 else 186000) + (if b0061 then 0 else 186000) + (if b0062 then 0 else 186000) + (if b0063 then 0 else 186000) + (if b0064 then 0 else 186000) + (if b0065 then 0 else 186000) + (if b0066 then 0 else 186000) + (if b0067 then 0 else 186000) + (if b0068 then 0 else 186000) + (if b0069 then 0 else 186000) + (if b0070 then 0 else 186000) + (if b0071 then 0 else 186000) + (if b0072 then 0 else 186000) + (if b0073 then 0 else 186000) + (if b0074 then 0 else 186000) + (if b0075 then 0 else 186000) + (if b0076 then 0 else 186000) + (if b0077 then 0 else 186000) + (if b0078 then 0 else 186000) + (if b0079 then 0 else 186000) + (if b0080 then 0 else 186000) + (if b0081 then 0 else 186000) + (if b0082 then 0 else 186000) + (if b0083 then 0 else 186000) + (if b0084 then 0 else 186000) + (if b0085 then 0 else 186000) + (if b0086 then 0 else 186000) + (if b0087 then 0 else 186000) + (if b0088 then 0 else 186000) + (if b0089 then 0 else 186000) + (if b0090 then 0 else 186000) + (if b0091 then 0 else 186000) + (if b0092 then 0 else 186000) + (if b0093 then 0 else 186000) + (if b0094 then 0 else 186000) + (if b0095 then 0 else 186000) + (if b0096 then 0 else 186000) + (if b0097 then 0 else 186000) + (if b0098 then 0 else 186000) + (if b0099 then 0 else 186000) + (if b0100 then 0 else 186000) + (if b0101 then 0 else 186000) + (if b0102 then 0 else 186000) + (if b0103 then 0 else 186000) + (if b0104 then 0 else 186000) + (if b0105 then 0 else 186000) + (if b0106 then 0 else 186000) + (if b0107 then 0 else 186000) + (if b0108 then 0 else 186000) + (if b0109 then 0 else 186000) + (if b0110 then 0 else 186000) + (if b0111 then 0 else 186000) + (if b0112 then 0 else 186000) + (if b0113 then 0 else 186000) + (if b0114 then 0 else 186000) + (if b0115 then 0 else 186000) + (if b0116 then 0 else 186000) + (if b0118 then 0 else 186000) + (if b0120 then 0 else 186000) + (if b0121 then 0 else 186000) + (if b0122 then 0 else 186000) + (if b0123 then 0 else 186000) + (if b0124 then 0 else 186000) + (if b0125 then 0 else 186000) + (if b0126 then 0 else 186000) + (if b0127 then 0 else 186000) + (if b0128 then 0 else 186000) + (if b0129 then 0 else 186000) + (if b0130 then 0 else 186000) + (if b0131 then 0 else 186000) + (if b0132 then 0 else 186000) + (if b0133 then 0 else 186000) + (if b0134 then 0 else 186000) + (if b0135 then 0 else 186000) + (if b0136 then 0 else 186000) + (if b0137 then 0 else 186000) + (if b0138 then 0 else 186000) + (if b0139 then 0 else 186000) + (if b0140 then 0 else 186000) + (if b0141 then 0 else 186000) + (if b0142 then 0 else 186000) + (if b0143 then 0 else 186000) + (if b0144 then 0 else 186000) + (if b0145 then 0 else 186000) + (if b0146 then 0 else 186000) + (if b0147 then 0 else 186000) + (if b0148 then 0 else 186000) + (if b0149 then 0 else 186000) + (if b0150 then 0 else 186000) + (if b0151 then 0 else 186000) + (if b0152 then 0 else 186000) + (if b0153 then 0 else 186000) + (if b0154 then 0 else 186000) + (if b0155 then 0 else 186000) + (if b0156 then 0 else 186000) + (if b0157 then 0 else 186000) + (if b0158 then 0 else 186000) + (if b0159 then 0 else 186000) + (if b0160 then 0 else 186000) + (if b0161 then 0 else 186000) + (if b0162 then 0 else 186000) + (if b0163 then 0 else 186000) + (if b0164 then 0 else 186000) + (if b0165 then 0 else 186000) + (if b0166 then 0 else 186000) + (if b0167 then 0 else 186000) + (if b0168 then 0 else 186000) + (if b0169 then 0 else 186000) + (if b0171 then 0 else 186000) + (if b0172 then 0 else 186000) + (if b0173 then 0 else 186000) + (if b0174 then 0 else 186000) + (if b0175 then 0 else 186000) + (if b0176 then 0 else 186000) + (if b0177 then 0 else 186000) + (if b0178 then 0 else 186000) + (if b0179 then 0 else 186000) + (if b0180 then 0 else 186000) + (if b0181 then 0 else 186000) + (if b0182 then 0 else 186000) + (if b0183 then 0 else 186000) + (if b0184 then 0 else 186000) + (if b0185 then 0 else 186000) + (if b0186 then 0 else 186000) + (if b0187 then 0 else 186000) + (if b0188 then 0 else 186000) + (if b0189 then 0 else 186000) + (if b0190 then 0 else 186000) + (if b0191 then 0 else 186000) + (if b0192 then 0 else 186000) + (if b0193 then 0 else 186000) + (if b0195 then 0 else 186000) + (if b0197 then 0 else 186000) + (if b0198 then 0 else 186000) + (if b0199 then 0 else 186000) + (if b0200 then 0 else 186000) + (if b0201 then 0 else 186000) + (if b0202 then 0 else 186000) + (if b0203 then 0 else 186000) + (if b0205 then 0 else 186000) + (if b0206 then 0 else 186000) + (if b0207 then 0 else 186000) + (if b0208 then 0 else 186000) + (if b0209 then 0 else 186000) + (if b0210 then 0 else 186000) + (if b0211 then 0 else 186000) + (if b0212 then 0 else 186000) + (if b0213 then 0 else 186000) + (if b0214 then 0 else 186000) + (if b0215 then 0 else 186000) + (if b0216 then 0 else 186000) + (if b0217 then 0 else 186000) + (if b0218 then 0 else 186000) + (if b0219 then 0 else 186000) + (if b0220 then 0 else 186000) + (if b0221 then 0 else 186000) + (if b0222 then 0 else 186000) + (if b0223 then 0 else 186000) + (if b0224 then 0 else 186000) + (if b0225 then 0 else 186000) + (if b0226 then 0 else 186000) + (if b0227 then 0 else 186000) + (if b0228 then 0 else 186000) + (if b0229 then 0 else 186000) + (if b0230 then 0 else 186000) + (if b0231 then 0 else 186000) + (if b0232 then 0 else 186000) + (if b0235 then 0 else 186000) + (if b0237 then 0 else 186000) + (if b0238 then 0 else 186000) + (if b0239 then 0 else 186000) + (if b0240 then 0 else 186000) + (if b0241 then 0 else 186000) + (if b0242 then 0 else 186000) + (if b0243 then 0 else 186000) + (if b0244 then 0 else 186000) + (if b0245 then 0 else 186000) + (if b0246 then 0 else 186000) + (if b0247 then 0 else 186000) + (if b0248 then 0 else 186000) + (if b0249 then 0 else 186000) + (if b0250 then 0 else 186000) + (if b0251 then 0 else 186000) + (if b0252 then 0 else 186000) + (if b0253 then 0 else 186000) + (if b0254 then 0 else 186000) + (if b0255 then 0 else 186000) + (if b0256 then 0 else 186000) + (if b0257 then 0 else 186000) + (if b0258 then 0 else 186000) + (if b0259 then 0 else 186000) + (if b0260 then 0 else 186000) + (if b0261 then 0 else 186000) + (if b0262 then 0 else 186000) + (if b0263 then 0 else 186000) + (if b0264 then 0 else 186000) + (if b0265 then 0 else 186000) + (if b0266 then 0 else 186000) + (if b0267 then 0 else 186000) + (if b0268 then 0 else 186000) + (if b0269 then 0 else 186000) + (if b0270 then 0 else 186000) + (if b0271 then 0 else 186000) + (if b0272 then 0 else 186000) + (if b0273 then 0 else 186000) + (if b0274 then 0 else 186000) + (if b0275 then 0 else 186000) + (if b0276 then 0 else 186000) + (if b0277 then 0 else 186000) + (if b0278 then 0 else 186000) + (if b0279 then 0 else 186000) + (if b0280 then 0 else 186000) + (if b0281 then 0 else 186000) + (if b0282 then 0 else 186000) + (if b0283 then 0 else 186000) + (if b0284 then 0 else 186000) + (if b0285 then 0 else 186000) + (if b0286 then 0 else 186000) + (if b0287 then 0 else 186000) + (if b0288 then 0 else 186000) + (if b0289 then 0 else 186000) + (if b0290 then 0 else 186000) + (if b0291 then 0 else 186000) + (if b0292 then 0 else 186000) + (if b0293 then 0 else 186000) + (if b0294 then 0 else 186000) + (if b0295 then 0 else 186000) + (if b0296 then 0 else 186000) + (if b0297 then 0 else 186000) + (if b0298 then 0 else 186000) + (if b0299 then 0 else 186000) + (if b0300 then 0 else 186000) + (if b0301 then 0 else 186000) + (if b0302 then 0 else 186000) + (if b0303 then 0 else 186000) + (if b0304 then 0 else 186000) + (if b0305 then 0 else 186000) + (if b0306 then 0 else 186000) + (if b0307 then 0 else 186000) + (if b0308 then 0 else 186000) + (if b0309 then 0 else 186000) + (if b0310 then 0 else 186000) + (if b0311 then 0 else 186000) + (if b0312 then 0 else 186000) + (if b0313 then 0 else 186000) + (if b0314 then 0 else 186000) + (if b0315 then 0 else 186000) + (if b0316 then 0 else 186000) + (if b0317 then 0 else 186000) + (if b0318 then 0 else 186000) + (if b0319 then 0 else 186000) + (if b0320 then 0 else 186000) + (if b0321 then 0 else 186000) + (if b0322 then 0 else 186000) + (if b0323 then 0 else 186000) + (if b0324 then 0 else 186000) + (if b0325 then 0 else 186000) + (if b0326 then 0 else 186000) + (if b0327 then 0 else 186000) + (if b0328 then 0 else 186000) + (if b0329 then 0 else 186000) + (if b0330 then 0 else 186000) + (if b0331 then 0 else 186000) + (if b0332 then 0 else 186000) + (if b0333 then 0 else 186000) + (if b0334 then 0 else 186000) + (if b0335 then 0 else 186000) + (if b0336 then 0 else 186000) + (if b0337 then 0 else 186000) + (if b0338 then 0 else 186000) + (if b0339 then 0 else 186000) + (if b0340 then 0 else 186000) + (if b0341 then 0 else 186000) + (if b0376 then 0 else 186000) + (if b0377 then 0 else 186000) + (if b0378 then 0 else 186000) + (if b0379 then 0 else 186000) + (if b0380 then 0 else 186000) + (if b0381 then 0 else 186000) + (if b0382 then 0 else 186000) + (if b0383 then 0 else 186000) + (if b0384 then 0 else 186000) + (if b0385 then 0 else 186000) + (if b0386 then 0 else 186000) + (if b0387 then 0 else 186000) + (if b0388 then 0 else 186000) + (if b0389 then 0 else 186000) + (if b0390 then 0 else 186000) + (if b0422 then 0 else 186000) + (if b0423 then 0 else 186000) + (if b0424 then 0 else 186000) + (if b0425 then 0 else 186000) + (if b0426 then 0 else 186000) + (if b0427 then 0 else 186000) + (if b0428 then 0 else 186000) + (if b0429 then 0 else 186000) + (if b0430 then 0 else 186000) + (if b0431 then 0 else 186000) + (if b0432 then 0 else 186000) + (if b0433 then 0 else 186000) + (if b0434 then 0 else 186000) + (if b0435 then 0 else 186000) + (if b0436 then 0 else 186000) + (if b0437 then 0 else 186000) + (if b0438 then 0 else 186000) + (if b0439 then 0 else 186000) + (if b0440 then 0 else 186000) + (if b0441 then 0 else 186000) + (if b0442 then 0 else 186000) + (if b0443 then 0 else 186000) + (if b0444 then 0 else 186000) + (if b0445 then 0 else 186000) + (if b0446 then 0 else 186000) + (if b0447 then 0 else 186000) + (if b0448 then 0 else 186000) + (if b0449 then 0 else 186000) + (if b0450 then 0 else 186000) + (if b0451 then 0 else 186000) + (if b0452 then 0 else 186000) + (if b0453 then 0 else 186000) + (if b0454 then 0 else 186000) + (if b0455 then 0 else 186000) + (if b0456 then 0 else 186000) + (if b0457 then 0 else 186000) + (if b0458 then 0 else 186000) + (if b0459 then 0 else 186000) + (if b0460 then 0 else 186000) + (if b0461 then 0 else 186000) + (if b0462 then 0 else 186000) + (if b0463 then 0 else 186000) + (if b0464 then 0 else 186000) + (if b0465 then 0 else 186000) < 441
}
Prover Time taken = 7.879531
Added Horn clause: 0 && 25 && 0 && 0 && 19 && 0 && 20 && 0 && 24 && 0 && 0 => 26
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/linear-algebra/kernels/3mm/kernel3.bpl.ice2.bpl
Total learner time was 00:00:00.1351820
Verifying $kernel3: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool, b0228: bool, b0229: bool, b0230: bool, b0231: bool, b0232: bool, b0233: bool, b0234: bool, b0235: bool, b0236: bool, b0237: bool, b0238: bool, b0239: bool, b0240: bool, b0241: bool, b0242: bool, b0243: bool, b0244: bool, b0245: bool, b0246: bool, b0247: bool, b0248: bool, b0249: bool, b0250: bool, b0251: bool, b0252: bool, b0253: bool, b0254: bool, b0255: bool, b0256: bool, b0257: bool, b0258: bool, b0259: bool, b0260: bool, b0261: bool, b0262: bool, b0263: bool, b0264: bool, b0265: bool, b0266: bool, b0267: bool, b0268: bool, b0269: bool, b0270: bool, b0271: bool, b0272: bool, b0273: bool, b0274: bool, b0275: bool, b0276: bool, b0277: bool, b0278: bool, b0279: bool, b0280: bool, b0281: bool, b0282: bool, b0283: bool, b0284: bool, b0285: bool, b0286: bool, b0287: bool, b0288: bool, b0289: bool, b0290: bool, b0291: bool, b0292: bool, b0293: bool, b0294: bool, b0295: bool, b0296: bool, b0297: bool, b0298: bool, b0299: bool, b0300: bool, b0301: bool, b0302: bool, b0303: bool, b0304: bool, b0305: bool, b0306: bool, b0307: bool, b0308: bool, b0309: bool, b0310: bool, b0311: bool, b0312: bool, b0313: bool, b0314: bool, b0315: bool, b0316: bool, b0317: bool, b0318: bool, b0319: bool, b0320: bool, b0321: bool, b0322: bool, b0323: bool, b0324: bool, b0325: bool, b0326: bool, b0327: bool, b0328: bool, b0329: bool, b0330: bool, b0331: bool, b0332: bool, b0333: bool, b0334: bool, b0335: bool, b0336: bool, b0337: bool, b0338: bool, b0339: bool, b0340: bool, b0341: bool, b0342: bool, b0343: bool, b0344: bool, b0345: bool, b0346: bool, b0347: bool, b0348: bool, b0349: bool, b0350: bool, b0351: bool, b0352: bool, b0353: bool, b0354: bool, b0355: bool, b0356: bool, b0357: bool, b0358: bool, b0359: bool, b0360: bool, b0361: bool, b0362: bool, b0363: bool, b0364: bool, b0365: bool, b0366: bool, b0367: bool, b0368: bool, b0369: bool, b0370: bool, b0371: bool, b0372: bool, b0373: bool, b0374: bool, b0375: bool, b0376: bool, b0377: bool, b0378: bool, b0379: bool, b0380: bool, b0381: bool, b0382: bool, b0383: bool, b0384: bool, b0385: bool, b0386: bool, b0387: bool, b0388: bool, b0389: bool, b0390: bool, b0391: bool, b0392: bool, b0393: bool, b0394: bool, b0395: bool, b0396: bool, b0397: bool, b0398: bool, b0399: bool, b0400: bool, b0401: bool, b0402: bool, b0403: bool, b0404: bool, b0405: bool, b0406: bool, b0407: bool, b0408: bool, b0409: bool, b0410: bool, b0411: bool, b0412: bool, b0413: bool, b0414: bool, b0415: bool, b0416: bool, b0417: bool, b0418: bool, b0419: bool, b0420: bool, b0421: bool, b0422: bool, b0423: bool, b0424: bool, b0425: bool, b0426: bool, b0427: bool, b0428: bool, b0429: bool, b0430: bool, b0431: bool, b0432: bool, b0433: bool, b0434: bool, b0435: bool, b0436: bool, b0437: bool, b0438: bool, b0439: bool, b0440: bool, b0441: bool, b0442: bool, b0443: bool, b0444: bool, b0445: bool, b0446: bool, b0447: bool, b0448: bool, b0449: bool, b0450: bool, b0451: bool, b0452: bool, b0453: bool, b0454: bool, b0455: bool, b0456: bool, b0457: bool, b0458: bool, b0459: bool, b0460: bool, b0461: bool, b0462: bool, b0463: bool, b0464: bool, b0465: bool) : bool
{
  0 + (if b0000 then 0 else 186000) + (if b0001 then 0 else 186000) + (if b0002 then 0 else 186000) + (if b0003 then 0 else 186000) + (if b0004 then 0 else 186000) + (if b0005 then 0 else 186000) + (if b0006 then 0 else 186000) + (if b0007 then 0 else 186000) + (if b0008 then 0 else 186000) + (if b0009 then 0 else 186000) + (if b0010 then 0 else 186000) + (if b0011 then 0 else 186000) + (if b0012 then 0 else 186000) + (if b0013 then 0 else 186000) + (if b0014 then 0 else 186000) + (if b0015 then 0 else 186000) + (if b0016 then 0 else 186000) + (if b0017 then 0 else 186000) + (if b0018 then 0 else 186000) + (if b0019 then 0 else 186000) + (if b0020 then 0 else 186000) + (if b0021 then 0 else 186000) + (if b0022 then 0 else 186000) + (if b0023 then 0 else 186000) + (if b0024 then 0 else 186000) + (if b0025 then 0 else 186000) + (if b0026 then 0 else 186000) + (if b0027 then 0 else 186000) + (if b0028 then 0 else 186000) + (if b0029 then 0 else 186000) + (if b0030 then 0 else 186000) + (if b0031 then 0 else 186000) + (if b0032 then 0 else 186000) + (if b0033 then 0 else 186000) + (if b0034 then 0 else 186000) + (if b0035 then 0 else 186000) + (if b0036 then 0 else 186000) + (if b0037 then 0 else 186000) + (if b0038 then 0 else 186000) + (if b0039 then 0 else 186000) + (if b0040 then 0 else 186000) + (if b0041 then 0 else 186000) + (if b0042 then 0 else 186000) + (if b0043 then 0 else 186000) + (if b0044 then 0 else 186000) + (if b0045 then 0 else 186000) + (if b0046 then 0 else 186000) + (if b0047 then 0 else 186000) + (if b0048 then 0 else 186000) + (if b0049 then 0 else 186000) + (if b0050 then 0 else 186000) + (if b0051 then 0 else 186000) + (if b0052 then 0 else 186000) + (if b0053 then 0 else 186000) + (if b0054 then 0 else 186000) + (if b0055 then 0 else 186000) + (if b0056 then 0 else 186000) + (if b0057 then 0 else 186000) + (if b0058 then 0 else 186000) + (if b0059 then 0 else 186000) + (if b0060 then 0 else 186000) + (if b0061 then 0 else 186000) + (if b0062 then 0 else 186000) + (if b0063 then 0 else 186000) + (if b0064 then 0 else 186000) + (if b0065 then 0 else 186000) + (if b0066 then 0 else 186000) + (if b0067 then 0 else 186000) + (if b0068 then 0 else 186000) + (if b0069 then 0 else 186000) + (if b0070 then 0 else 186000) + (if b0071 then 0 else 186000) + (if b0072 then 0 else 186000) + (if b0073 then 0 else 186000) + (if b0074 then 0 else 186000) + (if b0075 then 0 else 186000) + (if b0076 then 0 else 186000) + (if b0077 then 0 else 186000) + (if b0078 then 0 else 186000) + (if b0079 then 0 else 186000) + (if b0080 then 0 else 186000) + (if b0081 then 0 else 186000) + (if b0082 then 0 else 186000) + (if b0083 then 0 else 186000) + (if b0084 then 0 else 186000) + (if b0085 then 0 else 186000) + (if b0086 then 0 else 186000) + (if b0087 then 0 else 186000) + (if b0088 then 0 else 186000) + (if b0089 then 0 else 186000) + (if b0090 then 0 else 186000) + (if b0091 then 0 else 186000) + (if b0092 then 0 else 186000) + (if b0093 then 0 else 186000) + (if b0094 then 0 else 186000) + (if b0095 then 0 else 186000) + (if b0096 then 0 else 186000) + (if b0097 then 0 else 186000) + (if b0098 then 0 else 186000) + (if b0099 then 0 else 186000) + (if b0100 then 0 else 186000) + (if b0101 then 0 else 186000) + (if b0102 then 0 else 186000) + (if b0103 then 0 else 186000) + (if b0104 then 0 else 186000) + (if b0105 then 0 else 186000) + (if b0106 then 0 else 186000) + (if b0107 then 0 else 186000) + (if b0108 then 0 else 186000) + (if b0109 then 0 else 186000) + (if b0110 then 0 else 186000) + (if b0111 then 0 else 186000) + (if b0112 then 0 else 186000) + (if b0113 then 0 else 186000) + (if b0114 then 0 else 186000) + (if b0115 then 0 else 186000) + (if b0116 then 0 else 186000) + (if b0118 then 0 else 186000) + (if b0120 then 0 else 186000) + (if b0121 then 0 else 186000) + (if b0122 then 0 else 186000) + (if b0123 then 0 else 186000) + (if b0124 then 0 else 186000) + (if b0125 then 0 else 186000) + (if b0126 then 0 else 186000) + (if b0127 then 0 else 186000) + (if b0128 then 0 else 186000) + (if b0129 then 0 else 186000) + (if b0130 then 0 else 186000) + (if b0131 then 0 else 186000) + (if b0132 then 0 else 186000) + (if b0133 then 0 else 186000) + (if b0134 then 0 else 186000) + (if b0135 then 0 else 186000) + (if b0136 then 0 else 186000) + (if b0137 then 0 else 186000) + (if b0138 then 0 else 186000) + (if b0139 then 0 else 186000) + (if b0140 then 0 else 186000) + (if b0141 then 0 else 186000) + (if b0142 then 0 else 186000) + (if b0143 then 0 else 186000) + (if b0144 then 0 else 186000) + (if b0145 then 0 else 186000) + (if b0146 then 0 else 186000) + (if b0147 then 0 else 186000) + (if b0148 then 0 else 186000) + (if b0149 then 0 else 186000) + (if b0150 then 0 else 186000) + (if b0151 then 0 else 186000) + (if b0152 then 0 else 186000) + (if b0153 then 0 else 186000) + (if b0154 then 0 else 186000) + (if b0155 then 0 else 186000) + (if b0156 then 0 else 186000) + (if b0157 then 0 else 186000) + (if b0158 then 0 else 186000) + (if b0159 then 0 else 186000) + (if b0160 then 0 else 186000) + (if b0161 then 0 else 186000) + (if b0162 then 0 else 186000) + (if b0163 then 0 else 186000) + (if b0164 then 0 else 186000) + (if b0165 then 0 else 186000) + (if b0166 then 0 else 186000) + (if b0167 then 0 else 186000) + (if b0168 then 0 else 186000) + (if b0169 then 0 else 186000) + (if b0172 then 0 else 186000) + (if b0174 then 0 else 186000) + (if b0175 then 0 else 186000) + (if b0176 then 0 else 186000) + (if b0177 then 0 else 186000) + (if b0178 then 0 else 186000) + (if b0179 then 0 else 186000) + (if b0180 then 0 else 186000) + (if b0181 then 0 else 186000) + (if b0182 then 0 else 186000) + (if b0183 then 0 else 186000) + (if b0184 then 0 else 186000) + (if b0185 then 0 else 186000) + (if b0186 then 0 else 186000) + (if b0187 then 0 else 186000) + (if b0188 then 0 else 186000) + (if b0189 then 0 else 186000) + (if b0190 then 0 else 186000) + (if b0191 then 0 else 186000) + (if b0192 then 0 else 186000) + (if b0193 then 0 else 186000) + (if b0195 then 0 else 186000) + (if b0197 then 0 else 186000) + (if b0198 then 0 else 186000) + (if b0199 then 0 else 186000) + (if b0200 then 0 else 186000) + (if b0201 then 0 else 186000) + (if b0202 then 0 else 186000) + (if b0203 then 0 else 186000) + (if b0205 then 0 else 186000) + (if b0206 then 0 else 186000) + (if b0207 then 0 else 186000) + (if b0208 then 0 else 186000) + (if b0209 then 0 else 186000) + (if b0210 then 0 else 186000) + (if b0211 then 0 else 186000) + (if b0212 then 0 else 186000) + (if b0213 then 0 else 186000) + (if b0214 then 0 else 186000) + (if b0215 then 0 else 186000) + (if b0216 then 0 else 186000) + (if b0217 then 0 else 186000) + (if b0218 then 0 else 186000) + (if b0219 then 0 else 186000) + (if b0220 then 0 else 186000) + (if b0221 then 0 else 186000) + (if b0222 then 0 else 186000) + (if b0223 then 0 else 186000) + (if b0224 then 0 else 186000) + (if b0225 then 0 else 186000) + (if b0226 then 0 else 186000) + (if b0227 then 0 else 186000) + (if b0228 then 0 else 186000) + (if b0229 then 0 else 186000) + (if b0230 then 0 else 186000) + (if b0231 then 0 else 186000) + (if b0232 then 0 else 186000) + (if b0235 then 0 else 186000) + (if b0237 then 0 else 186000) + (if b0238 then 0 else 186000) + (if b0239 then 0 else 186000) + (if b0240 then 0 else 186000) + (if b0241 then 0 else 186000) + (if b0242 then 0 else 186000) + (if b0243 then 0 else 186000) + (if b0244 then 0 else 186000) + (if b0245 then 0 else 186000) + (if b0246 then 0 else 186000) + (if b0247 then 0 else 186000) + (if b0248 then 0 else 186000) + (if b0249 then 0 else 186000) + (if b0250 then 0 else 186000) + (if b0251 then 0 else 186000) + (if b0252 then 0 else 186000) + (if b0253 then 0 else 186000) + (if b0254 then 0 else 186000) + (if b0255 then 0 else 186000) + (if b0256 then 0 else 186000) + (if b0257 then 0 else 186000) + (if b0258 then 0 else 186000) + (if b0259 then 0 else 186000) + (if b0260 then 0 else 186000) + (if b0261 then 0 else 186000) + (if b0262 then 0 else 186000) + (if b0263 then 0 else 186000) + (if b0264 then 0 else 186000) + (if b0265 then 0 else 186000) + (if b0266 then 0 else 186000) + (if b0267 then 0 else 186000) + (if b0268 then 0 else 186000) + (if b0269 then 0 else 186000) + (if b0270 then 0 else 186000) + (if b0271 then 0 else 186000) + (if b0272 then 0 else 186000) + (if b0273 then 0 else 186000) + (if b0274 then 0 else 186000) + (if b0275 then 0 else 186000) + (if b0276 then 0 else 186000) + (if b0277 then 0 else 186000) + (if b0278 then 0 else 186000) + (if b0279 then 0 else 186000) + (if b0280 then 0 else 186000) + (if b0281 then 0 else 186000) + (if b0282 then 0 else 186000) + (if b0283 then 0 else 186000) + (if b0284 then 0 else 186000) + (if b0285 then 0 else 186000) + (if b0286 then 0 else 186000) + (if b0287 then 0 else 186000) + (if b0288 then 0 else 186000) + (if b0289 then 0 else 186000) + (if b0290 then 0 else 186000) + (if b0291 then 0 else 186000) + (if b0292 then 0 else 186000) + (if b0293 then 0 else 186000) + (if b0294 then 0 else 186000) + (if b0295 then 0 else 186000) + (if b0296 then 0 else 186000) + (if b0297 then 0 else 186000) + (if b0298 then 0 else 186000) + (if b0299 then 0 else 186000) + (if b0300 then 0 else 186000) + (if b0301 then 0 else 186000) + (if b0302 then 0 else 186000) + (if b0303 then 0 else 186000) + (if b0304 then 0 else 186000) + (if b0305 then 0 else 186000) + (if b0306 then 0 else 186000) + (if b0307 then 0 else 186000) + (if b0308 then 0 else 186000) + (if b0309 then 0 else 186000) + (if b0310 then 0 else 186000) + (if b0311 then 0 else 186000) + (if b0312 then 0 else 186000) + (if b0313 then 0 else 186000) + (if b0314 then 0 else 186000) + (if b0315 then 0 else 186000) + (if b0316 then 0 else 186000) + (if b0317 then 0 else 186000) + (if b0318 then 0 else 186000) + (if b0319 then 0 else 186000) + (if b0320 then 0 else 186000) + (if b0321 then 0 else 186000) + (if b0322 then 0 else 186000) + (if b0323 then 0 else 186000) + (if b0324 then 0 else 186000) + (if b0325 then 0 else 186000) + (if b0326 then 0 else 186000) + (if b0327 then 0 else 186000) + (if b0328 then 0 else 186000) + (if b0329 then 0 else 186000) + (if b0330 then 0 else 186000) + (if b0331 then 0 else 186000) + (if b0332 then 0 else 186000) + (if b0333 then 0 else 186000) + (if b0334 then 0 else 186000) + (if b0335 then 0 else 186000) + (if b0336 then 0 else 186000) + (if b0337 then 0 else 186000) + (if b0338 then 0 else 186000) + (if b0339 then 0 else 186000) + (if b0340 then 0 else 186000) + (if b0341 then 0 else 186000) + (if b0376 then 0 else 186000) + (if b0377 then 0 else 186000) + (if b0378 then 0 else 186000) + (if b0379 then 0 else 186000) + (if b0380 then 0 else 186000) + (if b0381 then 0 else 186000) + (if b0382 then 0 else 186000) + (if b0383 then 0 else 186000) + (if b0384 then 0 else 186000) + (if b0385 then 0 else 186000) + (if b0386 then 0 else 186000) + (if b0387 then 0 else 186000) + (if b0388 then 0 else 186000) + (if b0389 then 0 else 186000) + (if b0390 then 0 else 186000) + (if b0422 then 0 else 186000) + (if b0423 then 0 else 186000) + (if b0424 then 0 else 186000) + (if b0425 then 0 else 186000) + (if b0426 then 0 else 186000) + (if b0427 then 0 else 186000) + (if b0428 then 0 else 186000) + (if b0429 then 0 else 186000) + (if b0430 then 0 else 186000) + (if b0431 then 0 else 186000) + (if b0432 then 0 else 186000) + (if b0433 then 0 else 186000) + (if b0434 then 0 else 186000) + (if b0435 then 0 else 186000) + (if b0436 then 0 else 186000) + (if b0437 then 0 else 186000) + (if b0438 then 0 else 186000) + (if b0439 then 0 else 186000) + (if b0440 then 0 else 186000) + (if b0441 then 0 else 186000) + (if b0442 then 0 else 186000) + (if b0443 then 0 else 186000) + (if b0444 then 0 else 186000) + (if b0445 then 0 else 186000) + (if b0446 then 0 else 186000) + (if b0447 then 0 else 186000) + (if b0448 then 0 else 186000) + (if b0449 then 0 else 186000) + (if b0450 then 0 else 186000) + (if b0451 then 0 else 186000) + (if b0452 then 0 else 186000) + (if b0453 then 0 else 186000) + (if b0454 then 0 else 186000) + (if b0455 then 0 else 186000) + (if b0456 then 0 else 186000) + (if b0457 then 0 else 186000) + (if b0458 then 0 else 186000) + (if b0459 then 0 else 186000) + (if b0460 then 0 else 186000) + (if b0461 then 0 else 186000) + (if b0462 then 0 else 186000) + (if b0463 then 0 else 186000) + (if b0464 then 0 else 186000) + (if b0465 then 0 else 186000) < 441
}
Prover Time taken = 13.795199
Added Horn clause: 6 && 27 && 0 && 0 && 16 && 0 && 26 => 28
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/linear-algebra/kernels/3mm/kernel3.bpl.ice2.bpl
Total learner time was 00:00:00.1275370
Verifying $kernel3: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool, b0228: bool, b0229: bool, b0230: bool, b0231: bool, b0232: bool, b0233: bool, b0234: bool, b0235: bool, b0236: bool, b0237: bool, b0238: bool, b0239: bool, b0240: bool, b0241: bool, b0242: bool, b0243: bool, b0244: bool, b0245: bool, b0246: bool, b0247: bool, b0248: bool, b0249: bool, b0250: bool, b0251: bool, b0252: bool, b0253: bool, b0254: bool, b0255: bool, b0256: bool, b0257: bool, b0258: bool, b0259: bool, b0260: bool, b0261: bool, b0262: bool, b0263: bool, b0264: bool, b0265: bool, b0266: bool, b0267: bool, b0268: bool, b0269: bool, b0270: bool, b0271: bool, b0272: bool, b0273: bool, b0274: bool, b0275: bool, b0276: bool, b0277: bool, b0278: bool, b0279: bool, b0280: bool, b0281: bool, b0282: bool, b0283: bool, b0284: bool, b0285: bool, b0286: bool, b0287: bool, b0288: bool, b0289: bool, b0290: bool, b0291: bool, b0292: bool, b0293: bool, b0294: bool, b0295: bool, b0296: bool, b0297: bool, b0298: bool, b0299: bool, b0300: bool, b0301: bool, b0302: bool, b0303: bool, b0304: bool, b0305: bool, b0306: bool, b0307: bool, b0308: bool, b0309: bool, b0310: bool, b0311: bool, b0312: bool, b0313: bool, b0314: bool, b0315: bool, b0316: bool, b0317: bool, b0318: bool, b0319: bool, b0320: bool, b0321: bool, b0322: bool, b0323: bool, b0324: bool, b0325: bool, b0326: bool, b0327: bool, b0328: bool, b0329: bool, b0330: bool, b0331: bool, b0332: bool, b0333: bool, b0334: bool, b0335: bool, b0336: bool, b0337: bool, b0338: bool, b0339: bool, b0340: bool, b0341: bool, b0342: bool, b0343: bool, b0344: bool, b0345: bool, b0346: bool, b0347: bool, b0348: bool, b0349: bool, b0350: bool, b0351: bool, b0352: bool, b0353: bool, b0354: bool, b0355: bool, b0356: bool, b0357: bool, b0358: bool, b0359: bool, b0360: bool, b0361: bool, b0362: bool, b0363: bool, b0364: bool, b0365: bool, b0366: bool, b0367: bool, b0368: bool, b0369: bool, b0370: bool, b0371: bool, b0372: bool, b0373: bool, b0374: bool, b0375: bool, b0376: bool, b0377: bool, b0378: bool, b0379: bool, b0380: bool, b0381: bool, b0382: bool, b0383: bool, b0384: bool, b0385: bool, b0386: bool, b0387: bool, b0388: bool, b0389: bool, b0390: bool, b0391: bool, b0392: bool, b0393: bool, b0394: bool, b0395: bool, b0396: bool, b0397: bool, b0398: bool, b0399: bool, b0400: bool, b0401: bool, b0402: bool, b0403: bool, b0404: bool, b0405: bool, b0406: bool, b0407: bool, b0408: bool, b0409: bool, b0410: bool, b0411: bool, b0412: bool, b0413: bool, b0414: bool, b0415: bool, b0416: bool, b0417: bool, b0418: bool, b0419: bool, b0420: bool, b0421: bool, b0422: bool, b0423: bool, b0424: bool, b0425: bool, b0426: bool, b0427: bool, b0428: bool, b0429: bool, b0430: bool, b0431: bool, b0432: bool, b0433: bool, b0434: bool, b0435: bool, b0436: bool, b0437: bool, b0438: bool, b0439: bool, b0440: bool, b0441: bool, b0442: bool, b0443: bool, b0444: bool, b0445: bool, b0446: bool, b0447: bool, b0448: bool, b0449: bool, b0450: bool, b0451: bool, b0452: bool, b0453: bool, b0454: bool, b0455: bool, b0456: bool, b0457: bool, b0458: bool, b0459: bool, b0460: bool, b0461: bool, b0462: bool, b0463: bool, b0464: bool, b0465: bool) : bool
{
  0 + (if b0000 then 0 else 186000) + (if b0001 then 0 else 186000) + (if b0002 then 0 else 186000) + (if b0003 then 0 else 186000) + (if b0004 then 0 else 186000) + (if b0005 then 0 else 186000) + (if b0006 then 0 else 186000) + (if b0007 then 0 else 186000) + (if b0008 then 0 else 186000) + (if b0009 then 0 else 186000) + (if b0010 then 0 else 186000) + (if b0011 then 0 else 186000) + (if b0012 then 0 else 186000) + (if b0013 then 0 else 186000) + (if b0014 then 0 else 186000) + (if b0015 then 0 else 186000) + (if b0016 then 0 else 186000) + (if b0017 then 0 else 186000) + (if b0018 then 0 else 186000) + (if b0019 then 0 else 186000) + (if b0020 then 0 else 186000) + (if b0021 then 0 else 186000) + (if b0022 then 0 else 186000) + (if b0023 then 0 else 186000) + (if b0024 then 0 else 186000) + (if b0025 then 0 else 186000) + (if b0026 then 0 else 186000) + (if b0027 then 0 else 186000) + (if b0028 then 0 else 186000) + (if b0029 then 0 else 186000) + (if b0030 then 0 else 186000) + (if b0031 then 0 else 186000) + (if b0032 then 0 else 186000) + (if b0033 then 0 else 186000) + (if b0034 then 0 else 186000) + (if b0035 then 0 else 186000) + (if b0036 then 0 else 186000) + (if b0037 then 0 else 186000) + (if b0038 then 0 else 186000) + (if b0039 then 0 else 186000) + (if b0040 then 0 else 186000) + (if b0041 then 0 else 186000) + (if b0042 then 0 else 186000) + (if b0043 then 0 else 186000) + (if b0044 then 0 else 186000) + (if b0045 then 0 else 186000) + (if b0046 then 0 else 186000) + (if b0047 then 0 else 186000) + (if b0048 then 0 else 186000) + (if b0049 then 0 else 186000) + (if b0050 then 0 else 186000) + (if b0051 then 0 else 186000) + (if b0052 then 0 else 186000) + (if b0053 then 0 else 186000) + (if b0054 then 0 else 186000) + (if b0055 then 0 else 186000) + (if b0056 then 0 else 186000) + (if b0057 then 0 else 186000) + (if b0058 then 0 else 186000) + (if b0059 then 0 else 186000) + (if b0060 then 0 else 186000) + (if b0061 then 0 else 186000) + (if b0062 then 0 else 186000) + (if b0063 then 0 else 186000) + (if b0064 then 0 else 186000) + (if b0065 then 0 else 186000) + (if b0066 then 0 else 186000) + (if b0067 then 0 else 186000) + (if b0068 then 0 else 186000) + (if b0069 then 0 else 186000) + (if b0070 then 0 else 186000) + (if b0071 then 0 else 186000) + (if b0072 then 0 else 186000) + (if b0073 then 0 else 186000) + (if b0074 then 0 else 186000) + (if b0075 then 0 else 186000) + (if b0076 then 0 else 186000) + (if b0077 then 0 else 186000) + (if b0078 then 0 else 186000) + (if b0079 then 0 else 186000) + (if b0080 then 0 else 186000) + (if b0081 then 0 else 186000) + (if b0082 then 0 else 186000) + (if b0083 then 0 else 186000) + (if b0084 then 0 else 186000) + (if b0085 then 0 else 186000) + (if b0086 then 0 else 186000) + (if b0087 then 0 else 186000) + (if b0088 then 0 else 186000) + (if b0089 then 0 else 186000) + (if b0090 then 0 else 186000) + (if b0091 then 0 else 186000) + (if b0092 then 0 else 186000) + (if b0093 then 0 else 186000) + (if b0094 then 0 else 186000) + (if b0095 then 0 else 186000) + (if b0096 then 0 else 186000) + (if b0097 then 0 else 186000) + (if b0098 then 0 else 186000) + (if b0099 then 0 else 186000) + (if b0100 then 0 else 186000) + (if b0101 then 0 else 186000) + (if b0102 then 0 else 186000) + (if b0103 then 0 else 186000) + (if b0104 then 0 else 186000) + (if b0105 then 0 else 186000) + (if b0106 then 0 else 186000) + (if b0107 then 0 else 186000) + (if b0108 then 0 else 186000) + (if b0109 then 0 else 186000) + (if b0110 then 0 else 186000) + (if b0111 then 0 else 186000) + (if b0112 then 0 else 186000) + (if b0113 then 0 else 186000) + (if b0114 then 0 else 186000) + (if b0115 then 0 else 186000) + (if b0116 then 0 else 186000) + (if b0118 then 0 else 186000) + (if b0120 then 0 else 186000) + (if b0121 then 0 else 186000) + (if b0122 then 0 else 186000) + (if b0123 then 0 else 186000) + (if b0124 then 0 else 186000) + (if b0125 then 0 else 186000) + (if b0126 then 0 else 186000) + (if b0127 then 0 else 186000) + (if b0128 then 0 else 186000) + (if b0129 then 0 else 186000) + (if b0130 then 0 else 186000) + (if b0131 then 0 else 186000) + (if b0132 then 0 else 186000) + (if b0133 then 0 else 186000) + (if b0134 then 0 else 186000) + (if b0135 then 0 else 186000) + (if b0136 then 0 else 186000) + (if b0137 then 0 else 186000) + (if b0138 then 0 else 186000) + (if b0139 then 0 else 186000) + (if b0140 then 0 else 186000) + (if b0141 then 0 else 186000) + (if b0142 then 0 else 186000) + (if b0143 then 0 else 186000) + (if b0144 then 0 else 186000) + (if b0145 then 0 else 186000) + (if b0146 then 0 else 186000) + (if b0147 then 0 else 186000) + (if b0148 then 0 else 186000) + (if b0149 then 0 else 186000) + (if b0150 then 0 else 186000) + (if b0151 then 0 else 186000) + (if b0152 then 0 else 186000) + (if b0153 then 0 else 186000) + (if b0154 then 0 else 186000) + (if b0155 then 0 else 186000) + (if b0156 then 0 else 186000) + (if b0157 then 0 else 186000) + (if b0158 then 0 else 186000) + (if b0159 then 0 else 186000) + (if b0160 then 0 else 186000) + (if b0161 then 0 else 186000) + (if b0162 then 0 else 186000) + (if b0163 then 0 else 186000) + (if b0164 then 0 else 186000) + (if b0165 then 0 else 186000) + (if b0166 then 0 else 186000) + (if b0167 then 0 else 186000) + (if b0168 then 0 else 186000) + (if b0169 then 0 else 186000) + (if b0172 then 0 else 186000) + (if b0174 then 0 else 186000) + (if b0175 then 0 else 186000) + (if b0176 then 0 else 186000) + (if b0177 then 0 else 186000) + (if b0178 then 0 else 186000) + (if b0179 then 0 else 186000) + (if b0180 then 0 else 186000) + (if b0181 then 0 else 186000) + (if b0182 then 0 else 186000) + (if b0183 then 0 else 186000) + (if b0184 then 0 else 186000) + (if b0185 then 0 else 186000) + (if b0186 then 0 else 186000) + (if b0187 then 0 else 186000) + (if b0188 then 0 else 186000) + (if b0189 then 0 else 186000) + (if b0190 then 0 else 186000) + (if b0191 then 0 else 186000) + (if b0192 then 0 else 186000) + (if b0193 then 0 else 186000) + (if b0195 then 0 else 186000) + (if b0197 then 0 else 186000) + (if b0198 then 0 else 186000) + (if b0199 then 0 else 186000) + (if b0200 then 0 else 186000) + (if b0201 then 0 else 186000) + (if b0202 then 0 else 186000) + (if b0203 then 0 else 186000) + (if b0205 then 0 else 186000) + (if b0206 then 0 else 186000) + (if b0207 then 0 else 186000) + (if b0208 then 0 else 186000) + (if b0210 then 0 else 186000) + (if b0211 then 0 else 186000) + (if b0212 then 0 else 186000) + (if b0213 then 0 else 186000) + (if b0214 then 0 else 186000) + (if b0215 then 0 else 186000) + (if b0216 then 0 else 186000) + (if b0217 then 0 else 186000) + (if b0218 then 0 else 186000) + (if b0219 then 0 else 186000) + (if b0220 then 0 else 186000) + (if b0221 then 0 else 186000) + (if b0222 then 0 else 186000) + (if b0223 then 0 else 186000) + (if b0224 then 0 else 186000) + (if b0225 then 0 else 186000) + (if b0226 then 0 else 186000) + (if b0227 then 0 else 186000) + (if b0228 then 0 else 186000) + (if b0229 then 0 else 186000) + (if b0230 then 0 else 186000) + (if b0231 then 0 else 186000) + (if b0232 then 0 else 186000) + (if b0235 then 0 else 186000) + (if b0237 then 0 else 186000) + (if b0238 then 0 else 186000) + (if b0239 then 0 else 186000) + (if b0240 then 0 else 186000) + (if b0241 then 0 else 186000) + (if b0242 then 0 else 186000) + (if b0243 then 0 else 186000) + (if b0244 then 0 else 186000) + (if b0245 then 0 else 186000) + (if b0246 then 0 else 186000) + (if b0247 then 0 else 186000) + (if b0248 then 0 else 186000) + (if b0249 then 0 else 186000) + (if b0250 then 0 else 186000) + (if b0251 then 0 else 186000) + (if b0252 then 0 else 186000) + (if b0253 then 0 else 186000) + (if b0254 then 0 else 186000) + (if b0255 then 0 else 186000) + (if b0256 then 0 else 186000) + (if b0257 then 0 else 186000) + (if b0258 then 0 else 186000) + (if b0259 then 0 else 186000) + (if b0260 then 0 else 186000) + (if b0261 then 0 else 186000) + (if b0262 then 0 else 186000) + (if b0263 then 0 else 186000) + (if b0264 then 0 else 186000) + (if b0265 then 0 else 186000) + (if b0266 then 0 else 186000) + (if b0267 then 0 else 186000) + (if b0268 then 0 else 186000) + (if b0269 then 0 else 186000) + (if b0270 then 0 else 186000) + (if b0271 then 0 else 186000) + (if b0272 then 0 else 186000) + (if b0273 then 0 else 186000) + (if b0274 then 0 else 186000) + (if b0275 then 0 else 186000) + (if b0276 then 0 else 186000) + (if b0277 then 0 else 186000) + (if b0278 then 0 else 186000) + (if b0279 then 0 else 186000) + (if b0280 then 0 else 186000) + (if b0281 then 0 else 186000) + (if b0282 then 0 else 186000) + (if b0283 then 0 else 186000) + (if b0284 then 0 else 186000) + (if b0285 then 0 else 186000) + (if b0286 then 0 else 186000) + (if b0287 then 0 else 186000) + (if b0288 then 0 else 186000) + (if b0289 then 0 else 186000) + (if b0290 then 0 else 186000) + (if b0291 then 0 else 186000) + (if b0292 then 0 else 186000) + (if b0293 then 0 else 186000) + (if b0294 then 0 else 186000) + (if b0295 then 0 else 186000) + (if b0296 then 0 else 186000) + (if b0297 then 0 else 186000) + (if b0298 then 0 else 186000) + (if b0299 then 0 else 186000) + (if b0300 then 0 else 186000) + (if b0301 then 0 else 186000) + (if b0302 then 0 else 186000) + (if b0303 then 0 else 186000) + (if b0304 then 0 else 186000) + (if b0305 then 0 else 186000) + (if b0306 then 0 else 186000) + (if b0307 then 0 else 186000) + (if b0308 then 0 else 186000) + (if b0309 then 0 else 186000) + (if b0310 then 0 else 186000) + (if b0311 then 0 else 186000) + (if b0312 then 0 else 186000) + (if b0313 then 0 else 186000) + (if b0314 then 0 else 186000) + (if b0315 then 0 else 186000) + (if b0316 then 0 else 186000) + (if b0317 then 0 else 186000) + (if b0318 then 0 else 186000) + (if b0319 then 0 else 186000) + (if b0320 then 0 else 186000) + (if b0321 then 0 else 186000) + (if b0322 then 0 else 186000) + (if b0323 then 0 else 186000) + (if b0324 then 0 else 186000) + (if b0325 then 0 else 186000) + (if b0326 then 0 else 186000) + (if b0327 then 0 else 186000) + (if b0328 then 0 else 186000) + (if b0329 then 0 else 186000) + (if b0330 then 0 else 186000) + (if b0331 then 0 else 186000) + (if b0332 then 0 else 186000) + (if b0333 then 0 else 186000) + (if b0334 then 0 else 186000) + (if b0335 then 0 else 186000) + (if b0336 then 0 else 186000) + (if b0337 then 0 else 186000) + (if b0338 then 0 else 186000) + (if b0339 then 0 else 186000) + (if b0340 then 0 else 186000) + (if b0341 then 0 else 186000) + (if b0376 then 0 else 186000) + (if b0377 then 0 else 186000) + (if b0378 then 0 else 186000) + (if b0379 then 0 else 186000) + (if b0380 then 0 else 186000) + (if b0381 then 0 else 186000) + (if b0382 then 0 else 186000) + (if b0383 then 0 else 186000) + (if b0384 then 0 else 186000) + (if b0385 then 0 else 186000) + (if b0386 then 0 else 186000) + (if b0387 then 0 else 186000) + (if b0388 then 0 else 186000) + (if b0389 then 0 else 186000) + (if b0390 then 0 else 186000) + (if b0422 then 0 else 186000) + (if b0423 then 0 else 186000) + (if b0424 then 0 else 186000) + (if b0425 then 0 else 186000) + (if b0426 then 0 else 186000) + (if b0427 then 0 else 186000) + (if b0428 then 0 else 186000) + (if b0429 then 0 else 186000) + (if b0430 then 0 else 186000) + (if b0431 then 0 else 186000) + (if b0432 then 0 else 186000) + (if b0433 then 0 else 186000) + (if b0434 then 0 else 186000) + (if b0435 then 0 else 186000) + (if b0436 then 0 else 186000) + (if b0437 then 0 else 186000) + (if b0438 then 0 else 186000) + (if b0439 then 0 else 186000) + (if b0440 then 0 else 186000) + (if b0441 then 0 else 186000) + (if b0442 then 0 else 186000) + (if b0443 then 0 else 186000) + (if b0444 then 0 else 186000) + (if b0445 then 0 else 186000) + (if b0446 then 0 else 186000) + (if b0447 then 0 else 186000) + (if b0448 then 0 else 186000) + (if b0449 then 0 else 186000) + (if b0450 then 0 else 186000) + (if b0451 then 0 else 186000) + (if b0452 then 0 else 186000) + (if b0453 then 0 else 186000) + (if b0454 then 0 else 186000) + (if b0455 then 0 else 186000) + (if b0456 then 0 else 186000) + (if b0457 then 0 else 186000) + (if b0458 then 0 else 186000) + (if b0459 then 0 else 186000) + (if b0460 then 0 else 186000) + (if b0461 then 0 else 186000) + (if b0462 then 0 else 186000) + (if b0463 then 0 else 186000) + (if b0464 then 0 else 186000) + (if b0465 then 0 else 186000) < 441
}
Prover Time taken = 12.384919
Added Horn clause: 17 && 29 && 0 && 0 && 16 && 0 && 26 && 0 && 0 && 0 && 0 => 30
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/linear-algebra/kernels/3mm/kernel3.bpl.ice2.bpl
Total learner time was 00:00:00.1273820
Verifying $kernel3: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool, b0228: bool, b0229: bool, b0230: bool, b0231: bool, b0232: bool, b0233: bool, b0234: bool, b0235: bool, b0236: bool, b0237: bool, b0238: bool, b0239: bool, b0240: bool, b0241: bool, b0242: bool, b0243: bool, b0244: bool, b0245: bool, b0246: bool, b0247: bool, b0248: bool, b0249: bool, b0250: bool, b0251: bool, b0252: bool, b0253: bool, b0254: bool, b0255: bool, b0256: bool, b0257: bool, b0258: bool, b0259: bool, b0260: bool, b0261: bool, b0262: bool, b0263: bool, b0264: bool, b0265: bool, b0266: bool, b0267: bool, b0268: bool, b0269: bool, b0270: bool, b0271: bool, b0272: bool, b0273: bool, b0274: bool, b0275: bool, b0276: bool, b0277: bool, b0278: bool, b0279: bool, b0280: bool, b0281: bool, b0282: bool, b0283: bool, b0284: bool, b0285: bool, b0286: bool, b0287: bool, b0288: bool, b0289: bool, b0290: bool, b0291: bool, b0292: bool, b0293: bool, b0294: bool, b0295: bool, b0296: bool, b0297: bool, b0298: bool, b0299: bool, b0300: bool, b0301: bool, b0302: bool, b0303: bool, b0304: bool, b0305: bool, b0306: bool, b0307: bool, b0308: bool, b0309: bool, b0310: bool, b0311: bool, b0312: bool, b0313: bool, b0314: bool, b0315: bool, b0316: bool, b0317: bool, b0318: bool, b0319: bool, b0320: bool, b0321: bool, b0322: bool, b0323: bool, b0324: bool, b0325: bool, b0326: bool, b0327: bool, b0328: bool, b0329: bool, b0330: bool, b0331: bool, b0332: bool, b0333: bool, b0334: bool, b0335: bool, b0336: bool, b0337: bool, b0338: bool, b0339: bool, b0340: bool, b0341: bool, b0342: bool, b0343: bool, b0344: bool, b0345: bool, b0346: bool, b0347: bool, b0348: bool, b0349: bool, b0350: bool, b0351: bool, b0352: bool, b0353: bool, b0354: bool, b0355: bool, b0356: bool, b0357: bool, b0358: bool, b0359: bool, b0360: bool, b0361: bool, b0362: bool, b0363: bool, b0364: bool, b0365: bool, b0366: bool, b0367: bool, b0368: bool, b0369: bool, b0370: bool, b0371: bool, b0372: bool, b0373: bool, b0374: bool, b0375: bool, b0376: bool, b0377: bool, b0378: bool, b0379: bool, b0380: bool, b0381: bool, b0382: bool, b0383: bool, b0384: bool, b0385: bool, b0386: bool, b0387: bool, b0388: bool, b0389: bool, b0390: bool, b0391: bool, b0392: bool, b0393: bool, b0394: bool, b0395: bool, b0396: bool, b0397: bool, b0398: bool, b0399: bool, b0400: bool, b0401: bool, b0402: bool, b0403: bool, b0404: bool, b0405: bool, b0406: bool, b0407: bool, b0408: bool, b0409: bool, b0410: bool, b0411: bool, b0412: bool, b0413: bool, b0414: bool, b0415: bool, b0416: bool, b0417: bool, b0418: bool, b0419: bool, b0420: bool, b0421: bool, b0422: bool, b0423: bool, b0424: bool, b0425: bool, b0426: bool, b0427: bool, b0428: bool, b0429: bool, b0430: bool, b0431: bool, b0432: bool, b0433: bool, b0434: bool, b0435: bool, b0436: bool, b0437: bool, b0438: bool, b0439: bool, b0440: bool, b0441: bool, b0442: bool, b0443: bool, b0444: bool, b0445: bool, b0446: bool, b0447: bool, b0448: bool, b0449: bool, b0450: bool, b0451: bool, b0452: bool, b0453: bool, b0454: bool, b0455: bool, b0456: bool, b0457: bool, b0458: bool, b0459: bool, b0460: bool, b0461: bool, b0462: bool, b0463: bool, b0464: bool, b0465: bool) : bool
{
  0 + (if b0000 then 0 else 186000) + (if b0001 then 0 else 186000) + (if b0002 then 0 else 186000) + (if b0003 then 0 else 186000) + (if b0004 then 0 else 186000) + (if b0005 then 0 else 186000) + (if b0006 then 0 else 186000) + (if b0007 then 0 else 186000) + (if b0008 then 0 else 186000) + (if b0009 then 0 else 186000) + (if b0010 then 0 else 186000) + (if b0011 then 0 else 186000) + (if b0012 then 0 else 186000) + (if b0013 then 0 else 186000) + (if b0014 then 0 else 186000) + (if b0015 then 0 else 186000) + (if b0016 then 0 else 186000) + (if b0017 then 0 else 186000) + (if b0018 then 0 else 186000) + (if b0019 then 0 else 186000) + (if b0020 then 0 else 186000) + (if b0021 then 0 else 186000) + (if b0022 then 0 else 186000) + (if b0023 then 0 else 186000) + (if b0024 then 0 else 186000) + (if b0025 then 0 else 186000) + (if b0026 then 0 else 186000) + (if b0027 then 0 else 186000) + (if b0028 then 0 else 186000) + (if b0029 then 0 else 186000) + (if b0030 then 0 else 186000) + (if b0031 then 0 else 186000) + (if b0032 then 0 else 186000) + (if b0033 then 0 else 186000) + (if b0034 then 0 else 186000) + (if b0035 then 0 else 186000) + (if b0036 then 0 else 186000) + (if b0037 then 0 else 186000) + (if b0038 then 0 else 186000) + (if b0039 then 0 else 186000) + (if b0040 then 0 else 186000) + (if b0041 then 0 else 186000) + (if b0042 then 0 else 186000) + (if b0043 then 0 else 186000) + (if b0044 then 0 else 186000) + (if b0045 then 0 else 186000) + (if b0046 then 0 else 186000) + (if b0047 then 0 else 186000) + (if b0048 then 0 else 186000) + (if b0049 then 0 else 186000) + (if b0050 then 0 else 186000) + (if b0051 then 0 else 186000) + (if b0052 then 0 else 186000) + (if b0053 then 0 else 186000) + (if b0054 then 0 else 186000) + (if b0055 then 0 else 186000) + (if b0056 then 0 else 186000) + (if b0057 then 0 else 186000) + (if b0058 then 0 else 186000) + (if b0059 then 0 else 186000) + (if b0060 then 0 else 186000) + (if b0061 then 0 else 186000) + (if b0062 then 0 else 186000) + (if b0063 then 0 else 186000) + (if b0064 then 0 else 186000) + (if b0065 then 0 else 186000) + (if b0066 then 0 else 186000) + (if b0067 then 0 else 186000) + (if b0068 then 0 else 186000) + (if b0069 then 0 else 186000) + (if b0070 then 0 else 186000) + (if b0071 then 0 else 186000) + (if b0072 then 0 else 186000) + (if b0073 then 0 else 186000) + (if b0074 then 0 else 186000) + (if b0075 then 0 else 186000) + (if b0076 then 0 else 186000) + (if b0077 then 0 else 186000) + (if b0078 then 0 else 186000) + (if b0079 then 0 else 186000) + (if b0080 then 0 else 186000) + (if b0081 then 0 else 186000) + (if b0082 then 0 else 186000) + (if b0083 then 0 else 186000) + (if b0084 then 0 else 186000) + (if b0085 then 0 else 186000) + (if b0086 then 0 else 186000) + (if b0087 then 0 else 186000) + (if b0088 then 0 else 186000) + (if b0089 then 0 else 186000) + (if b0090 then 0 else 186000) + (if b0091 then 0 else 186000) + (if b0092 then 0 else 186000) + (if b0093 then 0 else 186000) + (if b0094 then 0 else 186000) + (if b0095 then 0 else 186000) + (if b0096 then 0 else 186000) + (if b0097 then 0 else 186000) + (if b0098 then 0 else 186000) + (if b0099 then 0 else 186000) + (if b0100 then 0 else 186000) + (if b0101 then 0 else 186000) + (if b0102 then 0 else 186000) + (if b0103 then 0 else 186000) + (if b0104 then 0 else 186000) + (if b0105 then 0 else 186000) + (if b0106 then 0 else 186000) + (if b0107 then 0 else 186000) + (if b0108 then 0 else 186000) + (if b0109 then 0 else 186000) + (if b0110 then 0 else 186000) + (if b0111 then 0 else 186000) + (if b0112 then 0 else 186000) + (if b0113 then 0 else 186000) + (if b0114 then 0 else 186000) + (if b0115 then 0 else 186000) + (if b0116 then 0 else 186000) + (if b0118 then 0 else 186000) + (if b0120 then 0 else 186000) + (if b0121 then 0 else 186000) + (if b0122 then 0 else 186000) + (if b0123 then 0 else 186000) + (if b0124 then 0 else 186000) + (if b0125 then 0 else 186000) + (if b0126 then 0 else 186000) + (if b0127 then 0 else 186000) + (if b0128 then 0 else 186000) + (if b0129 then 0 else 186000) + (if b0130 then 0 else 186000) + (if b0131 then 0 else 186000) + (if b0132 then 0 else 186000) + (if b0133 then 0 else 186000) + (if b0134 then 0 else 186000) + (if b0135 then 0 else 186000) + (if b0136 then 0 else 186000) + (if b0137 then 0 else 186000) + (if b0138 then 0 else 186000) + (if b0139 then 0 else 186000) + (if b0140 then 0 else 186000) + (if b0141 then 0 else 186000) + (if b0142 then 0 else 186000) + (if b0143 then 0 else 186000) + (if b0144 then 0 else 186000) + (if b0145 then 0 else 186000) + (if b0146 then 0 else 186000) + (if b0147 then 0 else 186000) + (if b0148 then 0 else 186000) + (if b0149 then 0 else 186000) + (if b0150 then 0 else 186000) + (if b0151 then 0 else 186000) + (if b0152 then 0 else 186000) + (if b0153 then 0 else 186000) + (if b0154 then 0 else 186000) + (if b0155 then 0 else 186000) + (if b0156 then 0 else 186000) + (if b0157 then 0 else 186000) + (if b0158 then 0 else 186000) + (if b0159 then 0 else 186000) + (if b0160 then 0 else 186000) + (if b0161 then 0 else 186000) + (if b0162 then 0 else 186000) + (if b0163 then 0 else 186000) + (if b0164 then 0 else 186000) + (if b0165 then 0 else 186000) + (if b0166 then 0 else 186000) + (if b0167 then 0 else 186000) + (if b0168 then 0 else 186000) + (if b0169 then 0 else 186000) + (if b0172 then 0 else 186000) + (if b0174 then 0 else 186000) + (if b0175 then 0 else 186000) + (if b0176 then 0 else 186000) + (if b0177 then 0 else 186000) + (if b0178 then 0 else 186000) + (if b0179 then 0 else 186000) + (if b0180 then 0 else 186000) + (if b0181 then 0 else 186000) + (if b0182 then 0 else 186000) + (if b0183 then 0 else 186000) + (if b0184 then 0 else 186000) + (if b0185 then 0 else 186000) + (if b0186 then 0 else 186000) + (if b0187 then 0 else 186000) + (if b0188 then 0 else 186000) + (if b0189 then 0 else 186000) + (if b0190 then 0 else 186000) + (if b0191 then 0 else 186000) + (if b0192 then 0 else 186000) + (if b0193 then 0 else 186000) + (if b0195 then 0 else 186000) + (if b0197 then 0 else 186000) + (if b0198 then 0 else 186000) + (if b0199 then 0 else 186000) + (if b0200 then 0 else 186000) + (if b0201 then 0 else 186000) + (if b0202 then 0 else 186000) + (if b0203 then 0 else 186000) + (if b0205 then 0 else 186000) + (if b0206 then 0 else 186000) + (if b0207 then 0 else 186000) + (if b0208 then 0 else 186000) + (if b0210 then 0 else 186000) + (if b0212 then 0 else 186000) + (if b0214 then 0 else 186000) + (if b0215 then 0 else 186000) + (if b0216 then 0 else 186000) + (if b0217 then 0 else 186000) + (if b0218 then 0 else 186000) + (if b0219 then 0 else 186000) + (if b0220 then 0 else 186000) + (if b0221 then 0 else 186000) + (if b0222 then 0 else 186000) + (if b0223 then 0 else 186000) + (if b0224 then 0 else 186000) + (if b0225 then 0 else 186000) + (if b0226 then 0 else 186000) + (if b0227 then 0 else 186000) + (if b0228 then 0 else 186000) + (if b0229 then 0 else 186000) + (if b0230 then 0 else 186000) + (if b0231 then 0 else 186000) + (if b0232 then 0 else 186000) + (if b0235 then 0 else 186000) + (if b0237 then 0 else 186000) + (if b0238 then 0 else 186000) + (if b0239 then 0 else 186000) + (if b0240 then 0 else 186000) + (if b0241 then 0 else 186000) + (if b0242 then 0 else 186000) + (if b0243 then 0 else 186000) + (if b0244 then 0 else 186000) + (if b0245 then 0 else 186000) + (if b0246 then 0 else 186000) + (if b0247 then 0 else 186000) + (if b0248 then 0 else 186000) + (if b0249 then 0 else 186000) + (if b0250 then 0 else 186000) + (if b0251 then 0 else 186000) + (if b0252 then 0 else 186000) + (if b0253 then 0 else 186000) + (if b0254 then 0 else 186000) + (if b0255 then 0 else 186000) + (if b0256 then 0 else 186000) + (if b0257 then 0 else 186000) + (if b0258 then 0 else 186000) + (if b0259 then 0 else 186000) + (if b0260 then 0 else 186000) + (if b0261 then 0 else 186000) + (if b0262 then 0 else 186000) + (if b0263 then 0 else 186000) + (if b0264 then 0 else 186000) + (if b0265 then 0 else 186000) + (if b0266 then 0 else 186000) + (if b0267 then 0 else 186000) + (if b0268 then 0 else 186000) + (if b0269 then 0 else 186000) + (if b0270 then 0 else 186000) + (if b0271 then 0 else 186000) + (if b0272 then 0 else 186000) + (if b0273 then 0 else 186000) + (if b0274 then 0 else 186000) + (if b0275 then 0 else 186000) + (if b0276 then 0 else 186000) + (if b0277 then 0 else 186000) + (if b0278 then 0 else 186000) + (if b0279 then 0 else 186000) + (if b0280 then 0 else 186000) + (if b0281 then 0 else 186000) + (if b0282 then 0 else 186000) + (if b0283 then 0 else 186000) + (if b0284 then 0 else 186000) + (if b0285 then 0 else 186000) + (if b0286 then 0 else 186000) + (if b0287 then 0 else 186000) + (if b0288 then 0 else 186000) + (if b0289 then 0 else 186000) + (if b0290 then 0 else 186000) + (if b0291 then 0 else 186000) + (if b0292 then 0 else 186000) + (if b0293 then 0 else 186000) + (if b0294 then 0 else 186000) + (if b0295 then 0 else 186000) + (if b0296 then 0 else 186000) + (if b0297 then 0 else 186000) + (if b0298 then 0 else 186000) + (if b0299 then 0 else 186000) + (if b0300 then 0 else 186000) + (if b0301 then 0 else 186000) + (if b0302 then 0 else 186000) + (if b0303 then 0 else 186000) + (if b0304 then 0 else 186000) + (if b0305 then 0 else 186000) + (if b0306 then 0 else 186000) + (if b0307 then 0 else 186000) + (if b0308 then 0 else 186000) + (if b0309 then 0 else 186000) + (if b0310 then 0 else 186000) + (if b0311 then 0 else 186000) + (if b0312 then 0 else 186000) + (if b0313 then 0 else 186000) + (if b0314 then 0 else 186000) + (if b0315 then 0 else 186000) + (if b0316 then 0 else 186000) + (if b0317 then 0 else 186000) + (if b0318 then 0 else 186000) + (if b0319 then 0 else 186000) + (if b0320 then 0 else 186000) + (if b0321 then 0 else 186000) + (if b0322 then 0 else 186000) + (if b0323 then 0 else 186000) + (if b0324 then 0 else 186000) + (if b0325 then 0 else 186000) + (if b0326 then 0 else 186000) + (if b0327 then 0 else 186000) + (if b0328 then 0 else 186000) + (if b0329 then 0 else 186000) + (if b0330 then 0 else 186000) + (if b0331 then 0 else 186000) + (if b0332 then 0 else 186000) + (if b0333 then 0 else 186000) + (if b0334 then 0 else 186000) + (if b0335 then 0 else 186000) + (if b0336 then 0 else 186000) + (if b0337 then 0 else 186000) + (if b0338 then 0 else 186000) + (if b0339 then 0 else 186000) + (if b0340 then 0 else 186000) + (if b0341 then 0 else 186000) + (if b0376 then 0 else 186000) + (if b0377 then 0 else 186000) + (if b0378 then 0 else 186000) + (if b0379 then 0 else 186000) + (if b0380 then 0 else 186000) + (if b0381 then 0 else 186000) + (if b0382 then 0 else 186000) + (if b0383 then 0 else 186000) + (if b0384 then 0 else 186000) + (if b0385 then 0 else 186000) + (if b0386 then 0 else 186000) + (if b0387 then 0 else 186000) + (if b0388 then 0 else 186000) + (if b0389 then 0 else 186000) + (if b0390 then 0 else 186000) + (if b0422 then 0 else 186000) + (if b0423 then 0 else 186000) + (if b0424 then 0 else 186000) + (if b0425 then 0 else 186000) + (if b0426 then 0 else 186000) + (if b0427 then 0 else 186000) + (if b0428 then 0 else 186000) + (if b0429 then 0 else 186000) + (if b0430 then 0 else 186000) + (if b0431 then 0 else 186000) + (if b0432 then 0 else 186000) + (if b0433 then 0 else 186000) + (if b0434 then 0 else 186000) + (if b0435 then 0 else 186000) + (if b0436 then 0 else 186000) + (if b0437 then 0 else 186000) + (if b0438 then 0 else 186000) + (if b0439 then 0 else 186000) + (if b0440 then 0 else 186000) + (if b0441 then 0 else 186000) + (if b0442 then 0 else 186000) + (if b0443 then 0 else 186000) + (if b0444 then 0 else 186000) + (if b0445 then 0 else 186000) + (if b0446 then 0 else 186000) + (if b0447 then 0 else 186000) + (if b0448 then 0 else 186000) + (if b0449 then 0 else 186000) + (if b0450 then 0 else 186000) + (if b0451 then 0 else 186000) + (if b0452 then 0 else 186000) + (if b0453 then 0 else 186000) + (if b0454 then 0 else 186000) + (if b0455 then 0 else 186000) + (if b0456 then 0 else 186000) + (if b0457 then 0 else 186000) + (if b0458 then 0 else 186000) + (if b0459 then 0 else 186000) + (if b0460 then 0 else 186000) + (if b0461 then 0 else 186000) + (if b0462 then 0 else 186000) + (if b0463 then 0 else 186000) + (if b0464 then 0 else 186000) + (if b0465 then 0 else 186000) < 441
}
Prover Time taken = 12.638484
Added Horn clause: 31 && 32 && 0 && 0 && 16 && 0 && 26 && 0 && 0 && 0 && 0 && 0 && 0 => 33
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/linear-algebra/kernels/3mm/kernel3.bpl.ice2.bpl
Total learner time was 00:00:00.1288200
Verifying $kernel3: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool, b0228: bool, b0229: bool, b0230: bool, b0231: bool, b0232: bool, b0233: bool, b0234: bool, b0235: bool, b0236: bool, b0237: bool, b0238: bool, b0239: bool, b0240: bool, b0241: bool, b0242: bool, b0243: bool, b0244: bool, b0245: bool, b0246: bool, b0247: bool, b0248: bool, b0249: bool, b0250: bool, b0251: bool, b0252: bool, b0253: bool, b0254: bool, b0255: bool, b0256: bool, b0257: bool, b0258: bool, b0259: bool, b0260: bool, b0261: bool, b0262: bool, b0263: bool, b0264: bool, b0265: bool, b0266: bool, b0267: bool, b0268: bool, b0269: bool, b0270: bool, b0271: bool, b0272: bool, b0273: bool, b0274: bool, b0275: bool, b0276: bool, b0277: bool, b0278: bool, b0279: bool, b0280: bool, b0281: bool, b0282: bool, b0283: bool, b0284: bool, b0285: bool, b0286: bool, b0287: bool, b0288: bool, b0289: bool, b0290: bool, b0291: bool, b0292: bool, b0293: bool, b0294: bool, b0295: bool, b0296: bool, b0297: bool, b0298: bool, b0299: bool, b0300: bool, b0301: bool, b0302: bool, b0303: bool, b0304: bool, b0305: bool, b0306: bool, b0307: bool, b0308: bool, b0309: bool, b0310: bool, b0311: bool, b0312: bool, b0313: bool, b0314: bool, b0315: bool, b0316: bool, b0317: bool, b0318: bool, b0319: bool, b0320: bool, b0321: bool, b0322: bool, b0323: bool, b0324: bool, b0325: bool, b0326: bool, b0327: bool, b0328: bool, b0329: bool, b0330: bool, b0331: bool, b0332: bool, b0333: bool, b0334: bool, b0335: bool, b0336: bool, b0337: bool, b0338: bool, b0339: bool, b0340: bool, b0341: bool, b0342: bool, b0343: bool, b0344: bool, b0345: bool, b0346: bool, b0347: bool, b0348: bool, b0349: bool, b0350: bool, b0351: bool, b0352: bool, b0353: bool, b0354: bool, b0355: bool, b0356: bool, b0357: bool, b0358: bool, b0359: bool, b0360: bool, b0361: bool, b0362: bool, b0363: bool, b0364: bool, b0365: bool, b0366: bool, b0367: bool, b0368: bool, b0369: bool, b0370: bool, b0371: bool, b0372: bool, b0373: bool, b0374: bool, b0375: bool, b0376: bool, b0377: bool, b0378: bool, b0379: bool, b0380: bool, b0381: bool, b0382: bool, b0383: bool, b0384: bool, b0385: bool, b0386: bool, b0387: bool, b0388: bool, b0389: bool, b0390: bool, b0391: bool, b0392: bool, b0393: bool, b0394: bool, b0395: bool, b0396: bool, b0397: bool, b0398: bool, b0399: bool, b0400: bool, b0401: bool, b0402: bool, b0403: bool, b0404: bool, b0405: bool, b0406: bool, b0407: bool, b0408: bool, b0409: bool, b0410: bool, b0411: bool, b0412: bool, b0413: bool, b0414: bool, b0415: bool, b0416: bool, b0417: bool, b0418: bool, b0419: bool, b0420: bool, b0421: bool, b0422: bool, b0423: bool, b0424: bool, b0425: bool, b0426: bool, b0427: bool, b0428: bool, b0429: bool, b0430: bool, b0431: bool, b0432: bool, b0433: bool, b0434: bool, b0435: bool, b0436: bool, b0437: bool, b0438: bool, b0439: bool, b0440: bool, b0441: bool, b0442: bool, b0443: bool, b0444: bool, b0445: bool, b0446: bool, b0447: bool, b0448: bool, b0449: bool, b0450: bool, b0451: bool, b0452: bool, b0453: bool, b0454: bool, b0455: bool, b0456: bool, b0457: bool, b0458: bool, b0459: bool, b0460: bool, b0461: bool, b0462: bool, b0463: bool, b0464: bool, b0465: bool) : bool
{
  0 + (if b0000 then 0 else 186000) + (if b0001 then 0 else 186000) + (if b0002 then 0 else 186000) + (if b0003 then 0 else 186000) + (if b0004 then 0 else 186000) + (if b0005 then 0 else 186000) + (if b0006 then 0 else 186000) + (if b0007 then 0 else 186000) + (if b0008 then 0 else 186000) + (if b0009 then 0 else 186000) + (if b0010 then 0 else 186000) + (if b0011 then 0 else 186000) + (if b0012 then 0 else 186000) + (if b0013 then 0 else 186000) + (if b0014 then 0 else 186000) + (if b0015 then 0 else 186000) + (if b0016 then 0 else 186000) + (if b0017 then 0 else 186000) + (if b0018 then 0 else 186000) + (if b0019 then 0 else 186000) + (if b0020 then 0 else 186000) + (if b0021 then 0 else 186000) + (if b0022 then 0 else 186000) + (if b0023 then 0 else 186000) + (if b0024 then 0 else 186000) + (if b0025 then 0 else 186000) + (if b0026 then 0 else 186000) + (if b0027 then 0 else 186000) + (if b0028 then 0 else 186000) + (if b0029 then 0 else 186000) + (if b0030 then 0 else 186000) + (if b0031 then 0 else 186000) + (if b0032 then 0 else 186000) + (if b0033 then 0 else 186000) + (if b0034 then 0 else 186000) + (if b0035 then 0 else 186000) + (if b0036 then 0 else 186000) + (if b0037 then 0 else 186000) + (if b0038 then 0 else 186000) + (if b0039 then 0 else 186000) + (if b0040 then 0 else 186000) + (if b0041 then 0 else 186000) + (if b0042 then 0 else 186000) + (if b0043 then 0 else 186000) + (if b0044 then 0 else 186000) + (if b0045 then 0 else 186000) + (if b0046 then 0 else 186000) + (if b0047 then 0 else 186000) + (if b0048 then 0 else 186000) + (if b0049 then 0 else 186000) + (if b0050 then 0 else 186000) + (if b0051 then 0 else 186000) + (if b0052 then 0 else 186000) + (if b0053 then 0 else 186000) + (if b0054 then 0 else 186000) + (if b0055 then 0 else 186000) + (if b0056 then 0 else 186000) + (if b0057 then 0 else 186000) + (if b0058 then 0 else 186000) + (if b0059 then 0 else 186000) + (if b0060 then 0 else 186000) + (if b0061 then 0 else 186000) + (if b0062 then 0 else 186000) + (if b0063 then 0 else 186000) + (if b0064 then 0 else 186000) + (if b0065 then 0 else 186000) + (if b0066 then 0 else 186000) + (if b0067 then 0 else 186000) + (if b0068 then 0 else 186000) + (if b0069 then 0 else 186000) + (if b0070 then 0 else 186000) + (if b0071 then 0 else 186000) + (if b0072 then 0 else 186000) + (if b0073 then 0 else 186000) + (if b0074 then 0 else 186000) + (if b0075 then 0 else 186000) + (if b0076 then 0 else 186000) + (if b0077 then 0 else 186000) + (if b0078 then 0 else 186000) + (if b0079 then 0 else 186000) + (if b0080 then 0 else 186000) + (if b0081 then 0 else 186000) + (if b0082 then 0 else 186000) + (if b0083 then 0 else 186000) + (if b0084 then 0 else 186000) + (if b0085 then 0 else 186000) + (if b0086 then 0 else 186000) + (if b0087 then 0 else 186000) + (if b0088 then 0 else 186000) + (if b0089 then 0 else 186000) + (if b0090 then 0 else 186000) + (if b0091 then 0 else 186000) + (if b0092 then 0 else 186000) + (if b0093 then 0 else 186000) + (if b0094 then 0 else 186000) + (if b0095 then 0 else 186000) + (if b0096 then 0 else 186000) + (if b0097 then 0 else 186000) + (if b0098 then 0 else 186000) + (if b0099 then 0 else 186000) + (if b0100 then 0 else 186000) + (if b0101 then 0 else 186000) + (if b0102 then 0 else 186000) + (if b0103 then 0 else 186000) + (if b0104 then 0 else 186000) + (if b0105 then 0 else 186000) + (if b0106 then 0 else 186000) + (if b0107 then 0 else 186000) + (if b0108 then 0 else 186000) + (if b0109 then 0 else 186000) + (if b0110 then 0 else 186000) + (if b0111 then 0 else 186000) + (if b0112 then 0 else 186000) + (if b0113 then 0 else 186000) + (if b0114 then 0 else 186000) + (if b0115 then 0 else 186000) + (if b0116 then 0 else 186000) + (if b0118 then 0 else 186000) + (if b0120 then 0 else 186000) + (if b0121 then 0 else 186000) + (if b0122 then 0 else 186000) + (if b0123 then 0 else 186000) + (if b0124 then 0 else 186000) + (if b0125 then 0 else 186000) + (if b0126 then 0 else 186000) + (if b0127 then 0 else 186000) + (if b0128 then 0 else 186000) + (if b0129 then 0 else 186000) + (if b0130 then 0 else 186000) + (if b0131 then 0 else 186000) + (if b0132 then 0 else 186000) + (if b0134 then 0 else 186000) + (if b0136 then 0 else 186000) + (if b0137 then 0 else 186000) + (if b0138 then 0 else 186000) + (if b0139 then 0 else 186000) + (if b0140 then 0 else 186000) + (if b0141 then 0 else 186000) + (if b0142 then 0 else 186000) + (if b0143 then 0 else 186000) + (if b0144 then 0 else 186000) + (if b0145 then 0 else 186000) + (if b0146 then 0 else 186000) + (if b0147 then 0 else 186000) + (if b0148 then 0 else 186000) + (if b0149 then 0 else 186000) + (if b0150 then 0 else 186000) + (if b0151 then 0 else 186000) + (if b0152 then 0 else 186000) + (if b0153 then 0 else 186000) + (if b0154 then 0 else 186000) + (if b0155 then 0 else 186000) + (if b0156 then 0 else 186000) + (if b0157 then 0 else 186000) + (if b0158 then 0 else 186000) + (if b0159 then 0 else 186000) + (if b0160 then 0 else 186000) + (if b0161 then 0 else 186000) + (if b0162 then 0 else 186000) + (if b0163 then 0 else 186000) + (if b0164 then 0 else 186000) + (if b0165 then 0 else 186000) + (if b0166 then 0 else 186000) + (if b0167 then 0 else 186000) + (if b0168 then 0 else 186000) + (if b0169 then 0 else 186000) + (if b0172 then 0 else 186000) + (if b0174 then 0 else 186000) + (if b0175 then 0 else 186000) + (if b0176 then 0 else 186000) + (if b0177 then 0 else 186000) + (if b0178 then 0 else 186000) + (if b0179 then 0 else 186000) + (if b0180 then 0 else 186000) + (if b0181 then 0 else 186000) + (if b0182 then 0 else 186000) + (if b0183 then 0 else 186000) + (if b0184 then 0 else 186000) + (if b0185 then 0 else 186000) + (if b0186 then 0 else 186000) + (if b0187 then 0 else 186000) + (if b0188 then 0 else 186000) + (if b0189 then 0 else 186000) + (if b0190 then 0 else 186000) + (if b0191 then 0 else 186000) + (if b0192 then 0 else 186000) + (if b0193 then 0 else 186000) + (if b0195 then 0 else 186000) + (if b0197 then 0 else 186000) + (if b0198 then 0 else 186000) + (if b0199 then 0 else 186000) + (if b0200 then 0 else 186000) + (if b0201 then 0 else 186000) + (if b0202 then 0 else 186000) + (if b0203 then 0 else 186000) + (if b0205 then 0 else 186000) + (if b0206 then 0 else 186000) + (if b0207 then 0 else 186000) + (if b0208 then 0 else 186000) + (if b0210 then 0 else 186000) + (if b0212 then 0 else 186000) + (if b0214 then 0 else 186000) + (if b0215 then 0 else 186000) + (if b0216 then 0 else 186000) + (if b0217 then 0 else 186000) + (if b0218 then 0 else 186000) + (if b0219 then 0 else 186000) + (if b0220 then 0 else 186000) + (if b0221 then 0 else 186000) + (if b0222 then 0 else 186000) + (if b0223 then 0 else 186000) + (if b0224 then 0 else 186000) + (if b0225 then 0 else 186000) + (if b0226 then 0 else 186000) + (if b0227 then 0 else 186000) + (if b0228 then 0 else 186000) + (if b0229 then 0 else 186000) + (if b0230 then 0 else 186000) + (if b0231 then 0 else 186000) + (if b0232 then 0 else 186000) + (if b0235 then 0 else 186000) + (if b0237 then 0 else 186000) + (if b0238 then 0 else 186000) + (if b0239 then 0 else 186000) + (if b0240 then 0 else 186000) + (if b0241 then 0 else 186000) + (if b0242 then 0 else 186000) + (if b0243 then 0 else 186000) + (if b0244 then 0 else 186000) + (if b0245 then 0 else 186000) + (if b0246 then 0 else 186000) + (if b0247 then 0 else 186000) + (if b0248 then 0 else 186000) + (if b0249 then 0 else 186000) + (if b0250 then 0 else 186000) + (if b0251 then 0 else 186000) + (if b0252 then 0 else 186000) + (if b0253 then 0 else 186000) + (if b0254 then 0 else 186000) + (if b0255 then 0 else 186000) + (if b0256 then 0 else 186000) + (if b0257 then 0 else 186000) + (if b0258 then 0 else 186000) + (if b0259 then 0 else 186000) + (if b0260 then 0 else 186000) + (if b0261 then 0 else 186000) + (if b0262 then 0 else 186000) + (if b0263 then 0 else 186000) + (if b0264 then 0 else 186000) + (if b0265 then 0 else 186000) + (if b0266 then 0 else 186000) + (if b0267 then 0 else 186000) + (if b0268 then 0 else 186000) + (if b0269 then 0 else 186000) + (if b0270 then 0 else 186000) + (if b0271 then 0 else 186000) + (if b0272 then 0 else 186000) + (if b0273 then 0 else 186000) + (if b0274 then 0 else 186000) + (if b0275 then 0 else 186000) + (if b0276 then 0 else 186000) + (if b0277 then 0 else 186000) + (if b0278 then 0 else 186000) + (if b0279 then 0 else 186000) + (if b0280 then 0 else 186000) + (if b0281 then 0 else 186000) + (if b0282 then 0 else 186000) + (if b0283 then 0 else 186000) + (if b0284 then 0 else 186000) + (if b0285 then 0 else 186000) + (if b0286 then 0 else 186000) + (if b0287 then 0 else 186000) + (if b0288 then 0 else 186000) + (if b0289 then 0 else 186000) + (if b0290 then 0 else 186000) + (if b0291 then 0 else 186000) + (if b0292 then 0 else 186000) + (if b0293 then 0 else 186000) + (if b0294 then 0 else 186000) + (if b0295 then 0 else 186000) + (if b0296 then 0 else 186000) + (if b0297 then 0 else 186000) + (if b0298 then 0 else 186000) + (if b0299 then 0 else 186000) + (if b0300 then 0 else 186000) + (if b0301 then 0 else 186000) + (if b0302 then 0 else 186000) + (if b0303 then 0 else 186000) + (if b0304 then 0 else 186000) + (if b0305 then 0 else 186000) + (if b0306 then 0 else 186000) + (if b0307 then 0 else 186000) + (if b0308 then 0 else 186000) + (if b0309 then 0 else 186000) + (if b0310 then 0 else 186000) + (if b0311 then 0 else 186000) + (if b0312 then 0 else 186000) + (if b0313 then 0 else 186000) + (if b0314 then 0 else 186000) + (if b0315 then 0 else 186000) + (if b0316 then 0 else 186000) + (if b0317 then 0 else 186000) + (if b0318 then 0 else 186000) + (if b0319 then 0 else 186000) + (if b0320 then 0 else 186000) + (if b0321 then 0 else 186000) + (if b0322 then 0 else 186000) + (if b0323 then 0 else 186000) + (if b0324 then 0 else 186000) + (if b0325 then 0 else 186000) + (if b0326 then 0 else 186000) + (if b0327 then 0 else 186000) + (if b0328 then 0 else 186000) + (if b0329 then 0 else 186000) + (if b0330 then 0 else 186000) + (if b0331 then 0 else 186000) + (if b0332 then 0 else 186000) + (if b0333 then 0 else 186000) + (if b0334 then 0 else 186000) + (if b0335 then 0 else 186000) + (if b0336 then 0 else 186000) + (if b0337 then 0 else 186000) + (if b0338 then 0 else 186000) + (if b0339 then 0 else 186000) + (if b0340 then 0 else 186000) + (if b0341 then 0 else 186000) + (if b0376 then 0 else 186000) + (if b0377 then 0 else 186000) + (if b0378 then 0 else 186000) + (if b0379 then 0 else 186000) + (if b0380 then 0 else 186000) + (if b0381 then 0 else 186000) + (if b0382 then 0 else 186000) + (if b0383 then 0 else 186000) + (if b0384 then 0 else 186000) + (if b0385 then 0 else 186000) + (if b0386 then 0 else 186000) + (if b0387 then 0 else 186000) + (if b0388 then 0 else 186000) + (if b0389 then 0 else 186000) + (if b0390 then 0 else 186000) + (if b0422 then 0 else 186000) + (if b0423 then 0 else 186000) + (if b0424 then 0 else 186000) + (if b0425 then 0 else 186000) + (if b0426 then 0 else 186000) + (if b0427 then 0 else 186000) + (if b0428 then 0 else 186000) + (if b0429 then 0 else 186000) + (if b0430 then 0 else 186000) + (if b0431 then 0 else 186000) + (if b0432 then 0 else 186000) + (if b0433 then 0 else 186000) + (if b0434 then 0 else 186000) + (if b0435 then 0 else 186000) + (if b0436 then 0 else 186000) + (if b0437 then 0 else 186000) + (if b0438 then 0 else 186000) + (if b0439 then 0 else 186000) + (if b0440 then 0 else 186000) + (if b0441 then 0 else 186000) + (if b0442 then 0 else 186000) + (if b0443 then 0 else 186000) + (if b0444 then 0 else 186000) + (if b0445 then 0 else 186000) + (if b0446 then 0 else 186000) + (if b0447 then 0 else 186000) + (if b0448 then 0 else 186000) + (if b0449 then 0 else 186000) + (if b0450 then 0 else 186000) + (if b0451 then 0 else 186000) + (if b0452 then 0 else 186000) + (if b0453 then 0 else 186000) + (if b0454 then 0 else 186000) + (if b0455 then 0 else 186000) + (if b0456 then 0 else 186000) + (if b0457 then 0 else 186000) + (if b0458 then 0 else 186000) + (if b0459 then 0 else 186000) + (if b0460 then 0 else 186000) + (if b0461 then 0 else 186000) + (if b0462 then 0 else 186000) + (if b0463 then 0 else 186000) + (if b0464 then 0 else 186000) + (if b0465 then 0 else 186000) < 441
}
Prover Time taken = 9.414312
Added Horn clause: 11 && 34 && 33 && 0 && 19 && 0 && 0 && 0 && 0 && 0 && 0 => 35
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/linear-algebra/kernels/3mm/kernel3.bpl.ice2.bpl
Total learner time was 00:00:00.1350100
Verifying $kernel3: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool, b0228: bool, b0229: bool, b0230: bool, b0231: bool, b0232: bool, b0233: bool, b0234: bool, b0235: bool, b0236: bool, b0237: bool, b0238: bool, b0239: bool, b0240: bool, b0241: bool, b0242: bool, b0243: bool, b0244: bool, b0245: bool, b0246: bool, b0247: bool, b0248: bool, b0249: bool, b0250: bool, b0251: bool, b0252: bool, b0253: bool, b0254: bool, b0255: bool, b0256: bool, b0257: bool, b0258: bool, b0259: bool, b0260: bool, b0261: bool, b0262: bool, b0263: bool, b0264: bool, b0265: bool, b0266: bool, b0267: bool, b0268: bool, b0269: bool, b0270: bool, b0271: bool, b0272: bool, b0273: bool, b0274: bool, b0275: bool, b0276: bool, b0277: bool, b0278: bool, b0279: bool, b0280: bool, b0281: bool, b0282: bool, b0283: bool, b0284: bool, b0285: bool, b0286: bool, b0287: bool, b0288: bool, b0289: bool, b0290: bool, b0291: bool, b0292: bool, b0293: bool, b0294: bool, b0295: bool, b0296: bool, b0297: bool, b0298: bool, b0299: bool, b0300: bool, b0301: bool, b0302: bool, b0303: bool, b0304: bool, b0305: bool, b0306: bool, b0307: bool, b0308: bool, b0309: bool, b0310: bool, b0311: bool, b0312: bool, b0313: bool, b0314: bool, b0315: bool, b0316: bool, b0317: bool, b0318: bool, b0319: bool, b0320: bool, b0321: bool, b0322: bool, b0323: bool, b0324: bool, b0325: bool, b0326: bool, b0327: bool, b0328: bool, b0329: bool, b0330: bool, b0331: bool, b0332: bool, b0333: bool, b0334: bool, b0335: bool, b0336: bool, b0337: bool, b0338: bool, b0339: bool, b0340: bool, b0341: bool, b0342: bool, b0343: bool, b0344: bool, b0345: bool, b0346: bool, b0347: bool, b0348: bool, b0349: bool, b0350: bool, b0351: bool, b0352: bool, b0353: bool, b0354: bool, b0355: bool, b0356: bool, b0357: bool, b0358: bool, b0359: bool, b0360: bool, b0361: bool, b0362: bool, b0363: bool, b0364: bool, b0365: bool, b0366: bool, b0367: bool, b0368: bool, b0369: bool, b0370: bool, b0371: bool, b0372: bool, b0373: bool, b0374: bool, b0375: bool, b0376: bool, b0377: bool, b0378: bool, b0379: bool, b0380: bool, b0381: bool, b0382: bool, b0383: bool, b0384: bool, b0385: bool, b0386: bool, b0387: bool, b0388: bool, b0389: bool, b0390: bool, b0391: bool, b0392: bool, b0393: bool, b0394: bool, b0395: bool, b0396: bool, b0397: bool, b0398: bool, b0399: bool, b0400: bool, b0401: bool, b0402: bool, b0403: bool, b0404: bool, b0405: bool, b0406: bool, b0407: bool, b0408: bool, b0409: bool, b0410: bool, b0411: bool, b0412: bool, b0413: bool, b0414: bool, b0415: bool, b0416: bool, b0417: bool, b0418: bool, b0419: bool, b0420: bool, b0421: bool, b0422: bool, b0423: bool, b0424: bool, b0425: bool, b0426: bool, b0427: bool, b0428: bool, b0429: bool, b0430: bool, b0431: bool, b0432: bool, b0433: bool, b0434: bool, b0435: bool, b0436: bool, b0437: bool, b0438: bool, b0439: bool, b0440: bool, b0441: bool, b0442: bool, b0443: bool, b0444: bool, b0445: bool, b0446: bool, b0447: bool, b0448: bool, b0449: bool, b0450: bool, b0451: bool, b0452: bool, b0453: bool, b0454: bool, b0455: bool, b0456: bool, b0457: bool, b0458: bool, b0459: bool, b0460: bool, b0461: bool, b0462: bool, b0463: bool, b0464: bool, b0465: bool) : bool
{
  0 + (if b0000 then 0 else 186000) + (if b0001 then 0 else 186000) + (if b0002 then 0 else 186000) + (if b0003 then 0 else 186000) + (if b0004 then 0 else 186000) + (if b0005 then 0 else 186000) + (if b0006 then 0 else 186000) + (if b0007 then 0 else 186000) + (if b0008 then 0 else 186000) + (if b0009 then 0 else 186000) + (if b0010 then 0 else 186000) + (if b0011 then 0 else 186000) + (if b0012 then 0 else 186000) + (if b0013 then 0 else 186000) + (if b0014 then 0 else 186000) + (if b0015 then 0 else 186000) + (if b0016 then 0 else 186000) + (if b0017 then 0 else 186000) + (if b0018 then 0 else 186000) + (if b0019 then 0 else 186000) + (if b0020 then 0 else 186000) + (if b0021 then 0 else 186000) + (if b0022 then 0 else 186000) + (if b0023 then 0 else 186000) + (if b0024 then 0 else 186000) + (if b0025 then 0 else 186000) + (if b0026 then 0 else 186000) + (if b0027 then 0 else 186000) + (if b0028 then 0 else 186000) + (if b0029 then 0 else 186000) + (if b0030 then 0 else 186000) + (if b0031 then 0 else 186000) + (if b0032 then 0 else 186000) + (if b0033 then 0 else 186000) + (if b0034 then 0 else 186000) + (if b0035 then 0 else 186000) + (if b0036 then 0 else 186000) + (if b0037 then 0 else 186000) + (if b0038 then 0 else 186000) + (if b0039 then 0 else 186000) + (if b0040 then 0 else 186000) + (if b0041 then 0 else 186000) + (if b0042 then 0 else 186000) + (if b0043 then 0 else 186000) + (if b0044 then 0 else 186000) + (if b0045 then 0 else 186000) + (if b0046 then 0 else 186000) + (if b0047 then 0 else 186000) + (if b0048 then 0 else 186000) + (if b0049 then 0 else 186000) + (if b0050 then 0 else 186000) + (if b0051 then 0 else 186000) + (if b0052 then 0 else 186000) + (if b0053 then 0 else 186000) + (if b0054 then 0 else 186000) + (if b0055 then 0 else 186000) + (if b0056 then 0 else 186000) + (if b0057 then 0 else 186000) + (if b0058 then 0 else 186000) + (if b0059 then 0 else 186000) + (if b0060 then 0 else 186000) + (if b0061 then 0 else 186000) + (if b0062 then 0 else 186000) + (if b0063 then 0 else 186000) + (if b0064 then 0 else 186000) + (if b0065 then 0 else 186000) + (if b0066 then 0 else 186000) + (if b0067 then 0 else 186000) + (if b0068 then 0 else 186000) + (if b0069 then 0 else 186000) + (if b0070 then 0 else 186000) + (if b0071 then 0 else 186000) + (if b0072 then 0 else 186000) + (if b0073 then 0 else 186000) + (if b0074 then 0 else 186000) + (if b0075 then 0 else 186000) + (if b0076 then 0 else 186000) + (if b0077 then 0 else 186000) + (if b0078 then 0 else 186000) + (if b0079 then 0 else 186000) + (if b0080 then 0 else 186000) + (if b0081 then 0 else 186000) + (if b0082 then 0 else 186000) + (if b0083 then 0 else 186000) + (if b0084 then 0 else 186000) + (if b0085 then 0 else 186000) + (if b0086 then 0 else 186000) + (if b0087 then 0 else 186000) + (if b0088 then 0 else 186000) + (if b0089 then 0 else 186000) + (if b0090 then 0 else 186000) + (if b0091 then 0 else 186000) + (if b0092 then 0 else 186000) + (if b0093 then 0 else 186000) + (if b0094 then 0 else 186000) + (if b0095 then 0 else 186000) + (if b0096 then 0 else 186000) + (if b0097 then 0 else 186000) + (if b0098 then 0 else 186000) + (if b0099 then 0 else 186000) + (if b0100 then 0 else 186000) + (if b0101 then 0 else 186000) + (if b0102 then 0 else 186000) + (if b0103 then 0 else 186000) + (if b0104 then 0 else 186000) + (if b0105 then 0 else 186000) + (if b0106 then 0 else 186000) + (if b0107 then 0 else 186000) + (if b0108 then 0 else 186000) + (if b0109 then 0 else 186000) + (if b0110 then 0 else 186000) + (if b0111 then 0 else 186000) + (if b0112 then 0 else 186000) + (if b0113 then 0 else 186000) + (if b0114 then 0 else 186000) + (if b0115 then 0 else 186000) + (if b0116 then 0 else 186000) + (if b0118 then 0 else 186000) + (if b0120 then 0 else 186000) + (if b0121 then 0 else 186000) + (if b0122 then 0 else 186000) + (if b0123 then 0 else 186000) + (if b0124 then 0 else 186000) + (if b0125 then 0 else 186000) + (if b0126 then 0 else 186000) + (if b0127 then 0 else 186000) + (if b0128 then 0 else 186000) + (if b0129 then 0 else 186000) + (if b0130 then 0 else 186000) + (if b0131 then 0 else 186000) + (if b0132 then 0 else 186000) + (if b0134 then 0 else 186000) + (if b0136 then 0 else 186000) + (if b0137 then 0 else 186000) + (if b0138 then 0 else 186000) + (if b0139 then 0 else 186000) + (if b0140 then 0 else 186000) + (if b0141 then 0 else 186000) + (if b0142 then 0 else 186000) + (if b0143 then 0 else 186000) + (if b0144 then 0 else 186000) + (if b0145 then 0 else 186000) + (if b0146 then 0 else 186000) + (if b0147 then 0 else 186000) + (if b0148 then 0 else 186000) + (if b0149 then 0 else 186000) + (if b0150 then 0 else 186000) + (if b0151 then 0 else 186000) + (if b0153 then 0 else 186000) + (if b0154 then 0 else 186000) + (if b0155 then 0 else 186000) + (if b0156 then 0 else 186000) + (if b0157 then 0 else 186000) + (if b0158 then 0 else 186000) + (if b0159 then 0 else 186000) + (if b0160 then 0 else 186000) + (if b0161 then 0 else 186000) + (if b0162 then 0 else 186000) + (if b0163 then 0 else 186000) + (if b0164 then 0 else 186000) + (if b0165 then 0 else 186000) + (if b0166 then 0 else 186000) + (if b0167 then 0 else 186000) + (if b0168 then 0 else 186000) + (if b0169 then 0 else 186000) + (if b0172 then 0 else 186000) + (if b0174 then 0 else 186000) + (if b0175 then 0 else 186000) + (if b0176 then 0 else 186000) + (if b0177 then 0 else 186000) + (if b0178 then 0 else 186000) + (if b0179 then 0 else 186000) + (if b0180 then 0 else 186000) + (if b0181 then 0 else 186000) + (if b0182 then 0 else 186000) + (if b0183 then 0 else 186000) + (if b0184 then 0 else 186000) + (if b0185 then 0 else 186000) + (if b0186 then 0 else 186000) + (if b0187 then 0 else 186000) + (if b0188 then 0 else 186000) + (if b0189 then 0 else 186000) + (if b0190 then 0 else 186000) + (if b0191 then 0 else 186000) + (if b0192 then 0 else 186000) + (if b0193 then 0 else 186000) + (if b0195 then 0 else 186000) + (if b0197 then 0 else 186000) + (if b0198 then 0 else 186000) + (if b0199 then 0 else 186000) + (if b0200 then 0 else 186000) + (if b0201 then 0 else 186000) + (if b0202 then 0 else 186000) + (if b0203 then 0 else 186000) + (if b0205 then 0 else 186000) + (if b0206 then 0 else 186000) + (if b0207 then 0 else 186000) + (if b0208 then 0 else 186000) + (if b0210 then 0 else 186000) + (if b0212 then 0 else 186000) + (if b0214 then 0 else 186000) + (if b0215 then 0 else 186000) + (if b0216 then 0 else 186000) + (if b0217 then 0 else 186000) + (if b0218 then 0 else 186000) + (if b0219 then 0 else 186000) + (if b0220 then 0 else 186000) + (if b0221 then 0 else 186000) + (if b0222 then 0 else 186000) + (if b0223 then 0 else 186000) + (if b0224 then 0 else 186000) + (if b0225 then 0 else 186000) + (if b0226 then 0 else 186000) + (if b0227 then 0 else 186000) + (if b0228 then 0 else 186000) + (if b0229 then 0 else 186000) + (if b0230 then 0 else 186000) + (if b0231 then 0 else 186000) + (if b0232 then 0 else 186000) + (if b0235 then 0 else 186000) + (if b0237 then 0 else 186000) + (if b0238 then 0 else 186000) + (if b0239 then 0 else 186000) + (if b0240 then 0 else 186000) + (if b0241 then 0 else 186000) + (if b0242 then 0 else 186000) + (if b0243 then 0 else 186000) + (if b0244 then 0 else 186000) + (if b0245 then 0 else 186000) + (if b0246 then 0 else 186000) + (if b0247 then 0 else 186000) + (if b0248 then 0 else 186000) + (if b0249 then 0 else 186000) + (if b0250 then 0 else 186000) + (if b0251 then 0 else 186000) + (if b0252 then 0 else 186000) + (if b0253 then 0 else 186000) + (if b0254 then 0 else 186000) + (if b0255 then 0 else 186000) + (if b0256 then 0 else 186000) + (if b0257 then 0 else 186000) + (if b0258 then 0 else 186000) + (if b0259 then 0 else 186000) + (if b0260 then 0 else 186000) + (if b0261 then 0 else 186000) + (if b0262 then 0 else 186000) + (if b0263 then 0 else 186000) + (if b0264 then 0 else 186000) + (if b0265 then 0 else 186000) + (if b0266 then 0 else 186000) + (if b0267 then 0 else 186000) + (if b0268 then 0 else 186000) + (if b0269 then 0 else 186000) + (if b0270 then 0 else 186000) + (if b0271 then 0 else 186000) + (if b0272 then 0 else 186000) + (if b0273 then 0 else 186000) + (if b0274 then 0 else 186000) + (if b0275 then 0 else 186000) + (if b0276 then 0 else 186000) + (if b0277 then 0 else 186000) + (if b0278 then 0 else 186000) + (if b0279 then 0 else 186000) + (if b0280 then 0 else 186000) + (if b0281 then 0 else 186000) + (if b0282 then 0 else 186000) + (if b0283 then 0 else 186000) + (if b0284 then 0 else 186000) + (if b0285 then 0 else 186000) + (if b0286 then 0 else 186000) + (if b0287 then 0 else 186000) + (if b0288 then 0 else 186000) + (if b0289 then 0 else 186000) + (if b0290 then 0 else 186000) + (if b0291 then 0 else 186000) + (if b0292 then 0 else 186000) + (if b0293 then 0 else 186000) + (if b0294 then 0 else 186000) + (if b0295 then 0 else 186000) + (if b0296 then 0 else 186000) + (if b0297 then 0 else 186000) + (if b0298 then 0 else 186000) + (if b0299 then 0 else 186000) + (if b0300 then 0 else 186000) + (if b0301 then 0 else 186000) + (if b0302 then 0 else 186000) + (if b0303 then 0 else 186000) + (if b0304 then 0 else 186000) + (if b0305 then 0 else 186000) + (if b0306 then 0 else 186000) + (if b0307 then 0 else 186000) + (if b0308 then 0 else 186000) + (if b0309 then 0 else 186000) + (if b0310 then 0 else 186000) + (if b0311 then 0 else 186000) + (if b0312 then 0 else 186000) + (if b0313 then 0 else 186000) + (if b0314 then 0 else 186000) + (if b0315 then 0 else 186000) + (if b0316 then 0 else 186000) + (if b0317 then 0 else 186000) + (if b0318 then 0 else 186000) + (if b0319 then 0 else 186000) + (if b0320 then 0 else 186000) + (if b0321 then 0 else 186000) + (if b0322 then 0 else 186000) + (if b0323 then 0 else 186000) + (if b0324 then 0 else 186000) + (if b0325 then 0 else 186000) + (if b0326 then 0 else 186000) + (if b0327 then 0 else 186000) + (if b0328 then 0 else 186000) + (if b0329 then 0 else 186000) + (if b0330 then 0 else 186000) + (if b0331 then 0 else 186000) + (if b0332 then 0 else 186000) + (if b0333 then 0 else 186000) + (if b0334 then 0 else 186000) + (if b0335 then 0 else 186000) + (if b0336 then 0 else 186000) + (if b0337 then 0 else 186000) + (if b0338 then 0 else 186000) + (if b0339 then 0 else 186000) + (if b0340 then 0 else 186000) + (if b0341 then 0 else 186000) + (if b0376 then 0 else 186000) + (if b0377 then 0 else 186000) + (if b0378 then 0 else 186000) + (if b0379 then 0 else 186000) + (if b0380 then 0 else 186000) + (if b0381 then 0 else 186000) + (if b0382 then 0 else 186000) + (if b0383 then 0 else 186000) + (if b0384 then 0 else 186000) + (if b0385 then 0 else 186000) + (if b0386 then 0 else 186000) + (if b0387 then 0 else 186000) + (if b0388 then 0 else 186000) + (if b0389 then 0 else 186000) + (if b0390 then 0 else 186000) + (if b0422 then 0 else 186000) + (if b0423 then 0 else 186000) + (if b0424 then 0 else 186000) + (if b0425 then 0 else 186000) + (if b0426 then 0 else 186000) + (if b0427 then 0 else 186000) + (if b0428 then 0 else 186000) + (if b0429 then 0 else 186000) + (if b0430 then 0 else 186000) + (if b0431 then 0 else 186000) + (if b0432 then 0 else 186000) + (if b0433 then 0 else 186000) + (if b0434 then 0 else 186000) + (if b0435 then 0 else 186000) + (if b0436 then 0 else 186000) + (if b0437 then 0 else 186000) + (if b0438 then 0 else 186000) + (if b0439 then 0 else 186000) + (if b0440 then 0 else 186000) + (if b0441 then 0 else 186000) + (if b0442 then 0 else 186000) + (if b0443 then 0 else 186000) + (if b0444 then 0 else 186000) + (if b0445 then 0 else 186000) + (if b0446 then 0 else 186000) + (if b0447 then 0 else 186000) + (if b0448 then 0 else 186000) + (if b0449 then 0 else 186000) + (if b0450 then 0 else 186000) + (if b0451 then 0 else 186000) + (if b0452 then 0 else 186000) + (if b0453 then 0 else 186000) + (if b0454 then 0 else 186000) + (if b0455 then 0 else 186000) + (if b0456 then 0 else 186000) + (if b0457 then 0 else 186000) + (if b0458 then 0 else 186000) + (if b0459 then 0 else 186000) + (if b0460 then 0 else 186000) + (if b0461 then 0 else 186000) + (if b0462 then 0 else 186000) + (if b0463 then 0 else 186000) + (if b0464 then 0 else 186000) + (if b0465 then 0 else 186000) < 441
}
Prover Time taken = 10.468939
Added Horn clause: 0 && 36 && 33 && 0 && 0 && 0 && 0 && 0 && 37 => 38
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/linear-algebra/kernels/3mm/kernel3.bpl.ice2.bpl
Total learner time was 00:00:00.1275010
Verifying $kernel3: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool, b0228: bool, b0229: bool, b0230: bool, b0231: bool, b0232: bool, b0233: bool, b0234: bool, b0235: bool, b0236: bool, b0237: bool, b0238: bool, b0239: bool, b0240: bool, b0241: bool, b0242: bool, b0243: bool, b0244: bool, b0245: bool, b0246: bool, b0247: bool, b0248: bool, b0249: bool, b0250: bool, b0251: bool, b0252: bool, b0253: bool, b0254: bool, b0255: bool, b0256: bool, b0257: bool, b0258: bool, b0259: bool, b0260: bool, b0261: bool, b0262: bool, b0263: bool, b0264: bool, b0265: bool, b0266: bool, b0267: bool, b0268: bool, b0269: bool, b0270: bool, b0271: bool, b0272: bool, b0273: bool, b0274: bool, b0275: bool, b0276: bool, b0277: bool, b0278: bool, b0279: bool, b0280: bool, b0281: bool, b0282: bool, b0283: bool, b0284: bool, b0285: bool, b0286: bool, b0287: bool, b0288: bool, b0289: bool, b0290: bool, b0291: bool, b0292: bool, b0293: bool, b0294: bool, b0295: bool, b0296: bool, b0297: bool, b0298: bool, b0299: bool, b0300: bool, b0301: bool, b0302: bool, b0303: bool, b0304: bool, b0305: bool, b0306: bool, b0307: bool, b0308: bool, b0309: bool, b0310: bool, b0311: bool, b0312: bool, b0313: bool, b0314: bool, b0315: bool, b0316: bool, b0317: bool, b0318: bool, b0319: bool, b0320: bool, b0321: bool, b0322: bool, b0323: bool, b0324: bool, b0325: bool, b0326: bool, b0327: bool, b0328: bool, b0329: bool, b0330: bool, b0331: bool, b0332: bool, b0333: bool, b0334: bool, b0335: bool, b0336: bool, b0337: bool, b0338: bool, b0339: bool, b0340: bool, b0341: bool, b0342: bool, b0343: bool, b0344: bool, b0345: bool, b0346: bool, b0347: bool, b0348: bool, b0349: bool, b0350: bool, b0351: bool, b0352: bool, b0353: bool, b0354: bool, b0355: bool, b0356: bool, b0357: bool, b0358: bool, b0359: bool, b0360: bool, b0361: bool, b0362: bool, b0363: bool, b0364: bool, b0365: bool, b0366: bool, b0367: bool, b0368: bool, b0369: bool, b0370: bool, b0371: bool, b0372: bool, b0373: bool, b0374: bool, b0375: bool, b0376: bool, b0377: bool, b0378: bool, b0379: bool, b0380: bool, b0381: bool, b0382: bool, b0383: bool, b0384: bool, b0385: bool, b0386: bool, b0387: bool, b0388: bool, b0389: bool, b0390: bool, b0391: bool, b0392: bool, b0393: bool, b0394: bool, b0395: bool, b0396: bool, b0397: bool, b0398: bool, b0399: bool, b0400: bool, b0401: bool, b0402: bool, b0403: bool, b0404: bool, b0405: bool, b0406: bool, b0407: bool, b0408: bool, b0409: bool, b0410: bool, b0411: bool, b0412: bool, b0413: bool, b0414: bool, b0415: bool, b0416: bool, b0417: bool, b0418: bool, b0419: bool, b0420: bool, b0421: bool, b0422: bool, b0423: bool, b0424: bool, b0425: bool, b0426: bool, b0427: bool, b0428: bool, b0429: bool, b0430: bool, b0431: bool, b0432: bool, b0433: bool, b0434: bool, b0435: bool, b0436: bool, b0437: bool, b0438: bool, b0439: bool, b0440: bool, b0441: bool, b0442: bool, b0443: bool, b0444: bool, b0445: bool, b0446: bool, b0447: bool, b0448: bool, b0449: bool, b0450: bool, b0451: bool, b0452: bool, b0453: bool, b0454: bool, b0455: bool, b0456: bool, b0457: bool, b0458: bool, b0459: bool, b0460: bool, b0461: bool, b0462: bool, b0463: bool, b0464: bool, b0465: bool) : bool
{
  0 + (if b0000 then 0 else 186000) + (if b0001 then 0 else 186000) + (if b0002 then 0 else 186000) + (if b0003 then 0 else 186000) + (if b0004 then 0 else 186000) + (if b0005 then 0 else 186000) + (if b0006 then 0 else 186000) + (if b0007 then 0 else 186000) + (if b0008 then 0 else 186000) + (if b0009 then 0 else 186000) + (if b0010 then 0 else 186000) + (if b0011 then 0 else 186000) + (if b0012 then 0 else 186000) + (if b0013 then 0 else 186000) + (if b0014 then 0 else 186000) + (if b0015 then 0 else 186000) + (if b0016 then 0 else 186000) + (if b0017 then 0 else 186000) + (if b0018 then 0 else 186000) + (if b0019 then 0 else 186000) + (if b0020 then 0 else 186000) + (if b0021 then 0 else 186000) + (if b0022 then 0 else 186000) + (if b0023 then 0 else 186000) + (if b0024 then 0 else 186000) + (if b0025 then 0 else 186000) + (if b0026 then 0 else 186000) + (if b0027 then 0 else 186000) + (if b0028 then 0 else 186000) + (if b0029 then 0 else 186000) + (if b0030 then 0 else 186000) + (if b0031 then 0 else 186000) + (if b0032 then 0 else 186000) + (if b0033 then 0 else 186000) + (if b0034 then 0 else 186000) + (if b0035 then 0 else 186000) + (if b0036 then 0 else 186000) + (if b0037 then 0 else 186000) + (if b0038 then 0 else 186000) + (if b0039 then 0 else 186000) + (if b0040 then 0 else 186000) + (if b0041 then 0 else 186000) + (if b0042 then 0 else 186000) + (if b0043 then 0 else 186000) + (if b0044 then 0 else 186000) + (if b0045 then 0 else 186000) + (if b0046 then 0 else 186000) + (if b0047 then 0 else 186000) + (if b0048 then 0 else 186000) + (if b0049 then 0 else 186000) + (if b0050 then 0 else 186000) + (if b0051 then 0 else 186000) + (if b0052 then 0 else 186000) + (if b0053 then 0 else 186000) + (if b0054 then 0 else 186000) + (if b0055 then 0 else 186000) + (if b0056 then 0 else 186000) + (if b0057 then 0 else 186000) + (if b0058 then 0 else 186000) + (if b0059 then 0 else 186000) + (if b0060 then 0 else 186000) + (if b0061 then 0 else 186000) + (if b0062 then 0 else 186000) + (if b0063 then 0 else 186000) + (if b0064 then 0 else 186000) + (if b0065 then 0 else 186000) + (if b0066 then 0 else 186000) + (if b0067 then 0 else 186000) + (if b0068 then 0 else 186000) + (if b0069 then 0 else 186000) + (if b0070 then 0 else 186000) + (if b0071 then 0 else 186000) + (if b0072 then 0 else 186000) + (if b0073 then 0 else 186000) + (if b0074 then 0 else 186000) + (if b0075 then 0 else 186000) + (if b0076 then 0 else 186000) + (if b0077 then 0 else 186000) + (if b0078 then 0 else 186000) + (if b0079 then 0 else 186000) + (if b0080 then 0 else 186000) + (if b0081 then 0 else 186000) + (if b0082 then 0 else 186000) + (if b0083 then 0 else 186000) + (if b0084 then 0 else 186000) + (if b0085 then 0 else 186000) + (if b0086 then 0 else 186000) + (if b0087 then 0 else 186000) + (if b0088 then 0 else 186000) + (if b0089 then 0 else 186000) + (if b0090 then 0 else 186000) + (if b0091 then 0 else 186000) + (if b0092 then 0 else 186000) + (if b0093 then 0 else 186000) + (if b0094 then 0 else 186000) + (if b0095 then 0 else 186000) + (if b0096 then 0 else 186000) + (if b0097 then 0 else 186000) + (if b0098 then 0 else 186000) + (if b0099 then 0 else 186000) + (if b0100 then 0 else 186000) + (if b0101 then 0 else 186000) + (if b0102 then 0 else 186000) + (if b0103 then 0 else 186000) + (if b0104 then 0 else 186000) + (if b0105 then 0 else 186000) + (if b0106 then 0 else 186000) + (if b0107 then 0 else 186000) + (if b0108 then 0 else 186000) + (if b0109 then 0 else 186000) + (if b0110 then 0 else 186000) + (if b0111 then 0 else 186000) + (if b0112 then 0 else 186000) + (if b0113 then 0 else 186000) + (if b0114 then 0 else 186000) + (if b0115 then 0 else 186000) + (if b0116 then 0 else 186000) + (if b0118 then 0 else 186000) + (if b0120 then 0 else 186000) + (if b0121 then 0 else 186000) + (if b0122 then 0 else 186000) + (if b0123 then 0 else 186000) + (if b0124 then 0 else 186000) + (if b0125 then 0 else 186000) + (if b0126 then 0 else 186000) + (if b0127 then 0 else 186000) + (if b0128 then 0 else 186000) + (if b0129 then 0 else 186000) + (if b0130 then 0 else 186000) + (if b0131 then 0 else 186000) + (if b0132 then 0 else 186000) + (if b0134 then 0 else 186000) + (if b0136 then 0 else 186000) + (if b0137 then 0 else 186000) + (if b0138 then 0 else 186000) + (if b0139 then 0 else 186000) + (if b0140 then 0 else 186000) + (if b0141 then 0 else 186000) + (if b0142 then 0 else 186000) + (if b0143 then 0 else 186000) + (if b0144 then 0 else 186000) + (if b0145 then 0 else 186000) + (if b0146 then 0 else 186000) + (if b0147 then 0 else 186000) + (if b0148 then 0 else 186000) + (if b0149 then 0 else 186000) + (if b0150 then 0 else 186000) + (if b0151 then 0 else 186000) + (if b0153 then 0 else 186000) + (if b0154 then 0 else 186000) + (if b0155 then 0 else 186000) + (if b0156 then 0 else 186000) + (if b0157 then 0 else 186000) + (if b0158 then 0 else 186000) + (if b0159 then 0 else 186000) + (if b0160 then 0 else 186000) + (if b0161 then 0 else 186000) + (if b0162 then 0 else 186000) + (if b0163 then 0 else 186000) + (if b0164 then 0 else 186000) + (if b0165 then 0 else 186000) + (if b0166 then 0 else 186000) + (if b0167 then 0 else 186000) + (if b0168 then 0 else 186000) + (if b0169 then 0 else 186000) + (if b0172 then 0 else 186000) + (if b0174 then 0 else 186000) + (if b0175 then 0 else 186000) + (if b0176 then 0 else 186000) + (if b0177 then 0 else 186000) + (if b0178 then 0 else 186000) + (if b0179 then 0 else 186000) + (if b0180 then 0 else 186000) + (if b0181 then 0 else 186000) + (if b0182 then 0 else 186000) + (if b0183 then 0 else 186000) + (if b0184 then 0 else 186000) + (if b0185 then 0 else 186000) + (if b0186 then 0 else 186000) + (if b0187 then 0 else 186000) + (if b0188 then 0 else 186000) + (if b0189 then 0 else 186000) + (if b0190 then 0 else 186000) + (if b0191 then 0 else 186000) + (if b0192 then 0 else 186000) + (if b0193 then 0 else 186000) + (if b0195 then 0 else 186000) + (if b0197 then 0 else 186000) + (if b0198 then 0 else 186000) + (if b0199 then 0 else 186000) + (if b0200 then 0 else 186000) + (if b0201 then 0 else 186000) + (if b0202 then 0 else 186000) + (if b0203 then 0 else 186000) + (if b0205 then 0 else 186000) + (if b0206 then 0 else 186000) + (if b0207 then 0 else 186000) + (if b0208 then 0 else 186000) + (if b0210 then 0 else 186000) + (if b0212 then 0 else 186000) + (if b0214 then 0 else 186000) + (if b0215 then 0 else 186000) + (if b0216 then 0 else 186000) + (if b0217 then 0 else 186000) + (if b0218 then 0 else 186000) + (if b0219 then 0 else 186000) + (if b0220 then 0 else 186000) + (if b0222 then 0 else 186000) + (if b0223 then 0 else 186000) + (if b0224 then 0 else 186000) + (if b0225 then 0 else 186000) + (if b0226 then 0 else 186000) + (if b0227 then 0 else 186000) + (if b0228 then 0 else 186000) + (if b0229 then 0 else 186000) + (if b0230 then 0 else 186000) + (if b0231 then 0 else 186000) + (if b0232 then 0 else 186000) + (if b0235 then 0 else 186000) + (if b0237 then 0 else 186000) + (if b0238 then 0 else 186000) + (if b0239 then 0 else 186000) + (if b0240 then 0 else 186000) + (if b0241 then 0 else 186000) + (if b0242 then 0 else 186000) + (if b0243 then 0 else 186000) + (if b0244 then 0 else 186000) + (if b0245 then 0 else 186000) + (if b0246 then 0 else 186000) + (if b0247 then 0 else 186000) + (if b0248 then 0 else 186000) + (if b0249 then 0 else 186000) + (if b0250 then 0 else 186000) + (if b0251 then 0 else 186000) + (if b0252 then 0 else 186000) + (if b0253 then 0 else 186000) + (if b0254 then 0 else 186000) + (if b0255 then 0 else 186000) + (if b0256 then 0 else 186000) + (if b0257 then 0 else 186000) + (if b0258 then 0 else 186000) + (if b0259 then 0 else 186000) + (if b0260 then 0 else 186000) + (if b0261 then 0 else 186000) + (if b0262 then 0 else 186000) + (if b0263 then 0 else 186000) + (if b0264 then 0 else 186000) + (if b0265 then 0 else 186000) + (if b0266 then 0 else 186000) + (if b0267 then 0 else 186000) + (if b0268 then 0 else 186000) + (if b0269 then 0 else 186000) + (if b0270 then 0 else 186000) + (if b0271 then 0 else 186000) + (if b0272 then 0 else 186000) + (if b0273 then 0 else 186000) + (if b0274 then 0 else 186000) + (if b0275 then 0 else 186000) + (if b0276 then 0 else 186000) + (if b0277 then 0 else 186000) + (if b0278 then 0 else 186000) + (if b0279 then 0 else 186000) + (if b0280 then 0 else 186000) + (if b0281 then 0 else 186000) + (if b0282 then 0 else 186000) + (if b0283 then 0 else 186000) + (if b0284 then 0 else 186000) + (if b0285 then 0 else 186000) + (if b0286 then 0 else 186000) + (if b0287 then 0 else 186000) + (if b0288 then 0 else 186000) + (if b0289 then 0 else 186000) + (if b0290 then 0 else 186000) + (if b0291 then 0 else 186000) + (if b0292 then 0 else 186000) + (if b0293 then 0 else 186000) + (if b0294 then 0 else 186000) + (if b0295 then 0 else 186000) + (if b0296 then 0 else 186000) + (if b0297 then 0 else 186000) + (if b0298 then 0 else 186000) + (if b0299 then 0 else 186000) + (if b0300 then 0 else 186000) + (if b0301 then 0 else 186000) + (if b0302 then 0 else 186000) + (if b0303 then 0 else 186000) + (if b0304 then 0 else 186000) + (if b0305 then 0 else 186000) + (if b0306 then 0 else 186000) + (if b0307 then 0 else 186000) + (if b0308 then 0 else 186000) + (if b0309 then 0 else 186000) + (if b0310 then 0 else 186000) + (if b0311 then 0 else 186000) + (if b0312 then 0 else 186000) + (if b0313 then 0 else 186000) + (if b0314 then 0 else 186000) + (if b0315 then 0 else 186000) + (if b0316 then 0 else 186000) + (if b0317 then 0 else 186000) + (if b0318 then 0 else 186000) + (if b0319 then 0 else 186000) + (if b0320 then 0 else 186000) + (if b0321 then 0 else 186000) + (if b0322 then 0 else 186000) + (if b0323 then 0 else 186000) + (if b0324 then 0 else 186000) + (if b0325 then 0 else 186000) + (if b0326 then 0 else 186000) + (if b0327 then 0 else 186000) + (if b0328 then 0 else 186000) + (if b0329 then 0 else 186000) + (if b0330 then 0 else 186000) + (if b0331 then 0 else 186000) + (if b0332 then 0 else 186000) + (if b0333 then 0 else 186000) + (if b0334 then 0 else 186000) + (if b0335 then 0 else 186000) + (if b0336 then 0 else 186000) + (if b0337 then 0 else 186000) + (if b0338 then 0 else 186000) + (if b0339 then 0 else 186000) + (if b0340 then 0 else 186000) + (if b0341 then 0 else 186000) + (if b0376 then 0 else 186000) + (if b0377 then 0 else 186000) + (if b0378 then 0 else 186000) + (if b0379 then 0 else 186000) + (if b0380 then 0 else 186000) + (if b0381 then 0 else 186000) + (if b0382 then 0 else 186000) + (if b0383 then 0 else 186000) + (if b0384 then 0 else 186000) + (if b0385 then 0 else 186000) + (if b0386 then 0 else 186000) + (if b0387 then 0 else 186000) + (if b0388 then 0 else 186000) + (if b0389 then 0 else 186000) + (if b0390 then 0 else 186000) + (if b0422 then 0 else 186000) + (if b0423 then 0 else 186000) + (if b0424 then 0 else 186000) + (if b0425 then 0 else 186000) + (if b0426 then 0 else 186000) + (if b0427 then 0 else 186000) + (if b0428 then 0 else 186000) + (if b0429 then 0 else 186000) + (if b0430 then 0 else 186000) + (if b0431 then 0 else 186000) + (if b0432 then 0 else 186000) + (if b0433 then 0 else 186000) + (if b0434 then 0 else 186000) + (if b0435 then 0 else 186000) + (if b0436 then 0 else 186000) + (if b0437 then 0 else 186000) + (if b0438 then 0 else 186000) + (if b0439 then 0 else 186000) + (if b0440 then 0 else 186000) + (if b0441 then 0 else 186000) + (if b0442 then 0 else 186000) + (if b0443 then 0 else 186000) + (if b0444 then 0 else 186000) + (if b0445 then 0 else 186000) + (if b0446 then 0 else 186000) + (if b0447 then 0 else 186000) + (if b0448 then 0 else 186000) + (if b0449 then 0 else 186000) + (if b0450 then 0 else 186000) + (if b0451 then 0 else 186000) + (if b0452 then 0 else 186000) + (if b0453 then 0 else 186000) + (if b0454 then 0 else 186000) + (if b0455 then 0 else 186000) + (if b0456 then 0 else 186000) + (if b0457 then 0 else 186000) + (if b0458 then 0 else 186000) + (if b0459 then 0 else 186000) + (if b0460 then 0 else 186000) + (if b0461 then 0 else 186000) + (if b0462 then 0 else 186000) + (if b0463 then 0 else 186000) + (if b0464 then 0 else 186000) + (if b0465 then 0 else 186000) < 441
}
Prover Time taken = 8.235034
Added Horn clause: 11 && 39 && 33 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 => 40
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/linear-algebra/kernels/3mm/kernel3.bpl.ice2.bpl
Total learner time was 00:00:00.1310040
Verifying $kernel3: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool, b0228: bool, b0229: bool, b0230: bool, b0231: bool, b0232: bool, b0233: bool, b0234: bool, b0235: bool, b0236: bool, b0237: bool, b0238: bool, b0239: bool, b0240: bool, b0241: bool, b0242: bool, b0243: bool, b0244: bool, b0245: bool, b0246: bool, b0247: bool, b0248: bool, b0249: bool, b0250: bool, b0251: bool, b0252: bool, b0253: bool, b0254: bool, b0255: bool, b0256: bool, b0257: bool, b0258: bool, b0259: bool, b0260: bool, b0261: bool, b0262: bool, b0263: bool, b0264: bool, b0265: bool, b0266: bool, b0267: bool, b0268: bool, b0269: bool, b0270: bool, b0271: bool, b0272: bool, b0273: bool, b0274: bool, b0275: bool, b0276: bool, b0277: bool, b0278: bool, b0279: bool, b0280: bool, b0281: bool, b0282: bool, b0283: bool, b0284: bool, b0285: bool, b0286: bool, b0287: bool, b0288: bool, b0289: bool, b0290: bool, b0291: bool, b0292: bool, b0293: bool, b0294: bool, b0295: bool, b0296: bool, b0297: bool, b0298: bool, b0299: bool, b0300: bool, b0301: bool, b0302: bool, b0303: bool, b0304: bool, b0305: bool, b0306: bool, b0307: bool, b0308: bool, b0309: bool, b0310: bool, b0311: bool, b0312: bool, b0313: bool, b0314: bool, b0315: bool, b0316: bool, b0317: bool, b0318: bool, b0319: bool, b0320: bool, b0321: bool, b0322: bool, b0323: bool, b0324: bool, b0325: bool, b0326: bool, b0327: bool, b0328: bool, b0329: bool, b0330: bool, b0331: bool, b0332: bool, b0333: bool, b0334: bool, b0335: bool, b0336: bool, b0337: bool, b0338: bool, b0339: bool, b0340: bool, b0341: bool, b0342: bool, b0343: bool, b0344: bool, b0345: bool, b0346: bool, b0347: bool, b0348: bool, b0349: bool, b0350: bool, b0351: bool, b0352: bool, b0353: bool, b0354: bool, b0355: bool, b0356: bool, b0357: bool, b0358: bool, b0359: bool, b0360: bool, b0361: bool, b0362: bool, b0363: bool, b0364: bool, b0365: bool, b0366: bool, b0367: bool, b0368: bool, b0369: bool, b0370: bool, b0371: bool, b0372: bool, b0373: bool, b0374: bool, b0375: bool, b0376: bool, b0377: bool, b0378: bool, b0379: bool, b0380: bool, b0381: bool, b0382: bool, b0383: bool, b0384: bool, b0385: bool, b0386: bool, b0387: bool, b0388: bool, b0389: bool, b0390: bool, b0391: bool, b0392: bool, b0393: bool, b0394: bool, b0395: bool, b0396: bool, b0397: bool, b0398: bool, b0399: bool, b0400: bool, b0401: bool, b0402: bool, b0403: bool, b0404: bool, b0405: bool, b0406: bool, b0407: bool, b0408: bool, b0409: bool, b0410: bool, b0411: bool, b0412: bool, b0413: bool, b0414: bool, b0415: bool, b0416: bool, b0417: bool, b0418: bool, b0419: bool, b0420: bool, b0421: bool, b0422: bool, b0423: bool, b0424: bool, b0425: bool, b0426: bool, b0427: bool, b0428: bool, b0429: bool, b0430: bool, b0431: bool, b0432: bool, b0433: bool, b0434: bool, b0435: bool, b0436: bool, b0437: bool, b0438: bool, b0439: bool, b0440: bool, b0441: bool, b0442: bool, b0443: bool, b0444: bool, b0445: bool, b0446: bool, b0447: bool, b0448: bool, b0449: bool, b0450: bool, b0451: bool, b0452: bool, b0453: bool, b0454: bool, b0455: bool, b0456: bool, b0457: bool, b0458: bool, b0459: bool, b0460: bool, b0461: bool, b0462: bool, b0463: bool, b0464: bool, b0465: bool) : bool
{
  0 + (if b0000 then 0 else 186000) + (if b0001 then 0 else 186000) + (if b0002 then 0 else 186000) + (if b0003 then 0 else 186000) + (if b0004 then 0 else 186000) + (if b0005 then 0 else 186000) + (if b0006 then 0 else 186000) + (if b0007 then 0 else 186000) + (if b0008 then 0 else 186000) + (if b0009 then 0 else 186000) + (if b0010 then 0 else 186000) + (if b0011 then 0 else 186000) + (if b0012 then 0 else 186000) + (if b0013 then 0 else 186000) + (if b0014 then 0 else 186000) + (if b0015 then 0 else 186000) + (if b0016 then 0 else 186000) + (if b0017 then 0 else 186000) + (if b0018 then 0 else 186000) + (if b0019 then 0 else 186000) + (if b0020 then 0 else 186000) + (if b0021 then 0 else 186000) + (if b0022 then 0 else 186000) + (if b0023 then 0 else 186000) + (if b0024 then 0 else 186000) + (if b0025 then 0 else 186000) + (if b0026 then 0 else 186000) + (if b0027 then 0 else 186000) + (if b0028 then 0 else 186000) + (if b0029 then 0 else 186000) + (if b0030 then 0 else 186000) + (if b0031 then 0 else 186000) + (if b0032 then 0 else 186000) + (if b0033 then 0 else 186000) + (if b0034 then 0 else 186000) + (if b0035 then 0 else 186000) + (if b0036 then 0 else 186000) + (if b0037 then 0 else 186000) + (if b0038 then 0 else 186000) + (if b0039 then 0 else 186000) + (if b0040 then 0 else 186000) + (if b0041 then 0 else 186000) + (if b0042 then 0 else 186000) + (if b0043 then 0 else 186000) + (if b0044 then 0 else 186000) + (if b0045 then 0 else 186000) + (if b0046 then 0 else 186000) + (if b0047 then 0 else 186000) + (if b0048 then 0 else 186000) + (if b0049 then 0 else 186000) + (if b0050 then 0 else 186000) + (if b0051 then 0 else 186000) + (if b0052 then 0 else 186000) + (if b0053 then 0 else 186000) + (if b0054 then 0 else 186000) + (if b0055 then 0 else 186000) + (if b0056 then 0 else 186000) + (if b0057 then 0 else 186000) + (if b0058 then 0 else 186000) + (if b0059 then 0 else 186000) + (if b0060 then 0 else 186000) + (if b0061 then 0 else 186000) + (if b0062 then 0 else 186000) + (if b0063 then 0 else 186000) + (if b0064 then 0 else 186000) + (if b0065 then 0 else 186000) + (if b0066 then 0 else 186000) + (if b0067 then 0 else 186000) + (if b0068 then 0 else 186000) + (if b0069 then 0 else 186000) + (if b0070 then 0 else 186000) + (if b0071 then 0 else 186000) + (if b0072 then 0 else 186000) + (if b0073 then 0 else 186000) + (if b0074 then 0 else 186000) + (if b0075 then 0 else 186000) + (if b0076 then 0 else 186000) + (if b0077 then 0 else 186000) + (if b0078 then 0 else 186000) + (if b0079 then 0 else 186000) + (if b0080 then 0 else 186000) + (if b0081 then 0 else 186000) + (if b0082 then 0 else 186000) + (if b0083 then 0 else 186000) + (if b0084 then 0 else 186000) + (if b0085 then 0 else 186000) + (if b0086 then 0 else 186000) + (if b0087 then 0 else 186000) + (if b0088 then 0 else 186000) + (if b0089 then 0 else 186000) + (if b0090 then 0 else 186000) + (if b0091 then 0 else 186000) + (if b0092 then 0 else 186000) + (if b0093 then 0 else 186000) + (if b0094 then 0 else 186000) + (if b0095 then 0 else 186000) + (if b0096 then 0 else 186000) + (if b0097 then 0 else 186000) + (if b0098 then 0 else 186000) + (if b0099 then 0 else 186000) + (if b0100 then 0 else 186000) + (if b0101 then 0 else 186000) + (if b0102 then 0 else 186000) + (if b0103 then 0 else 186000) + (if b0104 then 0 else 186000) + (if b0105 then 0 else 186000) + (if b0106 then 0 else 186000) + (if b0107 then 0 else 186000) + (if b0108 then 0 else 186000) + (if b0109 then 0 else 186000) + (if b0110 then 0 else 186000) + (if b0111 then 0 else 186000) + (if b0112 then 0 else 186000) + (if b0113 then 0 else 186000) + (if b0114 then 0 else 186000) + (if b0115 then 0 else 186000) + (if b0116 then 0 else 186000) + (if b0118 then 0 else 186000) + (if b0120 then 0 else 186000) + (if b0121 then 0 else 186000) + (if b0122 then 0 else 186000) + (if b0123 then 0 else 186000) + (if b0124 then 0 else 186000) + (if b0125 then 0 else 186000) + (if b0126 then 0 else 186000) + (if b0127 then 0 else 186000) + (if b0128 then 0 else 186000) + (if b0129 then 0 else 186000) + (if b0130 then 0 else 186000) + (if b0131 then 0 else 186000) + (if b0132 then 0 else 186000) + (if b0134 then 0 else 186000) + (if b0136 then 0 else 186000) + (if b0137 then 0 else 186000) + (if b0138 then 0 else 186000) + (if b0139 then 0 else 186000) + (if b0140 then 0 else 186000) + (if b0141 then 0 else 186000) + (if b0142 then 0 else 186000) + (if b0143 then 0 else 186000) + (if b0144 then 0 else 186000) + (if b0145 then 0 else 186000) + (if b0146 then 0 else 186000) + (if b0147 then 0 else 186000) + (if b0148 then 0 else 186000) + (if b0149 then 0 else 186000) + (if b0150 then 0 else 186000) + (if b0151 then 0 else 186000) + (if b0154 then 0 else 186000) + (if b0156 then 0 else 186000) + (if b0157 then 0 else 186000) + (if b0158 then 0 else 186000) + (if b0159 then 0 else 186000) + (if b0160 then 0 else 186000) + (if b0161 then 0 else 186000) + (if b0162 then 0 else 186000) + (if b0163 then 0 else 186000) + (if b0164 then 0 else 186000) + (if b0165 then 0 else 186000) + (if b0166 then 0 else 186000) + (if b0167 then 0 else 186000) + (if b0168 then 0 else 186000) + (if b0169 then 0 else 186000) + (if b0172 then 0 else 186000) + (if b0174 then 0 else 186000) + (if b0175 then 0 else 186000) + (if b0176 then 0 else 186000) + (if b0177 then 0 else 186000) + (if b0178 then 0 else 186000) + (if b0179 then 0 else 186000) + (if b0180 then 0 else 186000) + (if b0181 then 0 else 186000) + (if b0182 then 0 else 186000) + (if b0183 then 0 else 186000) + (if b0184 then 0 else 186000) + (if b0185 then 0 else 186000) + (if b0186 then 0 else 186000) + (if b0187 then 0 else 186000) + (if b0188 then 0 else 186000) + (if b0189 then 0 else 186000) + (if b0190 then 0 else 186000) + (if b0191 then 0 else 186000) + (if b0192 then 0 else 186000) + (if b0193 then 0 else 186000) + (if b0195 then 0 else 186000) + (if b0197 then 0 else 186000) + (if b0198 then 0 else 186000) + (if b0199 then 0 else 186000) + (if b0200 then 0 else 186000) + (if b0201 then 0 else 186000) + (if b0202 then 0 else 186000) + (if b0203 then 0 else 186000) + (if b0205 then 0 else 186000) + (if b0206 then 0 else 186000) + (if b0207 then 0 else 186000) + (if b0208 then 0 else 186000) + (if b0210 then 0 else 186000) + (if b0212 then 0 else 186000) + (if b0214 then 0 else 186000) + (if b0215 then 0 else 186000) + (if b0216 then 0 else 186000) + (if b0217 then 0 else 186000) + (if b0218 then 0 else 186000) + (if b0219 then 0 else 186000) + (if b0220 then 0 else 186000) + (if b0222 then 0 else 186000) + (if b0223 then 0 else 186000) + (if b0224 then 0 else 186000) + (if b0225 then 0 else 186000) + (if b0226 then 0 else 186000) + (if b0227 then 0 else 186000) + (if b0228 then 0 else 186000) + (if b0229 then 0 else 186000) + (if b0230 then 0 else 186000) + (if b0231 then 0 else 186000) + (if b0232 then 0 else 186000) + (if b0235 then 0 else 186000) + (if b0237 then 0 else 186000) + (if b0238 then 0 else 186000) + (if b0239 then 0 else 186000) + (if b0240 then 0 else 186000) + (if b0241 then 0 else 186000) + (if b0242 then 0 else 186000) + (if b0243 then 0 else 186000) + (if b0244 then 0 else 186000) + (if b0245 then 0 else 186000) + (if b0246 then 0 else 186000) + (if b0247 then 0 else 186000) + (if b0248 then 0 else 186000) + (if b0249 then 0 else 186000) + (if b0250 then 0 else 186000) + (if b0251 then 0 else 186000) + (if b0252 then 0 else 186000) + (if b0253 then 0 else 186000) + (if b0254 then 0 else 186000) + (if b0255 then 0 else 186000) + (if b0256 then 0 else 186000) + (if b0257 then 0 else 186000) + (if b0258 then 0 else 186000) + (if b0259 then 0 else 186000) + (if b0260 then 0 else 186000) + (if b0261 then 0 else 186000) + (if b0262 then 0 else 186000) + (if b0263 then 0 else 186000) + (if b0264 then 0 else 186000) + (if b0265 then 0 else 186000) + (if b0266 then 0 else 186000) + (if b0267 then 0 else 186000) + (if b0268 then 0 else 186000) + (if b0269 then 0 else 186000) + (if b0270 then 0 else 186000) + (if b0271 then 0 else 186000) + (if b0272 then 0 else 186000) + (if b0273 then 0 else 186000) + (if b0274 then 0 else 186000) + (if b0275 then 0 else 186000) + (if b0276 then 0 else 186000) + (if b0277 then 0 else 186000) + (if b0278 then 0 else 186000) + (if b0279 then 0 else 186000) + (if b0280 then 0 else 186000) + (if b0281 then 0 else 186000) + (if b0282 then 0 else 186000) + (if b0283 then 0 else 186000) + (if b0284 then 0 else 186000) + (if b0285 then 0 else 186000) + (if b0286 then 0 else 186000) + (if b0287 then 0 else 186000) + (if b0288 then 0 else 186000) + (if b0289 then 0 else 186000) + (if b0290 then 0 else 186000) + (if b0291 then 0 else 186000) + (if b0292 then 0 else 186000) + (if b0293 then 0 else 186000) + (if b0294 then 0 else 186000) + (if b0295 then 0 else 186000) + (if b0296 then 0 else 186000) + (if b0297 then 0 else 186000) + (if b0298 then 0 else 186000) + (if b0299 then 0 else 186000) + (if b0300 then 0 else 186000) + (if b0301 then 0 else 186000) + (if b0302 then 0 else 186000) + (if b0303 then 0 else 186000) + (if b0304 then 0 else 186000) + (if b0305 then 0 else 186000) + (if b0306 then 0 else 186000) + (if b0307 then 0 else 186000) + (if b0308 then 0 else 186000) + (if b0309 then 0 else 186000) + (if b0310 then 0 else 186000) + (if b0311 then 0 else 186000) + (if b0312 then 0 else 186000) + (if b0313 then 0 else 186000) + (if b0314 then 0 else 186000) + (if b0315 then 0 else 186000) + (if b0316 then 0 else 186000) + (if b0317 then 0 else 186000) + (if b0318 then 0 else 186000) + (if b0319 then 0 else 186000) + (if b0320 then 0 else 186000) + (if b0321 then 0 else 186000) + (if b0322 then 0 else 186000) + (if b0323 then 0 else 186000) + (if b0324 then 0 else 186000) + (if b0325 then 0 else 186000) + (if b0326 then 0 else 186000) + (if b0327 then 0 else 186000) + (if b0328 then 0 else 186000) + (if b0329 then 0 else 186000) + (if b0330 then 0 else 186000) + (if b0331 then 0 else 186000) + (if b0332 then 0 else 186000) + (if b0333 then 0 else 186000) + (if b0334 then 0 else 186000) + (if b0335 then 0 else 186000) + (if b0336 then 0 else 186000) + (if b0337 then 0 else 186000) + (if b0338 then 0 else 186000) + (if b0339 then 0 else 186000) + (if b0340 then 0 else 186000) + (if b0341 then 0 else 186000) + (if b0376 then 0 else 186000) + (if b0377 then 0 else 186000) + (if b0378 then 0 else 186000) + (if b0379 then 0 else 186000) + (if b0380 then 0 else 186000) + (if b0381 then 0 else 186000) + (if b0382 then 0 else 186000) + (if b0383 then 0 else 186000) + (if b0384 then 0 else 186000) + (if b0385 then 0 else 186000) + (if b0386 then 0 else 186000) + (if b0387 then 0 else 186000) + (if b0388 then 0 else 186000) + (if b0389 then 0 else 186000) + (if b0390 then 0 else 186000) + (if b0422 then 0 else 186000) + (if b0423 then 0 else 186000) + (if b0424 then 0 else 186000) + (if b0425 then 0 else 186000) + (if b0426 then 0 else 186000) + (if b0427 then 0 else 186000) + (if b0428 then 0 else 186000) + (if b0429 then 0 else 186000) + (if b0430 then 0 else 186000) + (if b0431 then 0 else 186000) + (if b0432 then 0 else 186000) + (if b0433 then 0 else 186000) + (if b0434 then 0 else 186000) + (if b0435 then 0 else 186000) + (if b0436 then 0 else 186000) + (if b0437 then 0 else 186000) + (if b0438 then 0 else 186000) + (if b0439 then 0 else 186000) + (if b0440 then 0 else 186000) + (if b0441 then 0 else 186000) + (if b0442 then 0 else 186000) + (if b0443 then 0 else 186000) + (if b0444 then 0 else 186000) + (if b0445 then 0 else 186000) + (if b0446 then 0 else 186000) + (if b0447 then 0 else 186000) + (if b0448 then 0 else 186000) + (if b0449 then 0 else 186000) + (if b0450 then 0 else 186000) + (if b0451 then 0 else 186000) + (if b0452 then 0 else 186000) + (if b0453 then 0 else 186000) + (if b0454 then 0 else 186000) + (if b0455 then 0 else 186000) + (if b0456 then 0 else 186000) + (if b0457 then 0 else 186000) + (if b0458 then 0 else 186000) + (if b0459 then 0 else 186000) + (if b0460 then 0 else 186000) + (if b0461 then 0 else 186000) + (if b0462 then 0 else 186000) + (if b0463 then 0 else 186000) + (if b0464 then 0 else 186000) + (if b0465 then 0 else 186000) < 441
}
Prover Time taken = 12.064314
Added Horn clause: 17 && 41 && 0 && 0 && 16 && 0 && 0 && 0 && 0 => 42
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/linear-algebra/kernels/3mm/kernel3.bpl.ice2.bpl
Total learner time was 00:00:00.1335300
Verifying $kernel3: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool, b0228: bool, b0229: bool, b0230: bool, b0231: bool, b0232: bool, b0233: bool, b0234: bool, b0235: bool, b0236: bool, b0237: bool, b0238: bool, b0239: bool, b0240: bool, b0241: bool, b0242: bool, b0243: bool, b0244: bool, b0245: bool, b0246: bool, b0247: bool, b0248: bool, b0249: bool, b0250: bool, b0251: bool, b0252: bool, b0253: bool, b0254: bool, b0255: bool, b0256: bool, b0257: bool, b0258: bool, b0259: bool, b0260: bool, b0261: bool, b0262: bool, b0263: bool, b0264: bool, b0265: bool, b0266: bool, b0267: bool, b0268: bool, b0269: bool, b0270: bool, b0271: bool, b0272: bool, b0273: bool, b0274: bool, b0275: bool, b0276: bool, b0277: bool, b0278: bool, b0279: bool, b0280: bool, b0281: bool, b0282: bool, b0283: bool, b0284: bool, b0285: bool, b0286: bool, b0287: bool, b0288: bool, b0289: bool, b0290: bool, b0291: bool, b0292: bool, b0293: bool, b0294: bool, b0295: bool, b0296: bool, b0297: bool, b0298: bool, b0299: bool, b0300: bool, b0301: bool, b0302: bool, b0303: bool, b0304: bool, b0305: bool, b0306: bool, b0307: bool, b0308: bool, b0309: bool, b0310: bool, b0311: bool, b0312: bool, b0313: bool, b0314: bool, b0315: bool, b0316: bool, b0317: bool, b0318: bool, b0319: bool, b0320: bool, b0321: bool, b0322: bool, b0323: bool, b0324: bool, b0325: bool, b0326: bool, b0327: bool, b0328: bool, b0329: bool, b0330: bool, b0331: bool, b0332: bool, b0333: bool, b0334: bool, b0335: bool, b0336: bool, b0337: bool, b0338: bool, b0339: bool, b0340: bool, b0341: bool, b0342: bool, b0343: bool, b0344: bool, b0345: bool, b0346: bool, b0347: bool, b0348: bool, b0349: bool, b0350: bool, b0351: bool, b0352: bool, b0353: bool, b0354: bool, b0355: bool, b0356: bool, b0357: bool, b0358: bool, b0359: bool, b0360: bool, b0361: bool, b0362: bool, b0363: bool, b0364: bool, b0365: bool, b0366: bool, b0367: bool, b0368: bool, b0369: bool, b0370: bool, b0371: bool, b0372: bool, b0373: bool, b0374: bool, b0375: bool, b0376: bool, b0377: bool, b0378: bool, b0379: bool, b0380: bool, b0381: bool, b0382: bool, b0383: bool, b0384: bool, b0385: bool, b0386: bool, b0387: bool, b0388: bool, b0389: bool, b0390: bool, b0391: bool, b0392: bool, b0393: bool, b0394: bool, b0395: bool, b0396: bool, b0397: bool, b0398: bool, b0399: bool, b0400: bool, b0401: bool, b0402: bool, b0403: bool, b0404: bool, b0405: bool, b0406: bool, b0407: bool, b0408: bool, b0409: bool, b0410: bool, b0411: bool, b0412: bool, b0413: bool, b0414: bool, b0415: bool, b0416: bool, b0417: bool, b0418: bool, b0419: bool, b0420: bool, b0421: bool, b0422: bool, b0423: bool, b0424: bool, b0425: bool, b0426: bool, b0427: bool, b0428: bool, b0429: bool, b0430: bool, b0431: bool, b0432: bool, b0433: bool, b0434: bool, b0435: bool, b0436: bool, b0437: bool, b0438: bool, b0439: bool, b0440: bool, b0441: bool, b0442: bool, b0443: bool, b0444: bool, b0445: bool, b0446: bool, b0447: bool, b0448: bool, b0449: bool, b0450: bool, b0451: bool, b0452: bool, b0453: bool, b0454: bool, b0455: bool, b0456: bool, b0457: bool, b0458: bool, b0459: bool, b0460: bool, b0461: bool, b0462: bool, b0463: bool, b0464: bool, b0465: bool) : bool
{
  0 + (if b0000 then 0 else 186000) + (if b0001 then 0 else 186000) + (if b0002 then 0 else 186000) + (if b0003 then 0 else 186000) + (if b0004 then 0 else 186000) + (if b0005 then 0 else 186000) + (if b0006 then 0 else 186000) + (if b0007 then 0 else 186000) + (if b0008 then 0 else 186000) + (if b0009 then 0 else 186000) + (if b0010 then 0 else 186000) + (if b0011 then 0 else 186000) + (if b0012 then 0 else 186000) + (if b0013 then 0 else 186000) + (if b0014 then 0 else 186000) + (if b0015 then 0 else 186000) + (if b0016 then 0 else 186000) + (if b0017 then 0 else 186000) + (if b0018 then 0 else 186000) + (if b0019 then 0 else 186000) + (if b0020 then 0 else 186000) + (if b0021 then 0 else 186000) + (if b0022 then 0 else 186000) + (if b0023 then 0 else 186000) + (if b0024 then 0 else 186000) + (if b0025 then 0 else 186000) + (if b0026 then 0 else 186000) + (if b0027 then 0 else 186000) + (if b0028 then 0 else 186000) + (if b0029 then 0 else 186000) + (if b0030 then 0 else 186000) + (if b0031 then 0 else 186000) + (if b0032 then 0 else 186000) + (if b0033 then 0 else 186000) + (if b0034 then 0 else 186000) + (if b0035 then 0 else 186000) + (if b0036 then 0 else 186000) + (if b0037 then 0 else 186000) + (if b0038 then 0 else 186000) + (if b0039 then 0 else 186000) + (if b0040 then 0 else 186000) + (if b0041 then 0 else 186000) + (if b0042 then 0 else 186000) + (if b0043 then 0 else 186000) + (if b0044 then 0 else 186000) + (if b0045 then 0 else 186000) + (if b0046 then 0 else 186000) + (if b0047 then 0 else 186000) + (if b0048 then 0 else 186000) + (if b0049 then 0 else 186000) + (if b0050 then 0 else 186000) + (if b0051 then 0 else 186000) + (if b0052 then 0 else 186000) + (if b0053 then 0 else 186000) + (if b0054 then 0 else 186000) + (if b0055 then 0 else 186000) + (if b0056 then 0 else 186000) + (if b0057 then 0 else 186000) + (if b0058 then 0 else 186000) + (if b0059 then 0 else 186000) + (if b0060 then 0 else 186000) + (if b0061 then 0 else 186000) + (if b0062 then 0 else 186000) + (if b0063 then 0 else 186000) + (if b0064 then 0 else 186000) + (if b0065 then 0 else 186000) + (if b0066 then 0 else 186000) + (if b0067 then 0 else 186000) + (if b0068 then 0 else 186000) + (if b0069 then 0 else 186000) + (if b0070 then 0 else 186000) + (if b0071 then 0 else 186000) + (if b0072 then 0 else 186000) + (if b0073 then 0 else 186000) + (if b0074 then 0 else 186000) + (if b0075 then 0 else 186000) + (if b0076 then 0 else 186000) + (if b0077 then 0 else 186000) + (if b0078 then 0 else 186000) + (if b0079 then 0 else 186000) + (if b0080 then 0 else 186000) + (if b0081 then 0 else 186000) + (if b0082 then 0 else 186000) + (if b0083 then 0 else 186000) + (if b0084 then 0 else 186000) + (if b0085 then 0 else 186000) + (if b0086 then 0 else 186000) + (if b0087 then 0 else 186000) + (if b0088 then 0 else 186000) + (if b0089 then 0 else 186000) + (if b0090 then 0 else 186000) + (if b0091 then 0 else 186000) + (if b0092 then 0 else 186000) + (if b0093 then 0 else 186000) + (if b0094 then 0 else 186000) + (if b0095 then 0 else 186000) + (if b0096 then 0 else 186000) + (if b0097 then 0 else 186000) + (if b0098 then 0 else 186000) + (if b0099 then 0 else 186000) + (if b0100 then 0 else 186000) + (if b0101 then 0 else 186000) + (if b0102 then 0 else 186000) + (if b0103 then 0 else 186000) + (if b0104 then 0 else 186000) + (if b0105 then 0 else 186000) + (if b0106 then 0 else 186000) + (if b0107 then 0 else 186000) + (if b0108 then 0 else 186000) + (if b0109 then 0 else 186000) + (if b0110 then 0 else 186000) + (if b0111 then 0 else 186000) + (if b0112 then 0 else 186000) + (if b0113 then 0 else 186000) + (if b0114 then 0 else 186000) + (if b0115 then 0 else 186000) + (if b0116 then 0 else 186000) + (if b0118 then 0 else 186000) + (if b0120 then 0 else 186000) + (if b0121 then 0 else 186000) + (if b0122 then 0 else 186000) + (if b0123 then 0 else 186000) + (if b0124 then 0 else 186000) + (if b0125 then 0 else 186000) + (if b0126 then 0 else 186000) + (if b0127 then 0 else 186000) + (if b0128 then 0 else 186000) + (if b0129 then 0 else 186000) + (if b0130 then 0 else 186000) + (if b0131 then 0 else 186000) + (if b0132 then 0 else 186000) + (if b0134 then 0 else 186000) + (if b0136 then 0 else 186000) + (if b0137 then 0 else 186000) + (if b0138 then 0 else 186000) + (if b0139 then 0 else 186000) + (if b0140 then 0 else 186000) + (if b0141 then 0 else 186000) + (if b0142 then 0 else 186000) + (if b0143 then 0 else 186000) + (if b0144 then 0 else 186000) + (if b0145 then 0 else 186000) + (if b0146 then 0 else 186000) + (if b0147 then 0 else 186000) + (if b0148 then 0 else 186000) + (if b0149 then 0 else 186000) + (if b0150 then 0 else 186000) + (if b0151 then 0 else 186000) + (if b0154 then 0 else 186000) + (if b0156 then 0 else 186000) + (if b0157 then 0 else 186000) + (if b0158 then 0 else 186000) + (if b0159 then 0 else 186000) + (if b0160 then 0 else 186000) + (if b0161 then 0 else 186000) + (if b0162 then 0 else 186000) + (if b0163 then 0 else 186000) + (if b0164 then 0 else 186000) + (if b0165 then 0 else 186000) + (if b0166 then 0 else 186000) + (if b0167 then 0 else 186000) + (if b0168 then 0 else 186000) + (if b0169 then 0 else 186000) + (if b0172 then 0 else 186000) + (if b0174 then 0 else 186000) + (if b0175 then 0 else 186000) + (if b0176 then 0 else 186000) + (if b0177 then 0 else 186000) + (if b0178 then 0 else 186000) + (if b0179 then 0 else 186000) + (if b0180 then 0 else 186000) + (if b0181 then 0 else 186000) + (if b0182 then 0 else 186000) + (if b0183 then 0 else 186000) + (if b0184 then 0 else 186000) + (if b0185 then 0 else 186000) + (if b0186 then 0 else 186000) + (if b0187 then 0 else 186000) + (if b0188 then 0 else 186000) + (if b0189 then 0 else 186000) + (if b0190 then 0 else 186000) + (if b0191 then 0 else 186000) + (if b0192 then 0 else 186000) + (if b0193 then 0 else 186000) + (if b0195 then 0 else 186000) + (if b0197 then 0 else 186000) + (if b0198 then 0 else 186000) + (if b0199 then 0 else 186000) + (if b0200 then 0 else 186000) + (if b0201 then 0 else 186000) + (if b0202 then 0 else 186000) + (if b0203 then 0 else 186000) + (if b0205 then 0 else 186000) + (if b0206 then 0 else 186000) + (if b0207 then 0 else 186000) + (if b0208 then 0 else 186000) + (if b0210 then 0 else 186000) + (if b0212 then 0 else 186000) + (if b0214 then 0 else 186000) + (if b0215 then 0 else 186000) + (if b0216 then 0 else 186000) + (if b0217 then 0 else 186000) + (if b0218 then 0 else 186000) + (if b0219 then 0 else 186000) + (if b0220 then 0 else 186000) + (if b0222 then 0 else 186000) + (if b0223 then 0 else 186000) + (if b0224 then 0 else 186000) + (if b0225 then 0 else 186000) + (if b0227 then 0 else 186000) + (if b0228 then 0 else 186000) + (if b0229 then 0 else 186000) + (if b0230 then 0 else 186000) + (if b0231 then 0 else 186000) + (if b0232 then 0 else 186000) + (if b0235 then 0 else 186000) + (if b0237 then 0 else 186000) + (if b0238 then 0 else 186000) + (if b0239 then 0 else 186000) + (if b0240 then 0 else 186000) + (if b0241 then 0 else 186000) + (if b0242 then 0 else 186000) + (if b0243 then 0 else 186000) + (if b0244 then 0 else 186000) + (if b0245 then 0 else 186000) + (if b0246 then 0 else 186000) + (if b0247 then 0 else 186000) + (if b0248 then 0 else 186000) + (if b0249 then 0 else 186000) + (if b0250 then 0 else 186000) + (if b0251 then 0 else 186000) + (if b0252 then 0 else 186000) + (if b0253 then 0 else 186000) + (if b0254 then 0 else 186000) + (if b0255 then 0 else 186000) + (if b0256 then 0 else 186000) + (if b0257 then 0 else 186000) + (if b0258 then 0 else 186000) + (if b0259 then 0 else 186000) + (if b0260 then 0 else 186000) + (if b0261 then 0 else 186000) + (if b0262 then 0 else 186000) + (if b0263 then 0 else 186000) + (if b0264 then 0 else 186000) + (if b0265 then 0 else 186000) + (if b0266 then 0 else 186000) + (if b0267 then 0 else 186000) + (if b0268 then 0 else 186000) + (if b0269 then 0 else 186000) + (if b0270 then 0 else 186000) + (if b0271 then 0 else 186000) + (if b0272 then 0 else 186000) + (if b0273 then 0 else 186000) + (if b0274 then 0 else 186000) + (if b0275 then 0 else 186000) + (if b0276 then 0 else 186000) + (if b0277 then 0 else 186000) + (if b0278 then 0 else 186000) + (if b0279 then 0 else 186000) + (if b0280 then 0 else 186000) + (if b0281 then 0 else 186000) + (if b0282 then 0 else 186000) + (if b0283 then 0 else 186000) + (if b0284 then 0 else 186000) + (if b0285 then 0 else 186000) + (if b0286 then 0 else 186000) + (if b0287 then 0 else 186000) + (if b0288 then 0 else 186000) + (if b0289 then 0 else 186000) + (if b0290 then 0 else 186000) + (if b0291 then 0 else 186000) + (if b0292 then 0 else 186000) + (if b0293 then 0 else 186000) + (if b0294 then 0 else 186000) + (if b0295 then 0 else 186000) + (if b0296 then 0 else 186000) + (if b0297 then 0 else 186000) + (if b0298 then 0 else 186000) + (if b0299 then 0 else 186000) + (if b0300 then 0 else 186000) + (if b0301 then 0 else 186000) + (if b0302 then 0 else 186000) + (if b0303 then 0 else 186000) + (if b0304 then 0 else 186000) + (if b0305 then 0 else 186000) + (if b0306 then 0 else 186000) + (if b0307 then 0 else 186000) + (if b0308 then 0 else 186000) + (if b0309 then 0 else 186000) + (if b0310 then 0 else 186000) + (if b0311 then 0 else 186000) + (if b0312 then 0 else 186000) + (if b0313 then 0 else 186000) + (if b0314 then 0 else 186000) + (if b0315 then 0 else 186000) + (if b0316 then 0 else 186000) + (if b0317 then 0 else 186000) + (if b0318 then 0 else 186000) + (if b0319 then 0 else 186000) + (if b0320 then 0 else 186000) + (if b0321 then 0 else 186000) + (if b0322 then 0 else 186000) + (if b0323 then 0 else 186000) + (if b0324 then 0 else 186000) + (if b0325 then 0 else 186000) + (if b0326 then 0 else 186000) + (if b0327 then 0 else 186000) + (if b0328 then 0 else 186000) + (if b0329 then 0 else 186000) + (if b0330 then 0 else 186000) + (if b0331 then 0 else 186000) + (if b0332 then 0 else 186000) + (if b0333 then 0 else 186000) + (if b0334 then 0 else 186000) + (if b0335 then 0 else 186000) + (if b0336 then 0 else 186000) + (if b0337 then 0 else 186000) + (if b0338 then 0 else 186000) + (if b0339 then 0 else 186000) + (if b0340 then 0 else 186000) + (if b0341 then 0 else 186000) + (if b0376 then 0 else 186000) + (if b0377 then 0 else 186000) + (if b0378 then 0 else 186000) + (if b0379 then 0 else 186000) + (if b0380 then 0 else 186000) + (if b0381 then 0 else 186000) + (if b0382 then 0 else 186000) + (if b0383 then 0 else 186000) + (if b0384 then 0 else 186000) + (if b0385 then 0 else 186000) + (if b0386 then 0 else 186000) + (if b0387 then 0 else 186000) + (if b0388 then 0 else 186000) + (if b0389 then 0 else 186000) + (if b0390 then 0 else 186000) + (if b0422 then 0 else 186000) + (if b0423 then 0 else 186000) + (if b0424 then 0 else 186000) + (if b0425 then 0 else 186000) + (if b0426 then 0 else 186000) + (if b0427 then 0 else 186000) + (if b0428 then 0 else 186000) + (if b0429 then 0 else 186000) + (if b0430 then 0 else 186000) + (if b0431 then 0 else 186000) + (if b0432 then 0 else 186000) + (if b0433 then 0 else 186000) + (if b0434 then 0 else 186000) + (if b0435 then 0 else 186000) + (if b0436 then 0 else 186000) + (if b0437 then 0 else 186000) + (if b0438 then 0 else 186000) + (if b0439 then 0 else 186000) + (if b0440 then 0 else 186000) + (if b0441 then 0 else 186000) + (if b0442 then 0 else 186000) + (if b0443 then 0 else 186000) + (if b0444 then 0 else 186000) + (if b0445 then 0 else 186000) + (if b0446 then 0 else 186000) + (if b0447 then 0 else 186000) + (if b0448 then 0 else 186000) + (if b0449 then 0 else 186000) + (if b0450 then 0 else 186000) + (if b0451 then 0 else 186000) + (if b0452 then 0 else 186000) + (if b0453 then 0 else 186000) + (if b0454 then 0 else 186000) + (if b0455 then 0 else 186000) + (if b0456 then 0 else 186000) + (if b0457 then 0 else 186000) + (if b0458 then 0 else 186000) + (if b0459 then 0 else 186000) + (if b0460 then 0 else 186000) + (if b0461 then 0 else 186000) + (if b0462 then 0 else 186000) + (if b0463 then 0 else 186000) + (if b0464 then 0 else 186000) + (if b0465 then 0 else 186000) < 441
}
Prover Time taken = 10.930939
Added Horn clause: 31 && 43 && 0 && 0 && 0 && 0 && 26 && 0 && 0 => 44
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/linear-algebra/kernels/3mm/kernel3.bpl.ice2.bpl
Total learner time was 00:00:00.1349870
Verifying $kernel3: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool, b0228: bool, b0229: bool, b0230: bool, b0231: bool, b0232: bool, b0233: bool, b0234: bool, b0235: bool, b0236: bool, b0237: bool, b0238: bool, b0239: bool, b0240: bool, b0241: bool, b0242: bool, b0243: bool, b0244: bool, b0245: bool, b0246: bool, b0247: bool, b0248: bool, b0249: bool, b0250: bool, b0251: bool, b0252: bool, b0253: bool, b0254: bool, b0255: bool, b0256: bool, b0257: bool, b0258: bool, b0259: bool, b0260: bool, b0261: bool, b0262: bool, b0263: bool, b0264: bool, b0265: bool, b0266: bool, b0267: bool, b0268: bool, b0269: bool, b0270: bool, b0271: bool, b0272: bool, b0273: bool, b0274: bool, b0275: bool, b0276: bool, b0277: bool, b0278: bool, b0279: bool, b0280: bool, b0281: bool, b0282: bool, b0283: bool, b0284: bool, b0285: bool, b0286: bool, b0287: bool, b0288: bool, b0289: bool, b0290: bool, b0291: bool, b0292: bool, b0293: bool, b0294: bool, b0295: bool, b0296: bool, b0297: bool, b0298: bool, b0299: bool, b0300: bool, b0301: bool, b0302: bool, b0303: bool, b0304: bool, b0305: bool, b0306: bool, b0307: bool, b0308: bool, b0309: bool, b0310: bool, b0311: bool, b0312: bool, b0313: bool, b0314: bool, b0315: bool, b0316: bool, b0317: bool, b0318: bool, b0319: bool, b0320: bool, b0321: bool, b0322: bool, b0323: bool, b0324: bool, b0325: bool, b0326: bool, b0327: bool, b0328: bool, b0329: bool, b0330: bool, b0331: bool, b0332: bool, b0333: bool, b0334: bool, b0335: bool, b0336: bool, b0337: bool, b0338: bool, b0339: bool, b0340: bool, b0341: bool, b0342: bool, b0343: bool, b0344: bool, b0345: bool, b0346: bool, b0347: bool, b0348: bool, b0349: bool, b0350: bool, b0351: bool, b0352: bool, b0353: bool, b0354: bool, b0355: bool, b0356: bool, b0357: bool, b0358: bool, b0359: bool, b0360: bool, b0361: bool, b0362: bool, b0363: bool, b0364: bool, b0365: bool, b0366: bool, b0367: bool, b0368: bool, b0369: bool, b0370: bool, b0371: bool, b0372: bool, b0373: bool, b0374: bool, b0375: bool, b0376: bool, b0377: bool, b0378: bool, b0379: bool, b0380: bool, b0381: bool, b0382: bool, b0383: bool, b0384: bool, b0385: bool, b0386: bool, b0387: bool, b0388: bool, b0389: bool, b0390: bool, b0391: bool, b0392: bool, b0393: bool, b0394: bool, b0395: bool, b0396: bool, b0397: bool, b0398: bool, b0399: bool, b0400: bool, b0401: bool, b0402: bool, b0403: bool, b0404: bool, b0405: bool, b0406: bool, b0407: bool, b0408: bool, b0409: bool, b0410: bool, b0411: bool, b0412: bool, b0413: bool, b0414: bool, b0415: bool, b0416: bool, b0417: bool, b0418: bool, b0419: bool, b0420: bool, b0421: bool, b0422: bool, b0423: bool, b0424: bool, b0425: bool, b0426: bool, b0427: bool, b0428: bool, b0429: bool, b0430: bool, b0431: bool, b0432: bool, b0433: bool, b0434: bool, b0435: bool, b0436: bool, b0437: bool, b0438: bool, b0439: bool, b0440: bool, b0441: bool, b0442: bool, b0443: bool, b0444: bool, b0445: bool, b0446: bool, b0447: bool, b0448: bool, b0449: bool, b0450: bool, b0451: bool, b0452: bool, b0453: bool, b0454: bool, b0455: bool, b0456: bool, b0457: bool, b0458: bool, b0459: bool, b0460: bool, b0461: bool, b0462: bool, b0463: bool, b0464: bool, b0465: bool) : bool
{
  0 + (if b0000 then 0 else 186000) + (if b0001 then 0 else 186000) + (if b0002 then 0 else 186000) + (if b0003 then 0 else 186000) + (if b0004 then 0 else 186000) + (if b0005 then 0 else 186000) + (if b0006 then 0 else 186000) + (if b0007 then 0 else 186000) + (if b0008 then 0 else 186000) + (if b0009 then 0 else 186000) + (if b0010 then 0 else 186000) + (if b0011 then 0 else 186000) + (if b0012 then 0 else 186000) + (if b0013 then 0 else 186000) + (if b0014 then 0 else 186000) + (if b0015 then 0 else 186000) + (if b0016 then 0 else 186000) + (if b0017 then 0 else 186000) + (if b0018 then 0 else 186000) + (if b0019 then 0 else 186000) + (if b0020 then 0 else 186000) + (if b0021 then 0 else 186000) + (if b0022 then 0 else 186000) + (if b0023 then 0 else 186000) + (if b0024 then 0 else 186000) + (if b0025 then 0 else 186000) + (if b0026 then 0 else 186000) + (if b0027 then 0 else 186000) + (if b0028 then 0 else 186000) + (if b0029 then 0 else 186000) + (if b0030 then 0 else 186000) + (if b0031 then 0 else 186000) + (if b0032 then 0 else 186000) + (if b0033 then 0 else 186000) + (if b0034 then 0 else 186000) + (if b0035 then 0 else 186000) + (if b0036 then 0 else 186000) + (if b0037 then 0 else 186000) + (if b0038 then 0 else 186000) + (if b0039 then 0 else 186000) + (if b0040 then 0 else 186000) + (if b0041 then 0 else 186000) + (if b0042 then 0 else 186000) + (if b0043 then 0 else 186000) + (if b0044 then 0 else 186000) + (if b0045 then 0 else 186000) + (if b0046 then 0 else 186000) + (if b0047 then 0 else 186000) + (if b0048 then 0 else 186000) + (if b0049 then 0 else 186000) + (if b0050 then 0 else 186000) + (if b0051 then 0 else 186000) + (if b0052 then 0 else 186000) + (if b0053 then 0 else 186000) + (if b0054 then 0 else 186000) + (if b0055 then 0 else 186000) + (if b0056 then 0 else 186000) + (if b0057 then 0 else 186000) + (if b0058 then 0 else 186000) + (if b0059 then 0 else 186000) + (if b0060 then 0 else 186000) + (if b0061 then 0 else 186000) + (if b0062 then 0 else 186000) + (if b0063 then 0 else 186000) + (if b0064 then 0 else 186000) + (if b0065 then 0 else 186000) + (if b0066 then 0 else 186000) + (if b0067 then 0 else 186000) + (if b0068 then 0 else 186000) + (if b0069 then 0 else 186000) + (if b0070 then 0 else 186000) + (if b0071 then 0 else 186000) + (if b0072 then 0 else 186000) + (if b0073 then 0 else 186000) + (if b0074 then 0 else 186000) + (if b0075 then 0 else 186000) + (if b0076 then 0 else 186000) + (if b0077 then 0 else 186000) + (if b0078 then 0 else 186000) + (if b0079 then 0 else 186000) + (if b0080 then 0 else 186000) + (if b0081 then 0 else 186000) + (if b0082 then 0 else 186000) + (if b0083 then 0 else 186000) + (if b0084 then 0 else 186000) + (if b0085 then 0 else 186000) + (if b0086 then 0 else 186000) + (if b0087 then 0 else 186000) + (if b0088 then 0 else 186000) + (if b0089 then 0 else 186000) + (if b0090 then 0 else 186000) + (if b0091 then 0 else 186000) + (if b0092 then 0 else 186000) + (if b0093 then 0 else 186000) + (if b0094 then 0 else 186000) + (if b0095 then 0 else 186000) + (if b0096 then 0 else 186000) + (if b0097 then 0 else 186000) + (if b0098 then 0 else 186000) + (if b0099 then 0 else 186000) + (if b0100 then 0 else 186000) + (if b0101 then 0 else 186000) + (if b0102 then 0 else 186000) + (if b0103 then 0 else 186000) + (if b0104 then 0 else 186000) + (if b0105 then 0 else 186000) + (if b0106 then 0 else 186000) + (if b0107 then 0 else 186000) + (if b0108 then 0 else 186000) + (if b0109 then 0 else 186000) + (if b0110 then 0 else 186000) + (if b0111 then 0 else 186000) + (if b0112 then 0 else 186000) + (if b0113 then 0 else 186000) + (if b0114 then 0 else 186000) + (if b0115 then 0 else 186000) + (if b0116 then 0 else 186000) + (if b0118 then 0 else 186000) + (if b0120 then 0 else 186000) + (if b0121 then 0 else 186000) + (if b0122 then 0 else 186000) + (if b0123 then 0 else 186000) + (if b0124 then 0 else 186000) + (if b0125 then 0 else 186000) + (if b0126 then 0 else 186000) + (if b0127 then 0 else 186000) + (if b0128 then 0 else 186000) + (if b0129 then 0 else 186000) + (if b0130 then 0 else 186000) + (if b0131 then 0 else 186000) + (if b0132 then 0 else 186000) + (if b0134 then 0 else 186000) + (if b0136 then 0 else 186000) + (if b0137 then 0 else 186000) + (if b0138 then 0 else 186000) + (if b0139 then 0 else 186000) + (if b0140 then 0 else 186000) + (if b0141 then 0 else 186000) + (if b0142 then 0 else 186000) + (if b0143 then 0 else 186000) + (if b0144 then 0 else 186000) + (if b0145 then 0 else 186000) + (if b0146 then 0 else 186000) + (if b0147 then 0 else 186000) + (if b0148 then 0 else 186000) + (if b0149 then 0 else 186000) + (if b0150 then 0 else 186000) + (if b0151 then 0 else 186000) + (if b0154 then 0 else 186000) + (if b0156 then 0 else 186000) + (if b0157 then 0 else 186000) + (if b0158 then 0 else 186000) + (if b0159 then 0 else 186000) + (if b0160 then 0 else 186000) + (if b0161 then 0 else 186000) + (if b0162 then 0 else 186000) + (if b0163 then 0 else 186000) + (if b0164 then 0 else 186000) + (if b0165 then 0 else 186000) + (if b0166 then 0 else 186000) + (if b0167 then 0 else 186000) + (if b0168 then 0 else 186000) + (if b0169 then 0 else 186000) + (if b0172 then 0 else 186000) + (if b0174 then 0 else 186000) + (if b0175 then 0 else 186000) + (if b0176 then 0 else 186000) + (if b0177 then 0 else 186000) + (if b0178 then 0 else 186000) + (if b0179 then 0 else 186000) + (if b0180 then 0 else 186000) + (if b0181 then 0 else 186000) + (if b0182 then 0 else 186000) + (if b0183 then 0 else 186000) + (if b0184 then 0 else 186000) + (if b0185 then 0 else 186000) + (if b0186 then 0 else 186000) + (if b0187 then 0 else 186000) + (if b0188 then 0 else 186000) + (if b0189 then 0 else 186000) + (if b0190 then 0 else 186000) + (if b0191 then 0 else 186000) + (if b0192 then 0 else 186000) + (if b0193 then 0 else 186000) + (if b0195 then 0 else 186000) + (if b0197 then 0 else 186000) + (if b0198 then 0 else 186000) + (if b0199 then 0 else 186000) + (if b0200 then 0 else 186000) + (if b0201 then 0 else 186000) + (if b0202 then 0 else 186000) + (if b0203 then 0 else 186000) + (if b0205 then 0 else 186000) + (if b0206 then 0 else 186000) + (if b0207 then 0 else 186000) + (if b0208 then 0 else 186000) + (if b0210 then 0 else 186000) + (if b0212 then 0 else 186000) + (if b0214 then 0 else 186000) + (if b0215 then 0 else 186000) + (if b0216 then 0 else 186000) + (if b0217 then 0 else 186000) + (if b0218 then 0 else 186000) + (if b0219 then 0 else 186000) + (if b0220 then 0 else 186000) + (if b0222 then 0 else 186000) + (if b0223 then 0 else 186000) + (if b0224 then 0 else 186000) + (if b0225 then 0 else 186000) + (if b0227 then 0 else 186000) + (if b0228 then 0 else 186000) + (if b0229 then 0 else 186000) + (if b0230 then 0 else 186000) + (if b0232 then 0 else 186000) + (if b0235 then 0 else 186000) + (if b0237 then 0 else 186000) + (if b0238 then 0 else 186000) + (if b0239 then 0 else 186000) + (if b0240 then 0 else 186000) + (if b0241 then 0 else 186000) + (if b0242 then 0 else 186000) + (if b0243 then 0 else 186000) + (if b0244 then 0 else 186000) + (if b0245 then 0 else 186000) + (if b0246 then 0 else 186000) + (if b0247 then 0 else 186000) + (if b0248 then 0 else 186000) + (if b0249 then 0 else 186000) + (if b0250 then 0 else 186000) + (if b0251 then 0 else 186000) + (if b0252 then 0 else 186000) + (if b0253 then 0 else 186000) + (if b0254 then 0 else 186000) + (if b0255 then 0 else 186000) + (if b0256 then 0 else 186000) + (if b0257 then 0 else 186000) + (if b0258 then 0 else 186000) + (if b0259 then 0 else 186000) + (if b0260 then 0 else 186000) + (if b0261 then 0 else 186000) + (if b0262 then 0 else 186000) + (if b0263 then 0 else 186000) + (if b0264 then 0 else 186000) + (if b0265 then 0 else 186000) + (if b0266 then 0 else 186000) + (if b0267 then 0 else 186000) + (if b0268 then 0 else 186000) + (if b0269 then 0 else 186000) + (if b0270 then 0 else 186000) + (if b0271 then 0 else 186000) + (if b0272 then 0 else 186000) + (if b0273 then 0 else 186000) + (if b0274 then 0 else 186000) + (if b0275 then 0 else 186000) + (if b0276 then 0 else 186000) + (if b0277 then 0 else 186000) + (if b0278 then 0 else 186000) + (if b0279 then 0 else 186000) + (if b0280 then 0 else 186000) + (if b0281 then 0 else 186000) + (if b0282 then 0 else 186000) + (if b0283 then 0 else 186000) + (if b0284 then 0 else 186000) + (if b0285 then 0 else 186000) + (if b0286 then 0 else 186000) + (if b0287 then 0 else 186000) + (if b0288 then 0 else 186000) + (if b0289 then 0 else 186000) + (if b0290 then 0 else 186000) + (if b0291 then 0 else 186000) + (if b0292 then 0 else 186000) + (if b0293 then 0 else 186000) + (if b0294 then 0 else 186000) + (if b0295 then 0 else 186000) + (if b0296 then 0 else 186000) + (if b0297 then 0 else 186000) + (if b0298 then 0 else 186000) + (if b0299 then 0 else 186000) + (if b0300 then 0 else 186000) + (if b0301 then 0 else 186000) + (if b0302 then 0 else 186000) + (if b0303 then 0 else 186000) + (if b0304 then 0 else 186000) + (if b0305 then 0 else 186000) + (if b0306 then 0 else 186000) + (if b0307 then 0 else 186000) + (if b0308 then 0 else 186000) + (if b0309 then 0 else 186000) + (if b0310 then 0 else 186000) + (if b0311 then 0 else 186000) + (if b0312 then 0 else 186000) + (if b0313 then 0 else 186000) + (if b0314 then 0 else 186000) + (if b0315 then 0 else 186000) + (if b0316 then 0 else 186000) + (if b0317 then 0 else 186000) + (if b0318 then 0 else 186000) + (if b0319 then 0 else 186000) + (if b0320 then 0 else 186000) + (if b0321 then 0 else 186000) + (if b0322 then 0 else 186000) + (if b0323 then 0 else 186000) + (if b0324 then 0 else 186000) + (if b0325 then 0 else 186000) + (if b0326 then 0 else 186000) + (if b0327 then 0 else 186000) + (if b0328 then 0 else 186000) + (if b0329 then 0 else 186000) + (if b0330 then 0 else 186000) + (if b0331 then 0 else 186000) + (if b0332 then 0 else 186000) + (if b0333 then 0 else 186000) + (if b0334 then 0 else 186000) + (if b0335 then 0 else 186000) + (if b0336 then 0 else 186000) + (if b0337 then 0 else 186000) + (if b0338 then 0 else 186000) + (if b0339 then 0 else 186000) + (if b0340 then 0 else 186000) + (if b0341 then 0 else 186000) + (if b0376 then 0 else 186000) + (if b0377 then 0 else 186000) + (if b0378 then 0 else 186000) + (if b0379 then 0 else 186000) + (if b0380 then 0 else 186000) + (if b0381 then 0 else 186000) + (if b0382 then 0 else 186000) + (if b0383 then 0 else 186000) + (if b0384 then 0 else 186000) + (if b0385 then 0 else 186000) + (if b0386 then 0 else 186000) + (if b0387 then 0 else 186000) + (if b0388 then 0 else 186000) + (if b0389 then 0 else 186000) + (if b0390 then 0 else 186000) + (if b0422 then 0 else 186000) + (if b0423 then 0 else 186000) + (if b0424 then 0 else 186000) + (if b0425 then 0 else 186000) + (if b0426 then 0 else 186000) + (if b0427 then 0 else 186000) + (if b0428 then 0 else 186000) + (if b0429 then 0 else 186000) + (if b0430 then 0 else 186000) + (if b0431 then 0 else 186000) + (if b0432 then 0 else 186000) + (if b0433 then 0 else 186000) + (if b0434 then 0 else 186000) + (if b0435 then 0 else 186000) + (if b0436 then 0 else 186000) + (if b0437 then 0 else 186000) + (if b0438 then 0 else 186000) + (if b0439 then 0 else 186000) + (if b0440 then 0 else 186000) + (if b0441 then 0 else 186000) + (if b0442 then 0 else 186000) + (if b0443 then 0 else 186000) + (if b0444 then 0 else 186000) + (if b0445 then 0 else 186000) + (if b0446 then 0 else 186000) + (if b0447 then 0 else 186000) + (if b0448 then 0 else 186000) + (if b0449 then 0 else 186000) + (if b0450 then 0 else 186000) + (if b0451 then 0 else 186000) + (if b0452 then 0 else 186000) + (if b0453 then 0 else 186000) + (if b0454 then 0 else 186000) + (if b0455 then 0 else 186000) + (if b0456 then 0 else 186000) + (if b0457 then 0 else 186000) + (if b0458 then 0 else 186000) + (if b0459 then 0 else 186000) + (if b0460 then 0 else 186000) + (if b0461 then 0 else 186000) + (if b0462 then 0 else 186000) + (if b0463 then 0 else 186000) + (if b0464 then 0 else 186000) + (if b0465 then 0 else 186000) < 441
}
Prover Time taken = 11.909803
Added Horn clause: 0 && 21 && 33 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 => 45
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/linear-algebra/kernels/3mm/kernel3.bpl.ice2.bpl
Total learner time was 00:00:00.1329590
Verifying $kernel3: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool, b0228: bool, b0229: bool, b0230: bool, b0231: bool, b0232: bool, b0233: bool, b0234: bool, b0235: bool, b0236: bool, b0237: bool, b0238: bool, b0239: bool, b0240: bool, b0241: bool, b0242: bool, b0243: bool, b0244: bool, b0245: bool, b0246: bool, b0247: bool, b0248: bool, b0249: bool, b0250: bool, b0251: bool, b0252: bool, b0253: bool, b0254: bool, b0255: bool, b0256: bool, b0257: bool, b0258: bool, b0259: bool, b0260: bool, b0261: bool, b0262: bool, b0263: bool, b0264: bool, b0265: bool, b0266: bool, b0267: bool, b0268: bool, b0269: bool, b0270: bool, b0271: bool, b0272: bool, b0273: bool, b0274: bool, b0275: bool, b0276: bool, b0277: bool, b0278: bool, b0279: bool, b0280: bool, b0281: bool, b0282: bool, b0283: bool, b0284: bool, b0285: bool, b0286: bool, b0287: bool, b0288: bool, b0289: bool, b0290: bool, b0291: bool, b0292: bool, b0293: bool, b0294: bool, b0295: bool, b0296: bool, b0297: bool, b0298: bool, b0299: bool, b0300: bool, b0301: bool, b0302: bool, b0303: bool, b0304: bool, b0305: bool, b0306: bool, b0307: bool, b0308: bool, b0309: bool, b0310: bool, b0311: bool, b0312: bool, b0313: bool, b0314: bool, b0315: bool, b0316: bool, b0317: bool, b0318: bool, b0319: bool, b0320: bool, b0321: bool, b0322: bool, b0323: bool, b0324: bool, b0325: bool, b0326: bool, b0327: bool, b0328: bool, b0329: bool, b0330: bool, b0331: bool, b0332: bool, b0333: bool, b0334: bool, b0335: bool, b0336: bool, b0337: bool, b0338: bool, b0339: bool, b0340: bool, b0341: bool, b0342: bool, b0343: bool, b0344: bool, b0345: bool, b0346: bool, b0347: bool, b0348: bool, b0349: bool, b0350: bool, b0351: bool, b0352: bool, b0353: bool, b0354: bool, b0355: bool, b0356: bool, b0357: bool, b0358: bool, b0359: bool, b0360: bool, b0361: bool, b0362: bool, b0363: bool, b0364: bool, b0365: bool, b0366: bool, b0367: bool, b0368: bool, b0369: bool, b0370: bool, b0371: bool, b0372: bool, b0373: bool, b0374: bool, b0375: bool, b0376: bool, b0377: bool, b0378: bool, b0379: bool, b0380: bool, b0381: bool, b0382: bool, b0383: bool, b0384: bool, b0385: bool, b0386: bool, b0387: bool, b0388: bool, b0389: bool, b0390: bool, b0391: bool, b0392: bool, b0393: bool, b0394: bool, b0395: bool, b0396: bool, b0397: bool, b0398: bool, b0399: bool, b0400: bool, b0401: bool, b0402: bool, b0403: bool, b0404: bool, b0405: bool, b0406: bool, b0407: bool, b0408: bool, b0409: bool, b0410: bool, b0411: bool, b0412: bool, b0413: bool, b0414: bool, b0415: bool, b0416: bool, b0417: bool, b0418: bool, b0419: bool, b0420: bool, b0421: bool, b0422: bool, b0423: bool, b0424: bool, b0425: bool, b0426: bool, b0427: bool, b0428: bool, b0429: bool, b0430: bool, b0431: bool, b0432: bool, b0433: bool, b0434: bool, b0435: bool, b0436: bool, b0437: bool, b0438: bool, b0439: bool, b0440: bool, b0441: bool, b0442: bool, b0443: bool, b0444: bool, b0445: bool, b0446: bool, b0447: bool, b0448: bool, b0449: bool, b0450: bool, b0451: bool, b0452: bool, b0453: bool, b0454: bool, b0455: bool, b0456: bool, b0457: bool, b0458: bool, b0459: bool, b0460: bool, b0461: bool, b0462: bool, b0463: bool, b0464: bool, b0465: bool) : bool
{
  0 + (if b0000 then 0 else 186000) + (if b0001 then 0 else 186000) + (if b0002 then 0 else 186000) + (if b0003 then 0 else 186000) + (if b0004 then 0 else 186000) + (if b0005 then 0 else 186000) + (if b0006 then 0 else 186000) + (if b0007 then 0 else 186000) + (if b0008 then 0 else 186000) + (if b0009 then 0 else 186000) + (if b0010 then 0 else 186000) + (if b0011 then 0 else 186000) + (if b0012 then 0 else 186000) + (if b0013 then 0 else 186000) + (if b0014 then 0 else 186000) + (if b0015 then 0 else 186000) + (if b0016 then 0 else 186000) + (if b0017 then 0 else 186000) + (if b0018 then 0 else 186000) + (if b0019 then 0 else 186000) + (if b0020 then 0 else 186000) + (if b0021 then 0 else 186000) + (if b0022 then 0 else 186000) + (if b0023 then 0 else 186000) + (if b0024 then 0 else 186000) + (if b0025 then 0 else 186000) + (if b0026 then 0 else 186000) + (if b0027 then 0 else 186000) + (if b0028 then 0 else 186000) + (if b0029 then 0 else 186000) + (if b0030 then 0 else 186000) + (if b0031 then 0 else 186000) + (if b0032 then 0 else 186000) + (if b0033 then 0 else 186000) + (if b0034 then 0 else 186000) + (if b0035 then 0 else 186000) + (if b0036 then 0 else 186000) + (if b0037 then 0 else 186000) + (if b0038 then 0 else 186000) + (if b0039 then 0 else 186000) + (if b0040 then 0 else 186000) + (if b0041 then 0 else 186000) + (if b0042 then 0 else 186000) + (if b0043 then 0 else 186000) + (if b0044 then 0 else 186000) + (if b0045 then 0 else 186000) + (if b0046 then 0 else 186000) + (if b0047 then 0 else 186000) + (if b0048 then 0 else 186000) + (if b0049 then 0 else 186000) + (if b0050 then 0 else 186000) + (if b0051 then 0 else 186000) + (if b0052 then 0 else 186000) + (if b0053 then 0 else 186000) + (if b0054 then 0 else 186000) + (if b0055 then 0 else 186000) + (if b0056 then 0 else 186000) + (if b0057 then 0 else 186000) + (if b0058 then 0 else 186000) + (if b0059 then 0 else 186000) + (if b0060 then 0 else 186000) + (if b0061 then 0 else 186000) + (if b0062 then 0 else 186000) + (if b0063 then 0 else 186000) + (if b0064 then 0 else 186000) + (if b0065 then 0 else 186000) + (if b0066 then 0 else 186000) + (if b0067 then 0 else 186000) + (if b0068 then 0 else 186000) + (if b0069 then 0 else 186000) + (if b0070 then 0 else 186000) + (if b0071 then 0 else 186000) + (if b0072 then 0 else 186000) + (if b0073 then 0 else 186000) + (if b0074 then 0 else 186000) + (if b0075 then 0 else 186000) + (if b0076 then 0 else 186000) + (if b0077 then 0 else 186000) + (if b0078 then 0 else 186000) + (if b0079 then 0 else 186000) + (if b0080 then 0 else 186000) + (if b0081 then 0 else 186000) + (if b0082 then 0 else 186000) + (if b0083 then 0 else 186000) + (if b0084 then 0 else 186000) + (if b0085 then 0 else 186000) + (if b0086 then 0 else 186000) + (if b0087 then 0 else 186000) + (if b0088 then 0 else 186000) + (if b0089 then 0 else 186000) + (if b0090 then 0 else 186000) + (if b0091 then 0 else 186000) + (if b0092 then 0 else 186000) + (if b0093 then 0 else 186000) + (if b0094 then 0 else 186000) + (if b0095 then 0 else 186000) + (if b0096 then 0 else 186000) + (if b0097 then 0 else 186000) + (if b0098 then 0 else 186000) + (if b0099 then 0 else 186000) + (if b0100 then 0 else 186000) + (if b0101 then 0 else 186000) + (if b0102 then 0 else 186000) + (if b0103 then 0 else 186000) + (if b0104 then 0 else 186000) + (if b0105 then 0 else 186000) + (if b0106 then 0 else 186000) + (if b0107 then 0 else 186000) + (if b0108 then 0 else 186000) + (if b0109 then 0 else 186000) + (if b0110 then 0 else 186000) + (if b0111 then 0 else 186000) + (if b0112 then 0 else 186000) + (if b0113 then 0 else 186000) + (if b0114 then 0 else 186000) + (if b0115 then 0 else 186000) + (if b0116 then 0 else 186000) + (if b0118 then 0 else 186000) + (if b0120 then 0 else 186000) + (if b0121 then 0 else 186000) + (if b0122 then 0 else 186000) + (if b0123 then 0 else 186000) + (if b0124 then 0 else 186000) + (if b0125 then 0 else 186000) + (if b0126 then 0 else 186000) + (if b0127 then 0 else 186000) + (if b0128 then 0 else 186000) + (if b0129 then 0 else 186000) + (if b0130 then 0 else 186000) + (if b0131 then 0 else 186000) + (if b0132 then 0 else 186000) + (if b0134 then 0 else 186000) + (if b0136 then 0 else 186000) + (if b0137 then 0 else 186000) + (if b0138 then 0 else 186000) + (if b0139 then 0 else 186000) + (if b0140 then 0 else 186000) + (if b0141 then 0 else 186000) + (if b0142 then 0 else 186000) + (if b0143 then 0 else 186000) + (if b0144 then 0 else 186000) + (if b0145 then 0 else 186000) + (if b0146 then 0 else 186000) + (if b0147 then 0 else 186000) + (if b0148 then 0 else 186000) + (if b0149 then 0 else 186000) + (if b0150 then 0 else 186000) + (if b0151 then 0 else 186000) + (if b0154 then 0 else 186000) + (if b0156 then 0 else 186000) + (if b0157 then 0 else 186000) + (if b0158 then 0 else 186000) + (if b0159 then 0 else 186000) + (if b0160 then 0 else 186000) + (if b0161 then 0 else 186000) + (if b0162 then 0 else 186000) + (if b0163 then 0 else 186000) + (if b0164 then 0 else 186000) + (if b0165 then 0 else 186000) + (if b0166 then 0 else 186000) + (if b0167 then 0 else 186000) + (if b0168 then 0 else 186000) + (if b0169 then 0 else 186000) + (if b0172 then 0 else 186000) + (if b0174 then 0 else 186000) + (if b0175 then 0 else 186000) + (if b0176 then 0 else 186000) + (if b0177 then 0 else 186000) + (if b0178 then 0 else 186000) + (if b0179 then 0 else 186000) + (if b0180 then 0 else 186000) + (if b0181 then 0 else 186000) + (if b0182 then 0 else 186000) + (if b0183 then 0 else 186000) + (if b0184 then 0 else 186000) + (if b0185 then 0 else 186000) + (if b0186 then 0 else 186000) + (if b0187 then 0 else 186000) + (if b0188 then 0 else 186000) + (if b0189 then 0 else 186000) + (if b0190 then 0 else 186000) + (if b0191 then 0 else 186000) + (if b0192 then 0 else 186000) + (if b0193 then 0 else 186000) + (if b0195 then 0 else 186000) + (if b0197 then 0 else 186000) + (if b0198 then 0 else 186000) + (if b0199 then 0 else 186000) + (if b0200 then 0 else 186000) + (if b0201 then 0 else 186000) + (if b0202 then 0 else 186000) + (if b0203 then 0 else 186000) + (if b0205 then 0 else 186000) + (if b0206 then 0 else 186000) + (if b0207 then 0 else 186000) + (if b0208 then 0 else 186000) + (if b0210 then 0 else 186000) + (if b0212 then 0 else 186000) + (if b0214 then 0 else 186000) + (if b0215 then 0 else 186000) + (if b0216 then 0 else 186000) + (if b0217 then 0 else 186000) + (if b0218 then 0 else 186000) + (if b0219 then 0 else 186000) + (if b0220 then 0 else 186000) + (if b0222 then 0 else 186000) + (if b0223 then 0 else 186000) + (if b0224 then 0 else 186000) + (if b0225 then 0 else 186000) + (if b0227 then 0 else 186000) + (if b0228 then 0 else 186000) + (if b0229 then 0 else 186000) + (if b0230 then 0 else 186000) + (if b0232 then 0 else 186000) + (if b0235 then 0 else 186000) + (if b0237 then 0 else 186000) + (if b0238 then 0 else 186000) + (if b0239 then 0 else 186000) + (if b0240 then 0 else 186000) + (if b0241 then 0 else 186000) + (if b0242 then 0 else 186000) + (if b0243 then 0 else 186000) + (if b0244 then 0 else 186000) + (if b0245 then 0 else 186000) + (if b0246 then 0 else 186000) + (if b0247 then 0 else 186000) + (if b0248 then 0 else 186000) + (if b0249 then 0 else 186000) + (if b0250 then 0 else 186000) + (if b0251 then 0 else 186000) + (if b0252 then 0 else 186000) + (if b0253 then 0 else 186000) + (if b0254 then 0 else 186000) + (if b0255 then 0 else 186000) + (if b0256 then 0 else 186000) + (if b0257 then 0 else 186000) + (if b0258 then 0 else 186000) + (if b0259 then 0 else 186000) + (if b0260 then 0 else 186000) + (if b0261 then 0 else 186000) + (if b0262 then 0 else 186000) + (if b0263 then 0 else 186000) + (if b0264 then 0 else 186000) + (if b0265 then 0 else 186000) + (if b0266 then 0 else 186000) + (if b0267 then 0 else 186000) + (if b0268 then 0 else 186000) + (if b0269 then 0 else 186000) + (if b0270 then 0 else 186000) + (if b0271 then 0 else 186000) + (if b0272 then 0 else 186000) + (if b0273 then 0 else 186000) + (if b0274 then 0 else 186000) + (if b0275 then 0 else 186000) + (if b0276 then 0 else 186000) + (if b0277 then 0 else 186000) + (if b0278 then 0 else 186000) + (if b0279 then 0 else 186000) + (if b0280 then 0 else 186000) + (if b0281 then 0 else 186000) + (if b0282 then 0 else 186000) + (if b0283 then 0 else 186000) + (if b0284 then 0 else 186000) + (if b0285 then 0 else 186000) + (if b0286 then 0 else 186000) + (if b0287 then 0 else 186000) + (if b0288 then 0 else 186000) + (if b0289 then 0 else 186000) + (if b0290 then 0 else 186000) + (if b0291 then 0 else 186000) + (if b0292 then 0 else 186000) + (if b0293 then 0 else 186000) + (if b0294 then 0 else 186000) + (if b0295 then 0 else 186000) + (if b0296 then 0 else 186000) + (if b0297 then 0 else 186000) + (if b0298 then 0 else 186000) + (if b0299 then 0 else 186000) + (if b0300 then 0 else 186000) + (if b0301 then 0 else 186000) + (if b0302 then 0 else 186000) + (if b0303 then 0 else 186000) + (if b0304 then 0 else 186000) + (if b0305 then 0 else 186000) + (if b0306 then 0 else 186000) + (if b0307 then 0 else 186000) + (if b0308 then 0 else 186000) + (if b0309 then 0 else 186000) + (if b0310 then 0 else 186000) + (if b0311 then 0 else 186000) + (if b0312 then 0 else 186000) + (if b0313 then 0 else 186000) + (if b0314 then 0 else 186000) + (if b0315 then 0 else 186000) + (if b0316 then 0 else 186000) + (if b0317 then 0 else 186000) + (if b0318 then 0 else 186000) + (if b0319 then 0 else 186000) + (if b0320 then 0 else 186000) + (if b0321 then 0 else 186000) + (if b0322 then 0 else 186000) + (if b0323 then 0 else 186000) + (if b0324 then 0 else 186000) + (if b0325 then 0 else 186000) + (if b0326 then 0 else 186000) + (if b0327 then 0 else 186000) + (if b0328 then 0 else 186000) + (if b0329 then 0 else 186000) + (if b0330 then 0 else 186000) + (if b0331 then 0 else 186000) + (if b0332 then 0 else 186000) + (if b0333 then 0 else 186000) + (if b0334 then 0 else 186000) + (if b0335 then 0 else 186000) + (if b0336 then 0 else 186000) + (if b0337 then 0 else 186000) + (if b0338 then 0 else 186000) + (if b0339 then 0 else 186000) + (if b0340 then 0 else 186000) + (if b0341 then 0 else 186000) + (if b0376 then 0 else 186000) + (if b0377 then 0 else 186000) + (if b0378 then 0 else 186000) + (if b0379 then 0 else 186000) + (if b0380 then 0 else 186000) + (if b0381 then 0 else 186000) + (if b0382 then 0 else 186000) + (if b0383 then 0 else 186000) + (if b0384 then 0 else 186000) + (if b0385 then 0 else 186000) + (if b0386 then 0 else 186000) + (if b0387 then 0 else 186000) + (if b0388 then 0 else 186000) + (if b0389 then 0 else 186000) + (if b0390 then 0 else 186000) + (if b0422 then 0 else 186000) + (if b0424 then 0 else 186000) + (if b0425 then 0 else 186000) + (if b0426 then 0 else 186000) + (if b0427 then 0 else 186000) + (if b0428 then 0 else 186000) + (if b0429 then 0 else 186000) + (if b0430 then 0 else 186000) + (if b0431 then 0 else 186000) + (if b0432 then 0 else 186000) + (if b0433 then 0 else 186000) + (if b0434 then 0 else 186000) + (if b0435 then 0 else 186000) + (if b0436 then 0 else 186000) + (if b0437 then 0 else 186000) + (if b0438 then 0 else 186000) + (if b0439 then 0 else 186000) + (if b0440 then 0 else 186000) + (if b0441 then 0 else 186000) + (if b0442 then 0 else 186000) + (if b0443 then 0 else 186000) + (if b0444 then 0 else 186000) + (if b0445 then 0 else 186000) + (if b0446 then 0 else 186000) + (if b0447 then 0 else 186000) + (if b0448 then 0 else 186000) + (if b0449 then 0 else 186000) + (if b0450 then 0 else 186000) + (if b0451 then 0 else 186000) + (if b0452 then 0 else 186000) + (if b0453 then 0 else 186000) + (if b0454 then 0 else 186000) + (if b0455 then 0 else 186000) + (if b0456 then 0 else 186000) + (if b0457 then 0 else 186000) + (if b0458 then 0 else 186000) + (if b0459 then 0 else 186000) + (if b0460 then 0 else 186000) + (if b0461 then 0 else 186000) + (if b0462 then 0 else 186000) + (if b0463 then 0 else 186000) + (if b0464 then 0 else 186000) + (if b0465 then 0 else 186000) < 441
}
Prover Time taken = 13.250464
Added Horn clause: 6 && 46 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 => 47
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/linear-algebra/kernels/3mm/kernel3.bpl.ice2.bpl
Total learner time was 00:00:00.1305370
Verifying $kernel3: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool, b0228: bool, b0229: bool, b0230: bool, b0231: bool, b0232: bool, b0233: bool, b0234: bool, b0235: bool, b0236: bool, b0237: bool, b0238: bool, b0239: bool, b0240: bool, b0241: bool, b0242: bool, b0243: bool, b0244: bool, b0245: bool, b0246: bool, b0247: bool, b0248: bool, b0249: bool, b0250: bool, b0251: bool, b0252: bool, b0253: bool, b0254: bool, b0255: bool, b0256: bool, b0257: bool, b0258: bool, b0259: bool, b0260: bool, b0261: bool, b0262: bool, b0263: bool, b0264: bool, b0265: bool, b0266: bool, b0267: bool, b0268: bool, b0269: bool, b0270: bool, b0271: bool, b0272: bool, b0273: bool, b0274: bool, b0275: bool, b0276: bool, b0277: bool, b0278: bool, b0279: bool, b0280: bool, b0281: bool, b0282: bool, b0283: bool, b0284: bool, b0285: bool, b0286: bool, b0287: bool, b0288: bool, b0289: bool, b0290: bool, b0291: bool, b0292: bool, b0293: bool, b0294: bool, b0295: bool, b0296: bool, b0297: bool, b0298: bool, b0299: bool, b0300: bool, b0301: bool, b0302: bool, b0303: bool, b0304: bool, b0305: bool, b0306: bool, b0307: bool, b0308: bool, b0309: bool, b0310: bool, b0311: bool, b0312: bool, b0313: bool, b0314: bool, b0315: bool, b0316: bool, b0317: bool, b0318: bool, b0319: bool, b0320: bool, b0321: bool, b0322: bool, b0323: bool, b0324: bool, b0325: bool, b0326: bool, b0327: bool, b0328: bool, b0329: bool, b0330: bool, b0331: bool, b0332: bool, b0333: bool, b0334: bool, b0335: bool, b0336: bool, b0337: bool, b0338: bool, b0339: bool, b0340: bool, b0341: bool, b0342: bool, b0343: bool, b0344: bool, b0345: bool, b0346: bool, b0347: bool, b0348: bool, b0349: bool, b0350: bool, b0351: bool, b0352: bool, b0353: bool, b0354: bool, b0355: bool, b0356: bool, b0357: bool, b0358: bool, b0359: bool, b0360: bool, b0361: bool, b0362: bool, b0363: bool, b0364: bool, b0365: bool, b0366: bool, b0367: bool, b0368: bool, b0369: bool, b0370: bool, b0371: bool, b0372: bool, b0373: bool, b0374: bool, b0375: bool, b0376: bool, b0377: bool, b0378: bool, b0379: bool, b0380: bool, b0381: bool, b0382: bool, b0383: bool, b0384: bool, b0385: bool, b0386: bool, b0387: bool, b0388: bool, b0389: bool, b0390: bool, b0391: bool, b0392: bool, b0393: bool, b0394: bool, b0395: bool, b0396: bool, b0397: bool, b0398: bool, b0399: bool, b0400: bool, b0401: bool, b0402: bool, b0403: bool, b0404: bool, b0405: bool, b0406: bool, b0407: bool, b0408: bool, b0409: bool, b0410: bool, b0411: bool, b0412: bool, b0413: bool, b0414: bool, b0415: bool, b0416: bool, b0417: bool, b0418: bool, b0419: bool, b0420: bool, b0421: bool, b0422: bool, b0423: bool, b0424: bool, b0425: bool, b0426: bool, b0427: bool, b0428: bool, b0429: bool, b0430: bool, b0431: bool, b0432: bool, b0433: bool, b0434: bool, b0435: bool, b0436: bool, b0437: bool, b0438: bool, b0439: bool, b0440: bool, b0441: bool, b0442: bool, b0443: bool, b0444: bool, b0445: bool, b0446: bool, b0447: bool, b0448: bool, b0449: bool, b0450: bool, b0451: bool, b0452: bool, b0453: bool, b0454: bool, b0455: bool, b0456: bool, b0457: bool, b0458: bool, b0459: bool, b0460: bool, b0461: bool, b0462: bool, b0463: bool, b0464: bool, b0465: bool) : bool
{
  0 + (if b0000 then 0 else 186000) + (if b0001 then 0 else 186000) + (if b0002 then 0 else 186000) + (if b0003 then 0 else 186000) + (if b0004 then 0 else 186000) + (if b0005 then 0 else 186000) + (if b0006 then 0 else 186000) + (if b0007 then 0 else 186000) + (if b0008 then 0 else 186000) + (if b0009 then 0 else 186000) + (if b0010 then 0 else 186000) + (if b0011 then 0 else 186000) + (if b0012 then 0 else 186000) + (if b0013 then 0 else 186000) + (if b0014 then 0 else 186000) + (if b0015 then 0 else 186000) + (if b0016 then 0 else 186000) + (if b0017 then 0 else 186000) + (if b0018 then 0 else 186000) + (if b0019 then 0 else 186000) + (if b0020 then 0 else 186000) + (if b0021 then 0 else 186000) + (if b0022 then 0 else 186000) + (if b0023 then 0 else 186000) + (if b0024 then 0 else 186000) + (if b0025 then 0 else 186000) + (if b0026 then 0 else 186000) + (if b0027 then 0 else 186000) + (if b0028 then 0 else 186000) + (if b0029 then 0 else 186000) + (if b0030 then 0 else 186000) + (if b0031 then 0 else 186000) + (if b0032 then 0 else 186000) + (if b0033 then 0 else 186000) + (if b0034 then 0 else 186000) + (if b0035 then 0 else 186000) + (if b0036 then 0 else 186000) + (if b0037 then 0 else 186000) + (if b0038 then 0 else 186000) + (if b0039 then 0 else 186000) + (if b0040 then 0 else 186000) + (if b0041 then 0 else 186000) + (if b0042 then 0 else 186000) + (if b0043 then 0 else 186000) + (if b0044 then 0 else 186000) + (if b0045 then 0 else 186000) + (if b0046 then 0 else 186000) + (if b0047 then 0 else 186000) + (if b0048 then 0 else 186000) + (if b0049 then 0 else 186000) + (if b0050 then 0 else 186000) + (if b0051 then 0 else 186000) + (if b0052 then 0 else 186000) + (if b0053 then 0 else 186000) + (if b0054 then 0 else 186000) + (if b0055 then 0 else 186000) + (if b0056 then 0 else 186000) + (if b0057 then 0 else 186000) + (if b0058 then 0 else 186000) + (if b0059 then 0 else 186000) + (if b0060 then 0 else 186000) + (if b0061 then 0 else 186000) + (if b0062 then 0 else 186000) + (if b0063 then 0 else 186000) + (if b0064 then 0 else 186000) + (if b0065 then 0 else 186000) + (if b0066 then 0 else 186000) + (if b0067 then 0 else 186000) + (if b0068 then 0 else 186000) + (if b0069 then 0 else 186000) + (if b0070 then 0 else 186000) + (if b0071 then 0 else 186000) + (if b0072 then 0 else 186000) + (if b0073 then 0 else 186000) + (if b0074 then 0 else 186000) + (if b0075 then 0 else 186000) + (if b0076 then 0 else 186000) + (if b0077 then 0 else 186000) + (if b0078 then 0 else 186000) + (if b0079 then 0 else 186000) + (if b0080 then 0 else 186000) + (if b0081 then 0 else 186000) + (if b0082 then 0 else 186000) + (if b0083 then 0 else 186000) + (if b0084 then 0 else 186000) + (if b0085 then 0 else 186000) + (if b0086 then 0 else 186000) + (if b0087 then 0 else 186000) + (if b0088 then 0 else 186000) + (if b0089 then 0 else 186000) + (if b0090 then 0 else 186000) + (if b0091 then 0 else 186000) + (if b0092 then 0 else 186000) + (if b0093 then 0 else 186000) + (if b0094 then 0 else 186000) + (if b0095 then 0 else 186000) + (if b0096 then 0 else 186000) + (if b0097 then 0 else 186000) + (if b0098 then 0 else 186000) + (if b0099 then 0 else 186000) + (if b0100 then 0 else 186000) + (if b0101 then 0 else 186000) + (if b0102 then 0 else 186000) + (if b0103 then 0 else 186000) + (if b0104 then 0 else 186000) + (if b0105 then 0 else 186000) + (if b0106 then 0 else 186000) + (if b0107 then 0 else 186000) + (if b0108 then 0 else 186000) + (if b0109 then 0 else 186000) + (if b0110 then 0 else 186000) + (if b0111 then 0 else 186000) + (if b0112 then 0 else 186000) + (if b0113 then 0 else 186000) + (if b0114 then 0 else 186000) + (if b0115 then 0 else 186000) + (if b0116 then 0 else 186000) + (if b0118 then 0 else 186000) + (if b0120 then 0 else 186000) + (if b0121 then 0 else 186000) + (if b0122 then 0 else 186000) + (if b0123 then 0 else 186000) + (if b0124 then 0 else 186000) + (if b0125 then 0 else 186000) + (if b0126 then 0 else 186000) + (if b0127 then 0 else 186000) + (if b0128 then 0 else 186000) + (if b0129 then 0 else 186000) + (if b0130 then 0 else 186000) + (if b0131 then 0 else 186000) + (if b0132 then 0 else 186000) + (if b0134 then 0 else 186000) + (if b0136 then 0 else 186000) + (if b0137 then 0 else 186000) + (if b0138 then 0 else 186000) + (if b0139 then 0 else 186000) + (if b0140 then 0 else 186000) + (if b0141 then 0 else 186000) + (if b0142 then 0 else 186000) + (if b0143 then 0 else 186000) + (if b0144 then 0 else 186000) + (if b0145 then 0 else 186000) + (if b0146 then 0 else 186000) + (if b0147 then 0 else 186000) + (if b0148 then 0 else 186000) + (if b0149 then 0 else 186000) + (if b0150 then 0 else 186000) + (if b0151 then 0 else 186000) + (if b0154 then 0 else 186000) + (if b0156 then 0 else 186000) + (if b0157 then 0 else 186000) + (if b0158 then 0 else 186000) + (if b0159 then 0 else 186000) + (if b0160 then 0 else 186000) + (if b0161 then 0 else 186000) + (if b0162 then 0 else 186000) + (if b0163 then 0 else 186000) + (if b0164 then 0 else 186000) + (if b0165 then 0 else 186000) + (if b0167 then 0 else 186000) + (if b0168 then 0 else 186000) + (if b0169 then 0 else 186000) + (if b0172 then 0 else 186000) + (if b0174 then 0 else 186000) + (if b0175 then 0 else 186000) + (if b0176 then 0 else 186000) + (if b0177 then 0 else 186000) + (if b0178 then 0 else 186000) + (if b0179 then 0 else 186000) + (if b0180 then 0 else 186000) + (if b0181 then 0 else 186000) + (if b0182 then 0 else 186000) + (if b0183 then 0 else 186000) + (if b0184 then 0 else 186000) + (if b0185 then 0 else 186000) + (if b0186 then 0 else 186000) + (if b0187 then 0 else 186000) + (if b0188 then 0 else 186000) + (if b0189 then 0 else 186000) + (if b0190 then 0 else 186000) + (if b0191 then 0 else 186000) + (if b0192 then 0 else 186000) + (if b0193 then 0 else 186000) + (if b0195 then 0 else 186000) + (if b0197 then 0 else 186000) + (if b0198 then 0 else 186000) + (if b0199 then 0 else 186000) + (if b0200 then 0 else 186000) + (if b0201 then 0 else 186000) + (if b0202 then 0 else 186000) + (if b0203 then 0 else 186000) + (if b0205 then 0 else 186000) + (if b0206 then 0 else 186000) + (if b0207 then 0 else 186000) + (if b0208 then 0 else 186000) + (if b0210 then 0 else 186000) + (if b0212 then 0 else 186000) + (if b0214 then 0 else 186000) + (if b0215 then 0 else 186000) + (if b0216 then 0 else 186000) + (if b0217 then 0 else 186000) + (if b0218 then 0 else 186000) + (if b0219 then 0 else 186000) + (if b0220 then 0 else 186000) + (if b0222 then 0 else 186000) + (if b0223 then 0 else 186000) + (if b0224 then 0 else 186000) + (if b0225 then 0 else 186000) + (if b0227 then 0 else 186000) + (if b0228 then 0 else 186000) + (if b0229 then 0 else 186000) + (if b0230 then 0 else 186000) + (if b0232 then 0 else 186000) + (if b0235 then 0 else 186000) + (if b0237 then 0 else 186000) + (if b0238 then 0 else 186000) + (if b0239 then 0 else 186000) + (if b0240 then 0 else 186000) + (if b0241 then 0 else 186000) + (if b0242 then 0 else 186000) + (if b0243 then 0 else 186000) + (if b0244 then 0 else 186000) + (if b0245 then 0 else 186000) + (if b0246 then 0 else 186000) + (if b0247 then 0 else 186000) + (if b0248 then 0 else 186000) + (if b0249 then 0 else 186000) + (if b0250 then 0 else 186000) + (if b0251 then 0 else 186000) + (if b0252 then 0 else 186000) + (if b0253 then 0 else 186000) + (if b0254 then 0 else 186000) + (if b0255 then 0 else 186000) + (if b0256 then 0 else 186000) + (if b0257 then 0 else 186000) + (if b0258 then 0 else 186000) + (if b0259 then 0 else 186000) + (if b0260 then 0 else 186000) + (if b0261 then 0 else 186000) + (if b0262 then 0 else 186000) + (if b0263 then 0 else 186000) + (if b0264 then 0 else 186000) + (if b0265 then 0 else 186000) + (if b0266 then 0 else 186000) + (if b0267 then 0 else 186000) + (if b0268 then 0 else 186000) + (if b0269 then 0 else 186000) + (if b0270 then 0 else 186000) + (if b0271 then 0 else 186000) + (if b0272 then 0 else 186000) + (if b0273 then 0 else 186000) + (if b0274 then 0 else 186000) + (if b0275 then 0 else 186000) + (if b0276 then 0 else 186000) + (if b0277 then 0 else 186000) + (if b0278 then 0 else 186000) + (if b0279 then 0 else 186000) + (if b0280 then 0 else 186000) + (if b0281 then 0 else 186000) + (if b0282 then 0 else 186000) + (if b0283 then 0 else 186000) + (if b0284 then 0 else 186000) + (if b0285 then 0 else 186000) + (if b0286 then 0 else 186000) + (if b0287 then 0 else 186000) + (if b0288 then 0 else 186000) + (if b0289 then 0 else 186000) + (if b0290 then 0 else 186000) + (if b0291 then 0 else 186000) + (if b0292 then 0 else 186000) + (if b0293 then 0 else 186000) + (if b0294 then 0 else 186000) + (if b0295 then 0 else 186000) + (if b0296 then 0 else 186000) + (if b0297 then 0 else 186000) + (if b0298 then 0 else 186000) + (if b0299 then 0 else 186000) + (if b0300 then 0 else 186000) + (if b0301 then 0 else 186000) + (if b0302 then 0 else 186000) + (if b0303 then 0 else 186000) + (if b0304 then 0 else 186000) + (if b0305 then 0 else 186000) + (if b0306 then 0 else 186000) + (if b0307 then 0 else 186000) + (if b0308 then 0 else 186000) + (if b0309 then 0 else 186000) + (if b0310 then 0 else 186000) + (if b0311 then 0 else 186000) + (if b0312 then 0 else 186000) + (if b0313 then 0 else 186000) + (if b0314 then 0 else 186000) + (if b0315 then 0 else 186000) + (if b0316 then 0 else 186000) + (if b0317 then 0 else 186000) + (if b0318 then 0 else 186000) + (if b0319 then 0 else 186000) + (if b0320 then 0 else 186000) + (if b0321 then 0 else 186000) + (if b0322 then 0 else 186000) + (if b0323 then 0 else 186000) + (if b0324 then 0 else 186000) + (if b0325 then 0 else 186000) + (if b0326 then 0 else 186000) + (if b0327 then 0 else 186000) + (if b0328 then 0 else 186000) + (if b0329 then 0 else 186000) + (if b0330 then 0 else 186000) + (if b0331 then 0 else 186000) + (if b0332 then 0 else 186000) + (if b0333 then 0 else 186000) + (if b0334 then 0 else 186000) + (if b0335 then 0 else 186000) + (if b0336 then 0 else 186000) + (if b0337 then 0 else 186000) + (if b0338 then 0 else 186000) + (if b0339 then 0 else 186000) + (if b0340 then 0 else 186000) + (if b0341 then 0 else 186000) + (if b0376 then 0 else 186000) + (if b0377 then 0 else 186000) + (if b0378 then 0 else 186000) + (if b0379 then 0 else 186000) + (if b0380 then 0 else 186000) + (if b0381 then 0 else 186000) + (if b0382 then 0 else 186000) + (if b0383 then 0 else 186000) + (if b0384 then 0 else 186000) + (if b0385 then 0 else 186000) + (if b0386 then 0 else 186000) + (if b0387 then 0 else 186000) + (if b0388 then 0 else 186000) + (if b0389 then 0 else 186000) + (if b0390 then 0 else 186000) + (if b0422 then 0 else 186000) + (if b0424 then 0 else 186000) + (if b0425 then 0 else 186000) + (if b0426 then 0 else 186000) + (if b0427 then 0 else 186000) + (if b0428 then 0 else 186000) + (if b0429 then 0 else 186000) + (if b0430 then 0 else 186000) + (if b0431 then 0 else 186000) + (if b0432 then 0 else 186000) + (if b0433 then 0 else 186000) + (if b0434 then 0 else 186000) + (if b0435 then 0 else 186000) + (if b0436 then 0 else 186000) + (if b0437 then 0 else 186000) + (if b0438 then 0 else 186000) + (if b0439 then 0 else 186000) + (if b0440 then 0 else 186000) + (if b0441 then 0 else 186000) + (if b0442 then 0 else 186000) + (if b0443 then 0 else 186000) + (if b0444 then 0 else 186000) + (if b0445 then 0 else 186000) + (if b0446 then 0 else 186000) + (if b0447 then 0 else 186000) + (if b0448 then 0 else 186000) + (if b0449 then 0 else 186000) + (if b0450 then 0 else 186000) + (if b0451 then 0 else 186000) + (if b0452 then 0 else 186000) + (if b0453 then 0 else 186000) + (if b0454 then 0 else 186000) + (if b0455 then 0 else 186000) + (if b0456 then 0 else 186000) + (if b0457 then 0 else 186000) + (if b0458 then 0 else 186000) + (if b0459 then 0 else 186000) + (if b0460 then 0 else 186000) + (if b0461 then 0 else 186000) + (if b0462 then 0 else 186000) + (if b0463 then 0 else 186000) + (if b0464 then 0 else 186000) + (if b0465 then 0 else 186000) < 441
}
Prover Time taken = 8.163437
Added Horn clause: 48 && 46 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 47 => 49
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/linear-algebra/kernels/3mm/kernel3.bpl.ice2.bpl
Total learner time was 00:00:00.1382170
Verifying $kernel3: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool, b0228: bool, b0229: bool, b0230: bool, b0231: bool, b0232: bool, b0233: bool, b0234: bool, b0235: bool, b0236: bool, b0237: bool, b0238: bool, b0239: bool, b0240: bool, b0241: bool, b0242: bool, b0243: bool, b0244: bool, b0245: bool, b0246: bool, b0247: bool, b0248: bool, b0249: bool, b0250: bool, b0251: bool, b0252: bool, b0253: bool, b0254: bool, b0255: bool, b0256: bool, b0257: bool, b0258: bool, b0259: bool, b0260: bool, b0261: bool, b0262: bool, b0263: bool, b0264: bool, b0265: bool, b0266: bool, b0267: bool, b0268: bool, b0269: bool, b0270: bool, b0271: bool, b0272: bool, b0273: bool, b0274: bool, b0275: bool, b0276: bool, b0277: bool, b0278: bool, b0279: bool, b0280: bool, b0281: bool, b0282: bool, b0283: bool, b0284: bool, b0285: bool, b0286: bool, b0287: bool, b0288: bool, b0289: bool, b0290: bool, b0291: bool, b0292: bool, b0293: bool, b0294: bool, b0295: bool, b0296: bool, b0297: bool, b0298: bool, b0299: bool, b0300: bool, b0301: bool, b0302: bool, b0303: bool, b0304: bool, b0305: bool, b0306: bool, b0307: bool, b0308: bool, b0309: bool, b0310: bool, b0311: bool, b0312: bool, b0313: bool, b0314: bool, b0315: bool, b0316: bool, b0317: bool, b0318: bool, b0319: bool, b0320: bool, b0321: bool, b0322: bool, b0323: bool, b0324: bool, b0325: bool, b0326: bool, b0327: bool, b0328: bool, b0329: bool, b0330: bool, b0331: bool, b0332: bool, b0333: bool, b0334: bool, b0335: bool, b0336: bool, b0337: bool, b0338: bool, b0339: bool, b0340: bool, b0341: bool, b0342: bool, b0343: bool, b0344: bool, b0345: bool, b0346: bool, b0347: bool, b0348: bool, b0349: bool, b0350: bool, b0351: bool, b0352: bool, b0353: bool, b0354: bool, b0355: bool, b0356: bool, b0357: bool, b0358: bool, b0359: bool, b0360: bool, b0361: bool, b0362: bool, b0363: bool, b0364: bool, b0365: bool, b0366: bool, b0367: bool, b0368: bool, b0369: bool, b0370: bool, b0371: bool, b0372: bool, b0373: bool, b0374: bool, b0375: bool, b0376: bool, b0377: bool, b0378: bool, b0379: bool, b0380: bool, b0381: bool, b0382: bool, b0383: bool, b0384: bool, b0385: bool, b0386: bool, b0387: bool, b0388: bool, b0389: bool, b0390: bool, b0391: bool, b0392: bool, b0393: bool, b0394: bool, b0395: bool, b0396: bool, b0397: bool, b0398: bool, b0399: bool, b0400: bool, b0401: bool, b0402: bool, b0403: bool, b0404: bool, b0405: bool, b0406: bool, b0407: bool, b0408: bool, b0409: bool, b0410: bool, b0411: bool, b0412: bool, b0413: bool, b0414: bool, b0415: bool, b0416: bool, b0417: bool, b0418: bool, b0419: bool, b0420: bool, b0421: bool, b0422: bool, b0423: bool, b0424: bool, b0425: bool, b0426: bool, b0427: bool, b0428: bool, b0429: bool, b0430: bool, b0431: bool, b0432: bool, b0433: bool, b0434: bool, b0435: bool, b0436: bool, b0437: bool, b0438: bool, b0439: bool, b0440: bool, b0441: bool, b0442: bool, b0443: bool, b0444: bool, b0445: bool, b0446: bool, b0447: bool, b0448: bool, b0449: bool, b0450: bool, b0451: bool, b0452: bool, b0453: bool, b0454: bool, b0455: bool, b0456: bool, b0457: bool, b0458: bool, b0459: bool, b0460: bool, b0461: bool, b0462: bool, b0463: bool, b0464: bool, b0465: bool) : bool
{
  0 + (if b0000 then 0 else 186000) + (if b0001 then 0 else 186000) + (if b0002 then 0 else 186000) + (if b0003 then 0 else 186000) + (if b0004 then 0 else 186000) + (if b0005 then 0 else 186000) + (if b0006 then 0 else 186000) + (if b0007 then 0 else 186000) + (if b0008 then 0 else 186000) + (if b0009 then 0 else 186000) + (if b0010 then 0 else 186000) + (if b0011 then 0 else 186000) + (if b0012 then 0 else 186000) + (if b0013 then 0 else 186000) + (if b0014 then 0 else 186000) + (if b0015 then 0 else 186000) + (if b0016 then 0 else 186000) + (if b0017 then 0 else 186000) + (if b0018 then 0 else 186000) + (if b0019 then 0 else 186000) + (if b0020 then 0 else 186000) + (if b0021 then 0 else 186000) + (if b0022 then 0 else 186000) + (if b0023 then 0 else 186000) + (if b0024 then 0 else 186000) + (if b0025 then 0 else 186000) + (if b0026 then 0 else 186000) + (if b0027 then 0 else 186000) + (if b0028 then 0 else 186000) + (if b0029 then 0 else 186000) + (if b0030 then 0 else 186000) + (if b0031 then 0 else 186000) + (if b0032 then 0 else 186000) + (if b0033 then 0 else 186000) + (if b0034 then 0 else 186000) + (if b0035 then 0 else 186000) + (if b0036 then 0 else 186000) + (if b0037 then 0 else 186000) + (if b0038 then 0 else 186000) + (if b0039 then 0 else 186000) + (if b0040 then 0 else 186000) + (if b0041 then 0 else 186000) + (if b0042 then 0 else 186000) + (if b0043 then 0 else 186000) + (if b0044 then 0 else 186000) + (if b0045 then 0 else 186000) + (if b0046 then 0 else 186000) + (if b0047 then 0 else 186000) + (if b0048 then 0 else 186000) + (if b0049 then 0 else 186000) + (if b0050 then 0 else 186000) + (if b0051 then 0 else 186000) + (if b0052 then 0 else 186000) + (if b0053 then 0 else 186000) + (if b0054 then 0 else 186000) + (if b0055 then 0 else 186000) + (if b0056 then 0 else 186000) + (if b0057 then 0 else 186000) + (if b0058 then 0 else 186000) + (if b0059 then 0 else 186000) + (if b0060 then 0 else 186000) + (if b0061 then 0 else 186000) + (if b0062 then 0 else 186000) + (if b0063 then 0 else 186000) + (if b0064 then 0 else 186000) + (if b0065 then 0 else 186000) + (if b0066 then 0 else 186000) + (if b0067 then 0 else 186000) + (if b0068 then 0 else 186000) + (if b0069 then 0 else 186000) + (if b0070 then 0 else 186000) + (if b0071 then 0 else 186000) + (if b0072 then 0 else 186000) + (if b0073 then 0 else 186000) + (if b0074 then 0 else 186000) + (if b0075 then 0 else 186000) + (if b0076 then 0 else 186000) + (if b0077 then 0 else 186000) + (if b0078 then 0 else 186000) + (if b0079 then 0 else 186000) + (if b0080 then 0 else 186000) + (if b0081 then 0 else 186000) + (if b0082 then 0 else 186000) + (if b0083 then 0 else 186000) + (if b0084 then 0 else 186000) + (if b0085 then 0 else 186000) + (if b0086 then 0 else 186000) + (if b0087 then 0 else 186000) + (if b0088 then 0 else 186000) + (if b0089 then 0 else 186000) + (if b0090 then 0 else 186000) + (if b0091 then 0 else 186000) + (if b0092 then 0 else 186000) + (if b0093 then 0 else 186000) + (if b0094 then 0 else 186000) + (if b0095 then 0 else 186000) + (if b0096 then 0 else 186000) + (if b0097 then 0 else 186000) + (if b0098 then 0 else 186000) + (if b0099 then 0 else 186000) + (if b0100 then 0 else 186000) + (if b0101 then 0 else 186000) + (if b0102 then 0 else 186000) + (if b0103 then 0 else 186000) + (if b0104 then 0 else 186000) + (if b0105 then 0 else 186000) + (if b0106 then 0 else 186000) + (if b0107 then 0 else 186000) + (if b0108 then 0 else 186000) + (if b0109 then 0 else 186000) + (if b0110 then 0 else 186000) + (if b0111 then 0 else 186000) + (if b0112 then 0 else 186000) + (if b0113 then 0 else 186000) + (if b0114 then 0 else 186000) + (if b0115 then 0 else 186000) + (if b0116 then 0 else 186000) + (if b0118 then 0 else 186000) + (if b0120 then 0 else 186000) + (if b0121 then 0 else 186000) + (if b0122 then 0 else 186000) + (if b0123 then 0 else 186000) + (if b0124 then 0 else 186000) + (if b0125 then 0 else 186000) + (if b0126 then 0 else 186000) + (if b0127 then 0 else 186000) + (if b0128 then 0 else 186000) + (if b0129 then 0 else 186000) + (if b0130 then 0 else 186000) + (if b0131 then 0 else 186000) + (if b0132 then 0 else 186000) + (if b0134 then 0 else 186000) + (if b0136 then 0 else 186000) + (if b0137 then 0 else 186000) + (if b0138 then 0 else 186000) + (if b0139 then 0 else 186000) + (if b0140 then 0 else 186000) + (if b0141 then 0 else 186000) + (if b0142 then 0 else 186000) + (if b0143 then 0 else 186000) + (if b0144 then 0 else 186000) + (if b0145 then 0 else 186000) + (if b0146 then 0 else 186000) + (if b0147 then 0 else 186000) + (if b0148 then 0 else 186000) + (if b0149 then 0 else 186000) + (if b0150 then 0 else 186000) + (if b0151 then 0 else 186000) + (if b0154 then 0 else 186000) + (if b0156 then 0 else 186000) + (if b0157 then 0 else 186000) + (if b0158 then 0 else 186000) + (if b0159 then 0 else 186000) + (if b0160 then 0 else 186000) + (if b0161 then 0 else 186000) + (if b0162 then 0 else 186000) + (if b0163 then 0 else 186000) + (if b0164 then 0 else 186000) + (if b0165 then 0 else 186000) + (if b0167 then 0 else 186000) + (if b0168 then 0 else 186000) + (if b0169 then 0 else 186000) + (if b0172 then 0 else 186000) + (if b0174 then 0 else 186000) + (if b0175 then 0 else 186000) + (if b0176 then 0 else 186000) + (if b0177 then 0 else 186000) + (if b0178 then 0 else 186000) + (if b0179 then 0 else 186000) + (if b0180 then 0 else 186000) + (if b0181 then 0 else 186000) + (if b0182 then 0 else 186000) + (if b0183 then 0 else 186000) + (if b0184 then 0 else 186000) + (if b0185 then 0 else 186000) + (if b0186 then 0 else 186000) + (if b0187 then 0 else 186000) + (if b0188 then 0 else 186000) + (if b0189 then 0 else 186000) + (if b0190 then 0 else 186000) + (if b0191 then 0 else 186000) + (if b0192 then 0 else 186000) + (if b0193 then 0 else 186000) + (if b0195 then 0 else 186000) + (if b0197 then 0 else 186000) + (if b0198 then 0 else 186000) + (if b0199 then 0 else 186000) + (if b0200 then 0 else 186000) + (if b0201 then 0 else 186000) + (if b0202 then 0 else 186000) + (if b0203 then 0 else 186000) + (if b0205 then 0 else 186000) + (if b0206 then 0 else 186000) + (if b0207 then 0 else 186000) + (if b0208 then 0 else 186000) + (if b0210 then 0 else 186000) + (if b0212 then 0 else 186000) + (if b0214 then 0 else 186000) + (if b0215 then 0 else 186000) + (if b0216 then 0 else 186000) + (if b0217 then 0 else 186000) + (if b0218 then 0 else 186000) + (if b0219 then 0 else 186000) + (if b0220 then 0 else 186000) + (if b0222 then 0 else 186000) + (if b0223 then 0 else 186000) + (if b0224 then 0 else 186000) + (if b0225 then 0 else 186000) + (if b0227 then 0 else 186000) + (if b0228 then 0 else 186000) + (if b0229 then 0 else 186000) + (if b0230 then 0 else 186000) + (if b0232 then 0 else 186000) + (if b0235 then 0 else 186000) + (if b0237 then 0 else 186000) + (if b0238 then 0 else 186000) + (if b0239 then 0 else 186000) + (if b0240 then 0 else 186000) + (if b0241 then 0 else 186000) + (if b0242 then 0 else 186000) + (if b0243 then 0 else 186000) + (if b0244 then 0 else 186000) + (if b0245 then 0 else 186000) + (if b0246 then 0 else 186000) + (if b0247 then 0 else 186000) + (if b0248 then 0 else 186000) + (if b0249 then 0 else 186000) + (if b0250 then 0 else 186000) + (if b0251 then 0 else 186000) + (if b0252 then 0 else 186000) + (if b0253 then 0 else 186000) + (if b0254 then 0 else 186000) + (if b0255 then 0 else 186000) + (if b0256 then 0 else 186000) + (if b0257 then 0 else 186000) + (if b0258 then 0 else 186000) + (if b0259 then 0 else 186000) + (if b0260 then 0 else 186000) + (if b0261 then 0 else 186000) + (if b0262 then 0 else 186000) + (if b0263 then 0 else 186000) + (if b0264 then 0 else 186000) + (if b0265 then 0 else 186000) + (if b0266 then 0 else 186000) + (if b0267 then 0 else 186000) + (if b0268 then 0 else 186000) + (if b0269 then 0 else 186000) + (if b0270 then 0 else 186000) + (if b0271 then 0 else 186000) + (if b0272 then 0 else 186000) + (if b0273 then 0 else 186000) + (if b0274 then 0 else 186000) + (if b0275 then 0 else 186000) + (if b0276 then 0 else 186000) + (if b0277 then 0 else 186000) + (if b0278 then 0 else 186000) + (if b0279 then 0 else 186000) + (if b0280 then 0 else 186000) + (if b0281 then 0 else 186000) + (if b0282 then 0 else 186000) + (if b0283 then 0 else 186000) + (if b0284 then 0 else 186000) + (if b0285 then 0 else 186000) + (if b0286 then 0 else 186000) + (if b0287 then 0 else 186000) + (if b0288 then 0 else 186000) + (if b0289 then 0 else 186000) + (if b0290 then 0 else 186000) + (if b0291 then 0 else 186000) + (if b0292 then 0 else 186000) + (if b0293 then 0 else 186000) + (if b0294 then 0 else 186000) + (if b0295 then 0 else 186000) + (if b0296 then 0 else 186000) + (if b0297 then 0 else 186000) + (if b0298 then 0 else 186000) + (if b0299 then 0 else 186000) + (if b0300 then 0 else 186000) + (if b0301 then 0 else 186000) + (if b0302 then 0 else 186000) + (if b0303 then 0 else 186000) + (if b0304 then 0 else 186000) + (if b0305 then 0 else 186000) + (if b0306 then 0 else 186000) + (if b0307 then 0 else 186000) + (if b0308 then 0 else 186000) + (if b0309 then 0 else 186000) + (if b0310 then 0 else 186000) + (if b0311 then 0 else 186000) + (if b0312 then 0 else 186000) + (if b0313 then 0 else 186000) + (if b0314 then 0 else 186000) + (if b0315 then 0 else 186000) + (if b0316 then 0 else 186000) + (if b0317 then 0 else 186000) + (if b0318 then 0 else 186000) + (if b0319 then 0 else 186000) + (if b0320 then 0 else 186000) + (if b0321 then 0 else 186000) + (if b0322 then 0 else 186000) + (if b0323 then 0 else 186000) + (if b0324 then 0 else 186000) + (if b0325 then 0 else 186000) + (if b0326 then 0 else 186000) + (if b0327 then 0 else 186000) + (if b0328 then 0 else 186000) + (if b0329 then 0 else 186000) + (if b0330 then 0 else 186000) + (if b0331 then 0 else 186000) + (if b0332 then 0 else 186000) + (if b0333 then 0 else 186000) + (if b0334 then 0 else 186000) + (if b0335 then 0 else 186000) + (if b0336 then 0 else 186000) + (if b0337 then 0 else 186000) + (if b0338 then 0 else 186000) + (if b0339 then 0 else 186000) + (if b0340 then 0 else 186000) + (if b0341 then 0 else 186000) + (if b0376 then 0 else 186000) + (if b0378 then 0 else 186000) + (if b0379 then 0 else 186000) + (if b0380 then 0 else 186000) + (if b0381 then 0 else 186000) + (if b0382 then 0 else 186000) + (if b0383 then 0 else 186000) + (if b0384 then 0 else 186000) + (if b0385 then 0 else 186000) + (if b0386 then 0 else 186000) + (if b0387 then 0 else 186000) + (if b0388 then 0 else 186000) + (if b0389 then 0 else 186000) + (if b0390 then 0 else 186000) + (if b0422 then 0 else 186000) + (if b0424 then 0 else 186000) + (if b0425 then 0 else 186000) + (if b0426 then 0 else 186000) + (if b0427 then 0 else 186000) + (if b0428 then 0 else 186000) + (if b0429 then 0 else 186000) + (if b0430 then 0 else 186000) + (if b0431 then 0 else 186000) + (if b0432 then 0 else 186000) + (if b0433 then 0 else 186000) + (if b0434 then 0 else 186000) + (if b0435 then 0 else 186000) + (if b0436 then 0 else 186000) + (if b0437 then 0 else 186000) + (if b0438 then 0 else 186000) + (if b0439 then 0 else 186000) + (if b0440 then 0 else 186000) + (if b0441 then 0 else 186000) + (if b0442 then 0 else 186000) + (if b0443 then 0 else 186000) + (if b0444 then 0 else 186000) + (if b0445 then 0 else 186000) + (if b0446 then 0 else 186000) + (if b0447 then 0 else 186000) + (if b0448 then 0 else 186000) + (if b0449 then 0 else 186000) + (if b0450 then 0 else 186000) + (if b0451 then 0 else 186000) + (if b0452 then 0 else 186000) + (if b0453 then 0 else 186000) + (if b0454 then 0 else 186000) + (if b0455 then 0 else 186000) + (if b0456 then 0 else 186000) + (if b0457 then 0 else 186000) + (if b0458 then 0 else 186000) + (if b0459 then 0 else 186000) + (if b0460 then 0 else 186000) + (if b0461 then 0 else 186000) + (if b0462 then 0 else 186000) + (if b0463 then 0 else 186000) + (if b0464 then 0 else 186000) + (if b0465 then 0 else 186000) < 441
}
Prover Time taken = 10.320648
Added Horn clause: 50 => 51
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/linear-algebra/kernels/3mm/kernel3.bpl.ice2.bpl
Total learner time was 00:00:00.1281630
Verifying $kernel3: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool, b0228: bool, b0229: bool, b0230: bool, b0231: bool, b0232: bool, b0233: bool, b0234: bool, b0235: bool, b0236: bool, b0237: bool, b0238: bool, b0239: bool, b0240: bool, b0241: bool, b0242: bool, b0243: bool, b0244: bool, b0245: bool, b0246: bool, b0247: bool, b0248: bool, b0249: bool, b0250: bool, b0251: bool, b0252: bool, b0253: bool, b0254: bool, b0255: bool, b0256: bool, b0257: bool, b0258: bool, b0259: bool, b0260: bool, b0261: bool, b0262: bool, b0263: bool, b0264: bool, b0265: bool, b0266: bool, b0267: bool, b0268: bool, b0269: bool, b0270: bool, b0271: bool, b0272: bool, b0273: bool, b0274: bool, b0275: bool, b0276: bool, b0277: bool, b0278: bool, b0279: bool, b0280: bool, b0281: bool, b0282: bool, b0283: bool, b0284: bool, b0285: bool, b0286: bool, b0287: bool, b0288: bool, b0289: bool, b0290: bool, b0291: bool, b0292: bool, b0293: bool, b0294: bool, b0295: bool, b0296: bool, b0297: bool, b0298: bool, b0299: bool, b0300: bool, b0301: bool, b0302: bool, b0303: bool, b0304: bool, b0305: bool, b0306: bool, b0307: bool, b0308: bool, b0309: bool, b0310: bool, b0311: bool, b0312: bool, b0313: bool, b0314: bool, b0315: bool, b0316: bool, b0317: bool, b0318: bool, b0319: bool, b0320: bool, b0321: bool, b0322: bool, b0323: bool, b0324: bool, b0325: bool, b0326: bool, b0327: bool, b0328: bool, b0329: bool, b0330: bool, b0331: bool, b0332: bool, b0333: bool, b0334: bool, b0335: bool, b0336: bool, b0337: bool, b0338: bool, b0339: bool, b0340: bool, b0341: bool, b0342: bool, b0343: bool, b0344: bool, b0345: bool, b0346: bool, b0347: bool, b0348: bool, b0349: bool, b0350: bool, b0351: bool, b0352: bool, b0353: bool, b0354: bool, b0355: bool, b0356: bool, b0357: bool, b0358: bool, b0359: bool, b0360: bool, b0361: bool, b0362: bool, b0363: bool, b0364: bool, b0365: bool, b0366: bool, b0367: bool, b0368: bool, b0369: bool, b0370: bool, b0371: bool, b0372: bool, b0373: bool, b0374: bool, b0375: bool, b0376: bool, b0377: bool, b0378: bool, b0379: bool, b0380: bool, b0381: bool, b0382: bool, b0383: bool, b0384: bool, b0385: bool, b0386: bool, b0387: bool, b0388: bool, b0389: bool, b0390: bool, b0391: bool, b0392: bool, b0393: bool, b0394: bool, b0395: bool, b0396: bool, b0397: bool, b0398: bool, b0399: bool, b0400: bool, b0401: bool, b0402: bool, b0403: bool, b0404: bool, b0405: bool, b0406: bool, b0407: bool, b0408: bool, b0409: bool, b0410: bool, b0411: bool, b0412: bool, b0413: bool, b0414: bool, b0415: bool, b0416: bool, b0417: bool, b0418: bool, b0419: bool, b0420: bool, b0421: bool, b0422: bool, b0423: bool, b0424: bool, b0425: bool, b0426: bool, b0427: bool, b0428: bool, b0429: bool, b0430: bool, b0431: bool, b0432: bool, b0433: bool, b0434: bool, b0435: bool, b0436: bool, b0437: bool, b0438: bool, b0439: bool, b0440: bool, b0441: bool, b0442: bool, b0443: bool, b0444: bool, b0445: bool, b0446: bool, b0447: bool, b0448: bool, b0449: bool, b0450: bool, b0451: bool, b0452: bool, b0453: bool, b0454: bool, b0455: bool, b0456: bool, b0457: bool, b0458: bool, b0459: bool, b0460: bool, b0461: bool, b0462: bool, b0463: bool, b0464: bool, b0465: bool) : bool
{
  0 + (if b0000 then 0 else 186000) + (if b0001 then 0 else 186000) + (if b0002 then 0 else 186000) + (if b0003 then 0 else 186000) + (if b0004 then 0 else 186000) + (if b0005 then 0 else 186000) + (if b0006 then 0 else 186000) + (if b0007 then 0 else 186000) + (if b0008 then 0 else 186000) + (if b0009 then 0 else 186000) + (if b0010 then 0 else 186000) + (if b0011 then 0 else 186000) + (if b0012 then 0 else 186000) + (if b0013 then 0 else 186000) + (if b0014 then 0 else 186000) + (if b0015 then 0 else 186000) + (if b0016 then 0 else 186000) + (if b0017 then 0 else 186000) + (if b0018 then 0 else 186000) + (if b0019 then 0 else 186000) + (if b0020 then 0 else 186000) + (if b0021 then 0 else 186000) + (if b0022 then 0 else 186000) + (if b0023 then 0 else 186000) + (if b0024 then 0 else 186000) + (if b0025 then 0 else 186000) + (if b0026 then 0 else 186000) + (if b0027 then 0 else 186000) + (if b0028 then 0 else 186000) + (if b0029 then 0 else 186000) + (if b0030 then 0 else 186000) + (if b0031 then 0 else 186000) + (if b0032 then 0 else 186000) + (if b0033 then 0 else 186000) + (if b0034 then 0 else 186000) + (if b0035 then 0 else 186000) + (if b0036 then 0 else 186000) + (if b0037 then 0 else 186000) + (if b0038 then 0 else 186000) + (if b0039 then 0 else 186000) + (if b0040 then 0 else 186000) + (if b0041 then 0 else 186000) + (if b0042 then 0 else 186000) + (if b0043 then 0 else 186000) + (if b0044 then 0 else 186000) + (if b0045 then 0 else 186000) + (if b0046 then 0 else 186000) + (if b0047 then 0 else 186000) + (if b0048 then 0 else 186000) + (if b0049 then 0 else 186000) + (if b0050 then 0 else 186000) + (if b0051 then 0 else 186000) + (if b0052 then 0 else 186000) + (if b0053 then 0 else 186000) + (if b0054 then 0 else 186000) + (if b0055 then 0 else 186000) + (if b0056 then 0 else 186000) + (if b0057 then 0 else 186000) + (if b0058 then 0 else 186000) + (if b0059 then 0 else 186000) + (if b0060 then 0 else 186000) + (if b0061 then 0 else 186000) + (if b0062 then 0 else 186000) + (if b0063 then 0 else 186000) + (if b0064 then 0 else 186000) + (if b0065 then 0 else 186000) + (if b0066 then 0 else 186000) + (if b0067 then 0 else 186000) + (if b0068 then 0 else 186000) + (if b0069 then 0 else 186000) + (if b0070 then 0 else 186000) + (if b0071 then 0 else 186000) + (if b0072 then 0 else 186000) + (if b0073 then 0 else 186000) + (if b0074 then 0 else 186000) + (if b0075 then 0 else 186000) + (if b0076 then 0 else 186000) + (if b0077 then 0 else 186000) + (if b0078 then 0 else 186000) + (if b0079 then 0 else 186000) + (if b0080 then 0 else 186000) + (if b0081 then 0 else 186000) + (if b0082 then 0 else 186000) + (if b0083 then 0 else 186000) + (if b0084 then 0 else 186000) + (if b0085 then 0 else 186000) + (if b0086 then 0 else 186000) + (if b0087 then 0 else 186000) + (if b0088 then 0 else 186000) + (if b0089 then 0 else 186000) + (if b0090 then 0 else 186000) + (if b0091 then 0 else 186000) + (if b0092 then 0 else 186000) + (if b0093 then 0 else 186000) + (if b0094 then 0 else 186000) + (if b0095 then 0 else 186000) + (if b0096 then 0 else 186000) + (if b0097 then 0 else 186000) + (if b0098 then 0 else 186000) + (if b0099 then 0 else 186000) + (if b0100 then 0 else 186000) + (if b0101 then 0 else 186000) + (if b0102 then 0 else 186000) + (if b0103 then 0 else 186000) + (if b0104 then 0 else 186000) + (if b0105 then 0 else 186000) + (if b0106 then 0 else 186000) + (if b0107 then 0 else 186000) + (if b0108 then 0 else 186000) + (if b0109 then 0 else 186000) + (if b0110 then 0 else 186000) + (if b0111 then 0 else 186000) + (if b0112 then 0 else 186000) + (if b0113 then 0 else 186000) + (if b0114 then 0 else 186000) + (if b0115 then 0 else 186000) + (if b0116 then 0 else 186000) + (if b0118 then 0 else 186000) + (if b0120 then 0 else 186000) + (if b0121 then 0 else 186000) + (if b0122 then 0 else 186000) + (if b0123 then 0 else 186000) + (if b0124 then 0 else 186000) + (if b0125 then 0 else 186000) + (if b0126 then 0 else 186000) + (if b0127 then 0 else 186000) + (if b0128 then 0 else 186000) + (if b0129 then 0 else 186000) + (if b0130 then 0 else 186000) + (if b0131 then 0 else 186000) + (if b0132 then 0 else 186000) + (if b0134 then 0 else 186000) + (if b0136 then 0 else 186000) + (if b0137 then 0 else 186000) + (if b0138 then 0 else 186000) + (if b0139 then 0 else 186000) + (if b0140 then 0 else 186000) + (if b0141 then 0 else 186000) + (if b0142 then 0 else 186000) + (if b0143 then 0 else 186000) + (if b0144 then 0 else 186000) + (if b0145 then 0 else 186000) + (if b0147 then 0 else 186000) + (if b0148 then 0 else 186000) + (if b0149 then 0 else 186000) + (if b0150 then 0 else 186000) + (if b0151 then 0 else 186000) + (if b0154 then 0 else 186000) + (if b0156 then 0 else 186000) + (if b0157 then 0 else 186000) + (if b0158 then 0 else 186000) + (if b0159 then 0 else 186000) + (if b0160 then 0 else 186000) + (if b0161 then 0 else 186000) + (if b0162 then 0 else 186000) + (if b0163 then 0 else 186000) + (if b0164 then 0 else 186000) + (if b0165 then 0 else 186000) + (if b0167 then 0 else 186000) + (if b0168 then 0 else 186000) + (if b0169 then 0 else 186000) + (if b0172 then 0 else 186000) + (if b0174 then 0 else 186000) + (if b0175 then 0 else 186000) + (if b0176 then 0 else 186000) + (if b0177 then 0 else 186000) + (if b0178 then 0 else 186000) + (if b0179 then 0 else 186000) + (if b0180 then 0 else 186000) + (if b0181 then 0 else 186000) + (if b0182 then 0 else 186000) + (if b0183 then 0 else 186000) + (if b0184 then 0 else 186000) + (if b0185 then 0 else 186000) + (if b0186 then 0 else 186000) + (if b0187 then 0 else 186000) + (if b0188 then 0 else 186000) + (if b0189 then 0 else 186000) + (if b0190 then 0 else 186000) + (if b0191 then 0 else 186000) + (if b0192 then 0 else 186000) + (if b0193 then 0 else 186000) + (if b0195 then 0 else 186000) + (if b0197 then 0 else 186000) + (if b0198 then 0 else 186000) + (if b0199 then 0 else 186000) + (if b0200 then 0 else 186000) + (if b0201 then 0 else 186000) + (if b0202 then 0 else 186000) + (if b0203 then 0 else 186000) + (if b0205 then 0 else 186000) + (if b0206 then 0 else 186000) + (if b0207 then 0 else 186000) + (if b0208 then 0 else 186000) + (if b0210 then 0 else 186000) + (if b0212 then 0 else 186000) + (if b0214 then 0 else 186000) + (if b0215 then 0 else 186000) + (if b0216 then 0 else 186000) + (if b0217 then 0 else 186000) + (if b0218 then 0 else 186000) + (if b0219 then 0 else 186000) + (if b0220 then 0 else 186000) + (if b0222 then 0 else 186000) + (if b0223 then 0 else 186000) + (if b0224 then 0 else 186000) + (if b0225 then 0 else 186000) + (if b0227 then 0 else 186000) + (if b0228 then 0 else 186000) + (if b0229 then 0 else 186000) + (if b0230 then 0 else 186000) + (if b0232 then 0 else 186000) + (if b0235 then 0 else 186000) + (if b0237 then 0 else 186000) + (if b0238 then 0 else 186000) + (if b0239 then 0 else 186000) + (if b0240 then 0 else 186000) + (if b0241 then 0 else 186000) + (if b0242 then 0 else 186000) + (if b0243 then 0 else 186000) + (if b0244 then 0 else 186000) + (if b0245 then 0 else 186000) + (if b0246 then 0 else 186000) + (if b0247 then 0 else 186000) + (if b0248 then 0 else 186000) + (if b0249 then 0 else 186000) + (if b0250 then 0 else 186000) + (if b0251 then 0 else 186000) + (if b0252 then 0 else 186000) + (if b0253 then 0 else 186000) + (if b0254 then 0 else 186000) + (if b0255 then 0 else 186000) + (if b0256 then 0 else 186000) + (if b0257 then 0 else 186000) + (if b0258 then 0 else 186000) + (if b0259 then 0 else 186000) + (if b0260 then 0 else 186000) + (if b0261 then 0 else 186000) + (if b0262 then 0 else 186000) + (if b0263 then 0 else 186000) + (if b0264 then 0 else 186000) + (if b0265 then 0 else 186000) + (if b0266 then 0 else 186000) + (if b0267 then 0 else 186000) + (if b0268 then 0 else 186000) + (if b0269 then 0 else 186000) + (if b0270 then 0 else 186000) + (if b0271 then 0 else 186000) + (if b0272 then 0 else 186000) + (if b0273 then 0 else 186000) + (if b0274 then 0 else 186000) + (if b0275 then 0 else 186000) + (if b0276 then 0 else 186000) + (if b0277 then 0 else 186000) + (if b0278 then 0 else 186000) + (if b0279 then 0 else 186000) + (if b0280 then 0 else 186000) + (if b0281 then 0 else 186000) + (if b0282 then 0 else 186000) + (if b0283 then 0 else 186000) + (if b0284 then 0 else 186000) + (if b0285 then 0 else 186000) + (if b0286 then 0 else 186000) + (if b0287 then 0 else 186000) + (if b0288 then 0 else 186000) + (if b0289 then 0 else 186000) + (if b0290 then 0 else 186000) + (if b0291 then 0 else 186000) + (if b0292 then 0 else 186000) + (if b0293 then 0 else 186000) + (if b0294 then 0 else 186000) + (if b0295 then 0 else 186000) + (if b0296 then 0 else 186000) + (if b0297 then 0 else 186000) + (if b0298 then 0 else 186000) + (if b0299 then 0 else 186000) + (if b0300 then 0 else 186000) + (if b0301 then 0 else 186000) + (if b0302 then 0 else 186000) + (if b0303 then 0 else 186000) + (if b0304 then 0 else 186000) + (if b0305 then 0 else 186000) + (if b0306 then 0 else 186000) + (if b0307 then 0 else 186000) + (if b0308 then 0 else 186000) + (if b0309 then 0 else 186000) + (if b0310 then 0 else 186000) + (if b0311 then 0 else 186000) + (if b0312 then 0 else 186000) + (if b0313 then 0 else 186000) + (if b0314 then 0 else 186000) + (if b0315 then 0 else 186000) + (if b0316 then 0 else 186000) + (if b0317 then 0 else 186000) + (if b0318 then 0 else 186000) + (if b0319 then 0 else 186000) + (if b0320 then 0 else 186000) + (if b0321 then 0 else 186000) + (if b0322 then 0 else 186000) + (if b0323 then 0 else 186000) + (if b0324 then 0 else 186000) + (if b0325 then 0 else 186000) + (if b0326 then 0 else 186000) + (if b0327 then 0 else 186000) + (if b0328 then 0 else 186000) + (if b0329 then 0 else 186000) + (if b0330 then 0 else 186000) + (if b0331 then 0 else 186000) + (if b0332 then 0 else 186000) + (if b0333 then 0 else 186000) + (if b0334 then 0 else 186000) + (if b0335 then 0 else 186000) + (if b0336 then 0 else 186000) + (if b0337 then 0 else 186000) + (if b0338 then 0 else 186000) + (if b0339 then 0 else 186000) + (if b0340 then 0 else 186000) + (if b0341 then 0 else 186000) + (if b0376 then 0 else 186000) + (if b0378 then 0 else 186000) + (if b0379 then 0 else 186000) + (if b0380 then 0 else 186000) + (if b0381 then 0 else 186000) + (if b0382 then 0 else 186000) + (if b0383 then 0 else 186000) + (if b0384 then 0 else 186000) + (if b0385 then 0 else 186000) + (if b0386 then 0 else 186000) + (if b0387 then 0 else 186000) + (if b0388 then 0 else 186000) + (if b0389 then 0 else 186000) + (if b0390 then 0 else 186000) + (if b0422 then 0 else 186000) + (if b0424 then 0 else 186000) + (if b0425 then 0 else 186000) + (if b0426 then 0 else 186000) + (if b0427 then 0 else 186000) + (if b0428 then 0 else 186000) + (if b0429 then 0 else 186000) + (if b0430 then 0 else 186000) + (if b0431 then 0 else 186000) + (if b0432 then 0 else 186000) + (if b0433 then 0 else 186000) + (if b0434 then 0 else 186000) + (if b0435 then 0 else 186000) + (if b0436 then 0 else 186000) + (if b0437 then 0 else 186000) + (if b0438 then 0 else 186000) + (if b0439 then 0 else 186000) + (if b0440 then 0 else 186000) + (if b0441 then 0 else 186000) + (if b0442 then 0 else 186000) + (if b0443 then 0 else 186000) + (if b0444 then 0 else 186000) + (if b0445 then 0 else 186000) + (if b0446 then 0 else 186000) + (if b0447 then 0 else 186000) + (if b0448 then 0 else 186000) + (if b0449 then 0 else 186000) + (if b0450 then 0 else 186000) + (if b0451 then 0 else 186000) + (if b0452 then 0 else 186000) + (if b0453 then 0 else 186000) + (if b0454 then 0 else 186000) + (if b0455 then 0 else 186000) + (if b0456 then 0 else 186000) + (if b0457 then 0 else 186000) + (if b0458 then 0 else 186000) + (if b0459 then 0 else 186000) + (if b0460 then 0 else 186000) + (if b0461 then 0 else 186000) + (if b0462 then 0 else 186000) + (if b0463 then 0 else 186000) + (if b0464 then 0 else 186000) + (if b0465 then 0 else 186000) < 441
}
Prover Time taken = 7.659289
Added Horn clause: 50 && 46 && 51 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 => 52
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/linear-algebra/kernels/3mm/kernel3.bpl.ice2.bpl
Total learner time was 00:00:00.1366230
Verifying $kernel3: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool, b0228: bool, b0229: bool, b0230: bool, b0231: bool, b0232: bool, b0233: bool, b0234: bool, b0235: bool, b0236: bool, b0237: bool, b0238: bool, b0239: bool, b0240: bool, b0241: bool, b0242: bool, b0243: bool, b0244: bool, b0245: bool, b0246: bool, b0247: bool, b0248: bool, b0249: bool, b0250: bool, b0251: bool, b0252: bool, b0253: bool, b0254: bool, b0255: bool, b0256: bool, b0257: bool, b0258: bool, b0259: bool, b0260: bool, b0261: bool, b0262: bool, b0263: bool, b0264: bool, b0265: bool, b0266: bool, b0267: bool, b0268: bool, b0269: bool, b0270: bool, b0271: bool, b0272: bool, b0273: bool, b0274: bool, b0275: bool, b0276: bool, b0277: bool, b0278: bool, b0279: bool, b0280: bool, b0281: bool, b0282: bool, b0283: bool, b0284: bool, b0285: bool, b0286: bool, b0287: bool, b0288: bool, b0289: bool, b0290: bool, b0291: bool, b0292: bool, b0293: bool, b0294: bool, b0295: bool, b0296: bool, b0297: bool, b0298: bool, b0299: bool, b0300: bool, b0301: bool, b0302: bool, b0303: bool, b0304: bool, b0305: bool, b0306: bool, b0307: bool, b0308: bool, b0309: bool, b0310: bool, b0311: bool, b0312: bool, b0313: bool, b0314: bool, b0315: bool, b0316: bool, b0317: bool, b0318: bool, b0319: bool, b0320: bool, b0321: bool, b0322: bool, b0323: bool, b0324: bool, b0325: bool, b0326: bool, b0327: bool, b0328: bool, b0329: bool, b0330: bool, b0331: bool, b0332: bool, b0333: bool, b0334: bool, b0335: bool, b0336: bool, b0337: bool, b0338: bool, b0339: bool, b0340: bool, b0341: bool, b0342: bool, b0343: bool, b0344: bool, b0345: bool, b0346: bool, b0347: bool, b0348: bool, b0349: bool, b0350: bool, b0351: bool, b0352: bool, b0353: bool, b0354: bool, b0355: bool, b0356: bool, b0357: bool, b0358: bool, b0359: bool, b0360: bool, b0361: bool, b0362: bool, b0363: bool, b0364: bool, b0365: bool, b0366: bool, b0367: bool, b0368: bool, b0369: bool, b0370: bool, b0371: bool, b0372: bool, b0373: bool, b0374: bool, b0375: bool, b0376: bool, b0377: bool, b0378: bool, b0379: bool, b0380: bool, b0381: bool, b0382: bool, b0383: bool, b0384: bool, b0385: bool, b0386: bool, b0387: bool, b0388: bool, b0389: bool, b0390: bool, b0391: bool, b0392: bool, b0393: bool, b0394: bool, b0395: bool, b0396: bool, b0397: bool, b0398: bool, b0399: bool, b0400: bool, b0401: bool, b0402: bool, b0403: bool, b0404: bool, b0405: bool, b0406: bool, b0407: bool, b0408: bool, b0409: bool, b0410: bool, b0411: bool, b0412: bool, b0413: bool, b0414: bool, b0415: bool, b0416: bool, b0417: bool, b0418: bool, b0419: bool, b0420: bool, b0421: bool, b0422: bool, b0423: bool, b0424: bool, b0425: bool, b0426: bool, b0427: bool, b0428: bool, b0429: bool, b0430: bool, b0431: bool, b0432: bool, b0433: bool, b0434: bool, b0435: bool, b0436: bool, b0437: bool, b0438: bool, b0439: bool, b0440: bool, b0441: bool, b0442: bool, b0443: bool, b0444: bool, b0445: bool, b0446: bool, b0447: bool, b0448: bool, b0449: bool, b0450: bool, b0451: bool, b0452: bool, b0453: bool, b0454: bool, b0455: bool, b0456: bool, b0457: bool, b0458: bool, b0459: bool, b0460: bool, b0461: bool, b0462: bool, b0463: bool, b0464: bool, b0465: bool) : bool
{
  0 + (if b0000 then 0 else 186000) + (if b0001 then 0 else 186000) + (if b0002 then 0 else 186000) + (if b0003 then 0 else 186000) + (if b0004 then 0 else 186000) + (if b0005 then 0 else 186000) + (if b0006 then 0 else 186000) + (if b0007 then 0 else 186000) + (if b0008 then 0 else 186000) + (if b0009 then 0 else 186000) + (if b0010 then 0 else 186000) + (if b0011 then 0 else 186000) + (if b0012 then 0 else 186000) + (if b0013 then 0 else 186000) + (if b0014 then 0 else 186000) + (if b0015 then 0 else 186000) + (if b0016 then 0 else 186000) + (if b0017 then 0 else 186000) + (if b0018 then 0 else 186000) + (if b0019 then 0 else 186000) + (if b0020 then 0 else 186000) + (if b0021 then 0 else 186000) + (if b0022 then 0 else 186000) + (if b0023 then 0 else 186000) + (if b0024 then 0 else 186000) + (if b0025 then 0 else 186000) + (if b0026 then 0 else 186000) + (if b0027 then 0 else 186000) + (if b0028 then 0 else 186000) + (if b0029 then 0 else 186000) + (if b0030 then 0 else 186000) + (if b0031 then 0 else 186000) + (if b0032 then 0 else 186000) + (if b0033 then 0 else 186000) + (if b0034 then 0 else 186000) + (if b0035 then 0 else 186000) + (if b0036 then 0 else 186000) + (if b0037 then 0 else 186000) + (if b0038 then 0 else 186000) + (if b0039 then 0 else 186000) + (if b0040 then 0 else 186000) + (if b0041 then 0 else 186000) + (if b0042 then 0 else 186000) + (if b0043 then 0 else 186000) + (if b0044 then 0 else 186000) + (if b0045 then 0 else 186000) + (if b0046 then 0 else 186000) + (if b0047 then 0 else 186000) + (if b0048 then 0 else 186000) + (if b0049 then 0 else 186000) + (if b0050 then 0 else 186000) + (if b0051 then 0 else 186000) + (if b0052 then 0 else 186000) + (if b0053 then 0 else 186000) + (if b0054 then 0 else 186000) + (if b0055 then 0 else 186000) + (if b0056 then 0 else 186000) + (if b0057 then 0 else 186000) + (if b0058 then 0 else 186000) + (if b0059 then 0 else 186000) + (if b0060 then 0 else 186000) + (if b0061 then 0 else 186000) + (if b0062 then 0 else 186000) + (if b0063 then 0 else 186000) + (if b0064 then 0 else 186000) + (if b0065 then 0 else 186000) + (if b0066 then 0 else 186000) + (if b0067 then 0 else 186000) + (if b0068 then 0 else 186000) + (if b0069 then 0 else 186000) + (if b0070 then 0 else 186000) + (if b0071 then 0 else 186000) + (if b0072 then 0 else 186000) + (if b0073 then 0 else 186000) + (if b0074 then 0 else 186000) + (if b0075 then 0 else 186000) + (if b0076 then 0 else 186000) + (if b0077 then 0 else 186000) + (if b0078 then 0 else 186000) + (if b0079 then 0 else 186000) + (if b0080 then 0 else 186000) + (if b0081 then 0 else 186000) + (if b0082 then 0 else 186000) + (if b0083 then 0 else 186000) + (if b0084 then 0 else 186000) + (if b0085 then 0 else 186000) + (if b0086 then 0 else 186000) + (if b0087 then 0 else 186000) + (if b0088 then 0 else 186000) + (if b0089 then 0 else 186000) + (if b0090 then 0 else 186000) + (if b0091 then 0 else 186000) + (if b0092 then 0 else 186000) + (if b0093 then 0 else 186000) + (if b0094 then 0 else 186000) + (if b0095 then 0 else 186000) + (if b0096 then 0 else 186000) + (if b0097 then 0 else 186000) + (if b0098 then 0 else 186000) + (if b0099 then 0 else 186000) + (if b0100 then 0 else 186000) + (if b0101 then 0 else 186000) + (if b0102 then 0 else 186000) + (if b0103 then 0 else 186000) + (if b0104 then 0 else 186000) + (if b0105 then 0 else 186000) + (if b0106 then 0 else 186000) + (if b0107 then 0 else 186000) + (if b0108 then 0 else 186000) + (if b0109 then 0 else 186000) + (if b0110 then 0 else 186000) + (if b0111 then 0 else 186000) + (if b0112 then 0 else 186000) + (if b0113 then 0 else 186000) + (if b0114 then 0 else 186000) + (if b0115 then 0 else 186000) + (if b0116 then 0 else 186000) + (if b0118 then 0 else 186000) + (if b0120 then 0 else 186000) + (if b0121 then 0 else 186000) + (if b0122 then 0 else 186000) + (if b0123 then 0 else 186000) + (if b0124 then 0 else 186000) + (if b0125 then 0 else 186000) + (if b0126 then 0 else 186000) + (if b0127 then 0 else 186000) + (if b0128 then 0 else 186000) + (if b0129 then 0 else 186000) + (if b0130 then 0 else 186000) + (if b0131 then 0 else 186000) + (if b0132 then 0 else 186000) + (if b0134 then 0 else 186000) + (if b0136 then 0 else 186000) + (if b0137 then 0 else 186000) + (if b0138 then 0 else 186000) + (if b0139 then 0 else 186000) + (if b0140 then 0 else 186000) + (if b0141 then 0 else 186000) + (if b0142 then 0 else 186000) + (if b0143 then 0 else 186000) + (if b0144 then 0 else 186000) + (if b0145 then 0 else 186000) + (if b0147 then 0 else 186000) + (if b0148 then 0 else 186000) + (if b0149 then 0 else 186000) + (if b0150 then 0 else 186000) + (if b0151 then 0 else 186000) + (if b0154 then 0 else 186000) + (if b0156 then 0 else 186000) + (if b0157 then 0 else 186000) + (if b0158 then 0 else 186000) + (if b0159 then 0 else 186000) + (if b0160 then 0 else 186000) + (if b0161 then 0 else 186000) + (if b0162 then 0 else 186000) + (if b0163 then 0 else 186000) + (if b0164 then 0 else 186000) + (if b0167 then 0 else 186000) + (if b0169 then 0 else 186000) + (if b0172 then 0 else 186000) + (if b0174 then 0 else 186000) + (if b0175 then 0 else 186000) + (if b0176 then 0 else 186000) + (if b0177 then 0 else 186000) + (if b0178 then 0 else 186000) + (if b0179 then 0 else 186000) + (if b0180 then 0 else 186000) + (if b0181 then 0 else 186000) + (if b0182 then 0 else 186000) + (if b0183 then 0 else 186000) + (if b0184 then 0 else 186000) + (if b0185 then 0 else 186000) + (if b0186 then 0 else 186000) + (if b0187 then 0 else 186000) + (if b0188 then 0 else 186000) + (if b0189 then 0 else 186000) + (if b0190 then 0 else 186000) + (if b0191 then 0 else 186000) + (if b0192 then 0 else 186000) + (if b0193 then 0 else 186000) + (if b0195 then 0 else 186000) + (if b0197 then 0 else 186000) + (if b0198 then 0 else 186000) + (if b0199 then 0 else 186000) + (if b0200 then 0 else 186000) + (if b0201 then 0 else 186000) + (if b0202 then 0 else 186000) + (if b0203 then 0 else 186000) + (if b0205 then 0 else 186000) + (if b0206 then 0 else 186000) + (if b0207 then 0 else 186000) + (if b0208 then 0 else 186000) + (if b0210 then 0 else 186000) + (if b0212 then 0 else 186000) + (if b0214 then 0 else 186000) + (if b0215 then 0 else 186000) + (if b0216 then 0 else 186000) + (if b0217 then 0 else 186000) + (if b0218 then 0 else 186000) + (if b0219 then 0 else 186000) + (if b0220 then 0 else 186000) + (if b0222 then 0 else 186000) + (if b0223 then 0 else 186000) + (if b0224 then 0 else 186000) + (if b0225 then 0 else 186000) + (if b0227 then 0 else 186000) + (if b0228 then 0 else 186000) + (if b0229 then 0 else 186000) + (if b0230 then 0 else 186000) + (if b0232 then 0 else 186000) + (if b0235 then 0 else 186000) + (if b0237 then 0 else 186000) + (if b0238 then 0 else 186000) + (if b0239 then 0 else 186000) + (if b0240 then 0 else 186000) + (if b0241 then 0 else 186000) + (if b0242 then 0 else 186000) + (if b0243 then 0 else 186000) + (if b0244 then 0 else 186000) + (if b0245 then 0 else 186000) + (if b0246 then 0 else 186000) + (if b0247 then 0 else 186000) + (if b0248 then 0 else 186000) + (if b0249 then 0 else 186000) + (if b0250 then 0 else 186000) + (if b0251 then 0 else 186000) + (if b0252 then 0 else 186000) + (if b0253 then 0 else 186000) + (if b0254 then 0 else 186000) + (if b0255 then 0 else 186000) + (if b0256 then 0 else 186000) + (if b0257 then 0 else 186000) + (if b0258 then 0 else 186000) + (if b0259 then 0 else 186000) + (if b0260 then 0 else 186000) + (if b0261 then 0 else 186000) + (if b0262 then 0 else 186000) + (if b0263 then 0 else 186000) + (if b0264 then 0 else 186000) + (if b0265 then 0 else 186000) + (if b0266 then 0 else 186000) + (if b0267 then 0 else 186000) + (if b0268 then 0 else 186000) + (if b0269 then 0 else 186000) + (if b0270 then 0 else 186000) + (if b0271 then 0 else 186000) + (if b0272 then 0 else 186000) + (if b0273 then 0 else 186000) + (if b0274 then 0 else 186000) + (if b0275 then 0 else 186000) + (if b0276 then 0 else 186000) + (if b0277 then 0 else 186000) + (if b0278 then 0 else 186000) + (if b0279 then 0 else 186000) + (if b0280 then 0 else 186000) + (if b0281 then 0 else 186000) + (if b0282 then 0 else 186000) + (if b0283 then 0 else 186000) + (if b0284 then 0 else 186000) + (if b0285 then 0 else 186000) + (if b0286 then 0 else 186000) + (if b0287 then 0 else 186000) + (if b0288 then 0 else 186000) + (if b0289 then 0 else 186000) + (if b0290 then 0 else 186000) + (if b0291 then 0 else 186000) + (if b0292 then 0 else 186000) + (if b0293 then 0 else 186000) + (if b0294 then 0 else 186000) + (if b0295 then 0 else 186000) + (if b0296 then 0 else 186000) + (if b0297 then 0 else 186000) + (if b0298 then 0 else 186000) + (if b0299 then 0 else 186000) + (if b0300 then 0 else 186000) + (if b0301 then 0 else 186000) + (if b0302 then 0 else 186000) + (if b0303 then 0 else 186000) + (if b0304 then 0 else 186000) + (if b0305 then 0 else 186000) + (if b0306 then 0 else 186000) + (if b0307 then 0 else 186000) + (if b0308 then 0 else 186000) + (if b0309 then 0 else 186000) + (if b0310 then 0 else 186000) + (if b0311 then 0 else 186000) + (if b0312 then 0 else 186000) + (if b0313 then 0 else 186000) + (if b0314 then 0 else 186000) + (if b0315 then 0 else 186000) + (if b0316 then 0 else 186000) + (if b0317 then 0 else 186000) + (if b0318 then 0 else 186000) + (if b0319 then 0 else 186000) + (if b0320 then 0 else 186000) + (if b0321 then 0 else 186000) + (if b0322 then 0 else 186000) + (if b0323 then 0 else 186000) + (if b0324 then 0 else 186000) + (if b0325 then 0 else 186000) + (if b0326 then 0 else 186000) + (if b0327 then 0 else 186000) + (if b0328 then 0 else 186000) + (if b0329 then 0 else 186000) + (if b0330 then 0 else 186000) + (if b0331 then 0 else 186000) + (if b0332 then 0 else 186000) + (if b0333 then 0 else 186000) + (if b0334 then 0 else 186000) + (if b0335 then 0 else 186000) + (if b0336 then 0 else 186000) + (if b0337 then 0 else 186000) + (if b0338 then 0 else 186000) + (if b0339 then 0 else 186000) + (if b0340 then 0 else 186000) + (if b0341 then 0 else 186000) + (if b0376 then 0 else 186000) + (if b0378 then 0 else 186000) + (if b0379 then 0 else 186000) + (if b0380 then 0 else 186000) + (if b0381 then 0 else 186000) + (if b0382 then 0 else 186000) + (if b0383 then 0 else 186000) + (if b0384 then 0 else 186000) + (if b0385 then 0 else 186000) + (if b0386 then 0 else 186000) + (if b0387 then 0 else 186000) + (if b0388 then 0 else 186000) + (if b0389 then 0 else 186000) + (if b0390 then 0 else 186000) + (if b0422 then 0 else 186000) + (if b0424 then 0 else 186000) + (if b0425 then 0 else 186000) + (if b0426 then 0 else 186000) + (if b0427 then 0 else 186000) + (if b0428 then 0 else 186000) + (if b0429 then 0 else 186000) + (if b0430 then 0 else 186000) + (if b0431 then 0 else 186000) + (if b0432 then 0 else 186000) + (if b0433 then 0 else 186000) + (if b0434 then 0 else 186000) + (if b0435 then 0 else 186000) + (if b0436 then 0 else 186000) + (if b0437 then 0 else 186000) + (if b0438 then 0 else 186000) + (if b0439 then 0 else 186000) + (if b0440 then 0 else 186000) + (if b0441 then 0 else 186000) + (if b0442 then 0 else 186000) + (if b0443 then 0 else 186000) + (if b0444 then 0 else 186000) + (if b0445 then 0 else 186000) + (if b0446 then 0 else 186000) + (if b0447 then 0 else 186000) + (if b0448 then 0 else 186000) + (if b0449 then 0 else 186000) + (if b0450 then 0 else 186000) + (if b0451 then 0 else 186000) + (if b0452 then 0 else 186000) + (if b0453 then 0 else 186000) + (if b0454 then 0 else 186000) + (if b0455 then 0 else 186000) + (if b0456 then 0 else 186000) + (if b0457 then 0 else 186000) + (if b0458 then 0 else 186000) + (if b0459 then 0 else 186000) + (if b0460 then 0 else 186000) + (if b0461 then 0 else 186000) + (if b0462 then 0 else 186000) + (if b0463 then 0 else 186000) + (if b0464 then 0 else 186000) + (if b0465 then 0 else 186000) < 441
}
Prover Time taken = 13.52749
Added Horn clause: 53 && 54 && 33 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 55 => 56
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/linear-algebra/kernels/3mm/kernel3.bpl.ice2.bpl
Total learner time was 00:00:00.1312670
Verifying $kernel3: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool, b0228: bool, b0229: bool, b0230: bool, b0231: bool, b0232: bool, b0233: bool, b0234: bool, b0235: bool, b0236: bool, b0237: bool, b0238: bool, b0239: bool, b0240: bool, b0241: bool, b0242: bool, b0243: bool, b0244: bool, b0245: bool, b0246: bool, b0247: bool, b0248: bool, b0249: bool, b0250: bool, b0251: bool, b0252: bool, b0253: bool, b0254: bool, b0255: bool, b0256: bool, b0257: bool, b0258: bool, b0259: bool, b0260: bool, b0261: bool, b0262: bool, b0263: bool, b0264: bool, b0265: bool, b0266: bool, b0267: bool, b0268: bool, b0269: bool, b0270: bool, b0271: bool, b0272: bool, b0273: bool, b0274: bool, b0275: bool, b0276: bool, b0277: bool, b0278: bool, b0279: bool, b0280: bool, b0281: bool, b0282: bool, b0283: bool, b0284: bool, b0285: bool, b0286: bool, b0287: bool, b0288: bool, b0289: bool, b0290: bool, b0291: bool, b0292: bool, b0293: bool, b0294: bool, b0295: bool, b0296: bool, b0297: bool, b0298: bool, b0299: bool, b0300: bool, b0301: bool, b0302: bool, b0303: bool, b0304: bool, b0305: bool, b0306: bool, b0307: bool, b0308: bool, b0309: bool, b0310: bool, b0311: bool, b0312: bool, b0313: bool, b0314: bool, b0315: bool, b0316: bool, b0317: bool, b0318: bool, b0319: bool, b0320: bool, b0321: bool, b0322: bool, b0323: bool, b0324: bool, b0325: bool, b0326: bool, b0327: bool, b0328: bool, b0329: bool, b0330: bool, b0331: bool, b0332: bool, b0333: bool, b0334: bool, b0335: bool, b0336: bool, b0337: bool, b0338: bool, b0339: bool, b0340: bool, b0341: bool, b0342: bool, b0343: bool, b0344: bool, b0345: bool, b0346: bool, b0347: bool, b0348: bool, b0349: bool, b0350: bool, b0351: bool, b0352: bool, b0353: bool, b0354: bool, b0355: bool, b0356: bool, b0357: bool, b0358: bool, b0359: bool, b0360: bool, b0361: bool, b0362: bool, b0363: bool, b0364: bool, b0365: bool, b0366: bool, b0367: bool, b0368: bool, b0369: bool, b0370: bool, b0371: bool, b0372: bool, b0373: bool, b0374: bool, b0375: bool, b0376: bool, b0377: bool, b0378: bool, b0379: bool, b0380: bool, b0381: bool, b0382: bool, b0383: bool, b0384: bool, b0385: bool, b0386: bool, b0387: bool, b0388: bool, b0389: bool, b0390: bool, b0391: bool, b0392: bool, b0393: bool, b0394: bool, b0395: bool, b0396: bool, b0397: bool, b0398: bool, b0399: bool, b0400: bool, b0401: bool, b0402: bool, b0403: bool, b0404: bool, b0405: bool, b0406: bool, b0407: bool, b0408: bool, b0409: bool, b0410: bool, b0411: bool, b0412: bool, b0413: bool, b0414: bool, b0415: bool, b0416: bool, b0417: bool, b0418: bool, b0419: bool, b0420: bool, b0421: bool, b0422: bool, b0423: bool, b0424: bool, b0425: bool, b0426: bool, b0427: bool, b0428: bool, b0429: bool, b0430: bool, b0431: bool, b0432: bool, b0433: bool, b0434: bool, b0435: bool, b0436: bool, b0437: bool, b0438: bool, b0439: bool, b0440: bool, b0441: bool, b0442: bool, b0443: bool, b0444: bool, b0445: bool, b0446: bool, b0447: bool, b0448: bool, b0449: bool, b0450: bool, b0451: bool, b0452: bool, b0453: bool, b0454: bool, b0455: bool, b0456: bool, b0457: bool, b0458: bool, b0459: bool, b0460: bool, b0461: bool, b0462: bool, b0463: bool, b0464: bool, b0465: bool) : bool
{
  0 + (if b0000 then 0 else 186000) + (if b0001 then 0 else 186000) + (if b0002 then 0 else 186000) + (if b0003 then 0 else 186000) + (if b0004 then 0 else 186000) + (if b0005 then 0 else 186000) + (if b0006 then 0 else 186000) + (if b0007 then 0 else 186000) + (if b0008 then 0 else 186000) + (if b0009 then 0 else 186000) + (if b0010 then 0 else 186000) + (if b0011 then 0 else 186000) + (if b0012 then 0 else 186000) + (if b0013 then 0 else 186000) + (if b0014 then 0 else 186000) + (if b0015 then 0 else 186000) + (if b0016 then 0 else 186000) + (if b0017 then 0 else 186000) + (if b0018 then 0 else 186000) + (if b0019 then 0 else 186000) + (if b0020 then 0 else 186000) + (if b0021 then 0 else 186000) + (if b0022 then 0 else 186000) + (if b0023 then 0 else 186000) + (if b0024 then 0 else 186000) + (if b0025 then 0 else 186000) + (if b0026 then 0 else 186000) + (if b0027 then 0 else 186000) + (if b0028 then 0 else 186000) + (if b0029 then 0 else 186000) + (if b0030 then 0 else 186000) + (if b0031 then 0 else 186000) + (if b0032 then 0 else 186000) + (if b0033 then 0 else 186000) + (if b0034 then 0 else 186000) + (if b0035 then 0 else 186000) + (if b0036 then 0 else 186000) + (if b0037 then 0 else 186000) + (if b0038 then 0 else 186000) + (if b0039 then 0 else 186000) + (if b0040 then 0 else 186000) + (if b0041 then 0 else 186000) + (if b0042 then 0 else 186000) + (if b0043 then 0 else 186000) + (if b0044 then 0 else 186000) + (if b0045 then 0 else 186000) + (if b0046 then 0 else 186000) + (if b0047 then 0 else 186000) + (if b0048 then 0 else 186000) + (if b0049 then 0 else 186000) + (if b0050 then 0 else 186000) + (if b0051 then 0 else 186000) + (if b0052 then 0 else 186000) + (if b0053 then 0 else 186000) + (if b0054 then 0 else 186000) + (if b0055 then 0 else 186000) + (if b0056 then 0 else 186000) + (if b0057 then 0 else 186000) + (if b0058 then 0 else 186000) + (if b0059 then 0 else 186000) + (if b0060 then 0 else 186000) + (if b0061 then 0 else 186000) + (if b0062 then 0 else 186000) + (if b0063 then 0 else 186000) + (if b0064 then 0 else 186000) + (if b0065 then 0 else 186000) + (if b0066 then 0 else 186000) + (if b0067 then 0 else 186000) + (if b0068 then 0 else 186000) + (if b0069 then 0 else 186000) + (if b0070 then 0 else 186000) + (if b0071 then 0 else 186000) + (if b0072 then 0 else 186000) + (if b0073 then 0 else 186000) + (if b0074 then 0 else 186000) + (if b0075 then 0 else 186000) + (if b0076 then 0 else 186000) + (if b0077 then 0 else 186000) + (if b0078 then 0 else 186000) + (if b0079 then 0 else 186000) + (if b0080 then 0 else 186000) + (if b0081 then 0 else 186000) + (if b0082 then 0 else 186000) + (if b0083 then 0 else 186000) + (if b0084 then 0 else 186000) + (if b0085 then 0 else 186000) + (if b0086 then 0 else 186000) + (if b0087 then 0 else 186000) + (if b0088 then 0 else 186000) + (if b0089 then 0 else 186000) + (if b0090 then 0 else 186000) + (if b0091 then 0 else 186000) + (if b0092 then 0 else 186000) + (if b0093 then 0 else 186000) + (if b0094 then 0 else 186000) + (if b0095 then 0 else 186000) + (if b0096 then 0 else 186000) + (if b0097 then 0 else 186000) + (if b0098 then 0 else 186000) + (if b0099 then 0 else 186000) + (if b0100 then 0 else 186000) + (if b0101 then 0 else 186000) + (if b0102 then 0 else 186000) + (if b0103 then 0 else 186000) + (if b0104 then 0 else 186000) + (if b0105 then 0 else 186000) + (if b0106 then 0 else 186000) + (if b0107 then 0 else 186000) + (if b0108 then 0 else 186000) + (if b0109 then 0 else 186000) + (if b0110 then 0 else 186000) + (if b0111 then 0 else 186000) + (if b0112 then 0 else 186000) + (if b0113 then 0 else 186000) + (if b0114 then 0 else 186000) + (if b0115 then 0 else 186000) + (if b0116 then 0 else 186000) + (if b0118 then 0 else 186000) + (if b0120 then 0 else 186000) + (if b0121 then 0 else 186000) + (if b0122 then 0 else 186000) + (if b0123 then 0 else 186000) + (if b0124 then 0 else 186000) + (if b0125 then 0 else 186000) + (if b0126 then 0 else 186000) + (if b0127 then 0 else 186000) + (if b0128 then 0 else 186000) + (if b0129 then 0 else 186000) + (if b0130 then 0 else 186000) + (if b0131 then 0 else 186000) + (if b0132 then 0 else 186000) + (if b0134 then 0 else 186000) + (if b0136 then 0 else 186000) + (if b0137 then 0 else 186000) + (if b0138 then 0 else 186000) + (if b0139 then 0 else 186000) + (if b0140 then 0 else 186000) + (if b0141 then 0 else 186000) + (if b0142 then 0 else 186000) + (if b0143 then 0 else 186000) + (if b0144 then 0 else 186000) + (if b0145 then 0 else 186000) + (if b0147 then 0 else 186000) + (if b0148 then 0 else 186000) + (if b0149 then 0 else 186000) + (if b0150 then 0 else 186000) + (if b0151 then 0 else 186000) + (if b0154 then 0 else 186000) + (if b0156 then 0 else 186000) + (if b0157 then 0 else 186000) + (if b0158 then 0 else 186000) + (if b0159 then 0 else 186000) + (if b0160 then 0 else 186000) + (if b0161 then 0 else 186000) + (if b0162 then 0 else 186000) + (if b0163 then 0 else 186000) + (if b0164 then 0 else 186000) + (if b0167 then 0 else 186000) + (if b0169 then 0 else 186000) + (if b0172 then 0 else 186000) + (if b0174 then 0 else 186000) + (if b0175 then 0 else 186000) + (if b0176 then 0 else 186000) + (if b0177 then 0 else 186000) + (if b0178 then 0 else 186000) + (if b0179 then 0 else 186000) + (if b0180 then 0 else 186000) + (if b0181 then 0 else 186000) + (if b0182 then 0 else 186000) + (if b0183 then 0 else 186000) + (if b0184 then 0 else 186000) + (if b0185 then 0 else 186000) + (if b0186 then 0 else 186000) + (if b0187 then 0 else 186000) + (if b0188 then 0 else 186000) + (if b0189 then 0 else 186000) + (if b0190 then 0 else 186000) + (if b0191 then 0 else 186000) + (if b0192 then 0 else 186000) + (if b0193 then 0 else 186000) + (if b0195 then 0 else 186000) + (if b0197 then 0 else 186000) + (if b0198 then 0 else 186000) + (if b0199 then 0 else 186000) + (if b0200 then 0 else 186000) + (if b0201 then 0 else 186000) + (if b0202 then 0 else 186000) + (if b0203 then 0 else 186000) + (if b0205 then 0 else 186000) + (if b0206 then 0 else 186000) + (if b0207 then 0 else 186000) + (if b0208 then 0 else 186000) + (if b0210 then 0 else 186000) + (if b0212 then 0 else 186000) + (if b0214 then 0 else 186000) + (if b0215 then 0 else 186000) + (if b0216 then 0 else 186000) + (if b0217 then 0 else 186000) + (if b0218 then 0 else 186000) + (if b0219 then 0 else 186000) + (if b0220 then 0 else 186000) + (if b0222 then 0 else 186000) + (if b0223 then 0 else 186000) + (if b0224 then 0 else 186000) + (if b0225 then 0 else 186000) + (if b0227 then 0 else 186000) + (if b0228 then 0 else 186000) + (if b0229 then 0 else 186000) + (if b0230 then 0 else 186000) + (if b0232 then 0 else 186000) + (if b0235 then 0 else 186000) + (if b0237 then 0 else 186000) + (if b0238 then 0 else 186000) + (if b0239 then 0 else 186000) + (if b0240 then 0 else 186000) + (if b0241 then 0 else 186000) + (if b0242 then 0 else 186000) + (if b0243 then 0 else 186000) + (if b0244 then 0 else 186000) + (if b0245 then 0 else 186000) + (if b0246 then 0 else 186000) + (if b0247 then 0 else 186000) + (if b0248 then 0 else 186000) + (if b0249 then 0 else 186000) + (if b0250 then 0 else 186000) + (if b0251 then 0 else 186000) + (if b0252 then 0 else 186000) + (if b0253 then 0 else 186000) + (if b0254 then 0 else 186000) + (if b0255 then 0 else 186000) + (if b0256 then 0 else 186000) + (if b0257 then 0 else 186000) + (if b0258 then 0 else 186000) + (if b0259 then 0 else 186000) + (if b0260 then 0 else 186000) + (if b0261 then 0 else 186000) + (if b0262 then 0 else 186000) + (if b0263 then 0 else 186000) + (if b0264 then 0 else 186000) + (if b0265 then 0 else 186000) + (if b0266 then 0 else 186000) + (if b0267 then 0 else 186000) + (if b0268 then 0 else 186000) + (if b0269 then 0 else 186000) + (if b0270 then 0 else 186000) + (if b0271 then 0 else 186000) + (if b0272 then 0 else 186000) + (if b0273 then 0 else 186000) + (if b0274 then 0 else 186000) + (if b0275 then 0 else 186000) + (if b0276 then 0 else 186000) + (if b0277 then 0 else 186000) + (if b0278 then 0 else 186000) + (if b0279 then 0 else 186000) + (if b0280 then 0 else 186000) + (if b0281 then 0 else 186000) + (if b0282 then 0 else 186000) + (if b0283 then 0 else 186000) + (if b0284 then 0 else 186000) + (if b0285 then 0 else 186000) + (if b0286 then 0 else 186000) + (if b0287 then 0 else 186000) + (if b0288 then 0 else 186000) + (if b0289 then 0 else 186000) + (if b0290 then 0 else 186000) + (if b0291 then 0 else 186000) + (if b0292 then 0 else 186000) + (if b0293 then 0 else 186000) + (if b0294 then 0 else 186000) + (if b0295 then 0 else 186000) + (if b0296 then 0 else 186000) + (if b0297 then 0 else 186000) + (if b0298 then 0 else 186000) + (if b0299 then 0 else 186000) + (if b0300 then 0 else 186000) + (if b0301 then 0 else 186000) + (if b0302 then 0 else 186000) + (if b0303 then 0 else 186000) + (if b0304 then 0 else 186000) + (if b0305 then 0 else 186000) + (if b0306 then 0 else 186000) + (if b0307 then 0 else 186000) + (if b0308 then 0 else 186000) + (if b0309 then 0 else 186000) + (if b0310 then 0 else 186000) + (if b0311 then 0 else 186000) + (if b0312 then 0 else 186000) + (if b0313 then 0 else 186000) + (if b0314 then 0 else 186000) + (if b0315 then 0 else 186000) + (if b0316 then 0 else 186000) + (if b0317 then 0 else 186000) + (if b0318 then 0 else 186000) + (if b0319 then 0 else 186000) + (if b0320 then 0 else 186000) + (if b0321 then 0 else 186000) + (if b0322 then 0 else 186000) + (if b0323 then 0 else 186000) + (if b0324 then 0 else 186000) + (if b0325 then 0 else 186000) + (if b0326 then 0 else 186000) + (if b0327 then 0 else 186000) + (if b0328 then 0 else 186000) + (if b0329 then 0 else 186000) + (if b0330 then 0 else 186000) + (if b0331 then 0 else 186000) + (if b0332 then 0 else 186000) + (if b0333 then 0 else 186000) + (if b0334 then 0 else 186000) + (if b0335 then 0 else 186000) + (if b0336 then 0 else 186000) + (if b0337 then 0 else 186000) + (if b0338 then 0 else 186000) + (if b0339 then 0 else 186000) + (if b0340 then 0 else 186000) + (if b0341 then 0 else 186000) + (if b0376 then 0 else 186000) + (if b0378 then 0 else 186000) + (if b0379 then 0 else 186000) + (if b0380 then 0 else 186000) + (if b0381 then 0 else 186000) + (if b0382 then 0 else 186000) + (if b0383 then 0 else 186000) + (if b0384 then 0 else 186000) + (if b0385 then 0 else 186000) + (if b0386 then 0 else 186000) + (if b0387 then 0 else 186000) + (if b0388 then 0 else 186000) + (if b0389 then 0 else 186000) + (if b0390 then 0 else 186000) + (if b0422 then 0 else 186000) + (if b0424 then 0 else 186000) + (if b0425 then 0 else 186000) + (if b0426 then 0 else 186000) + (if b0427 then 0 else 186000) + (if b0428 then 0 else 186000) + (if b0429 then 0 else 186000) + (if b0430 then 0 else 186000) + (if b0431 then 0 else 186000) + (if b0432 then 0 else 186000) + (if b0433 then 0 else 186000) + (if b0435 then 0 else 186000) + (if b0436 then 0 else 186000) + (if b0437 then 0 else 186000) + (if b0438 then 0 else 186000) + (if b0439 then 0 else 186000) + (if b0440 then 0 else 186000) + (if b0441 then 0 else 186000) + (if b0442 then 0 else 186000) + (if b0443 then 0 else 186000) + (if b0444 then 0 else 186000) + (if b0445 then 0 else 186000) + (if b0446 then 0 else 186000) + (if b0447 then 0 else 186000) + (if b0448 then 0 else 186000) + (if b0449 then 0 else 186000) + (if b0450 then 0 else 186000) + (if b0451 then 0 else 186000) + (if b0452 then 0 else 186000) + (if b0453 then 0 else 186000) + (if b0454 then 0 else 186000) + (if b0455 then 0 else 186000) + (if b0456 then 0 else 186000) + (if b0457 then 0 else 186000) + (if b0458 then 0 else 186000) + (if b0459 then 0 else 186000) + (if b0460 then 0 else 186000) + (if b0461 then 0 else 186000) + (if b0462 then 0 else 186000) + (if b0463 then 0 else 186000) + (if b0464 then 0 else 186000) + (if b0465 then 0 else 186000) < 441
}
Prover Time taken = 14.352723
Added Horn clause: 11 && 57 && 0 && 0 && 0 => 58
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/linear-algebra/kernels/3mm/kernel3.bpl.ice2.bpl
Total learner time was 00:00:00.1332110
Verifying $kernel3: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool, b0228: bool, b0229: bool, b0230: bool, b0231: bool, b0232: bool, b0233: bool, b0234: bool, b0235: bool, b0236: bool, b0237: bool, b0238: bool, b0239: bool, b0240: bool, b0241: bool, b0242: bool, b0243: bool, b0244: bool, b0245: bool, b0246: bool, b0247: bool, b0248: bool, b0249: bool, b0250: bool, b0251: bool, b0252: bool, b0253: bool, b0254: bool, b0255: bool, b0256: bool, b0257: bool, b0258: bool, b0259: bool, b0260: bool, b0261: bool, b0262: bool, b0263: bool, b0264: bool, b0265: bool, b0266: bool, b0267: bool, b0268: bool, b0269: bool, b0270: bool, b0271: bool, b0272: bool, b0273: bool, b0274: bool, b0275: bool, b0276: bool, b0277: bool, b0278: bool, b0279: bool, b0280: bool, b0281: bool, b0282: bool, b0283: bool, b0284: bool, b0285: bool, b0286: bool, b0287: bool, b0288: bool, b0289: bool, b0290: bool, b0291: bool, b0292: bool, b0293: bool, b0294: bool, b0295: bool, b0296: bool, b0297: bool, b0298: bool, b0299: bool, b0300: bool, b0301: bool, b0302: bool, b0303: bool, b0304: bool, b0305: bool, b0306: bool, b0307: bool, b0308: bool, b0309: bool, b0310: bool, b0311: bool, b0312: bool, b0313: bool, b0314: bool, b0315: bool, b0316: bool, b0317: bool, b0318: bool, b0319: bool, b0320: bool, b0321: bool, b0322: bool, b0323: bool, b0324: bool, b0325: bool, b0326: bool, b0327: bool, b0328: bool, b0329: bool, b0330: bool, b0331: bool, b0332: bool, b0333: bool, b0334: bool, b0335: bool, b0336: bool, b0337: bool, b0338: bool, b0339: bool, b0340: bool, b0341: bool, b0342: bool, b0343: bool, b0344: bool, b0345: bool, b0346: bool, b0347: bool, b0348: bool, b0349: bool, b0350: bool, b0351: bool, b0352: bool, b0353: bool, b0354: bool, b0355: bool, b0356: bool, b0357: bool, b0358: bool, b0359: bool, b0360: bool, b0361: bool, b0362: bool, b0363: bool, b0364: bool, b0365: bool, b0366: bool, b0367: bool, b0368: bool, b0369: bool, b0370: bool, b0371: bool, b0372: bool, b0373: bool, b0374: bool, b0375: bool, b0376: bool, b0377: bool, b0378: bool, b0379: bool, b0380: bool, b0381: bool, b0382: bool, b0383: bool, b0384: bool, b0385: bool, b0386: bool, b0387: bool, b0388: bool, b0389: bool, b0390: bool, b0391: bool, b0392: bool, b0393: bool, b0394: bool, b0395: bool, b0396: bool, b0397: bool, b0398: bool, b0399: bool, b0400: bool, b0401: bool, b0402: bool, b0403: bool, b0404: bool, b0405: bool, b0406: bool, b0407: bool, b0408: bool, b0409: bool, b0410: bool, b0411: bool, b0412: bool, b0413: bool, b0414: bool, b0415: bool, b0416: bool, b0417: bool, b0418: bool, b0419: bool, b0420: bool, b0421: bool, b0422: bool, b0423: bool, b0424: bool, b0425: bool, b0426: bool, b0427: bool, b0428: bool, b0429: bool, b0430: bool, b0431: bool, b0432: bool, b0433: bool, b0434: bool, b0435: bool, b0436: bool, b0437: bool, b0438: bool, b0439: bool, b0440: bool, b0441: bool, b0442: bool, b0443: bool, b0444: bool, b0445: bool, b0446: bool, b0447: bool, b0448: bool, b0449: bool, b0450: bool, b0451: bool, b0452: bool, b0453: bool, b0454: bool, b0455: bool, b0456: bool, b0457: bool, b0458: bool, b0459: bool, b0460: bool, b0461: bool, b0462: bool, b0463: bool, b0464: bool, b0465: bool) : bool
{
  0 + (if b0000 then 0 else 186000) + (if b0001 then 0 else 186000) + (if b0002 then 0 else 186000) + (if b0003 then 0 else 186000) + (if b0004 then 0 else 186000) + (if b0005 then 0 else 186000) + (if b0006 then 0 else 186000) + (if b0007 then 0 else 186000) + (if b0008 then 0 else 186000) + (if b0009 then 0 else 186000) + (if b0010 then 0 else 186000) + (if b0011 then 0 else 186000) + (if b0012 then 0 else 186000) + (if b0013 then 0 else 186000) + (if b0014 then 0 else 186000) + (if b0015 then 0 else 186000) + (if b0016 then 0 else 186000) + (if b0017 then 0 else 186000) + (if b0018 then 0 else 186000) + (if b0019 then 0 else 186000) + (if b0020 then 0 else 186000) + (if b0021 then 0 else 186000) + (if b0022 then 0 else 186000) + (if b0023 then 0 else 186000) + (if b0024 then 0 else 186000) + (if b0025 then 0 else 186000) + (if b0026 then 0 else 186000) + (if b0027 then 0 else 186000) + (if b0028 then 0 else 186000) + (if b0029 then 0 else 186000) + (if b0030 then 0 else 186000) + (if b0031 then 0 else 186000) + (if b0032 then 0 else 186000) + (if b0033 then 0 else 186000) + (if b0034 then 0 else 186000) + (if b0035 then 0 else 186000) + (if b0036 then 0 else 186000) + (if b0037 then 0 else 186000) + (if b0038 then 0 else 186000) + (if b0039 then 0 else 186000) + (if b0040 then 0 else 186000) + (if b0041 then 0 else 186000) + (if b0042 then 0 else 186000) + (if b0043 then 0 else 186000) + (if b0044 then 0 else 186000) + (if b0045 then 0 else 186000) + (if b0046 then 0 else 186000) + (if b0047 then 0 else 186000) + (if b0048 then 0 else 186000) + (if b0049 then 0 else 186000) + (if b0050 then 0 else 186000) + (if b0051 then 0 else 186000) + (if b0052 then 0 else 186000) + (if b0053 then 0 else 186000) + (if b0054 then 0 else 186000) + (if b0055 then 0 else 186000) + (if b0056 then 0 else 186000) + (if b0057 then 0 else 186000) + (if b0058 then 0 else 186000) + (if b0059 then 0 else 186000) + (if b0060 then 0 else 186000) + (if b0061 then 0 else 186000) + (if b0062 then 0 else 186000) + (if b0063 then 0 else 186000) + (if b0064 then 0 else 186000) + (if b0065 then 0 else 186000) + (if b0066 then 0 else 186000) + (if b0067 then 0 else 186000) + (if b0068 then 0 else 186000) + (if b0069 then 0 else 186000) + (if b0070 then 0 else 186000) + (if b0071 then 0 else 186000) + (if b0072 then 0 else 186000) + (if b0073 then 0 else 186000) + (if b0074 then 0 else 186000) + (if b0075 then 0 else 186000) + (if b0076 then 0 else 186000) + (if b0077 then 0 else 186000) + (if b0078 then 0 else 186000) + (if b0079 then 0 else 186000) + (if b0080 then 0 else 186000) + (if b0081 then 0 else 186000) + (if b0082 then 0 else 186000) + (if b0083 then 0 else 186000) + (if b0084 then 0 else 186000) + (if b0085 then 0 else 186000) + (if b0086 then 0 else 186000) + (if b0087 then 0 else 186000) + (if b0088 then 0 else 186000) + (if b0089 then 0 else 186000) + (if b0090 then 0 else 186000) + (if b0091 then 0 else 186000) + (if b0092 then 0 else 186000) + (if b0093 then 0 else 186000) + (if b0094 then 0 else 186000) + (if b0095 then 0 else 186000) + (if b0096 then 0 else 186000) + (if b0097 then 0 else 186000) + (if b0098 then 0 else 186000) + (if b0099 then 0 else 186000) + (if b0100 then 0 else 186000) + (if b0101 then 0 else 186000) + (if b0102 then 0 else 186000) + (if b0103 then 0 else 186000) + (if b0104 then 0 else 186000) + (if b0105 then 0 else 186000) + (if b0106 then 0 else 186000) + (if b0107 then 0 else 186000) + (if b0108 then 0 else 186000) + (if b0109 then 0 else 186000) + (if b0110 then 0 else 186000) + (if b0111 then 0 else 186000) + (if b0112 then 0 else 186000) + (if b0113 then 0 else 186000) + (if b0114 then 0 else 186000) + (if b0115 then 0 else 186000) + (if b0116 then 0 else 186000) + (if b0118 then 0 else 186000) + (if b0120 then 0 else 186000) + (if b0121 then 0 else 186000) + (if b0122 then 0 else 186000) + (if b0123 then 0 else 186000) + (if b0124 then 0 else 186000) + (if b0125 then 0 else 186000) + (if b0126 then 0 else 186000) + (if b0127 then 0 else 186000) + (if b0128 then 0 else 186000) + (if b0129 then 0 else 186000) + (if b0130 then 0 else 186000) + (if b0131 then 0 else 186000) + (if b0132 then 0 else 186000) + (if b0134 then 0 else 186000) + (if b0136 then 0 else 186000) + (if b0137 then 0 else 186000) + (if b0138 then 0 else 186000) + (if b0139 then 0 else 186000) + (if b0140 then 0 else 186000) + (if b0141 then 0 else 186000) + (if b0142 then 0 else 186000) + (if b0143 then 0 else 186000) + (if b0144 then 0 else 186000) + (if b0145 then 0 else 186000) + (if b0147 then 0 else 186000) + (if b0148 then 0 else 186000) + (if b0149 then 0 else 186000) + (if b0150 then 0 else 186000) + (if b0151 then 0 else 186000) + (if b0154 then 0 else 186000) + (if b0156 then 0 else 186000) + (if b0157 then 0 else 186000) + (if b0158 then 0 else 186000) + (if b0159 then 0 else 186000) + (if b0160 then 0 else 186000) + (if b0161 then 0 else 186000) + (if b0162 then 0 else 186000) + (if b0163 then 0 else 186000) + (if b0164 then 0 else 186000) + (if b0167 then 0 else 186000) + (if b0169 then 0 else 186000) + (if b0172 then 0 else 186000) + (if b0174 then 0 else 186000) + (if b0175 then 0 else 186000) + (if b0176 then 0 else 186000) + (if b0177 then 0 else 186000) + (if b0178 then 0 else 186000) + (if b0180 then 0 else 186000) + (if b0181 then 0 else 186000) + (if b0182 then 0 else 186000) + (if b0183 then 0 else 186000) + (if b0184 then 0 else 186000) + (if b0185 then 0 else 186000) + (if b0186 then 0 else 186000) + (if b0187 then 0 else 186000) + (if b0188 then 0 else 186000) + (if b0189 then 0 else 186000) + (if b0190 then 0 else 186000) + (if b0191 then 0 else 186000) + (if b0192 then 0 else 186000) + (if b0193 then 0 else 186000) + (if b0195 then 0 else 186000) + (if b0197 then 0 else 186000) + (if b0198 then 0 else 186000) + (if b0199 then 0 else 186000) + (if b0200 then 0 else 186000) + (if b0201 then 0 else 186000) + (if b0202 then 0 else 186000) + (if b0203 then 0 else 186000) + (if b0205 then 0 else 186000) + (if b0206 then 0 else 186000) + (if b0207 then 0 else 186000) + (if b0208 then 0 else 186000) + (if b0210 then 0 else 186000) + (if b0212 then 0 else 186000) + (if b0214 then 0 else 186000) + (if b0215 then 0 else 186000) + (if b0216 then 0 else 186000) + (if b0217 then 0 else 186000) + (if b0218 then 0 else 186000) + (if b0219 then 0 else 186000) + (if b0220 then 0 else 186000) + (if b0222 then 0 else 186000) + (if b0223 then 0 else 186000) + (if b0224 then 0 else 186000) + (if b0225 then 0 else 186000) + (if b0227 then 0 else 186000) + (if b0228 then 0 else 186000) + (if b0229 then 0 else 186000) + (if b0230 then 0 else 186000) + (if b0232 then 0 else 186000) + (if b0235 then 0 else 186000) + (if b0237 then 0 else 186000) + (if b0238 then 0 else 186000) + (if b0239 then 0 else 186000) + (if b0240 then 0 else 186000) + (if b0241 then 0 else 186000) + (if b0242 then 0 else 186000) + (if b0243 then 0 else 186000) + (if b0244 then 0 else 186000) + (if b0245 then 0 else 186000) + (if b0246 then 0 else 186000) + (if b0247 then 0 else 186000) + (if b0248 then 0 else 186000) + (if b0249 then 0 else 186000) + (if b0250 then 0 else 186000) + (if b0251 then 0 else 186000) + (if b0252 then 0 else 186000) + (if b0253 then 0 else 186000) + (if b0254 then 0 else 186000) + (if b0255 then 0 else 186000) + (if b0256 then 0 else 186000) + (if b0257 then 0 else 186000) + (if b0258 then 0 else 186000) + (if b0259 then 0 else 186000) + (if b0260 then 0 else 186000) + (if b0261 then 0 else 186000) + (if b0262 then 0 else 186000) + (if b0263 then 0 else 186000) + (if b0264 then 0 else 186000) + (if b0265 then 0 else 186000) + (if b0266 then 0 else 186000) + (if b0267 then 0 else 186000) + (if b0268 then 0 else 186000) + (if b0269 then 0 else 186000) + (if b0270 then 0 else 186000) + (if b0271 then 0 else 186000) + (if b0272 then 0 else 186000) + (if b0273 then 0 else 186000) + (if b0274 then 0 else 186000) + (if b0275 then 0 else 186000) + (if b0276 then 0 else 186000) + (if b0277 then 0 else 186000) + (if b0278 then 0 else 186000) + (if b0279 then 0 else 186000) + (if b0280 then 0 else 186000) + (if b0281 then 0 else 186000) + (if b0282 then 0 else 186000) + (if b0283 then 0 else 186000) + (if b0284 then 0 else 186000) + (if b0285 then 0 else 186000) + (if b0286 then 0 else 186000) + (if b0287 then 0 else 186000) + (if b0288 then 0 else 186000) + (if b0289 then 0 else 186000) + (if b0290 then 0 else 186000) + (if b0291 then 0 else 186000) + (if b0292 then 0 else 186000) + (if b0293 then 0 else 186000) + (if b0294 then 0 else 186000) + (if b0295 then 0 else 186000) + (if b0296 then 0 else 186000) + (if b0297 then 0 else 186000) + (if b0298 then 0 else 186000) + (if b0299 then 0 else 186000) + (if b0300 then 0 else 186000) + (if b0301 then 0 else 186000) + (if b0302 then 0 else 186000) + (if b0303 then 0 else 186000) + (if b0304 then 0 else 186000) + (if b0305 then 0 else 186000) + (if b0306 then 0 else 186000) + (if b0307 then 0 else 186000) + (if b0308 then 0 else 186000) + (if b0309 then 0 else 186000) + (if b0310 then 0 else 186000) + (if b0311 then 0 else 186000) + (if b0312 then 0 else 186000) + (if b0313 then 0 else 186000) + (if b0314 then 0 else 186000) + (if b0315 then 0 else 186000) + (if b0316 then 0 else 186000) + (if b0317 then 0 else 186000) + (if b0318 then 0 else 186000) + (if b0319 then 0 else 186000) + (if b0320 then 0 else 186000) + (if b0321 then 0 else 186000) + (if b0322 then 0 else 186000) + (if b0323 then 0 else 186000) + (if b0324 then 0 else 186000) + (if b0325 then 0 else 186000) + (if b0326 then 0 else 186000) + (if b0327 then 0 else 186000) + (if b0328 then 0 else 186000) + (if b0329 then 0 else 186000) + (if b0330 then 0 else 186000) + (if b0331 then 0 else 186000) + (if b0332 then 0 else 186000) + (if b0333 then 0 else 186000) + (if b0334 then 0 else 186000) + (if b0335 then 0 else 186000) + (if b0336 then 0 else 186000) + (if b0337 then 0 else 186000) + (if b0338 then 0 else 186000) + (if b0339 then 0 else 186000) + (if b0340 then 0 else 186000) + (if b0341 then 0 else 186000) + (if b0376 then 0 else 186000) + (if b0378 then 0 else 186000) + (if b0379 then 0 else 186000) + (if b0380 then 0 else 186000) + (if b0381 then 0 else 186000) + (if b0382 then 0 else 186000) + (if b0383 then 0 else 186000) + (if b0384 then 0 else 186000) + (if b0385 then 0 else 186000) + (if b0386 then 0 else 186000) + (if b0387 then 0 else 186000) + (if b0388 then 0 else 186000) + (if b0389 then 0 else 186000) + (if b0390 then 0 else 186000) + (if b0422 then 0 else 186000) + (if b0424 then 0 else 186000) + (if b0425 then 0 else 186000) + (if b0426 then 0 else 186000) + (if b0427 then 0 else 186000) + (if b0428 then 0 else 186000) + (if b0429 then 0 else 186000) + (if b0430 then 0 else 186000) + (if b0431 then 0 else 186000) + (if b0432 then 0 else 186000) + (if b0433 then 0 else 186000) + (if b0435 then 0 else 186000) + (if b0436 then 0 else 186000) + (if b0437 then 0 else 186000) + (if b0438 then 0 else 186000) + (if b0439 then 0 else 186000) + (if b0440 then 0 else 186000) + (if b0441 then 0 else 186000) + (if b0442 then 0 else 186000) + (if b0443 then 0 else 186000) + (if b0444 then 0 else 186000) + (if b0445 then 0 else 186000) + (if b0446 then 0 else 186000) + (if b0447 then 0 else 186000) + (if b0448 then 0 else 186000) + (if b0449 then 0 else 186000) + (if b0450 then 0 else 186000) + (if b0451 then 0 else 186000) + (if b0452 then 0 else 186000) + (if b0453 then 0 else 186000) + (if b0454 then 0 else 186000) + (if b0455 then 0 else 186000) + (if b0456 then 0 else 186000) + (if b0457 then 0 else 186000) + (if b0458 then 0 else 186000) + (if b0459 then 0 else 186000) + (if b0460 then 0 else 186000) + (if b0461 then 0 else 186000) + (if b0462 then 0 else 186000) + (if b0463 then 0 else 186000) + (if b0464 then 0 else 186000) + (if b0465 then 0 else 186000) < 441
}
Prover Time taken = 6.61343
Added Horn clause: 6 && 57 && 0 && 0 && 0 && 0 && 58 => 59
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/linear-algebra/kernels/3mm/kernel3.bpl.ice2.bpl
Total learner time was 00:00:00.1356590
Verifying $kernel3: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool, b0228: bool, b0229: bool, b0230: bool, b0231: bool, b0232: bool, b0233: bool, b0234: bool, b0235: bool, b0236: bool, b0237: bool, b0238: bool, b0239: bool, b0240: bool, b0241: bool, b0242: bool, b0243: bool, b0244: bool, b0245: bool, b0246: bool, b0247: bool, b0248: bool, b0249: bool, b0250: bool, b0251: bool, b0252: bool, b0253: bool, b0254: bool, b0255: bool, b0256: bool, b0257: bool, b0258: bool, b0259: bool, b0260: bool, b0261: bool, b0262: bool, b0263: bool, b0264: bool, b0265: bool, b0266: bool, b0267: bool, b0268: bool, b0269: bool, b0270: bool, b0271: bool, b0272: bool, b0273: bool, b0274: bool, b0275: bool, b0276: bool, b0277: bool, b0278: bool, b0279: bool, b0280: bool, b0281: bool, b0282: bool, b0283: bool, b0284: bool, b0285: bool, b0286: bool, b0287: bool, b0288: bool, b0289: bool, b0290: bool, b0291: bool, b0292: bool, b0293: bool, b0294: bool, b0295: bool, b0296: bool, b0297: bool, b0298: bool, b0299: bool, b0300: bool, b0301: bool, b0302: bool, b0303: bool, b0304: bool, b0305: bool, b0306: bool, b0307: bool, b0308: bool, b0309: bool, b0310: bool, b0311: bool, b0312: bool, b0313: bool, b0314: bool, b0315: bool, b0316: bool, b0317: bool, b0318: bool, b0319: bool, b0320: bool, b0321: bool, b0322: bool, b0323: bool, b0324: bool, b0325: bool, b0326: bool, b0327: bool, b0328: bool, b0329: bool, b0330: bool, b0331: bool, b0332: bool, b0333: bool, b0334: bool, b0335: bool, b0336: bool, b0337: bool, b0338: bool, b0339: bool, b0340: bool, b0341: bool, b0342: bool, b0343: bool, b0344: bool, b0345: bool, b0346: bool, b0347: bool, b0348: bool, b0349: bool, b0350: bool, b0351: bool, b0352: bool, b0353: bool, b0354: bool, b0355: bool, b0356: bool, b0357: bool, b0358: bool, b0359: bool, b0360: bool, b0361: bool, b0362: bool, b0363: bool, b0364: bool, b0365: bool, b0366: bool, b0367: bool, b0368: bool, b0369: bool, b0370: bool, b0371: bool, b0372: bool, b0373: bool, b0374: bool, b0375: bool, b0376: bool, b0377: bool, b0378: bool, b0379: bool, b0380: bool, b0381: bool, b0382: bool, b0383: bool, b0384: bool, b0385: bool, b0386: bool, b0387: bool, b0388: bool, b0389: bool, b0390: bool, b0391: bool, b0392: bool, b0393: bool, b0394: bool, b0395: bool, b0396: bool, b0397: bool, b0398: bool, b0399: bool, b0400: bool, b0401: bool, b0402: bool, b0403: bool, b0404: bool, b0405: bool, b0406: bool, b0407: bool, b0408: bool, b0409: bool, b0410: bool, b0411: bool, b0412: bool, b0413: bool, b0414: bool, b0415: bool, b0416: bool, b0417: bool, b0418: bool, b0419: bool, b0420: bool, b0421: bool, b0422: bool, b0423: bool, b0424: bool, b0425: bool, b0426: bool, b0427: bool, b0428: bool, b0429: bool, b0430: bool, b0431: bool, b0432: bool, b0433: bool, b0434: bool, b0435: bool, b0436: bool, b0437: bool, b0438: bool, b0439: bool, b0440: bool, b0441: bool, b0442: bool, b0443: bool, b0444: bool, b0445: bool, b0446: bool, b0447: bool, b0448: bool, b0449: bool, b0450: bool, b0451: bool, b0452: bool, b0453: bool, b0454: bool, b0455: bool, b0456: bool, b0457: bool, b0458: bool, b0459: bool, b0460: bool, b0461: bool, b0462: bool, b0463: bool, b0464: bool, b0465: bool) : bool
{
  0 + (if b0000 then 0 else 186000) + (if b0001 then 0 else 186000) + (if b0002 then 0 else 186000) + (if b0003 then 0 else 186000) + (if b0004 then 0 else 186000) + (if b0005 then 0 else 186000) + (if b0006 then 0 else 186000) + (if b0007 then 0 else 186000) + (if b0008 then 0 else 186000) + (if b0009 then 0 else 186000) + (if b0010 then 0 else 186000) + (if b0011 then 0 else 186000) + (if b0012 then 0 else 186000) + (if b0013 then 0 else 186000) + (if b0014 then 0 else 186000) + (if b0015 then 0 else 186000) + (if b0016 then 0 else 186000) + (if b0017 then 0 else 186000) + (if b0018 then 0 else 186000) + (if b0019 then 0 else 186000) + (if b0020 then 0 else 186000) + (if b0021 then 0 else 186000) + (if b0022 then 0 else 186000) + (if b0023 then 0 else 186000) + (if b0024 then 0 else 186000) + (if b0025 then 0 else 186000) + (if b0026 then 0 else 186000) + (if b0027 then 0 else 186000) + (if b0028 then 0 else 186000) + (if b0029 then 0 else 186000) + (if b0030 then 0 else 186000) + (if b0031 then 0 else 186000) + (if b0032 then 0 else 186000) + (if b0033 then 0 else 186000) + (if b0034 then 0 else 186000) + (if b0035 then 0 else 186000) + (if b0036 then 0 else 186000) + (if b0037 then 0 else 186000) + (if b0038 then 0 else 186000) + (if b0039 then 0 else 186000) + (if b0040 then 0 else 186000) + (if b0041 then 0 else 186000) + (if b0042 then 0 else 186000) + (if b0043 then 0 else 186000) + (if b0044 then 0 else 186000) + (if b0045 then 0 else 186000) + (if b0046 then 0 else 186000) + (if b0047 then 0 else 186000) + (if b0048 then 0 else 186000) + (if b0049 then 0 else 186000) + (if b0050 then 0 else 186000) + (if b0051 then 0 else 186000) + (if b0052 then 0 else 186000) + (if b0053 then 0 else 186000) + (if b0054 then 0 else 186000) + (if b0055 then 0 else 186000) + (if b0056 then 0 else 186000) + (if b0057 then 0 else 186000) + (if b0058 then 0 else 186000) + (if b0059 then 0 else 186000) + (if b0060 then 0 else 186000) + (if b0061 then 0 else 186000) + (if b0062 then 0 else 186000) + (if b0063 then 0 else 186000) + (if b0064 then 0 else 186000) + (if b0065 then 0 else 186000) + (if b0066 then 0 else 186000) + (if b0067 then 0 else 186000) + (if b0068 then 0 else 186000) + (if b0069 then 0 else 186000) + (if b0070 then 0 else 186000) + (if b0071 then 0 else 186000) + (if b0072 then 0 else 186000) + (if b0073 then 0 else 186000) + (if b0074 then 0 else 186000) + (if b0075 then 0 else 186000) + (if b0076 then 0 else 186000) + (if b0077 then 0 else 186000) + (if b0078 then 0 else 186000) + (if b0079 then 0 else 186000) + (if b0080 then 0 else 186000) + (if b0081 then 0 else 186000) + (if b0082 then 0 else 186000) + (if b0083 then 0 else 186000) + (if b0084 then 0 else 186000) + (if b0085 then 0 else 186000) + (if b0086 then 0 else 186000) + (if b0087 then 0 else 186000) + (if b0088 then 0 else 186000) + (if b0089 then 0 else 186000) + (if b0090 then 0 else 186000) + (if b0091 then 0 else 186000) + (if b0092 then 0 else 186000) + (if b0093 then 0 else 186000) + (if b0094 then 0 else 186000) + (if b0095 then 0 else 186000) + (if b0096 then 0 else 186000) + (if b0097 then 0 else 186000) + (if b0098 then 0 else 186000) + (if b0099 then 0 else 186000) + (if b0100 then 0 else 186000) + (if b0101 then 0 else 186000) + (if b0102 then 0 else 186000) + (if b0103 then 0 else 186000) + (if b0104 then 0 else 186000) + (if b0105 then 0 else 186000) + (if b0106 then 0 else 186000) + (if b0107 then 0 else 186000) + (if b0108 then 0 else 186000) + (if b0109 then 0 else 186000) + (if b0110 then 0 else 186000) + (if b0111 then 0 else 186000) + (if b0112 then 0 else 186000) + (if b0113 then 0 else 186000) + (if b0114 then 0 else 186000) + (if b0115 then 0 else 186000) + (if b0116 then 0 else 186000) + (if b0118 then 0 else 186000) + (if b0120 then 0 else 186000) + (if b0121 then 0 else 186000) + (if b0122 then 0 else 186000) + (if b0123 then 0 else 186000) + (if b0124 then 0 else 186000) + (if b0125 then 0 else 186000) + (if b0126 then 0 else 186000) + (if b0127 then 0 else 186000) + (if b0128 then 0 else 186000) + (if b0129 then 0 else 186000) + (if b0130 then 0 else 186000) + (if b0131 then 0 else 186000) + (if b0132 then 0 else 186000) + (if b0134 then 0 else 186000) + (if b0136 then 0 else 186000) + (if b0137 then 0 else 186000) + (if b0138 then 0 else 186000) + (if b0139 then 0 else 186000) + (if b0140 then 0 else 186000) + (if b0141 then 0 else 186000) + (if b0142 then 0 else 186000) + (if b0143 then 0 else 186000) + (if b0144 then 0 else 186000) + (if b0145 then 0 else 186000) + (if b0147 then 0 else 186000) + (if b0148 then 0 else 186000) + (if b0149 then 0 else 186000) + (if b0150 then 0 else 186000) + (if b0151 then 0 else 186000) + (if b0154 then 0 else 186000) + (if b0156 then 0 else 186000) + (if b0157 then 0 else 186000) + (if b0158 then 0 else 186000) + (if b0159 then 0 else 186000) + (if b0160 then 0 else 186000) + (if b0161 then 0 else 186000) + (if b0162 then 0 else 186000) + (if b0163 then 0 else 186000) + (if b0164 then 0 else 186000) + (if b0167 then 0 else 186000) + (if b0169 then 0 else 186000) + (if b0172 then 0 else 186000) + (if b0174 then 0 else 186000) + (if b0175 then 0 else 186000) + (if b0176 then 0 else 186000) + (if b0177 then 0 else 186000) + (if b0178 then 0 else 186000) + (if b0180 then 0 else 186000) + (if b0181 then 0 else 186000) + (if b0182 then 0 else 186000) + (if b0183 then 0 else 186000) + (if b0184 then 0 else 186000) + (if b0185 then 0 else 186000) + (if b0186 then 0 else 186000) + (if b0187 then 0 else 186000) + (if b0188 then 0 else 186000) + (if b0189 then 0 else 186000) + (if b0190 then 0 else 186000) + (if b0191 then 0 else 186000) + (if b0192 then 0 else 186000) + (if b0193 then 0 else 186000) + (if b0195 then 0 else 186000) + (if b0197 then 0 else 186000) + (if b0198 then 0 else 186000) + (if b0199 then 0 else 186000) + (if b0200 then 0 else 186000) + (if b0201 then 0 else 186000) + (if b0203 then 0 else 186000) + (if b0205 then 0 else 186000) + (if b0206 then 0 else 186000) + (if b0207 then 0 else 186000) + (if b0208 then 0 else 186000) + (if b0210 then 0 else 186000) + (if b0212 then 0 else 186000) + (if b0214 then 0 else 186000) + (if b0215 then 0 else 186000) + (if b0216 then 0 else 186000) + (if b0217 then 0 else 186000) + (if b0218 then 0 else 186000) + (if b0219 then 0 else 186000) + (if b0220 then 0 else 186000) + (if b0222 then 0 else 186000) + (if b0223 then 0 else 186000) + (if b0224 then 0 else 186000) + (if b0225 then 0 else 186000) + (if b0227 then 0 else 186000) + (if b0228 then 0 else 186000) + (if b0229 then 0 else 186000) + (if b0230 then 0 else 186000) + (if b0232 then 0 else 186000) + (if b0235 then 0 else 186000) + (if b0237 then 0 else 186000) + (if b0238 then 0 else 186000) + (if b0239 then 0 else 186000) + (if b0240 then 0 else 186000) + (if b0241 then 0 else 186000) + (if b0242 then 0 else 186000) + (if b0243 then 0 else 186000) + (if b0244 then 0 else 186000) + (if b0245 then 0 else 186000) + (if b0246 then 0 else 186000) + (if b0247 then 0 else 186000) + (if b0248 then 0 else 186000) + (if b0249 then 0 else 186000) + (if b0250 then 0 else 186000) + (if b0251 then 0 else 186000) + (if b0252 then 0 else 186000) + (if b0253 then 0 else 186000) + (if b0254 then 0 else 186000) + (if b0255 then 0 else 186000) + (if b0256 then 0 else 186000) + (if b0257 then 0 else 186000) + (if b0258 then 0 else 186000) + (if b0259 then 0 else 186000) + (if b0260 then 0 else 186000) + (if b0261 then 0 else 186000) + (if b0262 then 0 else 186000) + (if b0263 then 0 else 186000) + (if b0264 then 0 else 186000) + (if b0265 then 0 else 186000) + (if b0266 then 0 else 186000) + (if b0267 then 0 else 186000) + (if b0268 then 0 else 186000) + (if b0269 then 0 else 186000) + (if b0270 then 0 else 186000) + (if b0271 then 0 else 186000) + (if b0272 then 0 else 186000) + (if b0273 then 0 else 186000) + (if b0274 then 0 else 186000) + (if b0275 then 0 else 186000) + (if b0276 then 0 else 186000) + (if b0277 then 0 else 186000) + (if b0278 then 0 else 186000) + (if b0279 then 0 else 186000) + (if b0280 then 0 else 186000) + (if b0281 then 0 else 186000) + (if b0282 then 0 else 186000) + (if b0283 then 0 else 186000) + (if b0284 then 0 else 186000) + (if b0285 then 0 else 186000) + (if b0286 then 0 else 186000) + (if b0287 then 0 else 186000) + (if b0288 then 0 else 186000) + (if b0289 then 0 else 186000) + (if b0290 then 0 else 186000) + (if b0291 then 0 else 186000) + (if b0292 then 0 else 186000) + (if b0293 then 0 else 186000) + (if b0294 then 0 else 186000) + (if b0295 then 0 else 186000) + (if b0296 then 0 else 186000) + (if b0297 then 0 else 186000) + (if b0298 then 0 else 186000) + (if b0299 then 0 else 186000) + (if b0300 then 0 else 186000) + (if b0301 then 0 else 186000) + (if b0302 then 0 else 186000) + (if b0303 then 0 else 186000) + (if b0304 then 0 else 186000) + (if b0305 then 0 else 186000) + (if b0306 then 0 else 186000) + (if b0307 then 0 else 186000) + (if b0308 then 0 else 186000) + (if b0309 then 0 else 186000) + (if b0310 then 0 else 186000) + (if b0311 then 0 else 186000) + (if b0312 then 0 else 186000) + (if b0313 then 0 else 186000) + (if b0314 then 0 else 186000) + (if b0315 then 0 else 186000) + (if b0316 then 0 else 186000) + (if b0317 then 0 else 186000) + (if b0318 then 0 else 186000) + (if b0319 then 0 else 186000) + (if b0320 then 0 else 186000) + (if b0321 then 0 else 186000) + (if b0322 then 0 else 186000) + (if b0323 then 0 else 186000) + (if b0324 then 0 else 186000) + (if b0325 then 0 else 186000) + (if b0326 then 0 else 186000) + (if b0327 then 0 else 186000) + (if b0328 then 0 else 186000) + (if b0329 then 0 else 186000) + (if b0330 then 0 else 186000) + (if b0331 then 0 else 186000) + (if b0332 then 0 else 186000) + (if b0333 then 0 else 186000) + (if b0334 then 0 else 186000) + (if b0335 then 0 else 186000) + (if b0336 then 0 else 186000) + (if b0337 then 0 else 186000) + (if b0338 then 0 else 186000) + (if b0339 then 0 else 186000) + (if b0340 then 0 else 186000) + (if b0341 then 0 else 186000) + (if b0376 then 0 else 186000) + (if b0378 then 0 else 186000) + (if b0379 then 0 else 186000) + (if b0380 then 0 else 186000) + (if b0381 then 0 else 186000) + (if b0382 then 0 else 186000) + (if b0383 then 0 else 186000) + (if b0384 then 0 else 186000) + (if b0385 then 0 else 186000) + (if b0386 then 0 else 186000) + (if b0387 then 0 else 186000) + (if b0388 then 0 else 186000) + (if b0389 then 0 else 186000) + (if b0390 then 0 else 186000) + (if b0422 then 0 else 186000) + (if b0424 then 0 else 186000) + (if b0425 then 0 else 186000) + (if b0426 then 0 else 186000) + (if b0427 then 0 else 186000) + (if b0428 then 0 else 186000) + (if b0429 then 0 else 186000) + (if b0430 then 0 else 186000) + (if b0431 then 0 else 186000) + (if b0432 then 0 else 186000) + (if b0433 then 0 else 186000) + (if b0435 then 0 else 186000) + (if b0436 then 0 else 186000) + (if b0437 then 0 else 186000) + (if b0438 then 0 else 186000) + (if b0439 then 0 else 186000) + (if b0440 then 0 else 186000) + (if b0441 then 0 else 186000) + (if b0442 then 0 else 186000) + (if b0443 then 0 else 186000) + (if b0444 then 0 else 186000) + (if b0445 then 0 else 186000) + (if b0446 then 0 else 186000) + (if b0447 then 0 else 186000) + (if b0448 then 0 else 186000) + (if b0449 then 0 else 186000) + (if b0450 then 0 else 186000) + (if b0451 then 0 else 186000) + (if b0452 then 0 else 186000) + (if b0453 then 0 else 186000) + (if b0454 then 0 else 186000) + (if b0455 then 0 else 186000) + (if b0456 then 0 else 186000) + (if b0457 then 0 else 186000) + (if b0458 then 0 else 186000) + (if b0459 then 0 else 186000) + (if b0460 then 0 else 186000) + (if b0461 then 0 else 186000) + (if b0462 then 0 else 186000) + (if b0463 then 0 else 186000) + (if b0464 then 0 else 186000) + (if b0465 then 0 else 186000) < 441
}
Prover Time taken = 8.870067
Added Horn clause: 6 && 57 && 0 && 0 && 0 && 0 && 58 && 0 && 59 => 60
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/linear-algebra/kernels/3mm/kernel3.bpl.ice2.bpl
Total learner time was 00:00:00.1365100
Verifying $kernel3: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool, b0228: bool, b0229: bool, b0230: bool, b0231: bool, b0232: bool, b0233: bool, b0234: bool, b0235: bool, b0236: bool, b0237: bool, b0238: bool, b0239: bool, b0240: bool, b0241: bool, b0242: bool, b0243: bool, b0244: bool, b0245: bool, b0246: bool, b0247: bool, b0248: bool, b0249: bool, b0250: bool, b0251: bool, b0252: bool, b0253: bool, b0254: bool, b0255: bool, b0256: bool, b0257: bool, b0258: bool, b0259: bool, b0260: bool, b0261: bool, b0262: bool, b0263: bool, b0264: bool, b0265: bool, b0266: bool, b0267: bool, b0268: bool, b0269: bool, b0270: bool, b0271: bool, b0272: bool, b0273: bool, b0274: bool, b0275: bool, b0276: bool, b0277: bool, b0278: bool, b0279: bool, b0280: bool, b0281: bool, b0282: bool, b0283: bool, b0284: bool, b0285: bool, b0286: bool, b0287: bool, b0288: bool, b0289: bool, b0290: bool, b0291: bool, b0292: bool, b0293: bool, b0294: bool, b0295: bool, b0296: bool, b0297: bool, b0298: bool, b0299: bool, b0300: bool, b0301: bool, b0302: bool, b0303: bool, b0304: bool, b0305: bool, b0306: bool, b0307: bool, b0308: bool, b0309: bool, b0310: bool, b0311: bool, b0312: bool, b0313: bool, b0314: bool, b0315: bool, b0316: bool, b0317: bool, b0318: bool, b0319: bool, b0320: bool, b0321: bool, b0322: bool, b0323: bool, b0324: bool, b0325: bool, b0326: bool, b0327: bool, b0328: bool, b0329: bool, b0330: bool, b0331: bool, b0332: bool, b0333: bool, b0334: bool, b0335: bool, b0336: bool, b0337: bool, b0338: bool, b0339: bool, b0340: bool, b0341: bool, b0342: bool, b0343: bool, b0344: bool, b0345: bool, b0346: bool, b0347: bool, b0348: bool, b0349: bool, b0350: bool, b0351: bool, b0352: bool, b0353: bool, b0354: bool, b0355: bool, b0356: bool, b0357: bool, b0358: bool, b0359: bool, b0360: bool, b0361: bool, b0362: bool, b0363: bool, b0364: bool, b0365: bool, b0366: bool, b0367: bool, b0368: bool, b0369: bool, b0370: bool, b0371: bool, b0372: bool, b0373: bool, b0374: bool, b0375: bool, b0376: bool, b0377: bool, b0378: bool, b0379: bool, b0380: bool, b0381: bool, b0382: bool, b0383: bool, b0384: bool, b0385: bool, b0386: bool, b0387: bool, b0388: bool, b0389: bool, b0390: bool, b0391: bool, b0392: bool, b0393: bool, b0394: bool, b0395: bool, b0396: bool, b0397: bool, b0398: bool, b0399: bool, b0400: bool, b0401: bool, b0402: bool, b0403: bool, b0404: bool, b0405: bool, b0406: bool, b0407: bool, b0408: bool, b0409: bool, b0410: bool, b0411: bool, b0412: bool, b0413: bool, b0414: bool, b0415: bool, b0416: bool, b0417: bool, b0418: bool, b0419: bool, b0420: bool, b0421: bool, b0422: bool, b0423: bool, b0424: bool, b0425: bool, b0426: bool, b0427: bool, b0428: bool, b0429: bool, b0430: bool, b0431: bool, b0432: bool, b0433: bool, b0434: bool, b0435: bool, b0436: bool, b0437: bool, b0438: bool, b0439: bool, b0440: bool, b0441: bool, b0442: bool, b0443: bool, b0444: bool, b0445: bool, b0446: bool, b0447: bool, b0448: bool, b0449: bool, b0450: bool, b0451: bool, b0452: bool, b0453: bool, b0454: bool, b0455: bool, b0456: bool, b0457: bool, b0458: bool, b0459: bool, b0460: bool, b0461: bool, b0462: bool, b0463: bool, b0464: bool, b0465: bool) : bool
{
  0 + (if b0000 then 0 else 186000) + (if b0001 then 0 else 186000) + (if b0002 then 0 else 186000) + (if b0003 then 0 else 186000) + (if b0004 then 0 else 186000) + (if b0005 then 0 else 186000) + (if b0006 then 0 else 186000) + (if b0007 then 0 else 186000) + (if b0008 then 0 else 186000) + (if b0009 then 0 else 186000) + (if b0010 then 0 else 186000) + (if b0011 then 0 else 186000) + (if b0012 then 0 else 186000) + (if b0013 then 0 else 186000) + (if b0014 then 0 else 186000) + (if b0015 then 0 else 186000) + (if b0016 then 0 else 186000) + (if b0017 then 0 else 186000) + (if b0018 then 0 else 186000) + (if b0019 then 0 else 186000) + (if b0020 then 0 else 186000) + (if b0021 then 0 else 186000) + (if b0022 then 0 else 186000) + (if b0023 then 0 else 186000) + (if b0024 then 0 else 186000) + (if b0025 then 0 else 186000) + (if b0026 then 0 else 186000) + (if b0027 then 0 else 186000) + (if b0028 then 0 else 186000) + (if b0029 then 0 else 186000) + (if b0030 then 0 else 186000) + (if b0031 then 0 else 186000) + (if b0032 then 0 else 186000) + (if b0033 then 0 else 186000) + (if b0034 then 0 else 186000) + (if b0035 then 0 else 186000) + (if b0036 then 0 else 186000) + (if b0037 then 0 else 186000) + (if b0038 then 0 else 186000) + (if b0039 then 0 else 186000) + (if b0040 then 0 else 186000) + (if b0041 then 0 else 186000) + (if b0042 then 0 else 186000) + (if b0043 then 0 else 186000) + (if b0044 then 0 else 186000) + (if b0045 then 0 else 186000) + (if b0046 then 0 else 186000) + (if b0047 then 0 else 186000) + (if b0048 then 0 else 186000) + (if b0049 then 0 else 186000) + (if b0050 then 0 else 186000) + (if b0051 then 0 else 186000) + (if b0052 then 0 else 186000) + (if b0053 then 0 else 186000) + (if b0054 then 0 else 186000) + (if b0055 then 0 else 186000) + (if b0056 then 0 else 186000) + (if b0057 then 0 else 186000) + (if b0058 then 0 else 186000) + (if b0059 then 0 else 186000) + (if b0060 then 0 else 186000) + (if b0061 then 0 else 186000) + (if b0062 then 0 else 186000) + (if b0063 then 0 else 186000) + (if b0064 then 0 else 186000) + (if b0065 then 0 else 186000) + (if b0066 then 0 else 186000) + (if b0067 then 0 else 186000) + (if b0068 then 0 else 186000) + (if b0069 then 0 else 186000) + (if b0070 then 0 else 186000) + (if b0071 then 0 else 186000) + (if b0072 then 0 else 186000) + (if b0073 then 0 else 186000) + (if b0074 then 0 else 186000) + (if b0075 then 0 else 186000) + (if b0076 then 0 else 186000) + (if b0077 then 0 else 186000) + (if b0078 then 0 else 186000) + (if b0079 then 0 else 186000) + (if b0080 then 0 else 186000) + (if b0081 then 0 else 186000) + (if b0082 then 0 else 186000) + (if b0083 then 0 else 186000) + (if b0084 then 0 else 186000) + (if b0085 then 0 else 186000) + (if b0086 then 0 else 186000) + (if b0087 then 0 else 186000) + (if b0088 then 0 else 186000) + (if b0089 then 0 else 186000) + (if b0090 then 0 else 186000) + (if b0091 then 0 else 186000) + (if b0092 then 0 else 186000) + (if b0093 then 0 else 186000) + (if b0094 then 0 else 186000) + (if b0095 then 0 else 186000) + (if b0096 then 0 else 186000) + (if b0097 then 0 else 186000) + (if b0098 then 0 else 186000) + (if b0099 then 0 else 186000) + (if b0100 then 0 else 186000) + (if b0101 then 0 else 186000) + (if b0102 then 0 else 186000) + (if b0103 then 0 else 186000) + (if b0104 then 0 else 186000) + (if b0105 then 0 else 186000) + (if b0106 then 0 else 186000) + (if b0107 then 0 else 186000) + (if b0108 then 0 else 186000) + (if b0109 then 0 else 186000) + (if b0110 then 0 else 186000) + (if b0111 then 0 else 186000) + (if b0112 then 0 else 186000) + (if b0113 then 0 else 186000) + (if b0114 then 0 else 186000) + (if b0115 then 0 else 186000) + (if b0116 then 0 else 186000) + (if b0118 then 0 else 186000) + (if b0120 then 0 else 186000) + (if b0121 then 0 else 186000) + (if b0122 then 0 else 186000) + (if b0123 then 0 else 186000) + (if b0124 then 0 else 186000) + (if b0125 then 0 else 186000) + (if b0126 then 0 else 186000) + (if b0127 then 0 else 186000) + (if b0128 then 0 else 186000) + (if b0129 then 0 else 186000) + (if b0130 then 0 else 186000) + (if b0131 then 0 else 186000) + (if b0132 then 0 else 186000) + (if b0134 then 0 else 186000) + (if b0136 then 0 else 186000) + (if b0137 then 0 else 186000) + (if b0138 then 0 else 186000) + (if b0139 then 0 else 186000) + (if b0140 then 0 else 186000) + (if b0141 then 0 else 186000) + (if b0142 then 0 else 186000) + (if b0143 then 0 else 186000) + (if b0144 then 0 else 186000) + (if b0145 then 0 else 186000) + (if b0147 then 0 else 186000) + (if b0148 then 0 else 186000) + (if b0149 then 0 else 186000) + (if b0150 then 0 else 186000) + (if b0151 then 0 else 186000) + (if b0154 then 0 else 186000) + (if b0156 then 0 else 186000) + (if b0157 then 0 else 186000) + (if b0158 then 0 else 186000) + (if b0159 then 0 else 186000) + (if b0160 then 0 else 186000) + (if b0161 then 0 else 186000) + (if b0162 then 0 else 186000) + (if b0163 then 0 else 186000) + (if b0164 then 0 else 186000) + (if b0167 then 0 else 186000) + (if b0169 then 0 else 186000) + (if b0172 then 0 else 186000) + (if b0174 then 0 else 186000) + (if b0175 then 0 else 186000) + (if b0176 then 0 else 186000) + (if b0177 then 0 else 186000) + (if b0178 then 0 else 186000) + (if b0180 then 0 else 186000) + (if b0181 then 0 else 186000) + (if b0182 then 0 else 186000) + (if b0183 then 0 else 186000) + (if b0184 then 0 else 186000) + (if b0185 then 0 else 186000) + (if b0186 then 0 else 186000) + (if b0187 then 0 else 186000) + (if b0188 then 0 else 186000) + (if b0189 then 0 else 186000) + (if b0190 then 0 else 186000) + (if b0191 then 0 else 186000) + (if b0192 then 0 else 186000) + (if b0193 then 0 else 186000) + (if b0195 then 0 else 186000) + (if b0197 then 0 else 186000) + (if b0198 then 0 else 186000) + (if b0199 then 0 else 186000) + (if b0200 then 0 else 186000) + (if b0201 then 0 else 186000) + (if b0203 then 0 else 186000) + (if b0205 then 0 else 186000) + (if b0206 then 0 else 186000) + (if b0207 then 0 else 186000) + (if b0208 then 0 else 186000) + (if b0210 then 0 else 186000) + (if b0212 then 0 else 186000) + (if b0214 then 0 else 186000) + (if b0215 then 0 else 186000) + (if b0216 then 0 else 186000) + (if b0217 then 0 else 186000) + (if b0218 then 0 else 186000) + (if b0220 then 0 else 186000) + (if b0222 then 0 else 186000) + (if b0223 then 0 else 186000) + (if b0224 then 0 else 186000) + (if b0225 then 0 else 186000) + (if b0227 then 0 else 186000) + (if b0228 then 0 else 186000) + (if b0229 then 0 else 186000) + (if b0230 then 0 else 186000) + (if b0232 then 0 else 186000) + (if b0235 then 0 else 186000) + (if b0237 then 0 else 186000) + (if b0238 then 0 else 186000) + (if b0239 then 0 else 186000) + (if b0240 then 0 else 186000) + (if b0241 then 0 else 186000) + (if b0242 then 0 else 186000) + (if b0243 then 0 else 186000) + (if b0244 then 0 else 186000) + (if b0245 then 0 else 186000) + (if b0246 then 0 else 186000) + (if b0247 then 0 else 186000) + (if b0248 then 0 else 186000) + (if b0249 then 0 else 186000) + (if b0250 then 0 else 186000) + (if b0251 then 0 else 186000) + (if b0252 then 0 else 186000) + (if b0253 then 0 else 186000) + (if b0254 then 0 else 186000) + (if b0255 then 0 else 186000) + (if b0256 then 0 else 186000) + (if b0257 then 0 else 186000) + (if b0258 then 0 else 186000) + (if b0259 then 0 else 186000) + (if b0260 then 0 else 186000) + (if b0261 then 0 else 186000) + (if b0262 then 0 else 186000) + (if b0263 then 0 else 186000) + (if b0264 then 0 else 186000) + (if b0265 then 0 else 186000) + (if b0266 then 0 else 186000) + (if b0267 then 0 else 186000) + (if b0268 then 0 else 186000) + (if b0269 then 0 else 186000) + (if b0270 then 0 else 186000) + (if b0271 then 0 else 186000) + (if b0272 then 0 else 186000) + (if b0273 then 0 else 186000) + (if b0274 then 0 else 186000) + (if b0275 then 0 else 186000) + (if b0276 then 0 else 186000) + (if b0277 then 0 else 186000) + (if b0278 then 0 else 186000) + (if b0279 then 0 else 186000) + (if b0280 then 0 else 186000) + (if b0281 then 0 else 186000) + (if b0282 then 0 else 186000) + (if b0283 then 0 else 186000) + (if b0284 then 0 else 186000) + (if b0285 then 0 else 186000) + (if b0286 then 0 else 186000) + (if b0287 then 0 else 186000) + (if b0288 then 0 else 186000) + (if b0289 then 0 else 186000) + (if b0290 then 0 else 186000) + (if b0291 then 0 else 186000) + (if b0292 then 0 else 186000) + (if b0293 then 0 else 186000) + (if b0294 then 0 else 186000) + (if b0295 then 0 else 186000) + (if b0296 then 0 else 186000) + (if b0297 then 0 else 186000) + (if b0298 then 0 else 186000) + (if b0299 then 0 else 186000) + (if b0300 then 0 else 186000) + (if b0301 then 0 else 186000) + (if b0302 then 0 else 186000) + (if b0303 then 0 else 186000) + (if b0304 then 0 else 186000) + (if b0305 then 0 else 186000) + (if b0306 then 0 else 186000) + (if b0307 then 0 else 186000) + (if b0308 then 0 else 186000) + (if b0309 then 0 else 186000) + (if b0310 then 0 else 186000) + (if b0311 then 0 else 186000) + (if b0312 then 0 else 186000) + (if b0313 then 0 else 186000) + (if b0314 then 0 else 186000) + (if b0315 then 0 else 186000) + (if b0316 then 0 else 186000) + (if b0317 then 0 else 186000) + (if b0318 then 0 else 186000) + (if b0319 then 0 else 186000) + (if b0320 then 0 else 186000) + (if b0321 then 0 else 186000) + (if b0322 then 0 else 186000) + (if b0323 then 0 else 186000) + (if b0324 then 0 else 186000) + (if b0325 then 0 else 186000) + (if b0326 then 0 else 186000) + (if b0327 then 0 else 186000) + (if b0328 then 0 else 186000) + (if b0329 then 0 else 186000) + (if b0330 then 0 else 186000) + (if b0331 then 0 else 186000) + (if b0332 then 0 else 186000) + (if b0333 then 0 else 186000) + (if b0334 then 0 else 186000) + (if b0335 then 0 else 186000) + (if b0336 then 0 else 186000) + (if b0337 then 0 else 186000) + (if b0338 then 0 else 186000) + (if b0339 then 0 else 186000) + (if b0340 then 0 else 186000) + (if b0341 then 0 else 186000) + (if b0376 then 0 else 186000) + (if b0378 then 0 else 186000) + (if b0379 then 0 else 186000) + (if b0380 then 0 else 186000) + (if b0381 then 0 else 186000) + (if b0382 then 0 else 186000) + (if b0383 then 0 else 186000) + (if b0384 then 0 else 186000) + (if b0385 then 0 else 186000) + (if b0386 then 0 else 186000) + (if b0387 then 0 else 186000) + (if b0388 then 0 else 186000) + (if b0389 then 0 else 186000) + (if b0390 then 0 else 186000) + (if b0422 then 0 else 186000) + (if b0424 then 0 else 186000) + (if b0425 then 0 else 186000) + (if b0426 then 0 else 186000) + (if b0427 then 0 else 186000) + (if b0428 then 0 else 186000) + (if b0429 then 0 else 186000) + (if b0430 then 0 else 186000) + (if b0431 then 0 else 186000) + (if b0432 then 0 else 186000) + (if b0433 then 0 else 186000) + (if b0435 then 0 else 186000) + (if b0436 then 0 else 186000) + (if b0437 then 0 else 186000) + (if b0438 then 0 else 186000) + (if b0439 then 0 else 186000) + (if b0440 then 0 else 186000) + (if b0441 then 0 else 186000) + (if b0442 then 0 else 186000) + (if b0443 then 0 else 186000) + (if b0444 then 0 else 186000) + (if b0445 then 0 else 186000) + (if b0446 then 0 else 186000) + (if b0447 then 0 else 186000) + (if b0448 then 0 else 186000) + (if b0449 then 0 else 186000) + (if b0450 then 0 else 186000) + (if b0451 then 0 else 186000) + (if b0452 then 0 else 186000) + (if b0453 then 0 else 186000) + (if b0454 then 0 else 186000) + (if b0455 then 0 else 186000) + (if b0456 then 0 else 186000) + (if b0457 then 0 else 186000) + (if b0458 then 0 else 186000) + (if b0459 then 0 else 186000) + (if b0460 then 0 else 186000) + (if b0461 then 0 else 186000) + (if b0462 then 0 else 186000) + (if b0463 then 0 else 186000) + (if b0464 then 0 else 186000) + (if b0465 then 0 else 186000) < 441
}
Prover Time taken = 13.221941
Added Horn clause: 53 && 57 && 0 && 0 && 0 && 0 && 58 && 0 && 59 && 0 && 60 => 61
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/linear-algebra/kernels/3mm/kernel3.bpl.ice2.bpl
Total learner time was 00:00:00.1358310
Verifying $kernel3: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool, b0228: bool, b0229: bool, b0230: bool, b0231: bool, b0232: bool, b0233: bool, b0234: bool, b0235: bool, b0236: bool, b0237: bool, b0238: bool, b0239: bool, b0240: bool, b0241: bool, b0242: bool, b0243: bool, b0244: bool, b0245: bool, b0246: bool, b0247: bool, b0248: bool, b0249: bool, b0250: bool, b0251: bool, b0252: bool, b0253: bool, b0254: bool, b0255: bool, b0256: bool, b0257: bool, b0258: bool, b0259: bool, b0260: bool, b0261: bool, b0262: bool, b0263: bool, b0264: bool, b0265: bool, b0266: bool, b0267: bool, b0268: bool, b0269: bool, b0270: bool, b0271: bool, b0272: bool, b0273: bool, b0274: bool, b0275: bool, b0276: bool, b0277: bool, b0278: bool, b0279: bool, b0280: bool, b0281: bool, b0282: bool, b0283: bool, b0284: bool, b0285: bool, b0286: bool, b0287: bool, b0288: bool, b0289: bool, b0290: bool, b0291: bool, b0292: bool, b0293: bool, b0294: bool, b0295: bool, b0296: bool, b0297: bool, b0298: bool, b0299: bool, b0300: bool, b0301: bool, b0302: bool, b0303: bool, b0304: bool, b0305: bool, b0306: bool, b0307: bool, b0308: bool, b0309: bool, b0310: bool, b0311: bool, b0312: bool, b0313: bool, b0314: bool, b0315: bool, b0316: bool, b0317: bool, b0318: bool, b0319: bool, b0320: bool, b0321: bool, b0322: bool, b0323: bool, b0324: bool, b0325: bool, b0326: bool, b0327: bool, b0328: bool, b0329: bool, b0330: bool, b0331: bool, b0332: bool, b0333: bool, b0334: bool, b0335: bool, b0336: bool, b0337: bool, b0338: bool, b0339: bool, b0340: bool, b0341: bool, b0342: bool, b0343: bool, b0344: bool, b0345: bool, b0346: bool, b0347: bool, b0348: bool, b0349: bool, b0350: bool, b0351: bool, b0352: bool, b0353: bool, b0354: bool, b0355: bool, b0356: bool, b0357: bool, b0358: bool, b0359: bool, b0360: bool, b0361: bool, b0362: bool, b0363: bool, b0364: bool, b0365: bool, b0366: bool, b0367: bool, b0368: bool, b0369: bool, b0370: bool, b0371: bool, b0372: bool, b0373: bool, b0374: bool, b0375: bool, b0376: bool, b0377: bool, b0378: bool, b0379: bool, b0380: bool, b0381: bool, b0382: bool, b0383: bool, b0384: bool, b0385: bool, b0386: bool, b0387: bool, b0388: bool, b0389: bool, b0390: bool, b0391: bool, b0392: bool, b0393: bool, b0394: bool, b0395: bool, b0396: bool, b0397: bool, b0398: bool, b0399: bool, b0400: bool, b0401: bool, b0402: bool, b0403: bool, b0404: bool, b0405: bool, b0406: bool, b0407: bool, b0408: bool, b0409: bool, b0410: bool, b0411: bool, b0412: bool, b0413: bool, b0414: bool, b0415: bool, b0416: bool, b0417: bool, b0418: bool, b0419: bool, b0420: bool, b0421: bool, b0422: bool, b0423: bool, b0424: bool, b0425: bool, b0426: bool, b0427: bool, b0428: bool, b0429: bool, b0430: bool, b0431: bool, b0432: bool, b0433: bool, b0434: bool, b0435: bool, b0436: bool, b0437: bool, b0438: bool, b0439: bool, b0440: bool, b0441: bool, b0442: bool, b0443: bool, b0444: bool, b0445: bool, b0446: bool, b0447: bool, b0448: bool, b0449: bool, b0450: bool, b0451: bool, b0452: bool, b0453: bool, b0454: bool, b0455: bool, b0456: bool, b0457: bool, b0458: bool, b0459: bool, b0460: bool, b0461: bool, b0462: bool, b0463: bool, b0464: bool, b0465: bool) : bool
{
  0 + (if b0000 then 0 else 186000) + (if b0001 then 0 else 186000) + (if b0002 then 0 else 186000) + (if b0003 then 0 else 186000) + (if b0004 then 0 else 186000) + (if b0005 then 0 else 186000) + (if b0006 then 0 else 186000) + (if b0007 then 0 else 186000) + (if b0008 then 0 else 186000) + (if b0009 then 0 else 186000) + (if b0010 then 0 else 186000) + (if b0011 then 0 else 186000) + (if b0012 then 0 else 186000) + (if b0013 then 0 else 186000) + (if b0014 then 0 else 186000) + (if b0015 then 0 else 186000) + (if b0016 then 0 else 186000) + (if b0017 then 0 else 186000) + (if b0018 then 0 else 186000) + (if b0019 then 0 else 186000) + (if b0020 then 0 else 186000) + (if b0021 then 0 else 186000) + (if b0022 then 0 else 186000) + (if b0023 then 0 else 186000) + (if b0024 then 0 else 186000) + (if b0025 then 0 else 186000) + (if b0026 then 0 else 186000) + (if b0027 then 0 else 186000) + (if b0028 then 0 else 186000) + (if b0029 then 0 else 186000) + (if b0030 then 0 else 186000) + (if b0031 then 0 else 186000) + (if b0032 then 0 else 186000) + (if b0033 then 0 else 186000) + (if b0034 then 0 else 186000) + (if b0035 then 0 else 186000) + (if b0036 then 0 else 186000) + (if b0037 then 0 else 186000) + (if b0038 then 0 else 186000) + (if b0039 then 0 else 186000) + (if b0040 then 0 else 186000) + (if b0041 then 0 else 186000) + (if b0042 then 0 else 186000) + (if b0043 then 0 else 186000) + (if b0044 then 0 else 186000) + (if b0045 then 0 else 186000) + (if b0046 then 0 else 186000) + (if b0047 then 0 else 186000) + (if b0048 then 0 else 186000) + (if b0049 then 0 else 186000) + (if b0050 then 0 else 186000) + (if b0051 then 0 else 186000) + (if b0052 then 0 else 186000) + (if b0053 then 0 else 186000) + (if b0054 then 0 else 186000) + (if b0055 then 0 else 186000) + (if b0056 then 0 else 186000) + (if b0057 then 0 else 186000) + (if b0058 then 0 else 186000) + (if b0059 then 0 else 186000) + (if b0060 then 0 else 186000) + (if b0061 then 0 else 186000) + (if b0062 then 0 else 186000) + (if b0063 then 0 else 186000) + (if b0064 then 0 else 186000) + (if b0065 then 0 else 186000) + (if b0066 then 0 else 186000) + (if b0067 then 0 else 186000) + (if b0068 then 0 else 186000) + (if b0069 then 0 else 186000) + (if b0070 then 0 else 186000) + (if b0071 then 0 else 186000) + (if b0072 then 0 else 186000) + (if b0073 then 0 else 186000) + (if b0074 then 0 else 186000) + (if b0075 then 0 else 186000) + (if b0076 then 0 else 186000) + (if b0077 then 0 else 186000) + (if b0078 then 0 else 186000) + (if b0079 then 0 else 186000) + (if b0080 then 0 else 186000) + (if b0081 then 0 else 186000) + (if b0082 then 0 else 186000) + (if b0083 then 0 else 186000) + (if b0084 then 0 else 186000) + (if b0085 then 0 else 186000) + (if b0086 then 0 else 186000) + (if b0087 then 0 else 186000) + (if b0088 then 0 else 186000) + (if b0089 then 0 else 186000) + (if b0090 then 0 else 186000) + (if b0091 then 0 else 186000) + (if b0092 then 0 else 186000) + (if b0093 then 0 else 186000) + (if b0094 then 0 else 186000) + (if b0095 then 0 else 186000) + (if b0096 then 0 else 186000) + (if b0097 then 0 else 186000) + (if b0098 then 0 else 186000) + (if b0099 then 0 else 186000) + (if b0100 then 0 else 186000) + (if b0101 then 0 else 186000) + (if b0102 then 0 else 186000) + (if b0103 then 0 else 186000) + (if b0104 then 0 else 186000) + (if b0105 then 0 else 186000) + (if b0106 then 0 else 186000) + (if b0107 then 0 else 186000) + (if b0108 then 0 else 186000) + (if b0109 then 0 else 186000) + (if b0110 then 0 else 186000) + (if b0111 then 0 else 186000) + (if b0112 then 0 else 186000) + (if b0113 then 0 else 186000) + (if b0114 then 0 else 186000) + (if b0115 then 0 else 186000) + (if b0116 then 0 else 186000) + (if b0118 then 0 else 186000) + (if b0120 then 0 else 186000) + (if b0121 then 0 else 186000) + (if b0122 then 0 else 186000) + (if b0123 then 0 else 186000) + (if b0124 then 0 else 186000) + (if b0125 then 0 else 186000) + (if b0126 then 0 else 186000) + (if b0127 then 0 else 186000) + (if b0128 then 0 else 186000) + (if b0129 then 0 else 186000) + (if b0130 then 0 else 186000) + (if b0131 then 0 else 186000) + (if b0132 then 0 else 186000) + (if b0134 then 0 else 186000) + (if b0136 then 0 else 186000) + (if b0137 then 0 else 186000) + (if b0138 then 0 else 186000) + (if b0139 then 0 else 186000) + (if b0140 then 0 else 186000) + (if b0141 then 0 else 186000) + (if b0142 then 0 else 186000) + (if b0143 then 0 else 186000) + (if b0144 then 0 else 186000) + (if b0145 then 0 else 186000) + (if b0147 then 0 else 186000) + (if b0148 then 0 else 186000) + (if b0149 then 0 else 186000) + (if b0150 then 0 else 186000) + (if b0151 then 0 else 186000) + (if b0154 then 0 else 186000) + (if b0156 then 0 else 186000) + (if b0157 then 0 else 186000) + (if b0158 then 0 else 186000) + (if b0159 then 0 else 186000) + (if b0160 then 0 else 186000) + (if b0162 then 0 else 186000) + (if b0163 then 0 else 186000) + (if b0164 then 0 else 186000) + (if b0167 then 0 else 186000) + (if b0169 then 0 else 186000) + (if b0172 then 0 else 186000) + (if b0174 then 0 else 186000) + (if b0175 then 0 else 186000) + (if b0176 then 0 else 186000) + (if b0177 then 0 else 186000) + (if b0178 then 0 else 186000) + (if b0180 then 0 else 186000) + (if b0181 then 0 else 186000) + (if b0182 then 0 else 186000) + (if b0183 then 0 else 186000) + (if b0184 then 0 else 186000) + (if b0185 then 0 else 186000) + (if b0186 then 0 else 186000) + (if b0187 then 0 else 186000) + (if b0188 then 0 else 186000) + (if b0189 then 0 else 186000) + (if b0190 then 0 else 186000) + (if b0191 then 0 else 186000) + (if b0192 then 0 else 186000) + (if b0193 then 0 else 186000) + (if b0195 then 0 else 186000) + (if b0197 then 0 else 186000) + (if b0198 then 0 else 186000) + (if b0199 then 0 else 186000) + (if b0200 then 0 else 186000) + (if b0201 then 0 else 186000) + (if b0203 then 0 else 186000) + (if b0205 then 0 else 186000) + (if b0206 then 0 else 186000) + (if b0207 then 0 else 186000) + (if b0208 then 0 else 186000) + (if b0210 then 0 else 186000) + (if b0212 then 0 else 186000) + (if b0214 then 0 else 186000) + (if b0215 then 0 else 186000) + (if b0216 then 0 else 186000) + (if b0217 then 0 else 186000) + (if b0218 then 0 else 186000) + (if b0220 then 0 else 186000) + (if b0222 then 0 else 186000) + (if b0223 then 0 else 186000) + (if b0224 then 0 else 186000) + (if b0225 then 0 else 186000) + (if b0227 then 0 else 186000) + (if b0228 then 0 else 186000) + (if b0229 then 0 else 186000) + (if b0230 then 0 else 186000) + (if b0232 then 0 else 186000) + (if b0235 then 0 else 186000) + (if b0237 then 0 else 186000) + (if b0238 then 0 else 186000) + (if b0239 then 0 else 186000) + (if b0240 then 0 else 186000) + (if b0241 then 0 else 186000) + (if b0242 then 0 else 186000) + (if b0243 then 0 else 186000) + (if b0244 then 0 else 186000) + (if b0245 then 0 else 186000) + (if b0246 then 0 else 186000) + (if b0247 then 0 else 186000) + (if b0248 then 0 else 186000) + (if b0249 then 0 else 186000) + (if b0250 then 0 else 186000) + (if b0251 then 0 else 186000) + (if b0252 then 0 else 186000) + (if b0253 then 0 else 186000) + (if b0254 then 0 else 186000) + (if b0255 then 0 else 186000) + (if b0256 then 0 else 186000) + (if b0257 then 0 else 186000) + (if b0258 then 0 else 186000) + (if b0259 then 0 else 186000) + (if b0260 then 0 else 186000) + (if b0261 then 0 else 186000) + (if b0262 then 0 else 186000) + (if b0263 then 0 else 186000) + (if b0264 then 0 else 186000) + (if b0265 then 0 else 186000) + (if b0266 then 0 else 186000) + (if b0267 then 0 else 186000) + (if b0268 then 0 else 186000) + (if b0269 then 0 else 186000) + (if b0270 then 0 else 186000) + (if b0271 then 0 else 186000) + (if b0272 then 0 else 186000) + (if b0273 then 0 else 186000) + (if b0274 then 0 else 186000) + (if b0275 then 0 else 186000) + (if b0276 then 0 else 186000) + (if b0277 then 0 else 186000) + (if b0278 then 0 else 186000) + (if b0279 then 0 else 186000) + (if b0280 then 0 else 186000) + (if b0281 then 0 else 186000) + (if b0282 then 0 else 186000) + (if b0283 then 0 else 186000) + (if b0284 then 0 else 186000) + (if b0285 then 0 else 186000) + (if b0286 then 0 else 186000) + (if b0287 then 0 else 186000) + (if b0288 then 0 else 186000) + (if b0289 then 0 else 186000) + (if b0290 then 0 else 186000) + (if b0291 then 0 else 186000) + (if b0292 then 0 else 186000) + (if b0293 then 0 else 186000) + (if b0294 then 0 else 186000) + (if b0295 then 0 else 186000) + (if b0296 then 0 else 186000) + (if b0297 then 0 else 186000) + (if b0298 then 0 else 186000) + (if b0299 then 0 else 186000) + (if b0300 then 0 else 186000) + (if b0301 then 0 else 186000) + (if b0302 then 0 else 186000) + (if b0303 then 0 else 186000) + (if b0304 then 0 else 186000) + (if b0305 then 0 else 186000) + (if b0306 then 0 else 186000) + (if b0307 then 0 else 186000) + (if b0308 then 0 else 186000) + (if b0309 then 0 else 186000) + (if b0310 then 0 else 186000) + (if b0311 then 0 else 186000) + (if b0312 then 0 else 186000) + (if b0313 then 0 else 186000) + (if b0314 then 0 else 186000) + (if b0315 then 0 else 186000) + (if b0316 then 0 else 186000) + (if b0317 then 0 else 186000) + (if b0318 then 0 else 186000) + (if b0319 then 0 else 186000) + (if b0320 then 0 else 186000) + (if b0321 then 0 else 186000) + (if b0322 then 0 else 186000) + (if b0323 then 0 else 186000) + (if b0324 then 0 else 186000) + (if b0325 then 0 else 186000) + (if b0326 then 0 else 186000) + (if b0327 then 0 else 186000) + (if b0328 then 0 else 186000) + (if b0329 then 0 else 186000) + (if b0330 then 0 else 186000) + (if b0331 then 0 else 186000) + (if b0332 then 0 else 186000) + (if b0333 then 0 else 186000) + (if b0334 then 0 else 186000) + (if b0335 then 0 else 186000) + (if b0336 then 0 else 186000) + (if b0337 then 0 else 186000) + (if b0338 then 0 else 186000) + (if b0339 then 0 else 186000) + (if b0340 then 0 else 186000) + (if b0341 then 0 else 186000) + (if b0376 then 0 else 186000) + (if b0378 then 0 else 186000) + (if b0379 then 0 else 186000) + (if b0380 then 0 else 186000) + (if b0381 then 0 else 186000) + (if b0382 then 0 else 186000) + (if b0383 then 0 else 186000) + (if b0384 then 0 else 186000) + (if b0385 then 0 else 186000) + (if b0386 then 0 else 186000) + (if b0387 then 0 else 186000) + (if b0388 then 0 else 186000) + (if b0389 then 0 else 186000) + (if b0390 then 0 else 186000) + (if b0422 then 0 else 186000) + (if b0424 then 0 else 186000) + (if b0425 then 0 else 186000) + (if b0426 then 0 else 186000) + (if b0427 then 0 else 186000) + (if b0428 then 0 else 186000) + (if b0429 then 0 else 186000) + (if b0430 then 0 else 186000) + (if b0431 then 0 else 186000) + (if b0432 then 0 else 186000) + (if b0433 then 0 else 186000) + (if b0435 then 0 else 186000) + (if b0436 then 0 else 186000) + (if b0437 then 0 else 186000) + (if b0438 then 0 else 186000) + (if b0439 then 0 else 186000) + (if b0440 then 0 else 186000) + (if b0441 then 0 else 186000) + (if b0442 then 0 else 186000) + (if b0443 then 0 else 186000) + (if b0444 then 0 else 186000) + (if b0445 then 0 else 186000) + (if b0446 then 0 else 186000) + (if b0447 then 0 else 186000) + (if b0448 then 0 else 186000) + (if b0449 then 0 else 186000) + (if b0450 then 0 else 186000) + (if b0451 then 0 else 186000) + (if b0452 then 0 else 186000) + (if b0453 then 0 else 186000) + (if b0454 then 0 else 186000) + (if b0455 then 0 else 186000) + (if b0456 then 0 else 186000) + (if b0457 then 0 else 186000) + (if b0458 then 0 else 186000) + (if b0459 then 0 else 186000) + (if b0460 then 0 else 186000) + (if b0461 then 0 else 186000) + (if b0462 then 0 else 186000) + (if b0463 then 0 else 186000) + (if b0464 then 0 else 186000) + (if b0465 then 0 else 186000) < 441
}
Prover Time taken = 13.230013
Added Horn clause: 6 && 57 && 0 && 0 && 0 && 0 && 58 && 0 && 59 && 0 && 60 && 0 && 61 => 62
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/linear-algebra/kernels/3mm/kernel3.bpl.ice2.bpl
Total learner time was 00:00:00.1400290
Verifying $kernel3: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool, b0228: bool, b0229: bool, b0230: bool, b0231: bool, b0232: bool, b0233: bool, b0234: bool, b0235: bool, b0236: bool, b0237: bool, b0238: bool, b0239: bool, b0240: bool, b0241: bool, b0242: bool, b0243: bool, b0244: bool, b0245: bool, b0246: bool, b0247: bool, b0248: bool, b0249: bool, b0250: bool, b0251: bool, b0252: bool, b0253: bool, b0254: bool, b0255: bool, b0256: bool, b0257: bool, b0258: bool, b0259: bool, b0260: bool, b0261: bool, b0262: bool, b0263: bool, b0264: bool, b0265: bool, b0266: bool, b0267: bool, b0268: bool, b0269: bool, b0270: bool, b0271: bool, b0272: bool, b0273: bool, b0274: bool, b0275: bool, b0276: bool, b0277: bool, b0278: bool, b0279: bool, b0280: bool, b0281: bool, b0282: bool, b0283: bool, b0284: bool, b0285: bool, b0286: bool, b0287: bool, b0288: bool, b0289: bool, b0290: bool, b0291: bool, b0292: bool, b0293: bool, b0294: bool, b0295: bool, b0296: bool, b0297: bool, b0298: bool, b0299: bool, b0300: bool, b0301: bool, b0302: bool, b0303: bool, b0304: bool, b0305: bool, b0306: bool, b0307: bool, b0308: bool, b0309: bool, b0310: bool, b0311: bool, b0312: bool, b0313: bool, b0314: bool, b0315: bool, b0316: bool, b0317: bool, b0318: bool, b0319: bool, b0320: bool, b0321: bool, b0322: bool, b0323: bool, b0324: bool, b0325: bool, b0326: bool, b0327: bool, b0328: bool, b0329: bool, b0330: bool, b0331: bool, b0332: bool, b0333: bool, b0334: bool, b0335: bool, b0336: bool, b0337: bool, b0338: bool, b0339: bool, b0340: bool, b0341: bool, b0342: bool, b0343: bool, b0344: bool, b0345: bool, b0346: bool, b0347: bool, b0348: bool, b0349: bool, b0350: bool, b0351: bool, b0352: bool, b0353: bool, b0354: bool, b0355: bool, b0356: bool, b0357: bool, b0358: bool, b0359: bool, b0360: bool, b0361: bool, b0362: bool, b0363: bool, b0364: bool, b0365: bool, b0366: bool, b0367: bool, b0368: bool, b0369: bool, b0370: bool, b0371: bool, b0372: bool, b0373: bool, b0374: bool, b0375: bool, b0376: bool, b0377: bool, b0378: bool, b0379: bool, b0380: bool, b0381: bool, b0382: bool, b0383: bool, b0384: bool, b0385: bool, b0386: bool, b0387: bool, b0388: bool, b0389: bool, b0390: bool, b0391: bool, b0392: bool, b0393: bool, b0394: bool, b0395: bool, b0396: bool, b0397: bool, b0398: bool, b0399: bool, b0400: bool, b0401: bool, b0402: bool, b0403: bool, b0404: bool, b0405: bool, b0406: bool, b0407: bool, b0408: bool, b0409: bool, b0410: bool, b0411: bool, b0412: bool, b0413: bool, b0414: bool, b0415: bool, b0416: bool, b0417: bool, b0418: bool, b0419: bool, b0420: bool, b0421: bool, b0422: bool, b0423: bool, b0424: bool, b0425: bool, b0426: bool, b0427: bool, b0428: bool, b0429: bool, b0430: bool, b0431: bool, b0432: bool, b0433: bool, b0434: bool, b0435: bool, b0436: bool, b0437: bool, b0438: bool, b0439: bool, b0440: bool, b0441: bool, b0442: bool, b0443: bool, b0444: bool, b0445: bool, b0446: bool, b0447: bool, b0448: bool, b0449: bool, b0450: bool, b0451: bool, b0452: bool, b0453: bool, b0454: bool, b0455: bool, b0456: bool, b0457: bool, b0458: bool, b0459: bool, b0460: bool, b0461: bool, b0462: bool, b0463: bool, b0464: bool, b0465: bool) : bool
{
  0 + (if b0000 then 0 else 186000) + (if b0001 then 0 else 186000) + (if b0002 then 0 else 186000) + (if b0003 then 0 else 186000) + (if b0004 then 0 else 186000) + (if b0005 then 0 else 186000) + (if b0006 then 0 else 186000) + (if b0007 then 0 else 186000) + (if b0008 then 0 else 186000) + (if b0009 then 0 else 186000) + (if b0010 then 0 else 186000) + (if b0011 then 0 else 186000) + (if b0012 then 0 else 186000) + (if b0013 then 0 else 186000) + (if b0014 then 0 else 186000) + (if b0015 then 0 else 186000) + (if b0016 then 0 else 186000) + (if b0017 then 0 else 186000) + (if b0018 then 0 else 186000) + (if b0019 then 0 else 186000) + (if b0020 then 0 else 186000) + (if b0021 then 0 else 186000) + (if b0022 then 0 else 186000) + (if b0023 then 0 else 186000) + (if b0024 then 0 else 186000) + (if b0025 then 0 else 186000) + (if b0026 then 0 else 186000) + (if b0027 then 0 else 186000) + (if b0028 then 0 else 186000) + (if b0029 then 0 else 186000) + (if b0030 then 0 else 186000) + (if b0031 then 0 else 186000) + (if b0032 then 0 else 186000) + (if b0033 then 0 else 186000) + (if b0034 then 0 else 186000) + (if b0035 then 0 else 186000) + (if b0036 then 0 else 186000) + (if b0037 then 0 else 186000) + (if b0038 then 0 else 186000) + (if b0039 then 0 else 186000) + (if b0040 then 0 else 186000) + (if b0041 then 0 else 186000) + (if b0042 then 0 else 186000) + (if b0043 then 0 else 186000) + (if b0044 then 0 else 186000) + (if b0045 then 0 else 186000) + (if b0046 then 0 else 186000) + (if b0047 then 0 else 186000) + (if b0048 then 0 else 186000) + (if b0049 then 0 else 186000) + (if b0050 then 0 else 186000) + (if b0051 then 0 else 186000) + (if b0052 then 0 else 186000) + (if b0053 then 0 else 186000) + (if b0054 then 0 else 186000) + (if b0055 then 0 else 186000) + (if b0056 then 0 else 186000) + (if b0057 then 0 else 186000) + (if b0058 then 0 else 186000) + (if b0059 then 0 else 186000) + (if b0060 then 0 else 186000) + (if b0061 then 0 else 186000) + (if b0062 then 0 else 186000) + (if b0063 then 0 else 186000) + (if b0064 then 0 else 186000) + (if b0065 then 0 else 186000) + (if b0066 then 0 else 186000) + (if b0067 then 0 else 186000) + (if b0068 then 0 else 186000) + (if b0069 then 0 else 186000) + (if b0070 then 0 else 186000) + (if b0071 then 0 else 186000) + (if b0072 then 0 else 186000) + (if b0073 then 0 else 186000) + (if b0074 then 0 else 186000) + (if b0075 then 0 else 186000) + (if b0076 then 0 else 186000) + (if b0077 then 0 else 186000) + (if b0078 then 0 else 186000) + (if b0079 then 0 else 186000) + (if b0080 then 0 else 186000) + (if b0081 then 0 else 186000) + (if b0082 then 0 else 186000) + (if b0083 then 0 else 186000) + (if b0084 then 0 else 186000) + (if b0085 then 0 else 186000) + (if b0086 then 0 else 186000) + (if b0087 then 0 else 186000) + (if b0088 then 0 else 186000) + (if b0089 then 0 else 186000) + (if b0090 then 0 else 186000) + (if b0091 then 0 else 186000) + (if b0092 then 0 else 186000) + (if b0093 then 0 else 186000) + (if b0094 then 0 else 186000) + (if b0095 then 0 else 186000) + (if b0096 then 0 else 186000) + (if b0097 then 0 else 186000) + (if b0098 then 0 else 186000) + (if b0099 then 0 else 186000) + (if b0100 then 0 else 186000) + (if b0101 then 0 else 186000) + (if b0102 then 0 else 186000) + (if b0103 then 0 else 186000) + (if b0104 then 0 else 186000) + (if b0105 then 0 else 186000) + (if b0106 then 0 else 186000) + (if b0107 then 0 else 186000) + (if b0108 then 0 else 186000) + (if b0109 then 0 else 186000) + (if b0110 then 0 else 186000) + (if b0111 then 0 else 186000) + (if b0112 then 0 else 186000) + (if b0113 then 0 else 186000) + (if b0114 then 0 else 186000) + (if b0115 then 0 else 186000) + (if b0116 then 0 else 186000) + (if b0118 then 0 else 186000) + (if b0120 then 0 else 186000) + (if b0121 then 0 else 186000) + (if b0122 then 0 else 186000) + (if b0123 then 0 else 186000) + (if b0124 then 0 else 186000) + (if b0125 then 0 else 186000) + (if b0126 then 0 else 186000) + (if b0127 then 0 else 186000) + (if b0128 then 0 else 186000) + (if b0129 then 0 else 186000) + (if b0130 then 0 else 186000) + (if b0131 then 0 else 186000) + (if b0132 then 0 else 186000) + (if b0134 then 0 else 186000) + (if b0136 then 0 else 186000) + (if b0137 then 0 else 186000) + (if b0138 then 0 else 186000) + (if b0139 then 0 else 186000) + (if b0140 then 0 else 186000) + (if b0141 then 0 else 186000) + (if b0142 then 0 else 186000) + (if b0143 then 0 else 186000) + (if b0144 then 0 else 186000) + (if b0145 then 0 else 186000) + (if b0147 then 0 else 186000) + (if b0148 then 0 else 186000) + (if b0149 then 0 else 186000) + (if b0150 then 0 else 186000) + (if b0151 then 0 else 186000) + (if b0154 then 0 else 186000) + (if b0156 then 0 else 186000) + (if b0157 then 0 else 186000) + (if b0158 then 0 else 186000) + (if b0159 then 0 else 186000) + (if b0160 then 0 else 186000) + (if b0162 then 0 else 186000) + (if b0163 then 0 else 186000) + (if b0164 then 0 else 186000) + (if b0167 then 0 else 186000) + (if b0169 then 0 else 186000) + (if b0172 then 0 else 186000) + (if b0174 then 0 else 186000) + (if b0175 then 0 else 186000) + (if b0176 then 0 else 186000) + (if b0177 then 0 else 186000) + (if b0178 then 0 else 186000) + (if b0180 then 0 else 186000) + (if b0181 then 0 else 186000) + (if b0182 then 0 else 186000) + (if b0183 then 0 else 186000) + (if b0184 then 0 else 186000) + (if b0185 then 0 else 186000) + (if b0186 then 0 else 186000) + (if b0187 then 0 else 186000) + (if b0188 then 0 else 186000) + (if b0189 then 0 else 186000) + (if b0190 then 0 else 186000) + (if b0191 then 0 else 186000) + (if b0192 then 0 else 186000) + (if b0193 then 0 else 186000) + (if b0195 then 0 else 186000) + (if b0197 then 0 else 186000) + (if b0198 then 0 else 186000) + (if b0199 then 0 else 186000) + (if b0200 then 0 else 186000) + (if b0201 then 0 else 186000) + (if b0203 then 0 else 186000) + (if b0205 then 0 else 186000) + (if b0206 then 0 else 186000) + (if b0207 then 0 else 186000) + (if b0208 then 0 else 186000) + (if b0210 then 0 else 186000) + (if b0212 then 0 else 186000) + (if b0214 then 0 else 186000) + (if b0215 then 0 else 186000) + (if b0216 then 0 else 186000) + (if b0217 then 0 else 186000) + (if b0218 then 0 else 186000) + (if b0220 then 0 else 186000) + (if b0222 then 0 else 186000) + (if b0223 then 0 else 186000) + (if b0224 then 0 else 186000) + (if b0225 then 0 else 186000) + (if b0227 then 0 else 186000) + (if b0228 then 0 else 186000) + (if b0229 then 0 else 186000) + (if b0230 then 0 else 186000) + (if b0232 then 0 else 186000) + (if b0235 then 0 else 186000) + (if b0237 then 0 else 186000) + (if b0238 then 0 else 186000) + (if b0239 then 0 else 186000) + (if b0240 then 0 else 186000) + (if b0241 then 0 else 186000) + (if b0242 then 0 else 186000) + (if b0243 then 0 else 186000) + (if b0244 then 0 else 186000) + (if b0245 then 0 else 186000) + (if b0246 then 0 else 186000) + (if b0247 then 0 else 186000) + (if b0248 then 0 else 186000) + (if b0249 then 0 else 186000) + (if b0250 then 0 else 186000) + (if b0251 then 0 else 186000) + (if b0252 then 0 else 186000) + (if b0253 then 0 else 186000) + (if b0254 then 0 else 186000) + (if b0255 then 0 else 186000) + (if b0256 then 0 else 186000) + (if b0257 then 0 else 186000) + (if b0258 then 0 else 186000) + (if b0259 then 0 else 186000) + (if b0260 then 0 else 186000) + (if b0261 then 0 else 186000) + (if b0262 then 0 else 186000) + (if b0263 then 0 else 186000) + (if b0264 then 0 else 186000) + (if b0265 then 0 else 186000) + (if b0266 then 0 else 186000) + (if b0267 then 0 else 186000) + (if b0268 then 0 else 186000) + (if b0269 then 0 else 186000) + (if b0270 then 0 else 186000) + (if b0271 then 0 else 186000) + (if b0272 then 0 else 186000) + (if b0273 then 0 else 186000) + (if b0274 then 0 else 186000) + (if b0275 then 0 else 186000) + (if b0276 then 0 else 186000) + (if b0277 then 0 else 186000) + (if b0278 then 0 else 186000) + (if b0279 then 0 else 186000) + (if b0280 then 0 else 186000) + (if b0281 then 0 else 186000) + (if b0282 then 0 else 186000) + (if b0283 then 0 else 186000) + (if b0284 then 0 else 186000) + (if b0285 then 0 else 186000) + (if b0286 then 0 else 186000) + (if b0287 then 0 else 186000) + (if b0288 then 0 else 186000) + (if b0289 then 0 else 186000) + (if b0290 then 0 else 186000) + (if b0291 then 0 else 186000) + (if b0292 then 0 else 186000) + (if b0293 then 0 else 186000) + (if b0294 then 0 else 186000) + (if b0295 then 0 else 186000) + (if b0296 then 0 else 186000) + (if b0297 then 0 else 186000) + (if b0298 then 0 else 186000) + (if b0299 then 0 else 186000) + (if b0300 then 0 else 186000) + (if b0301 then 0 else 186000) + (if b0302 then 0 else 186000) + (if b0303 then 0 else 186000) + (if b0304 then 0 else 186000) + (if b0305 then 0 else 186000) + (if b0306 then 0 else 186000) + (if b0307 then 0 else 186000) + (if b0308 then 0 else 186000) + (if b0309 then 0 else 186000) + (if b0310 then 0 else 186000) + (if b0311 then 0 else 186000) + (if b0312 then 0 else 186000) + (if b0313 then 0 else 186000) + (if b0314 then 0 else 186000) + (if b0315 then 0 else 186000) + (if b0316 then 0 else 186000) + (if b0317 then 0 else 186000) + (if b0318 then 0 else 186000) + (if b0319 then 0 else 186000) + (if b0320 then 0 else 186000) + (if b0321 then 0 else 186000) + (if b0322 then 0 else 186000) + (if b0323 then 0 else 186000) + (if b0324 then 0 else 186000) + (if b0325 then 0 else 186000) + (if b0326 then 0 else 186000) + (if b0327 then 0 else 186000) + (if b0328 then 0 else 186000) + (if b0329 then 0 else 186000) + (if b0330 then 0 else 186000) + (if b0331 then 0 else 186000) + (if b0332 then 0 else 186000) + (if b0333 then 0 else 186000) + (if b0334 then 0 else 186000) + (if b0335 then 0 else 186000) + (if b0336 then 0 else 186000) + (if b0337 then 0 else 186000) + (if b0338 then 0 else 186000) + (if b0339 then 0 else 186000) + (if b0340 then 0 else 186000) + (if b0341 then 0 else 186000) + (if b0376 then 0 else 186000) + (if b0378 then 0 else 186000) + (if b0379 then 0 else 186000) + (if b0380 then 0 else 186000) + (if b0381 then 0 else 186000) + (if b0382 then 0 else 186000) + (if b0383 then 0 else 186000) + (if b0385 then 0 else 186000) + (if b0386 then 0 else 186000) + (if b0387 then 0 else 186000) + (if b0388 then 0 else 186000) + (if b0389 then 0 else 186000) + (if b0390 then 0 else 186000) + (if b0422 then 0 else 186000) + (if b0424 then 0 else 186000) + (if b0425 then 0 else 186000) + (if b0426 then 0 else 186000) + (if b0427 then 0 else 186000) + (if b0428 then 0 else 186000) + (if b0429 then 0 else 186000) + (if b0430 then 0 else 186000) + (if b0431 then 0 else 186000) + (if b0432 then 0 else 186000) + (if b0433 then 0 else 186000) + (if b0435 then 0 else 186000) + (if b0436 then 0 else 186000) + (if b0437 then 0 else 186000) + (if b0438 then 0 else 186000) + (if b0439 then 0 else 186000) + (if b0440 then 0 else 186000) + (if b0441 then 0 else 186000) + (if b0442 then 0 else 186000) + (if b0443 then 0 else 186000) + (if b0444 then 0 else 186000) + (if b0445 then 0 else 186000) + (if b0446 then 0 else 186000) + (if b0447 then 0 else 186000) + (if b0448 then 0 else 186000) + (if b0449 then 0 else 186000) + (if b0450 then 0 else 186000) + (if b0451 then 0 else 186000) + (if b0452 then 0 else 186000) + (if b0453 then 0 else 186000) + (if b0454 then 0 else 186000) + (if b0455 then 0 else 186000) + (if b0456 then 0 else 186000) + (if b0457 then 0 else 186000) + (if b0458 then 0 else 186000) + (if b0459 then 0 else 186000) + (if b0460 then 0 else 186000) + (if b0461 then 0 else 186000) + (if b0462 then 0 else 186000) + (if b0463 then 0 else 186000) + (if b0464 then 0 else 186000) + (if b0465 then 0 else 186000) < 441
}
Prover Time taken = 5.178899
Added Horn clause: 63 => 64
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/linear-algebra/kernels/3mm/kernel3.bpl.ice2.bpl
Total learner time was 00:00:00.1382180
Verifying $kernel3: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool, b0228: bool, b0229: bool, b0230: bool, b0231: bool, b0232: bool, b0233: bool, b0234: bool, b0235: bool, b0236: bool, b0237: bool, b0238: bool, b0239: bool, b0240: bool, b0241: bool, b0242: bool, b0243: bool, b0244: bool, b0245: bool, b0246: bool, b0247: bool, b0248: bool, b0249: bool, b0250: bool, b0251: bool, b0252: bool, b0253: bool, b0254: bool, b0255: bool, b0256: bool, b0257: bool, b0258: bool, b0259: bool, b0260: bool, b0261: bool, b0262: bool, b0263: bool, b0264: bool, b0265: bool, b0266: bool, b0267: bool, b0268: bool, b0269: bool, b0270: bool, b0271: bool, b0272: bool, b0273: bool, b0274: bool, b0275: bool, b0276: bool, b0277: bool, b0278: bool, b0279: bool, b0280: bool, b0281: bool, b0282: bool, b0283: bool, b0284: bool, b0285: bool, b0286: bool, b0287: bool, b0288: bool, b0289: bool, b0290: bool, b0291: bool, b0292: bool, b0293: bool, b0294: bool, b0295: bool, b0296: bool, b0297: bool, b0298: bool, b0299: bool, b0300: bool, b0301: bool, b0302: bool, b0303: bool, b0304: bool, b0305: bool, b0306: bool, b0307: bool, b0308: bool, b0309: bool, b0310: bool, b0311: bool, b0312: bool, b0313: bool, b0314: bool, b0315: bool, b0316: bool, b0317: bool, b0318: bool, b0319: bool, b0320: bool, b0321: bool, b0322: bool, b0323: bool, b0324: bool, b0325: bool, b0326: bool, b0327: bool, b0328: bool, b0329: bool, b0330: bool, b0331: bool, b0332: bool, b0333: bool, b0334: bool, b0335: bool, b0336: bool, b0337: bool, b0338: bool, b0339: bool, b0340: bool, b0341: bool, b0342: bool, b0343: bool, b0344: bool, b0345: bool, b0346: bool, b0347: bool, b0348: bool, b0349: bool, b0350: bool, b0351: bool, b0352: bool, b0353: bool, b0354: bool, b0355: bool, b0356: bool, b0357: bool, b0358: bool, b0359: bool, b0360: bool, b0361: bool, b0362: bool, b0363: bool, b0364: bool, b0365: bool, b0366: bool, b0367: bool, b0368: bool, b0369: bool, b0370: bool, b0371: bool, b0372: bool, b0373: bool, b0374: bool, b0375: bool, b0376: bool, b0377: bool, b0378: bool, b0379: bool, b0380: bool, b0381: bool, b0382: bool, b0383: bool, b0384: bool, b0385: bool, b0386: bool, b0387: bool, b0388: bool, b0389: bool, b0390: bool, b0391: bool, b0392: bool, b0393: bool, b0394: bool, b0395: bool, b0396: bool, b0397: bool, b0398: bool, b0399: bool, b0400: bool, b0401: bool, b0402: bool, b0403: bool, b0404: bool, b0405: bool, b0406: bool, b0407: bool, b0408: bool, b0409: bool, b0410: bool, b0411: bool, b0412: bool, b0413: bool, b0414: bool, b0415: bool, b0416: bool, b0417: bool, b0418: bool, b0419: bool, b0420: bool, b0421: bool, b0422: bool, b0423: bool, b0424: bool, b0425: bool, b0426: bool, b0427: bool, b0428: bool, b0429: bool, b0430: bool, b0431: bool, b0432: bool, b0433: bool, b0434: bool, b0435: bool, b0436: bool, b0437: bool, b0438: bool, b0439: bool, b0440: bool, b0441: bool, b0442: bool, b0443: bool, b0444: bool, b0445: bool, b0446: bool, b0447: bool, b0448: bool, b0449: bool, b0450: bool, b0451: bool, b0452: bool, b0453: bool, b0454: bool, b0455: bool, b0456: bool, b0457: bool, b0458: bool, b0459: bool, b0460: bool, b0461: bool, b0462: bool, b0463: bool, b0464: bool, b0465: bool) : bool
{
  0 + (if b0000 then 0 else 186000) + (if b0001 then 0 else 186000) + (if b0002 then 0 else 186000) + (if b0003 then 0 else 186000) + (if b0004 then 0 else 186000) + (if b0005 then 0 else 186000) + (if b0006 then 0 else 186000) + (if b0007 then 0 else 186000) + (if b0008 then 0 else 186000) + (if b0009 then 0 else 186000) + (if b0010 then 0 else 186000) + (if b0011 then 0 else 186000) + (if b0012 then 0 else 186000) + (if b0013 then 0 else 186000) + (if b0014 then 0 else 186000) + (if b0015 then 0 else 186000) + (if b0016 then 0 else 186000) + (if b0017 then 0 else 186000) + (if b0018 then 0 else 186000) + (if b0019 then 0 else 186000) + (if b0020 then 0 else 186000) + (if b0021 then 0 else 186000) + (if b0022 then 0 else 186000) + (if b0023 then 0 else 186000) + (if b0024 then 0 else 186000) + (if b0025 then 0 else 186000) + (if b0026 then 0 else 186000) + (if b0027 then 0 else 186000) + (if b0028 then 0 else 186000) + (if b0029 then 0 else 186000) + (if b0030 then 0 else 186000) + (if b0031 then 0 else 186000) + (if b0032 then 0 else 186000) + (if b0033 then 0 else 186000) + (if b0034 then 0 else 186000) + (if b0035 then 0 else 186000) + (if b0036 then 0 else 186000) + (if b0037 then 0 else 186000) + (if b0038 then 0 else 186000) + (if b0039 then 0 else 186000) + (if b0040 then 0 else 186000) + (if b0041 then 0 else 186000) + (if b0042 then 0 else 186000) + (if b0043 then 0 else 186000) + (if b0044 then 0 else 186000) + (if b0045 then 0 else 186000) + (if b0046 then 0 else 186000) + (if b0047 then 0 else 186000) + (if b0048 then 0 else 186000) + (if b0049 then 0 else 186000) + (if b0050 then 0 else 186000) + (if b0051 then 0 else 186000) + (if b0052 then 0 else 186000) + (if b0053 then 0 else 186000) + (if b0054 then 0 else 186000) + (if b0055 then 0 else 186000) + (if b0056 then 0 else 186000) + (if b0057 then 0 else 186000) + (if b0058 then 0 else 186000) + (if b0059 then 0 else 186000) + (if b0060 then 0 else 186000) + (if b0061 then 0 else 186000) + (if b0062 then 0 else 186000) + (if b0063 then 0 else 186000) + (if b0064 then 0 else 186000) + (if b0065 then 0 else 186000) + (if b0066 then 0 else 186000) + (if b0067 then 0 else 186000) + (if b0068 then 0 else 186000) + (if b0069 then 0 else 186000) + (if b0070 then 0 else 186000) + (if b0071 then 0 else 186000) + (if b0072 then 0 else 186000) + (if b0073 then 0 else 186000) + (if b0074 then 0 else 186000) + (if b0075 then 0 else 186000) + (if b0076 then 0 else 186000) + (if b0077 then 0 else 186000) + (if b0078 then 0 else 186000) + (if b0079 then 0 else 186000) + (if b0080 then 0 else 186000) + (if b0081 then 0 else 186000) + (if b0082 then 0 else 186000) + (if b0083 then 0 else 186000) + (if b0084 then 0 else 186000) + (if b0085 then 0 else 186000) + (if b0086 then 0 else 186000) + (if b0087 then 0 else 186000) + (if b0088 then 0 else 186000) + (if b0089 then 0 else 186000) + (if b0090 then 0 else 186000) + (if b0091 then 0 else 186000) + (if b0092 then 0 else 186000) + (if b0093 then 0 else 186000) + (if b0094 then 0 else 186000) + (if b0095 then 0 else 186000) + (if b0096 then 0 else 186000) + (if b0097 then 0 else 186000) + (if b0098 then 0 else 186000) + (if b0099 then 0 else 186000) + (if b0100 then 0 else 186000) + (if b0101 then 0 else 186000) + (if b0102 then 0 else 186000) + (if b0103 then 0 else 186000) + (if b0104 then 0 else 186000) + (if b0105 then 0 else 186000) + (if b0106 then 0 else 186000) + (if b0107 then 0 else 186000) + (if b0108 then 0 else 186000) + (if b0109 then 0 else 186000) + (if b0110 then 0 else 186000) + (if b0111 then 0 else 186000) + (if b0112 then 0 else 186000) + (if b0113 then 0 else 186000) + (if b0114 then 0 else 186000) + (if b0115 then 0 else 186000) + (if b0116 then 0 else 186000) + (if b0118 then 0 else 186000) + (if b0120 then 0 else 186000) + (if b0121 then 0 else 186000) + (if b0122 then 0 else 186000) + (if b0123 then 0 else 186000) + (if b0124 then 0 else 186000) + (if b0125 then 0 else 186000) + (if b0126 then 0 else 186000) + (if b0127 then 0 else 186000) + (if b0128 then 0 else 186000) + (if b0129 then 0 else 186000) + (if b0130 then 0 else 186000) + (if b0131 then 0 else 186000) + (if b0132 then 0 else 186000) + (if b0134 then 0 else 186000) + (if b0136 then 0 else 186000) + (if b0137 then 0 else 186000) + (if b0138 then 0 else 186000) + (if b0139 then 0 else 186000) + (if b0141 then 0 else 186000) + (if b0142 then 0 else 186000) + (if b0143 then 0 else 186000) + (if b0144 then 0 else 186000) + (if b0145 then 0 else 186000) + (if b0147 then 0 else 186000) + (if b0148 then 0 else 186000) + (if b0149 then 0 else 186000) + (if b0150 then 0 else 186000) + (if b0151 then 0 else 186000) + (if b0154 then 0 else 186000) + (if b0156 then 0 else 186000) + (if b0157 then 0 else 186000) + (if b0158 then 0 else 186000) + (if b0159 then 0 else 186000) + (if b0160 then 0 else 186000) + (if b0162 then 0 else 186000) + (if b0163 then 0 else 186000) + (if b0164 then 0 else 186000) + (if b0167 then 0 else 186000) + (if b0169 then 0 else 186000) + (if b0172 then 0 else 186000) + (if b0174 then 0 else 186000) + (if b0175 then 0 else 186000) + (if b0176 then 0 else 186000) + (if b0177 then 0 else 186000) + (if b0178 then 0 else 186000) + (if b0180 then 0 else 186000) + (if b0181 then 0 else 186000) + (if b0182 then 0 else 186000) + (if b0183 then 0 else 186000) + (if b0184 then 0 else 186000) + (if b0185 then 0 else 186000) + (if b0186 then 0 else 186000) + (if b0187 then 0 else 186000) + (if b0188 then 0 else 186000) + (if b0189 then 0 else 186000) + (if b0190 then 0 else 186000) + (if b0191 then 0 else 186000) + (if b0192 then 0 else 186000) + (if b0193 then 0 else 186000) + (if b0195 then 0 else 186000) + (if b0197 then 0 else 186000) + (if b0198 then 0 else 186000) + (if b0199 then 0 else 186000) + (if b0200 then 0 else 186000) + (if b0201 then 0 else 186000) + (if b0203 then 0 else 186000) + (if b0205 then 0 else 186000) + (if b0206 then 0 else 186000) + (if b0207 then 0 else 186000) + (if b0208 then 0 else 186000) + (if b0210 then 0 else 186000) + (if b0212 then 0 else 186000) + (if b0214 then 0 else 186000) + (if b0215 then 0 else 186000) + (if b0216 then 0 else 186000) + (if b0217 then 0 else 186000) + (if b0218 then 0 else 186000) + (if b0220 then 0 else 186000) + (if b0222 then 0 else 186000) + (if b0223 then 0 else 186000) + (if b0224 then 0 else 186000) + (if b0225 then 0 else 186000) + (if b0227 then 0 else 186000) + (if b0228 then 0 else 186000) + (if b0229 then 0 else 186000) + (if b0230 then 0 else 186000) + (if b0232 then 0 else 186000) + (if b0235 then 0 else 186000) + (if b0237 then 0 else 186000) + (if b0238 then 0 else 186000) + (if b0239 then 0 else 186000) + (if b0240 then 0 else 186000) + (if b0241 then 0 else 186000) + (if b0242 then 0 else 186000) + (if b0243 then 0 else 186000) + (if b0244 then 0 else 186000) + (if b0245 then 0 else 186000) + (if b0246 then 0 else 186000) + (if b0247 then 0 else 186000) + (if b0248 then 0 else 186000) + (if b0249 then 0 else 186000) + (if b0250 then 0 else 186000) + (if b0251 then 0 else 186000) + (if b0252 then 0 else 186000) + (if b0253 then 0 else 186000) + (if b0254 then 0 else 186000) + (if b0255 then 0 else 186000) + (if b0256 then 0 else 186000) + (if b0257 then 0 else 186000) + (if b0258 then 0 else 186000) + (if b0259 then 0 else 186000) + (if b0260 then 0 else 186000) + (if b0261 then 0 else 186000) + (if b0262 then 0 else 186000) + (if b0263 then 0 else 186000) + (if b0264 then 0 else 186000) + (if b0265 then 0 else 186000) + (if b0266 then 0 else 186000) + (if b0267 then 0 else 186000) + (if b0268 then 0 else 186000) + (if b0269 then 0 else 186000) + (if b0270 then 0 else 186000) + (if b0271 then 0 else 186000) + (if b0272 then 0 else 186000) + (if b0273 then 0 else 186000) + (if b0274 then 0 else 186000) + (if b0275 then 0 else 186000) + (if b0276 then 0 else 186000) + (if b0277 then 0 else 186000) + (if b0278 then 0 else 186000) + (if b0279 then 0 else 186000) + (if b0280 then 0 else 186000) + (if b0281 then 0 else 186000) + (if b0282 then 0 else 186000) + (if b0283 then 0 else 186000) + (if b0284 then 0 else 186000) + (if b0285 then 0 else 186000) + (if b0286 then 0 else 186000) + (if b0287 then 0 else 186000) + (if b0288 then 0 else 186000) + (if b0289 then 0 else 186000) + (if b0290 then 0 else 186000) + (if b0291 then 0 else 186000) + (if b0292 then 0 else 186000) + (if b0293 then 0 else 186000) + (if b0294 then 0 else 186000) + (if b0295 then 0 else 186000) + (if b0296 then 0 else 186000) + (if b0297 then 0 else 186000) + (if b0298 then 0 else 186000) + (if b0299 then 0 else 186000) + (if b0300 then 0 else 186000) + (if b0301 then 0 else 186000) + (if b0302 then 0 else 186000) + (if b0303 then 0 else 186000) + (if b0304 then 0 else 186000) + (if b0305 then 0 else 186000) + (if b0306 then 0 else 186000) + (if b0307 then 0 else 186000) + (if b0308 then 0 else 186000) + (if b0309 then 0 else 186000) + (if b0310 then 0 else 186000) + (if b0311 then 0 else 186000) + (if b0312 then 0 else 186000) + (if b0313 then 0 else 186000) + (if b0314 then 0 else 186000) + (if b0315 then 0 else 186000) + (if b0316 then 0 else 186000) + (if b0317 then 0 else 186000) + (if b0318 then 0 else 186000) + (if b0319 then 0 else 186000) + (if b0320 then 0 else 186000) + (if b0321 then 0 else 186000) + (if b0322 then 0 else 186000) + (if b0323 then 0 else 186000) + (if b0324 then 0 else 186000) + (if b0325 then 0 else 186000) + (if b0326 then 0 else 186000) + (if b0327 then 0 else 186000) + (if b0328 then 0 else 186000) + (if b0329 then 0 else 186000) + (if b0330 then 0 else 186000) + (if b0331 then 0 else 186000) + (if b0332 then 0 else 186000) + (if b0333 then 0 else 186000) + (if b0334 then 0 else 186000) + (if b0335 then 0 else 186000) + (if b0336 then 0 else 186000) + (if b0337 then 0 else 186000) + (if b0338 then 0 else 186000) + (if b0339 then 0 else 186000) + (if b0340 then 0 else 186000) + (if b0341 then 0 else 186000) + (if b0376 then 0 else 186000) + (if b0378 then 0 else 186000) + (if b0379 then 0 else 186000) + (if b0380 then 0 else 186000) + (if b0381 then 0 else 186000) + (if b0382 then 0 else 186000) + (if b0383 then 0 else 186000) + (if b0385 then 0 else 186000) + (if b0386 then 0 else 186000) + (if b0387 then 0 else 186000) + (if b0388 then 0 else 186000) + (if b0389 then 0 else 186000) + (if b0390 then 0 else 186000) + (if b0422 then 0 else 186000) + (if b0424 then 0 else 186000) + (if b0425 then 0 else 186000) + (if b0426 then 0 else 186000) + (if b0427 then 0 else 186000) + (if b0428 then 0 else 186000) + (if b0429 then 0 else 186000) + (if b0430 then 0 else 186000) + (if b0431 then 0 else 186000) + (if b0432 then 0 else 186000) + (if b0433 then 0 else 186000) + (if b0435 then 0 else 186000) + (if b0436 then 0 else 186000) + (if b0437 then 0 else 186000) + (if b0438 then 0 else 186000) + (if b0439 then 0 else 186000) + (if b0440 then 0 else 186000) + (if b0441 then 0 else 186000) + (if b0442 then 0 else 186000) + (if b0443 then 0 else 186000) + (if b0444 then 0 else 186000) + (if b0445 then 0 else 186000) + (if b0446 then 0 else 186000) + (if b0447 then 0 else 186000) + (if b0448 then 0 else 186000) + (if b0449 then 0 else 186000) + (if b0450 then 0 else 186000) + (if b0451 then 0 else 186000) + (if b0452 then 0 else 186000) + (if b0453 then 0 else 186000) + (if b0454 then 0 else 186000) + (if b0455 then 0 else 186000) + (if b0456 then 0 else 186000) + (if b0457 then 0 else 186000) + (if b0458 then 0 else 186000) + (if b0459 then 0 else 186000) + (if b0460 then 0 else 186000) + (if b0461 then 0 else 186000) + (if b0462 then 0 else 186000) + (if b0463 then 0 else 186000) + (if b0464 then 0 else 186000) + (if b0465 then 0 else 186000) < 441
}
Prover Time taken = 6.687496
Added Horn clause: 63 && 57 && 64 && 0 && 0 => 65
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/linear-algebra/kernels/3mm/kernel3.bpl.ice2.bpl
Total learner time was 00:00:00.1364520
Verifying $kernel3: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool, b0228: bool, b0229: bool, b0230: bool, b0231: bool, b0232: bool, b0233: bool, b0234: bool, b0235: bool, b0236: bool, b0237: bool, b0238: bool, b0239: bool, b0240: bool, b0241: bool, b0242: bool, b0243: bool, b0244: bool, b0245: bool, b0246: bool, b0247: bool, b0248: bool, b0249: bool, b0250: bool, b0251: bool, b0252: bool, b0253: bool, b0254: bool, b0255: bool, b0256: bool, b0257: bool, b0258: bool, b0259: bool, b0260: bool, b0261: bool, b0262: bool, b0263: bool, b0264: bool, b0265: bool, b0266: bool, b0267: bool, b0268: bool, b0269: bool, b0270: bool, b0271: bool, b0272: bool, b0273: bool, b0274: bool, b0275: bool, b0276: bool, b0277: bool, b0278: bool, b0279: bool, b0280: bool, b0281: bool, b0282: bool, b0283: bool, b0284: bool, b0285: bool, b0286: bool, b0287: bool, b0288: bool, b0289: bool, b0290: bool, b0291: bool, b0292: bool, b0293: bool, b0294: bool, b0295: bool, b0296: bool, b0297: bool, b0298: bool, b0299: bool, b0300: bool, b0301: bool, b0302: bool, b0303: bool, b0304: bool, b0305: bool, b0306: bool, b0307: bool, b0308: bool, b0309: bool, b0310: bool, b0311: bool, b0312: bool, b0313: bool, b0314: bool, b0315: bool, b0316: bool, b0317: bool, b0318: bool, b0319: bool, b0320: bool, b0321: bool, b0322: bool, b0323: bool, b0324: bool, b0325: bool, b0326: bool, b0327: bool, b0328: bool, b0329: bool, b0330: bool, b0331: bool, b0332: bool, b0333: bool, b0334: bool, b0335: bool, b0336: bool, b0337: bool, b0338: bool, b0339: bool, b0340: bool, b0341: bool, b0342: bool, b0343: bool, b0344: bool, b0345: bool, b0346: bool, b0347: bool, b0348: bool, b0349: bool, b0350: bool, b0351: bool, b0352: bool, b0353: bool, b0354: bool, b0355: bool, b0356: bool, b0357: bool, b0358: bool, b0359: bool, b0360: bool, b0361: bool, b0362: bool, b0363: bool, b0364: bool, b0365: bool, b0366: bool, b0367: bool, b0368: bool, b0369: bool, b0370: bool, b0371: bool, b0372: bool, b0373: bool, b0374: bool, b0375: bool, b0376: bool, b0377: bool, b0378: bool, b0379: bool, b0380: bool, b0381: bool, b0382: bool, b0383: bool, b0384: bool, b0385: bool, b0386: bool, b0387: bool, b0388: bool, b0389: bool, b0390: bool, b0391: bool, b0392: bool, b0393: bool, b0394: bool, b0395: bool, b0396: bool, b0397: bool, b0398: bool, b0399: bool, b0400: bool, b0401: bool, b0402: bool, b0403: bool, b0404: bool, b0405: bool, b0406: bool, b0407: bool, b0408: bool, b0409: bool, b0410: bool, b0411: bool, b0412: bool, b0413: bool, b0414: bool, b0415: bool, b0416: bool, b0417: bool, b0418: bool, b0419: bool, b0420: bool, b0421: bool, b0422: bool, b0423: bool, b0424: bool, b0425: bool, b0426: bool, b0427: bool, b0428: bool, b0429: bool, b0430: bool, b0431: bool, b0432: bool, b0433: bool, b0434: bool, b0435: bool, b0436: bool, b0437: bool, b0438: bool, b0439: bool, b0440: bool, b0441: bool, b0442: bool, b0443: bool, b0444: bool, b0445: bool, b0446: bool, b0447: bool, b0448: bool, b0449: bool, b0450: bool, b0451: bool, b0452: bool, b0453: bool, b0454: bool, b0455: bool, b0456: bool, b0457: bool, b0458: bool, b0459: bool, b0460: bool, b0461: bool, b0462: bool, b0463: bool, b0464: bool, b0465: bool) : bool
{
  0 + (if b0000 then 0 else 186000) + (if b0001 then 0 else 186000) + (if b0002 then 0 else 186000) + (if b0003 then 0 else 186000) + (if b0004 then 0 else 186000) + (if b0005 then 0 else 186000) + (if b0006 then 0 else 186000) + (if b0007 then 0 else 186000) + (if b0008 then 0 else 186000) + (if b0009 then 0 else 186000) + (if b0010 then 0 else 186000) + (if b0011 then 0 else 186000) + (if b0012 then 0 else 186000) + (if b0013 then 0 else 186000) + (if b0014 then 0 else 186000) + (if b0015 then 0 else 186000) + (if b0016 then 0 else 186000) + (if b0017 then 0 else 186000) + (if b0018 then 0 else 186000) + (if b0019 then 0 else 186000) + (if b0020 then 0 else 186000) + (if b0021 then 0 else 186000) + (if b0022 then 0 else 186000) + (if b0023 then 0 else 186000) + (if b0024 then 0 else 186000) + (if b0025 then 0 else 186000) + (if b0026 then 0 else 186000) + (if b0027 then 0 else 186000) + (if b0028 then 0 else 186000) + (if b0029 then 0 else 186000) + (if b0030 then 0 else 186000) + (if b0031 then 0 else 186000) + (if b0032 then 0 else 186000) + (if b0033 then 0 else 186000) + (if b0034 then 0 else 186000) + (if b0035 then 0 else 186000) + (if b0036 then 0 else 186000) + (if b0037 then 0 else 186000) + (if b0038 then 0 else 186000) + (if b0039 then 0 else 186000) + (if b0040 then 0 else 186000) + (if b0041 then 0 else 186000) + (if b0042 then 0 else 186000) + (if b0043 then 0 else 186000) + (if b0044 then 0 else 186000) + (if b0045 then 0 else 186000) + (if b0046 then 0 else 186000) + (if b0047 then 0 else 186000) + (if b0048 then 0 else 186000) + (if b0049 then 0 else 186000) + (if b0050 then 0 else 186000) + (if b0051 then 0 else 186000) + (if b0052 then 0 else 186000) + (if b0053 then 0 else 186000) + (if b0054 then 0 else 186000) + (if b0055 then 0 else 186000) + (if b0056 then 0 else 186000) + (if b0057 then 0 else 186000) + (if b0058 then 0 else 186000) + (if b0059 then 0 else 186000) + (if b0060 then 0 else 186000) + (if b0061 then 0 else 186000) + (if b0062 then 0 else 186000) + (if b0063 then 0 else 186000) + (if b0064 then 0 else 186000) + (if b0065 then 0 else 186000) + (if b0066 then 0 else 186000) + (if b0067 then 0 else 186000) + (if b0068 then 0 else 186000) + (if b0069 then 0 else 186000) + (if b0070 then 0 else 186000) + (if b0071 then 0 else 186000) + (if b0072 then 0 else 186000) + (if b0073 then 0 else 186000) + (if b0074 then 0 else 186000) + (if b0075 then 0 else 186000) + (if b0076 then 0 else 186000) + (if b0077 then 0 else 186000) + (if b0078 then 0 else 186000) + (if b0079 then 0 else 186000) + (if b0080 then 0 else 186000) + (if b0081 then 0 else 186000) + (if b0082 then 0 else 186000) + (if b0083 then 0 else 186000) + (if b0084 then 0 else 186000) + (if b0085 then 0 else 186000) + (if b0086 then 0 else 186000) + (if b0087 then 0 else 186000) + (if b0088 then 0 else 186000) + (if b0089 then 0 else 186000) + (if b0090 then 0 else 186000) + (if b0091 then 0 else 186000) + (if b0092 then 0 else 186000) + (if b0093 then 0 else 186000) + (if b0094 then 0 else 186000) + (if b0095 then 0 else 186000) + (if b0096 then 0 else 186000) + (if b0097 then 0 else 186000) + (if b0098 then 0 else 186000) + (if b0099 then 0 else 186000) + (if b0100 then 0 else 186000) + (if b0101 then 0 else 186000) + (if b0102 then 0 else 186000) + (if b0103 then 0 else 186000) + (if b0104 then 0 else 186000) + (if b0105 then 0 else 186000) + (if b0106 then 0 else 186000) + (if b0107 then 0 else 186000) + (if b0108 then 0 else 186000) + (if b0109 then 0 else 186000) + (if b0110 then 0 else 186000) + (if b0111 then 0 else 186000) + (if b0112 then 0 else 186000) + (if b0113 then 0 else 186000) + (if b0114 then 0 else 186000) + (if b0115 then 0 else 186000) + (if b0116 then 0 else 186000) + (if b0118 then 0 else 186000) + (if b0120 then 0 else 186000) + (if b0121 then 0 else 186000) + (if b0122 then 0 else 186000) + (if b0123 then 0 else 186000) + (if b0124 then 0 else 186000) + (if b0125 then 0 else 186000) + (if b0126 then 0 else 186000) + (if b0127 then 0 else 186000) + (if b0128 then 0 else 186000) + (if b0129 then 0 else 186000) + (if b0130 then 0 else 186000) + (if b0131 then 0 else 186000) + (if b0132 then 0 else 186000) + (if b0134 then 0 else 186000) + (if b0136 then 0 else 186000) + (if b0137 then 0 else 186000) + (if b0138 then 0 else 186000) + (if b0139 then 0 else 186000) + (if b0141 then 0 else 186000) + (if b0142 then 0 else 186000) + (if b0143 then 0 else 186000) + (if b0144 then 0 else 186000) + (if b0145 then 0 else 186000) + (if b0147 then 0 else 186000) + (if b0148 then 0 else 186000) + (if b0149 then 0 else 186000) + (if b0150 then 0 else 186000) + (if b0151 then 0 else 186000) + (if b0154 then 0 else 186000) + (if b0156 then 0 else 186000) + (if b0157 then 0 else 186000) + (if b0158 then 0 else 186000) + (if b0159 then 0 else 186000) + (if b0160 then 0 else 186000) + (if b0162 then 0 else 186000) + (if b0163 then 0 else 186000) + (if b0164 then 0 else 186000) + (if b0167 then 0 else 186000) + (if b0169 then 0 else 186000) + (if b0172 then 0 else 186000) + (if b0174 then 0 else 186000) + (if b0175 then 0 else 186000) + (if b0176 then 0 else 186000) + (if b0177 then 0 else 186000) + (if b0181 then 0 else 186000) + (if b0182 then 0 else 186000) + (if b0183 then 0 else 186000) + (if b0184 then 0 else 186000) + (if b0185 then 0 else 186000) + (if b0186 then 0 else 186000) + (if b0187 then 0 else 186000) + (if b0188 then 0 else 186000) + (if b0189 then 0 else 186000) + (if b0190 then 0 else 186000) + (if b0191 then 0 else 186000) + (if b0192 then 0 else 186000) + (if b0193 then 0 else 186000) + (if b0195 then 0 else 186000) + (if b0197 then 0 else 186000) + (if b0198 then 0 else 186000) + (if b0199 then 0 else 186000) + (if b0200 then 0 else 186000) + (if b0201 then 0 else 186000) + (if b0203 then 0 else 186000) + (if b0205 then 0 else 186000) + (if b0206 then 0 else 186000) + (if b0207 then 0 else 186000) + (if b0208 then 0 else 186000) + (if b0210 then 0 else 186000) + (if b0212 then 0 else 186000) + (if b0214 then 0 else 186000) + (if b0215 then 0 else 186000) + (if b0216 then 0 else 186000) + (if b0217 then 0 else 186000) + (if b0218 then 0 else 186000) + (if b0220 then 0 else 186000) + (if b0222 then 0 else 186000) + (if b0223 then 0 else 186000) + (if b0224 then 0 else 186000) + (if b0225 then 0 else 186000) + (if b0227 then 0 else 186000) + (if b0228 then 0 else 186000) + (if b0229 then 0 else 186000) + (if b0230 then 0 else 186000) + (if b0232 then 0 else 186000) + (if b0235 then 0 else 186000) + (if b0237 then 0 else 186000) + (if b0238 then 0 else 186000) + (if b0239 then 0 else 186000) + (if b0240 then 0 else 186000) + (if b0241 then 0 else 186000) + (if b0242 then 0 else 186000) + (if b0243 then 0 else 186000) + (if b0244 then 0 else 186000) + (if b0245 then 0 else 186000) + (if b0246 then 0 else 186000) + (if b0247 then 0 else 186000) + (if b0248 then 0 else 186000) + (if b0249 then 0 else 186000) + (if b0250 then 0 else 186000) + (if b0251 then 0 else 186000) + (if b0252 then 0 else 186000) + (if b0253 then 0 else 186000) + (if b0254 then 0 else 186000) + (if b0255 then 0 else 186000) + (if b0256 then 0 else 186000) + (if b0257 then 0 else 186000) + (if b0258 then 0 else 186000) + (if b0259 then 0 else 186000) + (if b0260 then 0 else 186000) + (if b0261 then 0 else 186000) + (if b0262 then 0 else 186000) + (if b0263 then 0 else 186000) + (if b0264 then 0 else 186000) + (if b0265 then 0 else 186000) + (if b0266 then 0 else 186000) + (if b0267 then 0 else 186000) + (if b0268 then 0 else 186000) + (if b0269 then 0 else 186000) + (if b0270 then 0 else 186000) + (if b0271 then 0 else 186000) + (if b0272 then 0 else 186000) + (if b0273 then 0 else 186000) + (if b0274 then 0 else 186000) + (if b0275 then 0 else 186000) + (if b0276 then 0 else 186000) + (if b0277 then 0 else 186000) + (if b0278 then 0 else 186000) + (if b0279 then 0 else 186000) + (if b0280 then 0 else 186000) + (if b0281 then 0 else 186000) + (if b0282 then 0 else 186000) + (if b0283 then 0 else 186000) + (if b0284 then 0 else 186000) + (if b0285 then 0 else 186000) + (if b0286 then 0 else 186000) + (if b0287 then 0 else 186000) + (if b0288 then 0 else 186000) + (if b0289 then 0 else 186000) + (if b0290 then 0 else 186000) + (if b0291 then 0 else 186000) + (if b0292 then 0 else 186000) + (if b0293 then 0 else 186000) + (if b0294 then 0 else 186000) + (if b0295 then 0 else 186000) + (if b0296 then 0 else 186000) + (if b0297 then 0 else 186000) + (if b0298 then 0 else 186000) + (if b0299 then 0 else 186000) + (if b0300 then 0 else 186000) + (if b0301 then 0 else 186000) + (if b0302 then 0 else 186000) + (if b0303 then 0 else 186000) + (if b0304 then 0 else 186000) + (if b0305 then 0 else 186000) + (if b0306 then 0 else 186000) + (if b0307 then 0 else 186000) + (if b0308 then 0 else 186000) + (if b0309 then 0 else 186000) + (if b0310 then 0 else 186000) + (if b0311 then 0 else 186000) + (if b0312 then 0 else 186000) + (if b0313 then 0 else 186000) + (if b0314 then 0 else 186000) + (if b0315 then 0 else 186000) + (if b0316 then 0 else 186000) + (if b0317 then 0 else 186000) + (if b0318 then 0 else 186000) + (if b0319 then 0 else 186000) + (if b0320 then 0 else 186000) + (if b0321 then 0 else 186000) + (if b0322 then 0 else 186000) + (if b0323 then 0 else 186000) + (if b0324 then 0 else 186000) + (if b0325 then 0 else 186000) + (if b0326 then 0 else 186000) + (if b0327 then 0 else 186000) + (if b0328 then 0 else 186000) + (if b0329 then 0 else 186000) + (if b0330 then 0 else 186000) + (if b0331 then 0 else 186000) + (if b0332 then 0 else 186000) + (if b0333 then 0 else 186000) + (if b0334 then 0 else 186000) + (if b0335 then 0 else 186000) + (if b0336 then 0 else 186000) + (if b0337 then 0 else 186000) + (if b0338 then 0 else 186000) + (if b0339 then 0 else 186000) + (if b0340 then 0 else 186000) + (if b0341 then 0 else 186000) + (if b0376 then 0 else 186000) + (if b0378 then 0 else 186000) + (if b0379 then 0 else 186000) + (if b0380 then 0 else 186000) + (if b0381 then 0 else 186000) + (if b0382 then 0 else 186000) + (if b0383 then 0 else 186000) + (if b0385 then 0 else 186000) + (if b0386 then 0 else 186000) + (if b0387 then 0 else 186000) + (if b0388 then 0 else 186000) + (if b0389 then 0 else 186000) + (if b0390 then 0 else 186000) + (if b0422 then 0 else 186000) + (if b0424 then 0 else 186000) + (if b0425 then 0 else 186000) + (if b0426 then 0 else 186000) + (if b0427 then 0 else 186000) + (if b0428 then 0 else 186000) + (if b0429 then 0 else 186000) + (if b0430 then 0 else 186000) + (if b0431 then 0 else 186000) + (if b0432 then 0 else 186000) + (if b0433 then 0 else 186000) + (if b0435 then 0 else 186000) + (if b0436 then 0 else 186000) + (if b0437 then 0 else 186000) + (if b0438 then 0 else 186000) + (if b0439 then 0 else 186000) + (if b0440 then 0 else 186000) + (if b0441 then 0 else 186000) + (if b0442 then 0 else 186000) + (if b0443 then 0 else 186000) + (if b0444 then 0 else 186000) + (if b0445 then 0 else 186000) + (if b0446 then 0 else 186000) + (if b0447 then 0 else 186000) + (if b0448 then 0 else 186000) + (if b0449 then 0 else 186000) + (if b0450 then 0 else 186000) + (if b0451 then 0 else 186000) + (if b0452 then 0 else 186000) + (if b0453 then 0 else 186000) + (if b0454 then 0 else 186000) + (if b0455 then 0 else 186000) + (if b0456 then 0 else 186000) + (if b0457 then 0 else 186000) + (if b0458 then 0 else 186000) + (if b0459 then 0 else 186000) + (if b0460 then 0 else 186000) + (if b0461 then 0 else 186000) + (if b0462 then 0 else 186000) + (if b0463 then 0 else 186000) + (if b0464 then 0 else 186000) + (if b0465 then 0 else 186000) < 441
}
Prover Time taken = 7.908359
Added Horn clause: 63 && 57 && 64 && 0 && 0 && 0 && 65 => 66
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/linear-algebra/kernels/3mm/kernel3.bpl.ice2.bpl
Total learner time was 00:00:00.1399360
Verifying $kernel3: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool, b0228: bool, b0229: bool, b0230: bool, b0231: bool, b0232: bool, b0233: bool, b0234: bool, b0235: bool, b0236: bool, b0237: bool, b0238: bool, b0239: bool, b0240: bool, b0241: bool, b0242: bool, b0243: bool, b0244: bool, b0245: bool, b0246: bool, b0247: bool, b0248: bool, b0249: bool, b0250: bool, b0251: bool, b0252: bool, b0253: bool, b0254: bool, b0255: bool, b0256: bool, b0257: bool, b0258: bool, b0259: bool, b0260: bool, b0261: bool, b0262: bool, b0263: bool, b0264: bool, b0265: bool, b0266: bool, b0267: bool, b0268: bool, b0269: bool, b0270: bool, b0271: bool, b0272: bool, b0273: bool, b0274: bool, b0275: bool, b0276: bool, b0277: bool, b0278: bool, b0279: bool, b0280: bool, b0281: bool, b0282: bool, b0283: bool, b0284: bool, b0285: bool, b0286: bool, b0287: bool, b0288: bool, b0289: bool, b0290: bool, b0291: bool, b0292: bool, b0293: bool, b0294: bool, b0295: bool, b0296: bool, b0297: bool, b0298: bool, b0299: bool, b0300: bool, b0301: bool, b0302: bool, b0303: bool, b0304: bool, b0305: bool, b0306: bool, b0307: bool, b0308: bool, b0309: bool, b0310: bool, b0311: bool, b0312: bool, b0313: bool, b0314: bool, b0315: bool, b0316: bool, b0317: bool, b0318: bool, b0319: bool, b0320: bool, b0321: bool, b0322: bool, b0323: bool, b0324: bool, b0325: bool, b0326: bool, b0327: bool, b0328: bool, b0329: bool, b0330: bool, b0331: bool, b0332: bool, b0333: bool, b0334: bool, b0335: bool, b0336: bool, b0337: bool, b0338: bool, b0339: bool, b0340: bool, b0341: bool, b0342: bool, b0343: bool, b0344: bool, b0345: bool, b0346: bool, b0347: bool, b0348: bool, b0349: bool, b0350: bool, b0351: bool, b0352: bool, b0353: bool, b0354: bool, b0355: bool, b0356: bool, b0357: bool, b0358: bool, b0359: bool, b0360: bool, b0361: bool, b0362: bool, b0363: bool, b0364: bool, b0365: bool, b0366: bool, b0367: bool, b0368: bool, b0369: bool, b0370: bool, b0371: bool, b0372: bool, b0373: bool, b0374: bool, b0375: bool, b0376: bool, b0377: bool, b0378: bool, b0379: bool, b0380: bool, b0381: bool, b0382: bool, b0383: bool, b0384: bool, b0385: bool, b0386: bool, b0387: bool, b0388: bool, b0389: bool, b0390: bool, b0391: bool, b0392: bool, b0393: bool, b0394: bool, b0395: bool, b0396: bool, b0397: bool, b0398: bool, b0399: bool, b0400: bool, b0401: bool, b0402: bool, b0403: bool, b0404: bool, b0405: bool, b0406: bool, b0407: bool, b0408: bool, b0409: bool, b0410: bool, b0411: bool, b0412: bool, b0413: bool, b0414: bool, b0415: bool, b0416: bool, b0417: bool, b0418: bool, b0419: bool, b0420: bool, b0421: bool, b0422: bool, b0423: bool, b0424: bool, b0425: bool, b0426: bool, b0427: bool, b0428: bool, b0429: bool, b0430: bool, b0431: bool, b0432: bool, b0433: bool, b0434: bool, b0435: bool, b0436: bool, b0437: bool, b0438: bool, b0439: bool, b0440: bool, b0441: bool, b0442: bool, b0443: bool, b0444: bool, b0445: bool, b0446: bool, b0447: bool, b0448: bool, b0449: bool, b0450: bool, b0451: bool, b0452: bool, b0453: bool, b0454: bool, b0455: bool, b0456: bool, b0457: bool, b0458: bool, b0459: bool, b0460: bool, b0461: bool, b0462: bool, b0463: bool, b0464: bool, b0465: bool) : bool
{
  0 + (if b0000 then 0 else 186000) + (if b0001 then 0 else 186000) + (if b0002 then 0 else 186000) + (if b0003 then 0 else 186000) + (if b0004 then 0 else 186000) + (if b0005 then 0 else 186000) + (if b0006 then 0 else 186000) + (if b0007 then 0 else 186000) + (if b0008 then 0 else 186000) + (if b0009 then 0 else 186000) + (if b0010 then 0 else 186000) + (if b0011 then 0 else 186000) + (if b0012 then 0 else 186000) + (if b0013 then 0 else 186000) + (if b0014 then 0 else 186000) + (if b0015 then 0 else 186000) + (if b0016 then 0 else 186000) + (if b0017 then 0 else 186000) + (if b0018 then 0 else 186000) + (if b0019 then 0 else 186000) + (if b0020 then 0 else 186000) + (if b0021 then 0 else 186000) + (if b0022 then 0 else 186000) + (if b0023 then 0 else 186000) + (if b0024 then 0 else 186000) + (if b0025 then 0 else 186000) + (if b0026 then 0 else 186000) + (if b0027 then 0 else 186000) + (if b0028 then 0 else 186000) + (if b0029 then 0 else 186000) + (if b0030 then 0 else 186000) + (if b0031 then 0 else 186000) + (if b0032 then 0 else 186000) + (if b0033 then 0 else 186000) + (if b0034 then 0 else 186000) + (if b0035 then 0 else 186000) + (if b0036 then 0 else 186000) + (if b0037 then 0 else 186000) + (if b0038 then 0 else 186000) + (if b0039 then 0 else 186000) + (if b0040 then 0 else 186000) + (if b0041 then 0 else 186000) + (if b0042 then 0 else 186000) + (if b0043 then 0 else 186000) + (if b0044 then 0 else 186000) + (if b0045 then 0 else 186000) + (if b0046 then 0 else 186000) + (if b0047 then 0 else 186000) + (if b0048 then 0 else 186000) + (if b0049 then 0 else 186000) + (if b0050 then 0 else 186000) + (if b0051 then 0 else 186000) + (if b0052 then 0 else 186000) + (if b0053 then 0 else 186000) + (if b0054 then 0 else 186000) + (if b0055 then 0 else 186000) + (if b0056 then 0 else 186000) + (if b0057 then 0 else 186000) + (if b0058 then 0 else 186000) + (if b0059 then 0 else 186000) + (if b0060 then 0 else 186000) + (if b0061 then 0 else 186000) + (if b0062 then 0 else 186000) + (if b0063 then 0 else 186000) + (if b0064 then 0 else 186000) + (if b0065 then 0 else 186000) + (if b0066 then 0 else 186000) + (if b0067 then 0 else 186000) + (if b0068 then 0 else 186000) + (if b0069 then 0 else 186000) + (if b0070 then 0 else 186000) + (if b0071 then 0 else 186000) + (if b0072 then 0 else 186000) + (if b0073 then 0 else 186000) + (if b0074 then 0 else 186000) + (if b0075 then 0 else 186000) + (if b0076 then 0 else 186000) + (if b0077 then 0 else 186000) + (if b0078 then 0 else 186000) + (if b0079 then 0 else 186000) + (if b0080 then 0 else 186000) + (if b0081 then 0 else 186000) + (if b0082 then 0 else 186000) + (if b0083 then 0 else 186000) + (if b0084 then 0 else 186000) + (if b0085 then 0 else 186000) + (if b0086 then 0 else 186000) + (if b0087 then 0 else 186000) + (if b0088 then 0 else 186000) + (if b0089 then 0 else 186000) + (if b0090 then 0 else 186000) + (if b0091 then 0 else 186000) + (if b0092 then 0 else 186000) + (if b0093 then 0 else 186000) + (if b0094 then 0 else 186000) + (if b0095 then 0 else 186000) + (if b0096 then 0 else 186000) + (if b0097 then 0 else 186000) + (if b0098 then 0 else 186000) + (if b0099 then 0 else 186000) + (if b0100 then 0 else 186000) + (if b0101 then 0 else 186000) + (if b0102 then 0 else 186000) + (if b0103 then 0 else 186000) + (if b0104 then 0 else 186000) + (if b0105 then 0 else 186000) + (if b0106 then 0 else 186000) + (if b0107 then 0 else 186000) + (if b0108 then 0 else 186000) + (if b0109 then 0 else 186000) + (if b0110 then 0 else 186000) + (if b0111 then 0 else 186000) + (if b0112 then 0 else 186000) + (if b0113 then 0 else 186000) + (if b0114 then 0 else 186000) + (if b0115 then 0 else 186000) + (if b0116 then 0 else 186000) + (if b0118 then 0 else 186000) + (if b0120 then 0 else 186000) + (if b0121 then 0 else 186000) + (if b0122 then 0 else 186000) + (if b0123 then 0 else 186000) + (if b0124 then 0 else 186000) + (if b0125 then 0 else 186000) + (if b0126 then 0 else 186000) + (if b0127 then 0 else 186000) + (if b0128 then 0 else 186000) + (if b0129 then 0 else 186000) + (if b0130 then 0 else 186000) + (if b0131 then 0 else 186000) + (if b0132 then 0 else 186000) + (if b0134 then 0 else 186000) + (if b0136 then 0 else 186000) + (if b0137 then 0 else 186000) + (if b0138 then 0 else 186000) + (if b0139 then 0 else 186000) + (if b0141 then 0 else 186000) + (if b0142 then 0 else 186000) + (if b0143 then 0 else 186000) + (if b0144 then 0 else 186000) + (if b0145 then 0 else 186000) + (if b0147 then 0 else 186000) + (if b0148 then 0 else 186000) + (if b0149 then 0 else 186000) + (if b0150 then 0 else 186000) + (if b0151 then 0 else 186000) + (if b0154 then 0 else 186000) + (if b0156 then 0 else 186000) + (if b0157 then 0 else 186000) + (if b0158 then 0 else 186000) + (if b0159 then 0 else 186000) + (if b0160 then 0 else 186000) + (if b0162 then 0 else 186000) + (if b0163 then 0 else 186000) + (if b0164 then 0 else 186000) + (if b0167 then 0 else 186000) + (if b0169 then 0 else 186000) + (if b0172 then 0 else 186000) + (if b0174 then 0 else 186000) + (if b0175 then 0 else 186000) + (if b0176 then 0 else 186000) + (if b0177 then 0 else 186000) + (if b0181 then 0 else 186000) + (if b0182 then 0 else 186000) + (if b0183 then 0 else 186000) + (if b0184 then 0 else 186000) + (if b0185 then 0 else 186000) + (if b0186 then 0 else 186000) + (if b0187 then 0 else 186000) + (if b0188 then 0 else 186000) + (if b0189 then 0 else 186000) + (if b0190 then 0 else 186000) + (if b0191 then 0 else 186000) + (if b0192 then 0 else 186000) + (if b0193 then 0 else 186000) + (if b0195 then 0 else 186000) + (if b0197 then 0 else 186000) + (if b0198 then 0 else 186000) + (if b0199 then 0 else 186000) + (if b0200 then 0 else 186000) + (if b0205 then 0 else 186000) + (if b0206 then 0 else 186000) + (if b0207 then 0 else 186000) + (if b0208 then 0 else 186000) + (if b0210 then 0 else 186000) + (if b0212 then 0 else 186000) + (if b0214 then 0 else 186000) + (if b0215 then 0 else 186000) + (if b0216 then 0 else 186000) + (if b0217 then 0 else 186000) + (if b0218 then 0 else 186000) + (if b0220 then 0 else 186000) + (if b0222 then 0 else 186000) + (if b0223 then 0 else 186000) + (if b0224 then 0 else 186000) + (if b0225 then 0 else 186000) + (if b0227 then 0 else 186000) + (if b0228 then 0 else 186000) + (if b0229 then 0 else 186000) + (if b0230 then 0 else 186000) + (if b0232 then 0 else 186000) + (if b0235 then 0 else 186000) + (if b0237 then 0 else 186000) + (if b0238 then 0 else 186000) + (if b0239 then 0 else 186000) + (if b0240 then 0 else 186000) + (if b0241 then 0 else 186000) + (if b0242 then 0 else 186000) + (if b0243 then 0 else 186000) + (if b0244 then 0 else 186000) + (if b0245 then 0 else 186000) + (if b0246 then 0 else 186000) + (if b0247 then 0 else 186000) + (if b0248 then 0 else 186000) + (if b0249 then 0 else 186000) + (if b0250 then 0 else 186000) + (if b0251 then 0 else 186000) + (if b0252 then 0 else 186000) + (if b0253 then 0 else 186000) + (if b0254 then 0 else 186000) + (if b0255 then 0 else 186000) + (if b0256 then 0 else 186000) + (if b0257 then 0 else 186000) + (if b0258 then 0 else 186000) + (if b0259 then 0 else 186000) + (if b0260 then 0 else 186000) + (if b0261 then 0 else 186000) + (if b0262 then 0 else 186000) + (if b0263 then 0 else 186000) + (if b0264 then 0 else 186000) + (if b0265 then 0 else 186000) + (if b0266 then 0 else 186000) + (if b0267 then 0 else 186000) + (if b0268 then 0 else 186000) + (if b0269 then 0 else 186000) + (if b0270 then 0 else 186000) + (if b0271 then 0 else 186000) + (if b0272 then 0 else 186000) + (if b0273 then 0 else 186000) + (if b0274 then 0 else 186000) + (if b0275 then 0 else 186000) + (if b0276 then 0 else 186000) + (if b0277 then 0 else 186000) + (if b0278 then 0 else 186000) + (if b0279 then 0 else 186000) + (if b0280 then 0 else 186000) + (if b0281 then 0 else 186000) + (if b0282 then 0 else 186000) + (if b0283 then 0 else 186000) + (if b0284 then 0 else 186000) + (if b0285 then 0 else 186000) + (if b0286 then 0 else 186000) + (if b0287 then 0 else 186000) + (if b0288 then 0 else 186000) + (if b0289 then 0 else 186000) + (if b0290 then 0 else 186000) + (if b0291 then 0 else 186000) + (if b0292 then 0 else 186000) + (if b0293 then 0 else 186000) + (if b0294 then 0 else 186000) + (if b0295 then 0 else 186000) + (if b0296 then 0 else 186000) + (if b0297 then 0 else 186000) + (if b0298 then 0 else 186000) + (if b0299 then 0 else 186000) + (if b0300 then 0 else 186000) + (if b0301 then 0 else 186000) + (if b0302 then 0 else 186000) + (if b0303 then 0 else 186000) + (if b0304 then 0 else 186000) + (if b0305 then 0 else 186000) + (if b0306 then 0 else 186000) + (if b0307 then 0 else 186000) + (if b0308 then 0 else 186000) + (if b0309 then 0 else 186000) + (if b0310 then 0 else 186000) + (if b0311 then 0 else 186000) + (if b0312 then 0 else 186000) + (if b0313 then 0 else 186000) + (if b0314 then 0 else 186000) + (if b0315 then 0 else 186000) + (if b0316 then 0 else 186000) + (if b0317 then 0 else 186000) + (if b0318 then 0 else 186000) + (if b0319 then 0 else 186000) + (if b0320 then 0 else 186000) + (if b0321 then 0 else 186000) + (if b0322 then 0 else 186000) + (if b0323 then 0 else 186000) + (if b0324 then 0 else 186000) + (if b0325 then 0 else 186000) + (if b0326 then 0 else 186000) + (if b0327 then 0 else 186000) + (if b0328 then 0 else 186000) + (if b0329 then 0 else 186000) + (if b0330 then 0 else 186000) + (if b0331 then 0 else 186000) + (if b0332 then 0 else 186000) + (if b0333 then 0 else 186000) + (if b0334 then 0 else 186000) + (if b0335 then 0 else 186000) + (if b0336 then 0 else 186000) + (if b0337 then 0 else 186000) + (if b0338 then 0 else 186000) + (if b0339 then 0 else 186000) + (if b0340 then 0 else 186000) + (if b0341 then 0 else 186000) + (if b0376 then 0 else 186000) + (if b0378 then 0 else 186000) + (if b0379 then 0 else 186000) + (if b0380 then 0 else 186000) + (if b0381 then 0 else 186000) + (if b0382 then 0 else 186000) + (if b0383 then 0 else 186000) + (if b0385 then 0 else 186000) + (if b0386 then 0 else 186000) + (if b0387 then 0 else 186000) + (if b0388 then 0 else 186000) + (if b0389 then 0 else 186000) + (if b0390 then 0 else 186000) + (if b0422 then 0 else 186000) + (if b0424 then 0 else 186000) + (if b0425 then 0 else 186000) + (if b0426 then 0 else 186000) + (if b0427 then 0 else 186000) + (if b0428 then 0 else 186000) + (if b0429 then 0 else 186000) + (if b0430 then 0 else 186000) + (if b0431 then 0 else 186000) + (if b0432 then 0 else 186000) + (if b0433 then 0 else 186000) + (if b0435 then 0 else 186000) + (if b0436 then 0 else 186000) + (if b0437 then 0 else 186000) + (if b0438 then 0 else 186000) + (if b0439 then 0 else 186000) + (if b0440 then 0 else 186000) + (if b0441 then 0 else 186000) + (if b0442 then 0 else 186000) + (if b0443 then 0 else 186000) + (if b0444 then 0 else 186000) + (if b0445 then 0 else 186000) + (if b0446 then 0 else 186000) + (if b0447 then 0 else 186000) + (if b0448 then 0 else 186000) + (if b0449 then 0 else 186000) + (if b0450 then 0 else 186000) + (if b0451 then 0 else 186000) + (if b0452 then 0 else 186000) + (if b0453 then 0 else 186000) + (if b0454 then 0 else 186000) + (if b0455 then 0 else 186000) + (if b0456 then 0 else 186000) + (if b0457 then 0 else 186000) + (if b0458 then 0 else 186000) + (if b0459 then 0 else 186000) + (if b0460 then 0 else 186000) + (if b0461 then 0 else 186000) + (if b0462 then 0 else 186000) + (if b0463 then 0 else 186000) + (if b0464 then 0 else 186000) + (if b0465 then 0 else 186000) < 441
}
Prover Time taken = 17.90737
Added Horn clause: 63 && 57 && 64 && 0 && 0 && 0 && 65 && 0 && 67 => 68
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/linear-algebra/kernels/3mm/kernel3.bpl.ice2.bpl
Total learner time was 00:00:00.1381140
Verifying $kernel3: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool, b0228: bool, b0229: bool, b0230: bool, b0231: bool, b0232: bool, b0233: bool, b0234: bool, b0235: bool, b0236: bool, b0237: bool, b0238: bool, b0239: bool, b0240: bool, b0241: bool, b0242: bool, b0243: bool, b0244: bool, b0245: bool, b0246: bool, b0247: bool, b0248: bool, b0249: bool, b0250: bool, b0251: bool, b0252: bool, b0253: bool, b0254: bool, b0255: bool, b0256: bool, b0257: bool, b0258: bool, b0259: bool, b0260: bool, b0261: bool, b0262: bool, b0263: bool, b0264: bool, b0265: bool, b0266: bool, b0267: bool, b0268: bool, b0269: bool, b0270: bool, b0271: bool, b0272: bool, b0273: bool, b0274: bool, b0275: bool, b0276: bool, b0277: bool, b0278: bool, b0279: bool, b0280: bool, b0281: bool, b0282: bool, b0283: bool, b0284: bool, b0285: bool, b0286: bool, b0287: bool, b0288: bool, b0289: bool, b0290: bool, b0291: bool, b0292: bool, b0293: bool, b0294: bool, b0295: bool, b0296: bool, b0297: bool, b0298: bool, b0299: bool, b0300: bool, b0301: bool, b0302: bool, b0303: bool, b0304: bool, b0305: bool, b0306: bool, b0307: bool, b0308: bool, b0309: bool, b0310: bool, b0311: bool, b0312: bool, b0313: bool, b0314: bool, b0315: bool, b0316: bool, b0317: bool, b0318: bool, b0319: bool, b0320: bool, b0321: bool, b0322: bool, b0323: bool, b0324: bool, b0325: bool, b0326: bool, b0327: bool, b0328: bool, b0329: bool, b0330: bool, b0331: bool, b0332: bool, b0333: bool, b0334: bool, b0335: bool, b0336: bool, b0337: bool, b0338: bool, b0339: bool, b0340: bool, b0341: bool, b0342: bool, b0343: bool, b0344: bool, b0345: bool, b0346: bool, b0347: bool, b0348: bool, b0349: bool, b0350: bool, b0351: bool, b0352: bool, b0353: bool, b0354: bool, b0355: bool, b0356: bool, b0357: bool, b0358: bool, b0359: bool, b0360: bool, b0361: bool, b0362: bool, b0363: bool, b0364: bool, b0365: bool, b0366: bool, b0367: bool, b0368: bool, b0369: bool, b0370: bool, b0371: bool, b0372: bool, b0373: bool, b0374: bool, b0375: bool, b0376: bool, b0377: bool, b0378: bool, b0379: bool, b0380: bool, b0381: bool, b0382: bool, b0383: bool, b0384: bool, b0385: bool, b0386: bool, b0387: bool, b0388: bool, b0389: bool, b0390: bool, b0391: bool, b0392: bool, b0393: bool, b0394: bool, b0395: bool, b0396: bool, b0397: bool, b0398: bool, b0399: bool, b0400: bool, b0401: bool, b0402: bool, b0403: bool, b0404: bool, b0405: bool, b0406: bool, b0407: bool, b0408: bool, b0409: bool, b0410: bool, b0411: bool, b0412: bool, b0413: bool, b0414: bool, b0415: bool, b0416: bool, b0417: bool, b0418: bool, b0419: bool, b0420: bool, b0421: bool, b0422: bool, b0423: bool, b0424: bool, b0425: bool, b0426: bool, b0427: bool, b0428: bool, b0429: bool, b0430: bool, b0431: bool, b0432: bool, b0433: bool, b0434: bool, b0435: bool, b0436: bool, b0437: bool, b0438: bool, b0439: bool, b0440: bool, b0441: bool, b0442: bool, b0443: bool, b0444: bool, b0445: bool, b0446: bool, b0447: bool, b0448: bool, b0449: bool, b0450: bool, b0451: bool, b0452: bool, b0453: bool, b0454: bool, b0455: bool, b0456: bool, b0457: bool, b0458: bool, b0459: bool, b0460: bool, b0461: bool, b0462: bool, b0463: bool, b0464: bool, b0465: bool) : bool
{
  0 + (if b0000 then 0 else 186000) + (if b0001 then 0 else 186000) + (if b0002 then 0 else 186000) + (if b0003 then 0 else 186000) + (if b0004 then 0 else 186000) + (if b0005 then 0 else 186000) + (if b0006 then 0 else 186000) + (if b0007 then 0 else 186000) + (if b0008 then 0 else 186000) + (if b0009 then 0 else 186000) + (if b0010 then 0 else 186000) + (if b0011 then 0 else 186000) + (if b0012 then 0 else 186000) + (if b0013 then 0 else 186000) + (if b0014 then 0 else 186000) + (if b0015 then 0 else 186000) + (if b0016 then 0 else 186000) + (if b0017 then 0 else 186000) + (if b0018 then 0 else 186000) + (if b0019 then 0 else 186000) + (if b0020 then 0 else 186000) + (if b0021 then 0 else 186000) + (if b0022 then 0 else 186000) + (if b0023 then 0 else 186000) + (if b0024 then 0 else 186000) + (if b0025 then 0 else 186000) + (if b0026 then 0 else 186000) + (if b0027 then 0 else 186000) + (if b0028 then 0 else 186000) + (if b0029 then 0 else 186000) + (if b0030 then 0 else 186000) + (if b0031 then 0 else 186000) + (if b0032 then 0 else 186000) + (if b0033 then 0 else 186000) + (if b0034 then 0 else 186000) + (if b0035 then 0 else 186000) + (if b0036 then 0 else 186000) + (if b0037 then 0 else 186000) + (if b0038 then 0 else 186000) + (if b0039 then 0 else 186000) + (if b0040 then 0 else 186000) + (if b0041 then 0 else 186000) + (if b0042 then 0 else 186000) + (if b0043 then 0 else 186000) + (if b0044 then 0 else 186000) + (if b0045 then 0 else 186000) + (if b0046 then 0 else 186000) + (if b0047 then 0 else 186000) + (if b0048 then 0 else 186000) + (if b0049 then 0 else 186000) + (if b0050 then 0 else 186000) + (if b0051 then 0 else 186000) + (if b0052 then 0 else 186000) + (if b0053 then 0 else 186000) + (if b0054 then 0 else 186000) + (if b0055 then 0 else 186000) + (if b0056 then 0 else 186000) + (if b0057 then 0 else 186000) + (if b0058 then 0 else 186000) + (if b0059 then 0 else 186000) + (if b0060 then 0 else 186000) + (if b0061 then 0 else 186000) + (if b0062 then 0 else 186000) + (if b0063 then 0 else 186000) + (if b0064 then 0 else 186000) + (if b0065 then 0 else 186000) + (if b0066 then 0 else 186000) + (if b0067 then 0 else 186000) + (if b0068 then 0 else 186000) + (if b0069 then 0 else 186000) + (if b0070 then 0 else 186000) + (if b0071 then 0 else 186000) + (if b0072 then 0 else 186000) + (if b0073 then 0 else 186000) + (if b0074 then 0 else 186000) + (if b0075 then 0 else 186000) + (if b0076 then 0 else 186000) + (if b0077 then 0 else 186000) + (if b0078 then 0 else 186000) + (if b0079 then 0 else 186000) + (if b0080 then 0 else 186000) + (if b0081 then 0 else 186000) + (if b0082 then 0 else 186000) + (if b0083 then 0 else 186000) + (if b0084 then 0 else 186000) + (if b0085 then 0 else 186000) + (if b0086 then 0 else 186000) + (if b0087 then 0 else 186000) + (if b0088 then 0 else 186000) + (if b0089 then 0 else 186000) + (if b0090 then 0 else 186000) + (if b0091 then 0 else 186000) + (if b0092 then 0 else 186000) + (if b0093 then 0 else 186000) + (if b0094 then 0 else 186000) + (if b0095 then 0 else 186000) + (if b0096 then 0 else 186000) + (if b0097 then 0 else 186000) + (if b0098 then 0 else 186000) + (if b0099 then 0 else 186000) + (if b0100 then 0 else 186000) + (if b0101 then 0 else 186000) + (if b0102 then 0 else 186000) + (if b0103 then 0 else 186000) + (if b0104 then 0 else 186000) + (if b0105 then 0 else 186000) + (if b0106 then 0 else 186000) + (if b0107 then 0 else 186000) + (if b0108 then 0 else 186000) + (if b0109 then 0 else 186000) + (if b0110 then 0 else 186000) + (if b0111 then 0 else 186000) + (if b0112 then 0 else 186000) + (if b0113 then 0 else 186000) + (if b0114 then 0 else 186000) + (if b0115 then 0 else 186000) + (if b0116 then 0 else 186000) + (if b0118 then 0 else 186000) + (if b0120 then 0 else 186000) + (if b0121 then 0 else 186000) + (if b0122 then 0 else 186000) + (if b0123 then 0 else 186000) + (if b0124 then 0 else 186000) + (if b0125 then 0 else 186000) + (if b0126 then 0 else 186000) + (if b0127 then 0 else 186000) + (if b0128 then 0 else 186000) + (if b0129 then 0 else 186000) + (if b0130 then 0 else 186000) + (if b0131 then 0 else 186000) + (if b0132 then 0 else 186000) + (if b0134 then 0 else 186000) + (if b0136 then 0 else 186000) + (if b0137 then 0 else 186000) + (if b0138 then 0 else 186000) + (if b0139 then 0 else 186000) + (if b0141 then 0 else 186000) + (if b0142 then 0 else 186000) + (if b0143 then 0 else 186000) + (if b0144 then 0 else 186000) + (if b0145 then 0 else 186000) + (if b0147 then 0 else 186000) + (if b0148 then 0 else 186000) + (if b0149 then 0 else 186000) + (if b0150 then 0 else 186000) + (if b0151 then 0 else 186000) + (if b0154 then 0 else 186000) + (if b0156 then 0 else 186000) + (if b0157 then 0 else 186000) + (if b0158 then 0 else 186000) + (if b0159 then 0 else 186000) + (if b0160 then 0 else 186000) + (if b0162 then 0 else 186000) + (if b0163 then 0 else 186000) + (if b0164 then 0 else 186000) + (if b0167 then 0 else 186000) + (if b0169 then 0 else 186000) + (if b0172 then 0 else 186000) + (if b0174 then 0 else 186000) + (if b0175 then 0 else 186000) + (if b0176 then 0 else 186000) + (if b0177 then 0 else 186000) + (if b0181 then 0 else 186000) + (if b0182 then 0 else 186000) + (if b0183 then 0 else 186000) + (if b0184 then 0 else 186000) + (if b0185 then 0 else 186000) + (if b0186 then 0 else 186000) + (if b0187 then 0 else 186000) + (if b0188 then 0 else 186000) + (if b0189 then 0 else 186000) + (if b0190 then 0 else 186000) + (if b0191 then 0 else 186000) + (if b0192 then 0 else 186000) + (if b0193 then 0 else 186000) + (if b0195 then 0 else 186000) + (if b0197 then 0 else 186000) + (if b0198 then 0 else 186000) + (if b0199 then 0 else 186000) + (if b0200 then 0 else 186000) + (if b0205 then 0 else 186000) + (if b0206 then 0 else 186000) + (if b0207 then 0 else 186000) + (if b0208 then 0 else 186000) + (if b0210 then 0 else 186000) + (if b0212 then 0 else 186000) + (if b0214 then 0 else 186000) + (if b0215 then 0 else 186000) + (if b0216 then 0 else 186000) + (if b0217 then 0 else 186000) + (if b0222 then 0 else 186000) + (if b0223 then 0 else 186000) + (if b0224 then 0 else 186000) + (if b0225 then 0 else 186000) + (if b0227 then 0 else 186000) + (if b0228 then 0 else 186000) + (if b0229 then 0 else 186000) + (if b0230 then 0 else 186000) + (if b0232 then 0 else 186000) + (if b0235 then 0 else 186000) + (if b0237 then 0 else 186000) + (if b0238 then 0 else 186000) + (if b0239 then 0 else 186000) + (if b0240 then 0 else 186000) + (if b0241 then 0 else 186000) + (if b0242 then 0 else 186000) + (if b0243 then 0 else 186000) + (if b0244 then 0 else 186000) + (if b0245 then 0 else 186000) + (if b0246 then 0 else 186000) + (if b0247 then 0 else 186000) + (if b0248 then 0 else 186000) + (if b0249 then 0 else 186000) + (if b0250 then 0 else 186000) + (if b0251 then 0 else 186000) + (if b0252 then 0 else 186000) + (if b0253 then 0 else 186000) + (if b0254 then 0 else 186000) + (if b0255 then 0 else 186000) + (if b0256 then 0 else 186000) + (if b0257 then 0 else 186000) + (if b0258 then 0 else 186000) + (if b0259 then 0 else 186000) + (if b0260 then 0 else 186000) + (if b0261 then 0 else 186000) + (if b0262 then 0 else 186000) + (if b0263 then 0 else 186000) + (if b0264 then 0 else 186000) + (if b0265 then 0 else 186000) + (if b0266 then 0 else 186000) + (if b0267 then 0 else 186000) + (if b0268 then 0 else 186000) + (if b0269 then 0 else 186000) + (if b0270 then 0 else 186000) + (if b0271 then 0 else 186000) + (if b0272 then 0 else 186000) + (if b0273 then 0 else 186000) + (if b0274 then 0 else 186000) + (if b0275 then 0 else 186000) + (if b0276 then 0 else 186000) + (if b0277 then 0 else 186000) + (if b0278 then 0 else 186000) + (if b0279 then 0 else 186000) + (if b0280 then 0 else 186000) + (if b0281 then 0 else 186000) + (if b0282 then 0 else 186000) + (if b0283 then 0 else 186000) + (if b0284 then 0 else 186000) + (if b0285 then 0 else 186000) + (if b0286 then 0 else 186000) + (if b0287 then 0 else 186000) + (if b0288 then 0 else 186000) + (if b0289 then 0 else 186000) + (if b0290 then 0 else 186000) + (if b0291 then 0 else 186000) + (if b0292 then 0 else 186000) + (if b0293 then 0 else 186000) + (if b0294 then 0 else 186000) + (if b0295 then 0 else 186000) + (if b0296 then 0 else 186000) + (if b0297 then 0 else 186000) + (if b0298 then 0 else 186000) + (if b0299 then 0 else 186000) + (if b0300 then 0 else 186000) + (if b0301 then 0 else 186000) + (if b0302 then 0 else 186000) + (if b0303 then 0 else 186000) + (if b0304 then 0 else 186000) + (if b0305 then 0 else 186000) + (if b0306 then 0 else 186000) + (if b0307 then 0 else 186000) + (if b0308 then 0 else 186000) + (if b0309 then 0 else 186000) + (if b0310 then 0 else 186000) + (if b0311 then 0 else 186000) + (if b0312 then 0 else 186000) + (if b0313 then 0 else 186000) + (if b0314 then 0 else 186000) + (if b0315 then 0 else 186000) + (if b0316 then 0 else 186000) + (if b0317 then 0 else 186000) + (if b0318 then 0 else 186000) + (if b0319 then 0 else 186000) + (if b0320 then 0 else 186000) + (if b0321 then 0 else 186000) + (if b0322 then 0 else 186000) + (if b0323 then 0 else 186000) + (if b0324 then 0 else 186000) + (if b0325 then 0 else 186000) + (if b0326 then 0 else 186000) + (if b0327 then 0 else 186000) + (if b0328 then 0 else 186000) + (if b0329 then 0 else 186000) + (if b0330 then 0 else 186000) + (if b0331 then 0 else 186000) + (if b0332 then 0 else 186000) + (if b0333 then 0 else 186000) + (if b0334 then 0 else 186000) + (if b0335 then 0 else 186000) + (if b0336 then 0 else 186000) + (if b0337 then 0 else 186000) + (if b0338 then 0 else 186000) + (if b0339 then 0 else 186000) + (if b0340 then 0 else 186000) + (if b0341 then 0 else 186000) + (if b0376 then 0 else 186000) + (if b0378 then 0 else 186000) + (if b0379 then 0 else 186000) + (if b0380 then 0 else 186000) + (if b0381 then 0 else 186000) + (if b0382 then 0 else 186000) + (if b0383 then 0 else 186000) + (if b0385 then 0 else 186000) + (if b0386 then 0 else 186000) + (if b0387 then 0 else 186000) + (if b0388 then 0 else 186000) + (if b0389 then 0 else 186000) + (if b0390 then 0 else 186000) + (if b0422 then 0 else 186000) + (if b0424 then 0 else 186000) + (if b0425 then 0 else 186000) + (if b0426 then 0 else 186000) + (if b0427 then 0 else 186000) + (if b0428 then 0 else 186000) + (if b0429 then 0 else 186000) + (if b0430 then 0 else 186000) + (if b0431 then 0 else 186000) + (if b0432 then 0 else 186000) + (if b0433 then 0 else 186000) + (if b0435 then 0 else 186000) + (if b0436 then 0 else 186000) + (if b0437 then 0 else 186000) + (if b0438 then 0 else 186000) + (if b0439 then 0 else 186000) + (if b0440 then 0 else 186000) + (if b0441 then 0 else 186000) + (if b0442 then 0 else 186000) + (if b0443 then 0 else 186000) + (if b0444 then 0 else 186000) + (if b0445 then 0 else 186000) + (if b0446 then 0 else 186000) + (if b0447 then 0 else 186000) + (if b0448 then 0 else 186000) + (if b0449 then 0 else 186000) + (if b0450 then 0 else 186000) + (if b0451 then 0 else 186000) + (if b0452 then 0 else 186000) + (if b0453 then 0 else 186000) + (if b0454 then 0 else 186000) + (if b0455 then 0 else 186000) + (if b0456 then 0 else 186000) + (if b0457 then 0 else 186000) + (if b0458 then 0 else 186000) + (if b0459 then 0 else 186000) + (if b0460 then 0 else 186000) + (if b0461 then 0 else 186000) + (if b0462 then 0 else 186000) + (if b0463 then 0 else 186000) + (if b0464 then 0 else 186000) + (if b0465 then 0 else 186000) < 441
}
Prover Time taken = 7.668826
Added Horn clause: 63 && 57 && 64 && 0 && 0 && 0 && 69 && 0 && 70 && 0 && 71 => 72
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/linear-algebra/kernels/3mm/kernel3.bpl.ice2.bpl
Total learner time was 00:00:00.1360930
Verifying $kernel3: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool, b0228: bool, b0229: bool, b0230: bool, b0231: bool, b0232: bool, b0233: bool, b0234: bool, b0235: bool, b0236: bool, b0237: bool, b0238: bool, b0239: bool, b0240: bool, b0241: bool, b0242: bool, b0243: bool, b0244: bool, b0245: bool, b0246: bool, b0247: bool, b0248: bool, b0249: bool, b0250: bool, b0251: bool, b0252: bool, b0253: bool, b0254: bool, b0255: bool, b0256: bool, b0257: bool, b0258: bool, b0259: bool, b0260: bool, b0261: bool, b0262: bool, b0263: bool, b0264: bool, b0265: bool, b0266: bool, b0267: bool, b0268: bool, b0269: bool, b0270: bool, b0271: bool, b0272: bool, b0273: bool, b0274: bool, b0275: bool, b0276: bool, b0277: bool, b0278: bool, b0279: bool, b0280: bool, b0281: bool, b0282: bool, b0283: bool, b0284: bool, b0285: bool, b0286: bool, b0287: bool, b0288: bool, b0289: bool, b0290: bool, b0291: bool, b0292: bool, b0293: bool, b0294: bool, b0295: bool, b0296: bool, b0297: bool, b0298: bool, b0299: bool, b0300: bool, b0301: bool, b0302: bool, b0303: bool, b0304: bool, b0305: bool, b0306: bool, b0307: bool, b0308: bool, b0309: bool, b0310: bool, b0311: bool, b0312: bool, b0313: bool, b0314: bool, b0315: bool, b0316: bool, b0317: bool, b0318: bool, b0319: bool, b0320: bool, b0321: bool, b0322: bool, b0323: bool, b0324: bool, b0325: bool, b0326: bool, b0327: bool, b0328: bool, b0329: bool, b0330: bool, b0331: bool, b0332: bool, b0333: bool, b0334: bool, b0335: bool, b0336: bool, b0337: bool, b0338: bool, b0339: bool, b0340: bool, b0341: bool, b0342: bool, b0343: bool, b0344: bool, b0345: bool, b0346: bool, b0347: bool, b0348: bool, b0349: bool, b0350: bool, b0351: bool, b0352: bool, b0353: bool, b0354: bool, b0355: bool, b0356: bool, b0357: bool, b0358: bool, b0359: bool, b0360: bool, b0361: bool, b0362: bool, b0363: bool, b0364: bool, b0365: bool, b0366: bool, b0367: bool, b0368: bool, b0369: bool, b0370: bool, b0371: bool, b0372: bool, b0373: bool, b0374: bool, b0375: bool, b0376: bool, b0377: bool, b0378: bool, b0379: bool, b0380: bool, b0381: bool, b0382: bool, b0383: bool, b0384: bool, b0385: bool, b0386: bool, b0387: bool, b0388: bool, b0389: bool, b0390: bool, b0391: bool, b0392: bool, b0393: bool, b0394: bool, b0395: bool, b0396: bool, b0397: bool, b0398: bool, b0399: bool, b0400: bool, b0401: bool, b0402: bool, b0403: bool, b0404: bool, b0405: bool, b0406: bool, b0407: bool, b0408: bool, b0409: bool, b0410: bool, b0411: bool, b0412: bool, b0413: bool, b0414: bool, b0415: bool, b0416: bool, b0417: bool, b0418: bool, b0419: bool, b0420: bool, b0421: bool, b0422: bool, b0423: bool, b0424: bool, b0425: bool, b0426: bool, b0427: bool, b0428: bool, b0429: bool, b0430: bool, b0431: bool, b0432: bool, b0433: bool, b0434: bool, b0435: bool, b0436: bool, b0437: bool, b0438: bool, b0439: bool, b0440: bool, b0441: bool, b0442: bool, b0443: bool, b0444: bool, b0445: bool, b0446: bool, b0447: bool, b0448: bool, b0449: bool, b0450: bool, b0451: bool, b0452: bool, b0453: bool, b0454: bool, b0455: bool, b0456: bool, b0457: bool, b0458: bool, b0459: bool, b0460: bool, b0461: bool, b0462: bool, b0463: bool, b0464: bool, b0465: bool) : bool
{
  0 + (if b0000 then 0 else 186000) + (if b0001 then 0 else 186000) + (if b0002 then 0 else 186000) + (if b0003 then 0 else 186000) + (if b0004 then 0 else 186000) + (if b0005 then 0 else 186000) + (if b0006 then 0 else 186000) + (if b0007 then 0 else 186000) + (if b0008 then 0 else 186000) + (if b0009 then 0 else 186000) + (if b0010 then 0 else 186000) + (if b0011 then 0 else 186000) + (if b0012 then 0 else 186000) + (if b0013 then 0 else 186000) + (if b0014 then 0 else 186000) + (if b0015 then 0 else 186000) + (if b0016 then 0 else 186000) + (if b0017 then 0 else 186000) + (if b0018 then 0 else 186000) + (if b0019 then 0 else 186000) + (if b0020 then 0 else 186000) + (if b0021 then 0 else 186000) + (if b0022 then 0 else 186000) + (if b0023 then 0 else 186000) + (if b0024 then 0 else 186000) + (if b0025 then 0 else 186000) + (if b0026 then 0 else 186000) + (if b0027 then 0 else 186000) + (if b0028 then 0 else 186000) + (if b0029 then 0 else 186000) + (if b0030 then 0 else 186000) + (if b0031 then 0 else 186000) + (if b0032 then 0 else 186000) + (if b0033 then 0 else 186000) + (if b0034 then 0 else 186000) + (if b0035 then 0 else 186000) + (if b0036 then 0 else 186000) + (if b0037 then 0 else 186000) + (if b0038 then 0 else 186000) + (if b0039 then 0 else 186000) + (if b0040 then 0 else 186000) + (if b0041 then 0 else 186000) + (if b0042 then 0 else 186000) + (if b0043 then 0 else 186000) + (if b0044 then 0 else 186000) + (if b0045 then 0 else 186000) + (if b0046 then 0 else 186000) + (if b0047 then 0 else 186000) + (if b0048 then 0 else 186000) + (if b0049 then 0 else 186000) + (if b0050 then 0 else 186000) + (if b0051 then 0 else 186000) + (if b0052 then 0 else 186000) + (if b0053 then 0 else 186000) + (if b0054 then 0 else 186000) + (if b0055 then 0 else 186000) + (if b0056 then 0 else 186000) + (if b0057 then 0 else 186000) + (if b0058 then 0 else 186000) + (if b0059 then 0 else 186000) + (if b0060 then 0 else 186000) + (if b0061 then 0 else 186000) + (if b0062 then 0 else 186000) + (if b0063 then 0 else 186000) + (if b0064 then 0 else 186000) + (if b0065 then 0 else 186000) + (if b0066 then 0 else 186000) + (if b0067 then 0 else 186000) + (if b0068 then 0 else 186000) + (if b0069 then 0 else 186000) + (if b0070 then 0 else 186000) + (if b0071 then 0 else 186000) + (if b0072 then 0 else 186000) + (if b0073 then 0 else 186000) + (if b0074 then 0 else 186000) + (if b0075 then 0 else 186000) + (if b0076 then 0 else 186000) + (if b0077 then 0 else 186000) + (if b0078 then 0 else 186000) + (if b0079 then 0 else 186000) + (if b0080 then 0 else 186000) + (if b0081 then 0 else 186000) + (if b0082 then 0 else 186000) + (if b0083 then 0 else 186000) + (if b0084 then 0 else 186000) + (if b0085 then 0 else 186000) + (if b0086 then 0 else 186000) + (if b0087 then 0 else 186000) + (if b0088 then 0 else 186000) + (if b0089 then 0 else 186000) + (if b0090 then 0 else 186000) + (if b0091 then 0 else 186000) + (if b0092 then 0 else 186000) + (if b0093 then 0 else 186000) + (if b0094 then 0 else 186000) + (if b0095 then 0 else 186000) + (if b0096 then 0 else 186000) + (if b0097 then 0 else 186000) + (if b0098 then 0 else 186000) + (if b0099 then 0 else 186000) + (if b0100 then 0 else 186000) + (if b0101 then 0 else 186000) + (if b0102 then 0 else 186000) + (if b0103 then 0 else 186000) + (if b0104 then 0 else 186000) + (if b0105 then 0 else 186000) + (if b0106 then 0 else 186000) + (if b0107 then 0 else 186000) + (if b0108 then 0 else 186000) + (if b0109 then 0 else 186000) + (if b0110 then 0 else 186000) + (if b0111 then 0 else 186000) + (if b0112 then 0 else 186000) + (if b0113 then 0 else 186000) + (if b0114 then 0 else 186000) + (if b0115 then 0 else 186000) + (if b0116 then 0 else 186000) + (if b0118 then 0 else 186000) + (if b0120 then 0 else 186000) + (if b0121 then 0 else 186000) + (if b0122 then 0 else 186000) + (if b0123 then 0 else 186000) + (if b0124 then 0 else 186000) + (if b0125 then 0 else 186000) + (if b0126 then 0 else 186000) + (if b0127 then 0 else 186000) + (if b0128 then 0 else 186000) + (if b0129 then 0 else 186000) + (if b0130 then 0 else 186000) + (if b0131 then 0 else 186000) + (if b0132 then 0 else 186000) + (if b0134 then 0 else 186000) + (if b0136 then 0 else 186000) + (if b0137 then 0 else 186000) + (if b0138 then 0 else 186000) + (if b0139 then 0 else 186000) + (if b0141 then 0 else 186000) + (if b0142 then 0 else 186000) + (if b0143 then 0 else 186000) + (if b0144 then 0 else 186000) + (if b0145 then 0 else 186000) + (if b0147 then 0 else 186000) + (if b0148 then 0 else 186000) + (if b0149 then 0 else 186000) + (if b0150 then 0 else 186000) + (if b0151 then 0 else 186000) + (if b0154 then 0 else 186000) + (if b0156 then 0 else 186000) + (if b0157 then 0 else 186000) + (if b0158 then 0 else 186000) + (if b0159 then 0 else 186000) + (if b0162 then 0 else 186000) + (if b0164 then 0 else 186000) + (if b0167 then 0 else 186000) + (if b0169 then 0 else 186000) + (if b0172 then 0 else 186000) + (if b0174 then 0 else 186000) + (if b0175 then 0 else 186000) + (if b0176 then 0 else 186000) + (if b0177 then 0 else 186000) + (if b0181 then 0 else 186000) + (if b0182 then 0 else 186000) + (if b0183 then 0 else 186000) + (if b0184 then 0 else 186000) + (if b0185 then 0 else 186000) + (if b0186 then 0 else 186000) + (if b0187 then 0 else 186000) + (if b0188 then 0 else 186000) + (if b0189 then 0 else 186000) + (if b0190 then 0 else 186000) + (if b0191 then 0 else 186000) + (if b0192 then 0 else 186000) + (if b0193 then 0 else 186000) + (if b0195 then 0 else 186000) + (if b0197 then 0 else 186000) + (if b0198 then 0 else 186000) + (if b0199 then 0 else 186000) + (if b0200 then 0 else 186000) + (if b0205 then 0 else 186000) + (if b0206 then 0 else 186000) + (if b0207 then 0 else 186000) + (if b0208 then 0 else 186000) + (if b0210 then 0 else 186000) + (if b0212 then 0 else 186000) + (if b0214 then 0 else 186000) + (if b0215 then 0 else 186000) + (if b0216 then 0 else 186000) + (if b0217 then 0 else 186000) + (if b0222 then 0 else 186000) + (if b0223 then 0 else 186000) + (if b0224 then 0 else 186000) + (if b0225 then 0 else 186000) + (if b0227 then 0 else 186000) + (if b0228 then 0 else 186000) + (if b0229 then 0 else 186000) + (if b0230 then 0 else 186000) + (if b0232 then 0 else 186000) + (if b0235 then 0 else 186000) + (if b0237 then 0 else 186000) + (if b0238 then 0 else 186000) + (if b0239 then 0 else 186000) + (if b0240 then 0 else 186000) + (if b0241 then 0 else 186000) + (if b0242 then 0 else 186000) + (if b0243 then 0 else 186000) + (if b0244 then 0 else 186000) + (if b0245 then 0 else 186000) + (if b0246 then 0 else 186000) + (if b0247 then 0 else 186000) + (if b0248 then 0 else 186000) + (if b0249 then 0 else 186000) + (if b0250 then 0 else 186000) + (if b0251 then 0 else 186000) + (if b0252 then 0 else 186000) + (if b0253 then 0 else 186000) + (if b0254 then 0 else 186000) + (if b0255 then 0 else 186000) + (if b0256 then 0 else 186000) + (if b0257 then 0 else 186000) + (if b0258 then 0 else 186000) + (if b0259 then 0 else 186000) + (if b0260 then 0 else 186000) + (if b0261 then 0 else 186000) + (if b0262 then 0 else 186000) + (if b0263 then 0 else 186000) + (if b0264 then 0 else 186000) + (if b0265 then 0 else 186000) + (if b0266 then 0 else 186000) + (if b0267 then 0 else 186000) + (if b0268 then 0 else 186000) + (if b0269 then 0 else 186000) + (if b0270 then 0 else 186000) + (if b0271 then 0 else 186000) + (if b0272 then 0 else 186000) + (if b0273 then 0 else 186000) + (if b0274 then 0 else 186000) + (if b0275 then 0 else 186000) + (if b0276 then 0 else 186000) + (if b0277 then 0 else 186000) + (if b0278 then 0 else 186000) + (if b0279 then 0 else 186000) + (if b0280 then 0 else 186000) + (if b0281 then 0 else 186000) + (if b0282 then 0 else 186000) + (if b0283 then 0 else 186000) + (if b0284 then 0 else 186000) + (if b0285 then 0 else 186000) + (if b0286 then 0 else 186000) + (if b0287 then 0 else 186000) + (if b0288 then 0 else 186000) + (if b0289 then 0 else 186000) + (if b0290 then 0 else 186000) + (if b0291 then 0 else 186000) + (if b0292 then 0 else 186000) + (if b0293 then 0 else 186000) + (if b0294 then 0 else 186000) + (if b0295 then 0 else 186000) + (if b0296 then 0 else 186000) + (if b0297 then 0 else 186000) + (if b0298 then 0 else 186000) + (if b0299 then 0 else 186000) + (if b0300 then 0 else 186000) + (if b0301 then 0 else 186000) + (if b0302 then 0 else 186000) + (if b0303 then 0 else 186000) + (if b0304 then 0 else 186000) + (if b0305 then 0 else 186000) + (if b0306 then 0 else 186000) + (if b0307 then 0 else 186000) + (if b0308 then 0 else 186000) + (if b0309 then 0 else 186000) + (if b0310 then 0 else 186000) + (if b0311 then 0 else 186000) + (if b0312 then 0 else 186000) + (if b0313 then 0 else 186000) + (if b0314 then 0 else 186000) + (if b0315 then 0 else 186000) + (if b0316 then 0 else 186000) + (if b0317 then 0 else 186000) + (if b0318 then 0 else 186000) + (if b0319 then 0 else 186000) + (if b0320 then 0 else 186000) + (if b0321 then 0 else 186000) + (if b0322 then 0 else 186000) + (if b0323 then 0 else 186000) + (if b0324 then 0 else 186000) + (if b0325 then 0 else 186000) + (if b0326 then 0 else 186000) + (if b0327 then 0 else 186000) + (if b0328 then 0 else 186000) + (if b0329 then 0 else 186000) + (if b0330 then 0 else 186000) + (if b0331 then 0 else 186000) + (if b0332 then 0 else 186000) + (if b0333 then 0 else 186000) + (if b0334 then 0 else 186000) + (if b0335 then 0 else 186000) + (if b0336 then 0 else 186000) + (if b0337 then 0 else 186000) + (if b0338 then 0 else 186000) + (if b0339 then 0 else 186000) + (if b0340 then 0 else 186000) + (if b0341 then 0 else 186000) + (if b0376 then 0 else 186000) + (if b0378 then 0 else 186000) + (if b0379 then 0 else 186000) + (if b0380 then 0 else 186000) + (if b0381 then 0 else 186000) + (if b0382 then 0 else 186000) + (if b0383 then 0 else 186000) + (if b0385 then 0 else 186000) + (if b0386 then 0 else 186000) + (if b0387 then 0 else 186000) + (if b0388 then 0 else 186000) + (if b0389 then 0 else 186000) + (if b0390 then 0 else 186000) + (if b0422 then 0 else 186000) + (if b0424 then 0 else 186000) + (if b0425 then 0 else 186000) + (if b0426 then 0 else 186000) + (if b0427 then 0 else 186000) + (if b0428 then 0 else 186000) + (if b0429 then 0 else 186000) + (if b0430 then 0 else 186000) + (if b0431 then 0 else 186000) + (if b0432 then 0 else 186000) + (if b0433 then 0 else 186000) + (if b0435 then 0 else 186000) + (if b0436 then 0 else 186000) + (if b0437 then 0 else 186000) + (if b0438 then 0 else 186000) + (if b0439 then 0 else 186000) + (if b0440 then 0 else 186000) + (if b0441 then 0 else 186000) + (if b0442 then 0 else 186000) + (if b0443 then 0 else 186000) + (if b0444 then 0 else 186000) + (if b0445 then 0 else 186000) + (if b0446 then 0 else 186000) + (if b0447 then 0 else 186000) + (if b0448 then 0 else 186000) + (if b0449 then 0 else 186000) + (if b0450 then 0 else 186000) + (if b0451 then 0 else 186000) + (if b0452 then 0 else 186000) + (if b0453 then 0 else 186000) + (if b0454 then 0 else 186000) + (if b0455 then 0 else 186000) + (if b0456 then 0 else 186000) + (if b0457 then 0 else 186000) + (if b0458 then 0 else 186000) + (if b0459 then 0 else 186000) + (if b0460 then 0 else 186000) + (if b0461 then 0 else 186000) + (if b0462 then 0 else 186000) + (if b0463 then 0 else 186000) + (if b0464 then 0 else 186000) + (if b0465 then 0 else 186000) < 441
}
Prover Time taken = 13.294757
Added Horn clause: 31 && 73 && 33 && 0 && 16 && 0 && 0 && 0 && 0 && 0 && 44 && 0 && 40 => 74
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/linear-algebra/kernels/3mm/kernel3.bpl.ice2.bpl
Total learner time was 00:00:00.1355170
Verifying $kernel3: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool, b0228: bool, b0229: bool, b0230: bool, b0231: bool, b0232: bool, b0233: bool, b0234: bool, b0235: bool, b0236: bool, b0237: bool, b0238: bool, b0239: bool, b0240: bool, b0241: bool, b0242: bool, b0243: bool, b0244: bool, b0245: bool, b0246: bool, b0247: bool, b0248: bool, b0249: bool, b0250: bool, b0251: bool, b0252: bool, b0253: bool, b0254: bool, b0255: bool, b0256: bool, b0257: bool, b0258: bool, b0259: bool, b0260: bool, b0261: bool, b0262: bool, b0263: bool, b0264: bool, b0265: bool, b0266: bool, b0267: bool, b0268: bool, b0269: bool, b0270: bool, b0271: bool, b0272: bool, b0273: bool, b0274: bool, b0275: bool, b0276: bool, b0277: bool, b0278: bool, b0279: bool, b0280: bool, b0281: bool, b0282: bool, b0283: bool, b0284: bool, b0285: bool, b0286: bool, b0287: bool, b0288: bool, b0289: bool, b0290: bool, b0291: bool, b0292: bool, b0293: bool, b0294: bool, b0295: bool, b0296: bool, b0297: bool, b0298: bool, b0299: bool, b0300: bool, b0301: bool, b0302: bool, b0303: bool, b0304: bool, b0305: bool, b0306: bool, b0307: bool, b0308: bool, b0309: bool, b0310: bool, b0311: bool, b0312: bool, b0313: bool, b0314: bool, b0315: bool, b0316: bool, b0317: bool, b0318: bool, b0319: bool, b0320: bool, b0321: bool, b0322: bool, b0323: bool, b0324: bool, b0325: bool, b0326: bool, b0327: bool, b0328: bool, b0329: bool, b0330: bool, b0331: bool, b0332: bool, b0333: bool, b0334: bool, b0335: bool, b0336: bool, b0337: bool, b0338: bool, b0339: bool, b0340: bool, b0341: bool, b0342: bool, b0343: bool, b0344: bool, b0345: bool, b0346: bool, b0347: bool, b0348: bool, b0349: bool, b0350: bool, b0351: bool, b0352: bool, b0353: bool, b0354: bool, b0355: bool, b0356: bool, b0357: bool, b0358: bool, b0359: bool, b0360: bool, b0361: bool, b0362: bool, b0363: bool, b0364: bool, b0365: bool, b0366: bool, b0367: bool, b0368: bool, b0369: bool, b0370: bool, b0371: bool, b0372: bool, b0373: bool, b0374: bool, b0375: bool, b0376: bool, b0377: bool, b0378: bool, b0379: bool, b0380: bool, b0381: bool, b0382: bool, b0383: bool, b0384: bool, b0385: bool, b0386: bool, b0387: bool, b0388: bool, b0389: bool, b0390: bool, b0391: bool, b0392: bool, b0393: bool, b0394: bool, b0395: bool, b0396: bool, b0397: bool, b0398: bool, b0399: bool, b0400: bool, b0401: bool, b0402: bool, b0403: bool, b0404: bool, b0405: bool, b0406: bool, b0407: bool, b0408: bool, b0409: bool, b0410: bool, b0411: bool, b0412: bool, b0413: bool, b0414: bool, b0415: bool, b0416: bool, b0417: bool, b0418: bool, b0419: bool, b0420: bool, b0421: bool, b0422: bool, b0423: bool, b0424: bool, b0425: bool, b0426: bool, b0427: bool, b0428: bool, b0429: bool, b0430: bool, b0431: bool, b0432: bool, b0433: bool, b0434: bool, b0435: bool, b0436: bool, b0437: bool, b0438: bool, b0439: bool, b0440: bool, b0441: bool, b0442: bool, b0443: bool, b0444: bool, b0445: bool, b0446: bool, b0447: bool, b0448: bool, b0449: bool, b0450: bool, b0451: bool, b0452: bool, b0453: bool, b0454: bool, b0455: bool, b0456: bool, b0457: bool, b0458: bool, b0459: bool, b0460: bool, b0461: bool, b0462: bool, b0463: bool, b0464: bool, b0465: bool) : bool
{
  0 + (if b0000 then 0 else 186000) + (if b0001 then 0 else 186000) + (if b0002 then 0 else 186000) + (if b0003 then 0 else 186000) + (if b0004 then 0 else 186000) + (if b0005 then 0 else 186000) + (if b0006 then 0 else 186000) + (if b0007 then 0 else 186000) + (if b0008 then 0 else 186000) + (if b0009 then 0 else 186000) + (if b0010 then 0 else 186000) + (if b0011 then 0 else 186000) + (if b0012 then 0 else 186000) + (if b0013 then 0 else 186000) + (if b0014 then 0 else 186000) + (if b0015 then 0 else 186000) + (if b0016 then 0 else 186000) + (if b0017 then 0 else 186000) + (if b0018 then 0 else 186000) + (if b0019 then 0 else 186000) + (if b0020 then 0 else 186000) + (if b0021 then 0 else 186000) + (if b0022 then 0 else 186000) + (if b0023 then 0 else 186000) + (if b0024 then 0 else 186000) + (if b0025 then 0 else 186000) + (if b0026 then 0 else 186000) + (if b0027 then 0 else 186000) + (if b0028 then 0 else 186000) + (if b0029 then 0 else 186000) + (if b0030 then 0 else 186000) + (if b0031 then 0 else 186000) + (if b0032 then 0 else 186000) + (if b0033 then 0 else 186000) + (if b0034 then 0 else 186000) + (if b0035 then 0 else 186000) + (if b0036 then 0 else 186000) + (if b0037 then 0 else 186000) + (if b0038 then 0 else 186000) + (if b0039 then 0 else 186000) + (if b0040 then 0 else 186000) + (if b0041 then 0 else 186000) + (if b0042 then 0 else 186000) + (if b0043 then 0 else 186000) + (if b0044 then 0 else 186000) + (if b0045 then 0 else 186000) + (if b0046 then 0 else 186000) + (if b0047 then 0 else 186000) + (if b0048 then 0 else 186000) + (if b0049 then 0 else 186000) + (if b0050 then 0 else 186000) + (if b0051 then 0 else 186000) + (if b0052 then 0 else 186000) + (if b0053 then 0 else 186000) + (if b0054 then 0 else 186000) + (if b0055 then 0 else 186000) + (if b0056 then 0 else 186000) + (if b0057 then 0 else 186000) + (if b0058 then 0 else 186000) + (if b0059 then 0 else 186000) + (if b0060 then 0 else 186000) + (if b0061 then 0 else 186000) + (if b0062 then 0 else 186000) + (if b0063 then 0 else 186000) + (if b0064 then 0 else 186000) + (if b0065 then 0 else 186000) + (if b0066 then 0 else 186000) + (if b0067 then 0 else 186000) + (if b0068 then 0 else 186000) + (if b0069 then 0 else 186000) + (if b0070 then 0 else 186000) + (if b0071 then 0 else 186000) + (if b0072 then 0 else 186000) + (if b0073 then 0 else 186000) + (if b0074 then 0 else 186000) + (if b0075 then 0 else 186000) + (if b0076 then 0 else 186000) + (if b0077 then 0 else 186000) + (if b0078 then 0 else 186000) + (if b0079 then 0 else 186000) + (if b0080 then 0 else 186000) + (if b0081 then 0 else 186000) + (if b0082 then 0 else 186000) + (if b0083 then 0 else 186000) + (if b0084 then 0 else 186000) + (if b0085 then 0 else 186000) + (if b0086 then 0 else 186000) + (if b0087 then 0 else 186000) + (if b0088 then 0 else 186000) + (if b0089 then 0 else 186000) + (if b0090 then 0 else 186000) + (if b0091 then 0 else 186000) + (if b0092 then 0 else 186000) + (if b0093 then 0 else 186000) + (if b0094 then 0 else 186000) + (if b0095 then 0 else 186000) + (if b0096 then 0 else 186000) + (if b0097 then 0 else 186000) + (if b0098 then 0 else 186000) + (if b0099 then 0 else 186000) + (if b0100 then 0 else 186000) + (if b0101 then 0 else 186000) + (if b0102 then 0 else 186000) + (if b0103 then 0 else 186000) + (if b0104 then 0 else 186000) + (if b0105 then 0 else 186000) + (if b0106 then 0 else 186000) + (if b0107 then 0 else 186000) + (if b0108 then 0 else 186000) + (if b0109 then 0 else 186000) + (if b0110 then 0 else 186000) + (if b0111 then 0 else 186000) + (if b0112 then 0 else 186000) + (if b0113 then 0 else 186000) + (if b0114 then 0 else 186000) + (if b0115 then 0 else 186000) + (if b0116 then 0 else 186000) + (if b0118 then 0 else 186000) + (if b0120 then 0 else 186000) + (if b0121 then 0 else 186000) + (if b0122 then 0 else 186000) + (if b0123 then 0 else 186000) + (if b0124 then 0 else 186000) + (if b0125 then 0 else 186000) + (if b0126 then 0 else 186000) + (if b0127 then 0 else 186000) + (if b0128 then 0 else 186000) + (if b0129 then 0 else 186000) + (if b0130 then 0 else 186000) + (if b0131 then 0 else 186000) + (if b0132 then 0 else 186000) + (if b0134 then 0 else 186000) + (if b0136 then 0 else 186000) + (if b0137 then 0 else 186000) + (if b0138 then 0 else 186000) + (if b0139 then 0 else 186000) + (if b0141 then 0 else 186000) + (if b0142 then 0 else 186000) + (if b0143 then 0 else 186000) + (if b0144 then 0 else 186000) + (if b0145 then 0 else 186000) + (if b0147 then 0 else 186000) + (if b0148 then 0 else 186000) + (if b0149 then 0 else 186000) + (if b0150 then 0 else 186000) + (if b0151 then 0 else 186000) + (if b0154 then 0 else 186000) + (if b0156 then 0 else 186000) + (if b0157 then 0 else 186000) + (if b0158 then 0 else 186000) + (if b0159 then 0 else 186000) + (if b0162 then 0 else 186000) + (if b0164 then 0 else 186000) + (if b0167 then 0 else 186000) + (if b0169 then 0 else 186000) + (if b0172 then 0 else 186000) + (if b0174 then 0 else 186000) + (if b0175 then 0 else 186000) + (if b0176 then 0 else 186000) + (if b0177 then 0 else 186000) + (if b0181 then 0 else 186000) + (if b0182 then 0 else 186000) + (if b0183 then 0 else 186000) + (if b0184 then 0 else 186000) + (if b0185 then 0 else 186000) + (if b0186 then 0 else 186000) + (if b0187 then 0 else 186000) + (if b0188 then 0 else 186000) + (if b0189 then 0 else 186000) + (if b0190 then 0 else 186000) + (if b0191 then 0 else 186000) + (if b0192 then 0 else 186000) + (if b0193 then 0 else 186000) + (if b0195 then 0 else 186000) + (if b0197 then 0 else 186000) + (if b0198 then 0 else 186000) + (if b0199 then 0 else 186000) + (if b0200 then 0 else 186000) + (if b0205 then 0 else 186000) + (if b0206 then 0 else 186000) + (if b0207 then 0 else 186000) + (if b0208 then 0 else 186000) + (if b0210 then 0 else 186000) + (if b0212 then 0 else 186000) + (if b0214 then 0 else 186000) + (if b0215 then 0 else 186000) + (if b0216 then 0 else 186000) + (if b0217 then 0 else 186000) + (if b0222 then 0 else 186000) + (if b0223 then 0 else 186000) + (if b0224 then 0 else 186000) + (if b0225 then 0 else 186000) + (if b0227 then 0 else 186000) + (if b0228 then 0 else 186000) + (if b0229 then 0 else 186000) + (if b0230 then 0 else 186000) + (if b0232 then 0 else 186000) + (if b0235 then 0 else 186000) + (if b0237 then 0 else 186000) + (if b0238 then 0 else 186000) + (if b0239 then 0 else 186000) + (if b0240 then 0 else 186000) + (if b0241 then 0 else 186000) + (if b0242 then 0 else 186000) + (if b0243 then 0 else 186000) + (if b0244 then 0 else 186000) + (if b0245 then 0 else 186000) + (if b0246 then 0 else 186000) + (if b0247 then 0 else 186000) + (if b0248 then 0 else 186000) + (if b0249 then 0 else 186000) + (if b0250 then 0 else 186000) + (if b0251 then 0 else 186000) + (if b0252 then 0 else 186000) + (if b0253 then 0 else 186000) + (if b0254 then 0 else 186000) + (if b0255 then 0 else 186000) + (if b0256 then 0 else 186000) + (if b0257 then 0 else 186000) + (if b0258 then 0 else 186000) + (if b0259 then 0 else 186000) + (if b0260 then 0 else 186000) + (if b0261 then 0 else 186000) + (if b0262 then 0 else 186000) + (if b0263 then 0 else 186000) + (if b0264 then 0 else 186000) + (if b0265 then 0 else 186000) + (if b0266 then 0 else 186000) + (if b0267 then 0 else 186000) + (if b0268 then 0 else 186000) + (if b0269 then 0 else 186000) + (if b0270 then 0 else 186000) + (if b0271 then 0 else 186000) + (if b0272 then 0 else 186000) + (if b0273 then 0 else 186000) + (if b0274 then 0 else 186000) + (if b0275 then 0 else 186000) + (if b0276 then 0 else 186000) + (if b0277 then 0 else 186000) + (if b0278 then 0 else 186000) + (if b0279 then 0 else 186000) + (if b0280 then 0 else 186000) + (if b0281 then 0 else 186000) + (if b0282 then 0 else 186000) + (if b0283 then 0 else 186000) + (if b0284 then 0 else 186000) + (if b0285 then 0 else 186000) + (if b0286 then 0 else 186000) + (if b0287 then 0 else 186000) + (if b0288 then 0 else 186000) + (if b0289 then 0 else 186000) + (if b0290 then 0 else 186000) + (if b0291 then 0 else 186000) + (if b0292 then 0 else 186000) + (if b0293 then 0 else 186000) + (if b0294 then 0 else 186000) + (if b0295 then 0 else 186000) + (if b0296 then 0 else 186000) + (if b0297 then 0 else 186000) + (if b0298 then 0 else 186000) + (if b0299 then 0 else 186000) + (if b0300 then 0 else 186000) + (if b0301 then 0 else 186000) + (if b0302 then 0 else 186000) + (if b0303 then 0 else 186000) + (if b0304 then 0 else 186000) + (if b0305 then 0 else 186000) + (if b0306 then 0 else 186000) + (if b0307 then 0 else 186000) + (if b0308 then 0 else 186000) + (if b0309 then 0 else 186000) + (if b0310 then 0 else 186000) + (if b0311 then 0 else 186000) + (if b0312 then 0 else 186000) + (if b0313 then 0 else 186000) + (if b0314 then 0 else 186000) + (if b0315 then 0 else 186000) + (if b0316 then 0 else 186000) + (if b0317 then 0 else 186000) + (if b0318 then 0 else 186000) + (if b0319 then 0 else 186000) + (if b0320 then 0 else 186000) + (if b0321 then 0 else 186000) + (if b0322 then 0 else 186000) + (if b0323 then 0 else 186000) + (if b0324 then 0 else 186000) + (if b0325 then 0 else 186000) + (if b0326 then 0 else 186000) + (if b0327 then 0 else 186000) + (if b0328 then 0 else 186000) + (if b0329 then 0 else 186000) + (if b0330 then 0 else 186000) + (if b0331 then 0 else 186000) + (if b0332 then 0 else 186000) + (if b0333 then 0 else 186000) + (if b0334 then 0 else 186000) + (if b0335 then 0 else 186000) + (if b0336 then 0 else 186000) + (if b0337 then 0 else 186000) + (if b0338 then 0 else 186000) + (if b0339 then 0 else 186000) + (if b0340 then 0 else 186000) + (if b0341 then 0 else 186000) + (if b0376 then 0 else 186000) + (if b0378 then 0 else 186000) + (if b0379 then 0 else 186000) + (if b0380 then 0 else 186000) + (if b0381 then 0 else 186000) + (if b0382 then 0 else 186000) + (if b0383 then 0 else 186000) + (if b0385 then 0 else 186000) + (if b0386 then 0 else 186000) + (if b0387 then 0 else 186000) + (if b0388 then 0 else 186000) + (if b0389 then 0 else 186000) + (if b0390 then 0 else 186000) + (if b0424 then 0 else 186000) + (if b0425 then 0 else 186000) + (if b0426 then 0 else 186000) + (if b0427 then 0 else 186000) + (if b0430 then 0 else 186000) + (if b0431 then 0 else 186000) + (if b0432 then 0 else 186000) + (if b0433 then 0 else 186000) + (if b0435 then 0 else 186000) + (if b0436 then 0 else 186000) + (if b0437 then 0 else 186000) + (if b0438 then 0 else 186000) + (if b0439 then 0 else 186000) + (if b0440 then 0 else 186000) + (if b0441 then 0 else 186000) + (if b0442 then 0 else 186000) + (if b0443 then 0 else 186000) + (if b0444 then 0 else 186000) + (if b0445 then 0 else 186000) + (if b0446 then 0 else 186000) + (if b0447 then 0 else 186000) + (if b0448 then 0 else 186000) + (if b0449 then 0 else 186000) + (if b0450 then 0 else 186000) + (if b0451 then 0 else 186000) + (if b0452 then 0 else 186000) + (if b0453 then 0 else 186000) + (if b0454 then 0 else 186000) + (if b0455 then 0 else 186000) + (if b0456 then 0 else 186000) + (if b0457 then 0 else 186000) + (if b0458 then 0 else 186000) + (if b0459 then 0 else 186000) + (if b0460 then 0 else 186000) + (if b0461 then 0 else 186000) + (if b0462 then 0 else 186000) + (if b0463 then 0 else 186000) + (if b0464 then 0 else 186000) + (if b0465 then 0 else 186000) < 441
}
Prover Time taken = 9.465704
Added Horn clause: 17 && 75 && 0 => 76
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/linear-algebra/kernels/3mm/kernel3.bpl.ice2.bpl
Total learner time was 00:00:00.1393730
Verifying $kernel3: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool, b0228: bool, b0229: bool, b0230: bool, b0231: bool, b0232: bool, b0233: bool, b0234: bool, b0235: bool, b0236: bool, b0237: bool, b0238: bool, b0239: bool, b0240: bool, b0241: bool, b0242: bool, b0243: bool, b0244: bool, b0245: bool, b0246: bool, b0247: bool, b0248: bool, b0249: bool, b0250: bool, b0251: bool, b0252: bool, b0253: bool, b0254: bool, b0255: bool, b0256: bool, b0257: bool, b0258: bool, b0259: bool, b0260: bool, b0261: bool, b0262: bool, b0263: bool, b0264: bool, b0265: bool, b0266: bool, b0267: bool, b0268: bool, b0269: bool, b0270: bool, b0271: bool, b0272: bool, b0273: bool, b0274: bool, b0275: bool, b0276: bool, b0277: bool, b0278: bool, b0279: bool, b0280: bool, b0281: bool, b0282: bool, b0283: bool, b0284: bool, b0285: bool, b0286: bool, b0287: bool, b0288: bool, b0289: bool, b0290: bool, b0291: bool, b0292: bool, b0293: bool, b0294: bool, b0295: bool, b0296: bool, b0297: bool, b0298: bool, b0299: bool, b0300: bool, b0301: bool, b0302: bool, b0303: bool, b0304: bool, b0305: bool, b0306: bool, b0307: bool, b0308: bool, b0309: bool, b0310: bool, b0311: bool, b0312: bool, b0313: bool, b0314: bool, b0315: bool, b0316: bool, b0317: bool, b0318: bool, b0319: bool, b0320: bool, b0321: bool, b0322: bool, b0323: bool, b0324: bool, b0325: bool, b0326: bool, b0327: bool, b0328: bool, b0329: bool, b0330: bool, b0331: bool, b0332: bool, b0333: bool, b0334: bool, b0335: bool, b0336: bool, b0337: bool, b0338: bool, b0339: bool, b0340: bool, b0341: bool, b0342: bool, b0343: bool, b0344: bool, b0345: bool, b0346: bool, b0347: bool, b0348: bool, b0349: bool, b0350: bool, b0351: bool, b0352: bool, b0353: bool, b0354: bool, b0355: bool, b0356: bool, b0357: bool, b0358: bool, b0359: bool, b0360: bool, b0361: bool, b0362: bool, b0363: bool, b0364: bool, b0365: bool, b0366: bool, b0367: bool, b0368: bool, b0369: bool, b0370: bool, b0371: bool, b0372: bool, b0373: bool, b0374: bool, b0375: bool, b0376: bool, b0377: bool, b0378: bool, b0379: bool, b0380: bool, b0381: bool, b0382: bool, b0383: bool, b0384: bool, b0385: bool, b0386: bool, b0387: bool, b0388: bool, b0389: bool, b0390: bool, b0391: bool, b0392: bool, b0393: bool, b0394: bool, b0395: bool, b0396: bool, b0397: bool, b0398: bool, b0399: bool, b0400: bool, b0401: bool, b0402: bool, b0403: bool, b0404: bool, b0405: bool, b0406: bool, b0407: bool, b0408: bool, b0409: bool, b0410: bool, b0411: bool, b0412: bool, b0413: bool, b0414: bool, b0415: bool, b0416: bool, b0417: bool, b0418: bool, b0419: bool, b0420: bool, b0421: bool, b0422: bool, b0423: bool, b0424: bool, b0425: bool, b0426: bool, b0427: bool, b0428: bool, b0429: bool, b0430: bool, b0431: bool, b0432: bool, b0433: bool, b0434: bool, b0435: bool, b0436: bool, b0437: bool, b0438: bool, b0439: bool, b0440: bool, b0441: bool, b0442: bool, b0443: bool, b0444: bool, b0445: bool, b0446: bool, b0447: bool, b0448: bool, b0449: bool, b0450: bool, b0451: bool, b0452: bool, b0453: bool, b0454: bool, b0455: bool, b0456: bool, b0457: bool, b0458: bool, b0459: bool, b0460: bool, b0461: bool, b0462: bool, b0463: bool, b0464: bool, b0465: bool) : bool
{
  0 + (if b0000 then 0 else 186000) + (if b0001 then 0 else 186000) + (if b0002 then 0 else 186000) + (if b0003 then 0 else 186000) + (if b0004 then 0 else 186000) + (if b0005 then 0 else 186000) + (if b0006 then 0 else 186000) + (if b0007 then 0 else 186000) + (if b0008 then 0 else 186000) + (if b0009 then 0 else 186000) + (if b0010 then 0 else 186000) + (if b0011 then 0 else 186000) + (if b0012 then 0 else 186000) + (if b0013 then 0 else 186000) + (if b0014 then 0 else 186000) + (if b0015 then 0 else 186000) + (if b0016 then 0 else 186000) + (if b0017 then 0 else 186000) + (if b0018 then 0 else 186000) + (if b0019 then 0 else 186000) + (if b0020 then 0 else 186000) + (if b0021 then 0 else 186000) + (if b0022 then 0 else 186000) + (if b0023 then 0 else 186000) + (if b0024 then 0 else 186000) + (if b0025 then 0 else 186000) + (if b0026 then 0 else 186000) + (if b0027 then 0 else 186000) + (if b0028 then 0 else 186000) + (if b0029 then 0 else 186000) + (if b0030 then 0 else 186000) + (if b0031 then 0 else 186000) + (if b0032 then 0 else 186000) + (if b0033 then 0 else 186000) + (if b0034 then 0 else 186000) + (if b0035 then 0 else 186000) + (if b0036 then 0 else 186000) + (if b0037 then 0 else 186000) + (if b0038 then 0 else 186000) + (if b0039 then 0 else 186000) + (if b0040 then 0 else 186000) + (if b0041 then 0 else 186000) + (if b0042 then 0 else 186000) + (if b0043 then 0 else 186000) + (if b0044 then 0 else 186000) + (if b0045 then 0 else 186000) + (if b0046 then 0 else 186000) + (if b0047 then 0 else 186000) + (if b0048 then 0 else 186000) + (if b0049 then 0 else 186000) + (if b0050 then 0 else 186000) + (if b0051 then 0 else 186000) + (if b0052 then 0 else 186000) + (if b0053 then 0 else 186000) + (if b0054 then 0 else 186000) + (if b0055 then 0 else 186000) + (if b0056 then 0 else 186000) + (if b0057 then 0 else 186000) + (if b0058 then 0 else 186000) + (if b0059 then 0 else 186000) + (if b0060 then 0 else 186000) + (if b0061 then 0 else 186000) + (if b0062 then 0 else 186000) + (if b0063 then 0 else 186000) + (if b0064 then 0 else 186000) + (if b0065 then 0 else 186000) + (if b0066 then 0 else 186000) + (if b0067 then 0 else 186000) + (if b0068 then 0 else 186000) + (if b0069 then 0 else 186000) + (if b0070 then 0 else 186000) + (if b0071 then 0 else 186000) + (if b0072 then 0 else 186000) + (if b0073 then 0 else 186000) + (if b0074 then 0 else 186000) + (if b0075 then 0 else 186000) + (if b0076 then 0 else 186000) + (if b0077 then 0 else 186000) + (if b0078 then 0 else 186000) + (if b0079 then 0 else 186000) + (if b0080 then 0 else 186000) + (if b0081 then 0 else 186000) + (if b0082 then 0 else 186000) + (if b0083 then 0 else 186000) + (if b0084 then 0 else 186000) + (if b0085 then 0 else 186000) + (if b0086 then 0 else 186000) + (if b0087 then 0 else 186000) + (if b0088 then 0 else 186000) + (if b0089 then 0 else 186000) + (if b0090 then 0 else 186000) + (if b0091 then 0 else 186000) + (if b0092 then 0 else 186000) + (if b0093 then 0 else 186000) + (if b0094 then 0 else 186000) + (if b0095 then 0 else 186000) + (if b0096 then 0 else 186000) + (if b0097 then 0 else 186000) + (if b0098 then 0 else 186000) + (if b0099 then 0 else 186000) + (if b0100 then 0 else 186000) + (if b0101 then 0 else 186000) + (if b0102 then 0 else 186000) + (if b0103 then 0 else 186000) + (if b0104 then 0 else 186000) + (if b0105 then 0 else 186000) + (if b0106 then 0 else 186000) + (if b0107 then 0 else 186000) + (if b0108 then 0 else 186000) + (if b0109 then 0 else 186000) + (if b0110 then 0 else 186000) + (if b0111 then 0 else 186000) + (if b0112 then 0 else 186000) + (if b0113 then 0 else 186000) + (if b0114 then 0 else 186000) + (if b0115 then 0 else 186000) + (if b0116 then 0 else 186000) + (if b0118 then 0 else 186000) + (if b0120 then 0 else 186000) + (if b0121 then 0 else 186000) + (if b0122 then 0 else 186000) + (if b0123 then 0 else 186000) + (if b0124 then 0 else 186000) + (if b0125 then 0 else 186000) + (if b0126 then 0 else 186000) + (if b0127 then 0 else 186000) + (if b0128 then 0 else 186000) + (if b0129 then 0 else 186000) + (if b0130 then 0 else 186000) + (if b0131 then 0 else 186000) + (if b0132 then 0 else 186000) + (if b0134 then 0 else 186000) + (if b0136 then 0 else 186000) + (if b0137 then 0 else 186000) + (if b0138 then 0 else 186000) + (if b0139 then 0 else 186000) + (if b0141 then 0 else 186000) + (if b0142 then 0 else 186000) + (if b0143 then 0 else 186000) + (if b0144 then 0 else 186000) + (if b0145 then 0 else 186000) + (if b0147 then 0 else 186000) + (if b0148 then 0 else 186000) + (if b0149 then 0 else 186000) + (if b0150 then 0 else 186000) + (if b0151 then 0 else 186000) + (if b0154 then 0 else 186000) + (if b0156 then 0 else 186000) + (if b0157 then 0 else 186000) + (if b0158 then 0 else 186000) + (if b0159 then 0 else 186000) + (if b0162 then 0 else 186000) + (if b0164 then 0 else 186000) + (if b0167 then 0 else 186000) + (if b0169 then 0 else 186000) + (if b0172 then 0 else 186000) + (if b0174 then 0 else 186000) + (if b0175 then 0 else 186000) + (if b0176 then 0 else 186000) + (if b0177 then 0 else 186000) + (if b0181 then 0 else 186000) + (if b0182 then 0 else 186000) + (if b0183 then 0 else 186000) + (if b0184 then 0 else 186000) + (if b0185 then 0 else 186000) + (if b0186 then 0 else 186000) + (if b0187 then 0 else 186000) + (if b0188 then 0 else 186000) + (if b0189 then 0 else 186000) + (if b0190 then 0 else 186000) + (if b0191 then 0 else 186000) + (if b0192 then 0 else 186000) + (if b0193 then 0 else 186000) + (if b0195 then 0 else 186000) + (if b0197 then 0 else 186000) + (if b0198 then 0 else 186000) + (if b0199 then 0 else 186000) + (if b0200 then 0 else 186000) + (if b0205 then 0 else 186000) + (if b0206 then 0 else 186000) + (if b0207 then 0 else 186000) + (if b0208 then 0 else 186000) + (if b0210 then 0 else 186000) + (if b0212 then 0 else 186000) + (if b0214 then 0 else 186000) + (if b0215 then 0 else 186000) + (if b0216 then 0 else 186000) + (if b0217 then 0 else 186000) + (if b0222 then 0 else 186000) + (if b0223 then 0 else 186000) + (if b0224 then 0 else 186000) + (if b0225 then 0 else 186000) + (if b0227 then 0 else 186000) + (if b0228 then 0 else 186000) + (if b0229 then 0 else 186000) + (if b0230 then 0 else 186000) + (if b0232 then 0 else 186000) + (if b0235 then 0 else 186000) + (if b0237 then 0 else 186000) + (if b0238 then 0 else 186000) + (if b0239 then 0 else 186000) + (if b0240 then 0 else 186000) + (if b0241 then 0 else 186000) + (if b0243 then 0 else 186000) + (if b0244 then 0 else 186000) + (if b0245 then 0 else 186000) + (if b0246 then 0 else 186000) + (if b0247 then 0 else 186000) + (if b0248 then 0 else 186000) + (if b0249 then 0 else 186000) + (if b0250 then 0 else 186000) + (if b0251 then 0 else 186000) + (if b0252 then 0 else 186000) + (if b0253 then 0 else 186000) + (if b0254 then 0 else 186000) + (if b0255 then 0 else 186000) + (if b0256 then 0 else 186000) + (if b0257 then 0 else 186000) + (if b0258 then 0 else 186000) + (if b0259 then 0 else 186000) + (if b0260 then 0 else 186000) + (if b0261 then 0 else 186000) + (if b0262 then 0 else 186000) + (if b0263 then 0 else 186000) + (if b0264 then 0 else 186000) + (if b0265 then 0 else 186000) + (if b0266 then 0 else 186000) + (if b0267 then 0 else 186000) + (if b0268 then 0 else 186000) + (if b0269 then 0 else 186000) + (if b0270 then 0 else 186000) + (if b0271 then 0 else 186000) + (if b0272 then 0 else 186000) + (if b0273 then 0 else 186000) + (if b0274 then 0 else 186000) + (if b0275 then 0 else 186000) + (if b0276 then 0 else 186000) + (if b0277 then 0 else 186000) + (if b0278 then 0 else 186000) + (if b0279 then 0 else 186000) + (if b0280 then 0 else 186000) + (if b0281 then 0 else 186000) + (if b0282 then 0 else 186000) + (if b0283 then 0 else 186000) + (if b0284 then 0 else 186000) + (if b0285 then 0 else 186000) + (if b0286 then 0 else 186000) + (if b0287 then 0 else 186000) + (if b0288 then 0 else 186000) + (if b0289 then 0 else 186000) + (if b0290 then 0 else 186000) + (if b0291 then 0 else 186000) + (if b0292 then 0 else 186000) + (if b0293 then 0 else 186000) + (if b0294 then 0 else 186000) + (if b0295 then 0 else 186000) + (if b0296 then 0 else 186000) + (if b0297 then 0 else 186000) + (if b0298 then 0 else 186000) + (if b0299 then 0 else 186000) + (if b0300 then 0 else 186000) + (if b0301 then 0 else 186000) + (if b0302 then 0 else 186000) + (if b0303 then 0 else 186000) + (if b0304 then 0 else 186000) + (if b0305 then 0 else 186000) + (if b0306 then 0 else 186000) + (if b0307 then 0 else 186000) + (if b0308 then 0 else 186000) + (if b0309 then 0 else 186000) + (if b0310 then 0 else 186000) + (if b0311 then 0 else 186000) + (if b0312 then 0 else 186000) + (if b0313 then 0 else 186000) + (if b0314 then 0 else 186000) + (if b0315 then 0 else 186000) + (if b0316 then 0 else 186000) + (if b0317 then 0 else 186000) + (if b0318 then 0 else 186000) + (if b0319 then 0 else 186000) + (if b0320 then 0 else 186000) + (if b0321 then 0 else 186000) + (if b0322 then 0 else 186000) + (if b0323 then 0 else 186000) + (if b0324 then 0 else 186000) + (if b0325 then 0 else 186000) + (if b0326 then 0 else 186000) + (if b0327 then 0 else 186000) + (if b0328 then 0 else 186000) + (if b0329 then 0 else 186000) + (if b0330 then 0 else 186000) + (if b0331 then 0 else 186000) + (if b0332 then 0 else 186000) + (if b0333 then 0 else 186000) + (if b0334 then 0 else 186000) + (if b0335 then 0 else 186000) + (if b0336 then 0 else 186000) + (if b0337 then 0 else 186000) + (if b0338 then 0 else 186000) + (if b0339 then 0 else 186000) + (if b0340 then 0 else 186000) + (if b0341 then 0 else 186000) + (if b0376 then 0 else 186000) + (if b0378 then 0 else 186000) + (if b0379 then 0 else 186000) + (if b0380 then 0 else 186000) + (if b0381 then 0 else 186000) + (if b0382 then 0 else 186000) + (if b0383 then 0 else 186000) + (if b0385 then 0 else 186000) + (if b0386 then 0 else 186000) + (if b0387 then 0 else 186000) + (if b0388 then 0 else 186000) + (if b0389 then 0 else 186000) + (if b0390 then 0 else 186000) + (if b0424 then 0 else 186000) + (if b0425 then 0 else 186000) + (if b0426 then 0 else 186000) + (if b0427 then 0 else 186000) + (if b0430 then 0 else 186000) + (if b0431 then 0 else 186000) + (if b0432 then 0 else 186000) + (if b0433 then 0 else 186000) + (if b0435 then 0 else 186000) + (if b0436 then 0 else 186000) + (if b0437 then 0 else 186000) + (if b0438 then 0 else 186000) + (if b0439 then 0 else 186000) + (if b0440 then 0 else 186000) + (if b0441 then 0 else 186000) + (if b0442 then 0 else 186000) + (if b0443 then 0 else 186000) + (if b0444 then 0 else 186000) + (if b0445 then 0 else 186000) + (if b0446 then 0 else 186000) + (if b0447 then 0 else 186000) + (if b0448 then 0 else 186000) + (if b0449 then 0 else 186000) + (if b0450 then 0 else 186000) + (if b0451 then 0 else 186000) + (if b0452 then 0 else 186000) + (if b0453 then 0 else 186000) + (if b0454 then 0 else 186000) + (if b0455 then 0 else 186000) + (if b0456 then 0 else 186000) + (if b0457 then 0 else 186000) + (if b0458 then 0 else 186000) + (if b0459 then 0 else 186000) + (if b0460 then 0 else 186000) + (if b0461 then 0 else 186000) + (if b0462 then 0 else 186000) + (if b0463 then 0 else 186000) + (if b0464 then 0 else 186000) + (if b0465 then 0 else 186000) < 441
}
Prover Time taken = 5.81984
Added Horn clause: 6 && 77 && 0 && 0 && 0 => 78
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/linear-algebra/kernels/3mm/kernel3.bpl.ice2.bpl
Total learner time was 00:00:00.1360410
Verifying $kernel3: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool, b0228: bool, b0229: bool, b0230: bool, b0231: bool, b0232: bool, b0233: bool, b0234: bool, b0235: bool, b0236: bool, b0237: bool, b0238: bool, b0239: bool, b0240: bool, b0241: bool, b0242: bool, b0243: bool, b0244: bool, b0245: bool, b0246: bool, b0247: bool, b0248: bool, b0249: bool, b0250: bool, b0251: bool, b0252: bool, b0253: bool, b0254: bool, b0255: bool, b0256: bool, b0257: bool, b0258: bool, b0259: bool, b0260: bool, b0261: bool, b0262: bool, b0263: bool, b0264: bool, b0265: bool, b0266: bool, b0267: bool, b0268: bool, b0269: bool, b0270: bool, b0271: bool, b0272: bool, b0273: bool, b0274: bool, b0275: bool, b0276: bool, b0277: bool, b0278: bool, b0279: bool, b0280: bool, b0281: bool, b0282: bool, b0283: bool, b0284: bool, b0285: bool, b0286: bool, b0287: bool, b0288: bool, b0289: bool, b0290: bool, b0291: bool, b0292: bool, b0293: bool, b0294: bool, b0295: bool, b0296: bool, b0297: bool, b0298: bool, b0299: bool, b0300: bool, b0301: bool, b0302: bool, b0303: bool, b0304: bool, b0305: bool, b0306: bool, b0307: bool, b0308: bool, b0309: bool, b0310: bool, b0311: bool, b0312: bool, b0313: bool, b0314: bool, b0315: bool, b0316: bool, b0317: bool, b0318: bool, b0319: bool, b0320: bool, b0321: bool, b0322: bool, b0323: bool, b0324: bool, b0325: bool, b0326: bool, b0327: bool, b0328: bool, b0329: bool, b0330: bool, b0331: bool, b0332: bool, b0333: bool, b0334: bool, b0335: bool, b0336: bool, b0337: bool, b0338: bool, b0339: bool, b0340: bool, b0341: bool, b0342: bool, b0343: bool, b0344: bool, b0345: bool, b0346: bool, b0347: bool, b0348: bool, b0349: bool, b0350: bool, b0351: bool, b0352: bool, b0353: bool, b0354: bool, b0355: bool, b0356: bool, b0357: bool, b0358: bool, b0359: bool, b0360: bool, b0361: bool, b0362: bool, b0363: bool, b0364: bool, b0365: bool, b0366: bool, b0367: bool, b0368: bool, b0369: bool, b0370: bool, b0371: bool, b0372: bool, b0373: bool, b0374: bool, b0375: bool, b0376: bool, b0377: bool, b0378: bool, b0379: bool, b0380: bool, b0381: bool, b0382: bool, b0383: bool, b0384: bool, b0385: bool, b0386: bool, b0387: bool, b0388: bool, b0389: bool, b0390: bool, b0391: bool, b0392: bool, b0393: bool, b0394: bool, b0395: bool, b0396: bool, b0397: bool, b0398: bool, b0399: bool, b0400: bool, b0401: bool, b0402: bool, b0403: bool, b0404: bool, b0405: bool, b0406: bool, b0407: bool, b0408: bool, b0409: bool, b0410: bool, b0411: bool, b0412: bool, b0413: bool, b0414: bool, b0415: bool, b0416: bool, b0417: bool, b0418: bool, b0419: bool, b0420: bool, b0421: bool, b0422: bool, b0423: bool, b0424: bool, b0425: bool, b0426: bool, b0427: bool, b0428: bool, b0429: bool, b0430: bool, b0431: bool, b0432: bool, b0433: bool, b0434: bool, b0435: bool, b0436: bool, b0437: bool, b0438: bool, b0439: bool, b0440: bool, b0441: bool, b0442: bool, b0443: bool, b0444: bool, b0445: bool, b0446: bool, b0447: bool, b0448: bool, b0449: bool, b0450: bool, b0451: bool, b0452: bool, b0453: bool, b0454: bool, b0455: bool, b0456: bool, b0457: bool, b0458: bool, b0459: bool, b0460: bool, b0461: bool, b0462: bool, b0463: bool, b0464: bool, b0465: bool) : bool
{
  0 + (if b0000 then 0 else 186000) + (if b0001 then 0 else 186000) + (if b0002 then 0 else 186000) + (if b0003 then 0 else 186000) + (if b0004 then 0 else 186000) + (if b0005 then 0 else 186000) + (if b0006 then 0 else 186000) + (if b0007 then 0 else 186000) + (if b0008 then 0 else 186000) + (if b0009 then 0 else 186000) + (if b0010 then 0 else 186000) + (if b0011 then 0 else 186000) + (if b0012 then 0 else 186000) + (if b0013 then 0 else 186000) + (if b0014 then 0 else 186000) + (if b0015 then 0 else 186000) + (if b0016 then 0 else 186000) + (if b0017 then 0 else 186000) + (if b0018 then 0 else 186000) + (if b0019 then 0 else 186000) + (if b0020 then 0 else 186000) + (if b0021 then 0 else 186000) + (if b0022 then 0 else 186000) + (if b0023 then 0 else 186000) + (if b0024 then 0 else 186000) + (if b0025 then 0 else 186000) + (if b0026 then 0 else 186000) + (if b0027 then 0 else 186000) + (if b0028 then 0 else 186000) + (if b0029 then 0 else 186000) + (if b0030 then 0 else 186000) + (if b0031 then 0 else 186000) + (if b0032 then 0 else 186000) + (if b0033 then 0 else 186000) + (if b0034 then 0 else 186000) + (if b0035 then 0 else 186000) + (if b0036 then 0 else 186000) + (if b0037 then 0 else 186000) + (if b0038 then 0 else 186000) + (if b0039 then 0 else 186000) + (if b0040 then 0 else 186000) + (if b0041 then 0 else 186000) + (if b0042 then 0 else 186000) + (if b0043 then 0 else 186000) + (if b0044 then 0 else 186000) + (if b0045 then 0 else 186000) + (if b0046 then 0 else 186000) + (if b0047 then 0 else 186000) + (if b0048 then 0 else 186000) + (if b0049 then 0 else 186000) + (if b0050 then 0 else 186000) + (if b0051 then 0 else 186000) + (if b0052 then 0 else 186000) + (if b0053 then 0 else 186000) + (if b0054 then 0 else 186000) + (if b0055 then 0 else 186000) + (if b0056 then 0 else 186000) + (if b0057 then 0 else 186000) + (if b0058 then 0 else 186000) + (if b0059 then 0 else 186000) + (if b0060 then 0 else 186000) + (if b0061 then 0 else 186000) + (if b0062 then 0 else 186000) + (if b0063 then 0 else 186000) + (if b0064 then 0 else 186000) + (if b0065 then 0 else 186000) + (if b0066 then 0 else 186000) + (if b0067 then 0 else 186000) + (if b0068 then 0 else 186000) + (if b0069 then 0 else 186000) + (if b0070 then 0 else 186000) + (if b0071 then 0 else 186000) + (if b0072 then 0 else 186000) + (if b0073 then 0 else 186000) + (if b0074 then 0 else 186000) + (if b0075 then 0 else 186000) + (if b0076 then 0 else 186000) + (if b0077 then 0 else 186000) + (if b0078 then 0 else 186000) + (if b0079 then 0 else 186000) + (if b0080 then 0 else 186000) + (if b0081 then 0 else 186000) + (if b0082 then 0 else 186000) + (if b0083 then 0 else 186000) + (if b0084 then 0 else 186000) + (if b0085 then 0 else 186000) + (if b0086 then 0 else 186000) + (if b0087 then 0 else 186000) + (if b0088 then 0 else 186000) + (if b0089 then 0 else 186000) + (if b0090 then 0 else 186000) + (if b0091 then 0 else 186000) + (if b0092 then 0 else 186000) + (if b0093 then 0 else 186000) + (if b0094 then 0 else 186000) + (if b0095 then 0 else 186000) + (if b0096 then 0 else 186000) + (if b0097 then 0 else 186000) + (if b0098 then 0 else 186000) + (if b0099 then 0 else 186000) + (if b0100 then 0 else 186000) + (if b0101 then 0 else 186000) + (if b0102 then 0 else 186000) + (if b0103 then 0 else 186000) + (if b0104 then 0 else 186000) + (if b0105 then 0 else 186000) + (if b0106 then 0 else 186000) + (if b0107 then 0 else 186000) + (if b0108 then 0 else 186000) + (if b0109 then 0 else 186000) + (if b0110 then 0 else 186000) + (if b0111 then 0 else 186000) + (if b0112 then 0 else 186000) + (if b0113 then 0 else 186000) + (if b0114 then 0 else 186000) + (if b0115 then 0 else 186000) + (if b0116 then 0 else 186000) + (if b0118 then 0 else 186000) + (if b0120 then 0 else 186000) + (if b0121 then 0 else 186000) + (if b0122 then 0 else 186000) + (if b0123 then 0 else 186000) + (if b0124 then 0 else 186000) + (if b0125 then 0 else 186000) + (if b0126 then 0 else 186000) + (if b0127 then 0 else 186000) + (if b0128 then 0 else 186000) + (if b0129 then 0 else 186000) + (if b0130 then 0 else 186000) + (if b0131 then 0 else 186000) + (if b0132 then 0 else 186000) + (if b0134 then 0 else 186000) + (if b0136 then 0 else 186000) + (if b0137 then 0 else 186000) + (if b0138 then 0 else 186000) + (if b0139 then 0 else 186000) + (if b0141 then 0 else 186000) + (if b0142 then 0 else 186000) + (if b0143 then 0 else 186000) + (if b0144 then 0 else 186000) + (if b0145 then 0 else 186000) + (if b0147 then 0 else 186000) + (if b0148 then 0 else 186000) + (if b0149 then 0 else 186000) + (if b0150 then 0 else 186000) + (if b0151 then 0 else 186000) + (if b0154 then 0 else 186000) + (if b0156 then 0 else 186000) + (if b0157 then 0 else 186000) + (if b0158 then 0 else 186000) + (if b0159 then 0 else 186000) + (if b0162 then 0 else 186000) + (if b0164 then 0 else 186000) + (if b0167 then 0 else 186000) + (if b0169 then 0 else 186000) + (if b0172 then 0 else 186000) + (if b0174 then 0 else 186000) + (if b0175 then 0 else 186000) + (if b0176 then 0 else 186000) + (if b0177 then 0 else 186000) + (if b0181 then 0 else 186000) + (if b0182 then 0 else 186000) + (if b0184 then 0 else 186000) + (if b0185 then 0 else 186000) + (if b0186 then 0 else 186000) + (if b0188 then 0 else 186000) + (if b0189 then 0 else 186000) + (if b0190 then 0 else 186000) + (if b0191 then 0 else 186000) + (if b0192 then 0 else 186000) + (if b0193 then 0 else 186000) + (if b0195 then 0 else 186000) + (if b0197 then 0 else 186000) + (if b0198 then 0 else 186000) + (if b0199 then 0 else 186000) + (if b0200 then 0 else 186000) + (if b0205 then 0 else 186000) + (if b0206 then 0 else 186000) + (if b0207 then 0 else 186000) + (if b0208 then 0 else 186000) + (if b0210 then 0 else 186000) + (if b0212 then 0 else 186000) + (if b0214 then 0 else 186000) + (if b0215 then 0 else 186000) + (if b0216 then 0 else 186000) + (if b0217 then 0 else 186000) + (if b0222 then 0 else 186000) + (if b0223 then 0 else 186000) + (if b0224 then 0 else 186000) + (if b0225 then 0 else 186000) + (if b0227 then 0 else 186000) + (if b0228 then 0 else 186000) + (if b0229 then 0 else 186000) + (if b0230 then 0 else 186000) + (if b0232 then 0 else 186000) + (if b0235 then 0 else 186000) + (if b0237 then 0 else 186000) + (if b0238 then 0 else 186000) + (if b0239 then 0 else 186000) + (if b0240 then 0 else 186000) + (if b0241 then 0 else 186000) + (if b0243 then 0 else 186000) + (if b0244 then 0 else 186000) + (if b0245 then 0 else 186000) + (if b0246 then 0 else 186000) + (if b0247 then 0 else 186000) + (if b0248 then 0 else 186000) + (if b0249 then 0 else 186000) + (if b0250 then 0 else 186000) + (if b0251 then 0 else 186000) + (if b0252 then 0 else 186000) + (if b0253 then 0 else 186000) + (if b0254 then 0 else 186000) + (if b0255 then 0 else 186000) + (if b0256 then 0 else 186000) + (if b0257 then 0 else 186000) + (if b0258 then 0 else 186000) + (if b0259 then 0 else 186000) + (if b0260 then 0 else 186000) + (if b0261 then 0 else 186000) + (if b0262 then 0 else 186000) + (if b0263 then 0 else 186000) + (if b0264 then 0 else 186000) + (if b0265 then 0 else 186000) + (if b0266 then 0 else 186000) + (if b0267 then 0 else 186000) + (if b0268 then 0 else 186000) + (if b0269 then 0 else 186000) + (if b0270 then 0 else 186000) + (if b0271 then 0 else 186000) + (if b0272 then 0 else 186000) + (if b0273 then 0 else 186000) + (if b0274 then 0 else 186000) + (if b0275 then 0 else 186000) + (if b0276 then 0 else 186000) + (if b0277 then 0 else 186000) + (if b0278 then 0 else 186000) + (if b0279 then 0 else 186000) + (if b0280 then 0 else 186000) + (if b0281 then 0 else 186000) + (if b0282 then 0 else 186000) + (if b0283 then 0 else 186000) + (if b0284 then 0 else 186000) + (if b0285 then 0 else 186000) + (if b0286 then 0 else 186000) + (if b0287 then 0 else 186000) + (if b0288 then 0 else 186000) + (if b0289 then 0 else 186000) + (if b0290 then 0 else 186000) + (if b0291 then 0 else 186000) + (if b0292 then 0 else 186000) + (if b0293 then 0 else 186000) + (if b0294 then 0 else 186000) + (if b0295 then 0 else 186000) + (if b0296 then 0 else 186000) + (if b0297 then 0 else 186000) + (if b0298 then 0 else 186000) + (if b0299 then 0 else 186000) + (if b0300 then 0 else 186000) + (if b0301 then 0 else 186000) + (if b0302 then 0 else 186000) + (if b0303 then 0 else 186000) + (if b0304 then 0 else 186000) + (if b0305 then 0 else 186000) + (if b0306 then 0 else 186000) + (if b0307 then 0 else 186000) + (if b0308 then 0 else 186000) + (if b0309 then 0 else 186000) + (if b0310 then 0 else 186000) + (if b0311 then 0 else 186000) + (if b0312 then 0 else 186000) + (if b0313 then 0 else 186000) + (if b0314 then 0 else 186000) + (if b0315 then 0 else 186000) + (if b0316 then 0 else 186000) + (if b0317 then 0 else 186000) + (if b0318 then 0 else 186000) + (if b0319 then 0 else 186000) + (if b0320 then 0 else 186000) + (if b0321 then 0 else 186000) + (if b0322 then 0 else 186000) + (if b0323 then 0 else 186000) + (if b0324 then 0 else 186000) + (if b0325 then 0 else 186000) + (if b0326 then 0 else 186000) + (if b0327 then 0 else 186000) + (if b0328 then 0 else 186000) + (if b0329 then 0 else 186000) + (if b0330 then 0 else 186000) + (if b0331 then 0 else 186000) + (if b0332 then 0 else 186000) + (if b0333 then 0 else 186000) + (if b0334 then 0 else 186000) + (if b0335 then 0 else 186000) + (if b0336 then 0 else 186000) + (if b0337 then 0 else 186000) + (if b0338 then 0 else 186000) + (if b0339 then 0 else 186000) + (if b0340 then 0 else 186000) + (if b0341 then 0 else 186000) + (if b0376 then 0 else 186000) + (if b0378 then 0 else 186000) + (if b0379 then 0 else 186000) + (if b0380 then 0 else 186000) + (if b0381 then 0 else 186000) + (if b0382 then 0 else 186000) + (if b0383 then 0 else 186000) + (if b0385 then 0 else 186000) + (if b0386 then 0 else 186000) + (if b0387 then 0 else 186000) + (if b0388 then 0 else 186000) + (if b0389 then 0 else 186000) + (if b0390 then 0 else 186000) + (if b0424 then 0 else 186000) + (if b0425 then 0 else 186000) + (if b0426 then 0 else 186000) + (if b0427 then 0 else 186000) + (if b0430 then 0 else 186000) + (if b0431 then 0 else 186000) + (if b0432 then 0 else 186000) + (if b0433 then 0 else 186000) + (if b0435 then 0 else 186000) + (if b0436 then 0 else 186000) + (if b0437 then 0 else 186000) + (if b0438 then 0 else 186000) + (if b0439 then 0 else 186000) + (if b0440 then 0 else 186000) + (if b0441 then 0 else 186000) + (if b0442 then 0 else 186000) + (if b0443 then 0 else 186000) + (if b0444 then 0 else 186000) + (if b0445 then 0 else 186000) + (if b0446 then 0 else 186000) + (if b0447 then 0 else 186000) + (if b0448 then 0 else 186000) + (if b0449 then 0 else 186000) + (if b0450 then 0 else 186000) + (if b0451 then 0 else 186000) + (if b0452 then 0 else 186000) + (if b0453 then 0 else 186000) + (if b0454 then 0 else 186000) + (if b0455 then 0 else 186000) + (if b0456 then 0 else 186000) + (if b0457 then 0 else 186000) + (if b0458 then 0 else 186000) + (if b0459 then 0 else 186000) + (if b0460 then 0 else 186000) + (if b0461 then 0 else 186000) + (if b0462 then 0 else 186000) + (if b0463 then 0 else 186000) + (if b0464 then 0 else 186000) + (if b0465 then 0 else 186000) < 441
}
Prover Time taken = 15.627929
Added Horn clause: 31 && 79 && 0 && 0 && 76 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 => 80
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/linear-algebra/kernels/3mm/kernel3.bpl.ice2.bpl
Total learner time was 00:00:00.1373520
Verifying $kernel3: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool, b0228: bool, b0229: bool, b0230: bool, b0231: bool, b0232: bool, b0233: bool, b0234: bool, b0235: bool, b0236: bool, b0237: bool, b0238: bool, b0239: bool, b0240: bool, b0241: bool, b0242: bool, b0243: bool, b0244: bool, b0245: bool, b0246: bool, b0247: bool, b0248: bool, b0249: bool, b0250: bool, b0251: bool, b0252: bool, b0253: bool, b0254: bool, b0255: bool, b0256: bool, b0257: bool, b0258: bool, b0259: bool, b0260: bool, b0261: bool, b0262: bool, b0263: bool, b0264: bool, b0265: bool, b0266: bool, b0267: bool, b0268: bool, b0269: bool, b0270: bool, b0271: bool, b0272: bool, b0273: bool, b0274: bool, b0275: bool, b0276: bool, b0277: bool, b0278: bool, b0279: bool, b0280: bool, b0281: bool, b0282: bool, b0283: bool, b0284: bool, b0285: bool, b0286: bool, b0287: bool, b0288: bool, b0289: bool, b0290: bool, b0291: bool, b0292: bool, b0293: bool, b0294: bool, b0295: bool, b0296: bool, b0297: bool, b0298: bool, b0299: bool, b0300: bool, b0301: bool, b0302: bool, b0303: bool, b0304: bool, b0305: bool, b0306: bool, b0307: bool, b0308: bool, b0309: bool, b0310: bool, b0311: bool, b0312: bool, b0313: bool, b0314: bool, b0315: bool, b0316: bool, b0317: bool, b0318: bool, b0319: bool, b0320: bool, b0321: bool, b0322: bool, b0323: bool, b0324: bool, b0325: bool, b0326: bool, b0327: bool, b0328: bool, b0329: bool, b0330: bool, b0331: bool, b0332: bool, b0333: bool, b0334: bool, b0335: bool, b0336: bool, b0337: bool, b0338: bool, b0339: bool, b0340: bool, b0341: bool, b0342: bool, b0343: bool, b0344: bool, b0345: bool, b0346: bool, b0347: bool, b0348: bool, b0349: bool, b0350: bool, b0351: bool, b0352: bool, b0353: bool, b0354: bool, b0355: bool, b0356: bool, b0357: bool, b0358: bool, b0359: bool, b0360: bool, b0361: bool, b0362: bool, b0363: bool, b0364: bool, b0365: bool, b0366: bool, b0367: bool, b0368: bool, b0369: bool, b0370: bool, b0371: bool, b0372: bool, b0373: bool, b0374: bool, b0375: bool, b0376: bool, b0377: bool, b0378: bool, b0379: bool, b0380: bool, b0381: bool, b0382: bool, b0383: bool, b0384: bool, b0385: bool, b0386: bool, b0387: bool, b0388: bool, b0389: bool, b0390: bool, b0391: bool, b0392: bool, b0393: bool, b0394: bool, b0395: bool, b0396: bool, b0397: bool, b0398: bool, b0399: bool, b0400: bool, b0401: bool, b0402: bool, b0403: bool, b0404: bool, b0405: bool, b0406: bool, b0407: bool, b0408: bool, b0409: bool, b0410: bool, b0411: bool, b0412: bool, b0413: bool, b0414: bool, b0415: bool, b0416: bool, b0417: bool, b0418: bool, b0419: bool, b0420: bool, b0421: bool, b0422: bool, b0423: bool, b0424: bool, b0425: bool, b0426: bool, b0427: bool, b0428: bool, b0429: bool, b0430: bool, b0431: bool, b0432: bool, b0433: bool, b0434: bool, b0435: bool, b0436: bool, b0437: bool, b0438: bool, b0439: bool, b0440: bool, b0441: bool, b0442: bool, b0443: bool, b0444: bool, b0445: bool, b0446: bool, b0447: bool, b0448: bool, b0449: bool, b0450: bool, b0451: bool, b0452: bool, b0453: bool, b0454: bool, b0455: bool, b0456: bool, b0457: bool, b0458: bool, b0459: bool, b0460: bool, b0461: bool, b0462: bool, b0463: bool, b0464: bool, b0465: bool) : bool
{
  0 + (if b0000 then 0 else 186000) + (if b0001 then 0 else 186000) + (if b0002 then 0 else 186000) + (if b0003 then 0 else 186000) + (if b0004 then 0 else 186000) + (if b0005 then 0 else 186000) + (if b0006 then 0 else 186000) + (if b0007 then 0 else 186000) + (if b0008 then 0 else 186000) + (if b0009 then 0 else 186000) + (if b0010 then 0 else 186000) + (if b0011 then 0 else 186000) + (if b0012 then 0 else 186000) + (if b0013 then 0 else 186000) + (if b0014 then 0 else 186000) + (if b0015 then 0 else 186000) + (if b0016 then 0 else 186000) + (if b0017 then 0 else 186000) + (if b0018 then 0 else 186000) + (if b0019 then 0 else 186000) + (if b0020 then 0 else 186000) + (if b0021 then 0 else 186000) + (if b0022 then 0 else 186000) + (if b0023 then 0 else 186000) + (if b0024 then 0 else 186000) + (if b0025 then 0 else 186000) + (if b0026 then 0 else 186000) + (if b0027 then 0 else 186000) + (if b0028 then 0 else 186000) + (if b0029 then 0 else 186000) + (if b0030 then 0 else 186000) + (if b0031 then 0 else 186000) + (if b0032 then 0 else 186000) + (if b0033 then 0 else 186000) + (if b0034 then 0 else 186000) + (if b0035 then 0 else 186000) + (if b0036 then 0 else 186000) + (if b0037 then 0 else 186000) + (if b0038 then 0 else 186000) + (if b0039 then 0 else 186000) + (if b0040 then 0 else 186000) + (if b0041 then 0 else 186000) + (if b0042 then 0 else 186000) + (if b0043 then 0 else 186000) + (if b0044 then 0 else 186000) + (if b0045 then 0 else 186000) + (if b0046 then 0 else 186000) + (if b0047 then 0 else 186000) + (if b0048 then 0 else 186000) + (if b0049 then 0 else 186000) + (if b0050 then 0 else 186000) + (if b0051 then 0 else 186000) + (if b0052 then 0 else 186000) + (if b0053 then 0 else 186000) + (if b0054 then 0 else 186000) + (if b0055 then 0 else 186000) + (if b0056 then 0 else 186000) + (if b0057 then 0 else 186000) + (if b0058 then 0 else 186000) + (if b0059 then 0 else 186000) + (if b0060 then 0 else 186000) + (if b0061 then 0 else 186000) + (if b0062 then 0 else 186000) + (if b0063 then 0 else 186000) + (if b0064 then 0 else 186000) + (if b0065 then 0 else 186000) + (if b0066 then 0 else 186000) + (if b0067 then 0 else 186000) + (if b0068 then 0 else 186000) + (if b0069 then 0 else 186000) + (if b0070 then 0 else 186000) + (if b0071 then 0 else 186000) + (if b0072 then 0 else 186000) + (if b0073 then 0 else 186000) + (if b0074 then 0 else 186000) + (if b0075 then 0 else 186000) + (if b0076 then 0 else 186000) + (if b0077 then 0 else 186000) + (if b0078 then 0 else 186000) + (if b0079 then 0 else 186000) + (if b0080 then 0 else 186000) + (if b0081 then 0 else 186000) + (if b0082 then 0 else 186000) + (if b0083 then 0 else 186000) + (if b0084 then 0 else 186000) + (if b0085 then 0 else 186000) + (if b0086 then 0 else 186000) + (if b0087 then 0 else 186000) + (if b0088 then 0 else 186000) + (if b0089 then 0 else 186000) + (if b0090 then 0 else 186000) + (if b0091 then 0 else 186000) + (if b0092 then 0 else 186000) + (if b0093 then 0 else 186000) + (if b0094 then 0 else 186000) + (if b0095 then 0 else 186000) + (if b0096 then 0 else 186000) + (if b0097 then 0 else 186000) + (if b0098 then 0 else 186000) + (if b0099 then 0 else 186000) + (if b0100 then 0 else 186000) + (if b0101 then 0 else 186000) + (if b0102 then 0 else 186000) + (if b0103 then 0 else 186000) + (if b0104 then 0 else 186000) + (if b0105 then 0 else 186000) + (if b0106 then 0 else 186000) + (if b0107 then 0 else 186000) + (if b0108 then 0 else 186000) + (if b0109 then 0 else 186000) + (if b0110 then 0 else 186000) + (if b0111 then 0 else 186000) + (if b0112 then 0 else 186000) + (if b0113 then 0 else 186000) + (if b0114 then 0 else 186000) + (if b0115 then 0 else 186000) + (if b0116 then 0 else 186000) + (if b0118 then 0 else 186000) + (if b0120 then 0 else 186000) + (if b0121 then 0 else 186000) + (if b0122 then 0 else 186000) + (if b0123 then 0 else 186000) + (if b0124 then 0 else 186000) + (if b0125 then 0 else 186000) + (if b0126 then 0 else 186000) + (if b0127 then 0 else 186000) + (if b0128 then 0 else 186000) + (if b0129 then 0 else 186000) + (if b0130 then 0 else 186000) + (if b0131 then 0 else 186000) + (if b0132 then 0 else 186000) + (if b0134 then 0 else 186000) + (if b0136 then 0 else 186000) + (if b0137 then 0 else 186000) + (if b0138 then 0 else 186000) + (if b0139 then 0 else 186000) + (if b0141 then 0 else 186000) + (if b0142 then 0 else 186000) + (if b0143 then 0 else 186000) + (if b0144 then 0 else 186000) + (if b0145 then 0 else 186000) + (if b0147 then 0 else 186000) + (if b0148 then 0 else 186000) + (if b0149 then 0 else 186000) + (if b0150 then 0 else 186000) + (if b0151 then 0 else 186000) + (if b0154 then 0 else 186000) + (if b0156 then 0 else 186000) + (if b0157 then 0 else 186000) + (if b0158 then 0 else 186000) + (if b0159 then 0 else 186000) + (if b0162 then 0 else 186000) + (if b0164 then 0 else 186000) + (if b0167 then 0 else 186000) + (if b0169 then 0 else 186000) + (if b0172 then 0 else 186000) + (if b0174 then 0 else 186000) + (if b0175 then 0 else 186000) + (if b0176 then 0 else 186000) + (if b0177 then 0 else 186000) + (if b0181 then 0 else 186000) + (if b0182 then 0 else 186000) + (if b0184 then 0 else 186000) + (if b0185 then 0 else 186000) + (if b0186 then 0 else 186000) + (if b0188 then 0 else 186000) + (if b0189 then 0 else 186000) + (if b0190 then 0 else 186000) + (if b0191 then 0 else 186000) + (if b0192 then 0 else 186000) + (if b0193 then 0 else 186000) + (if b0195 then 0 else 186000) + (if b0197 then 0 else 186000) + (if b0198 then 0 else 186000) + (if b0199 then 0 else 186000) + (if b0200 then 0 else 186000) + (if b0205 then 0 else 186000) + (if b0206 then 0 else 186000) + (if b0207 then 0 else 186000) + (if b0208 then 0 else 186000) + (if b0210 then 0 else 186000) + (if b0212 then 0 else 186000) + (if b0214 then 0 else 186000) + (if b0215 then 0 else 186000) + (if b0216 then 0 else 186000) + (if b0217 then 0 else 186000) + (if b0222 then 0 else 186000) + (if b0223 then 0 else 186000) + (if b0224 then 0 else 186000) + (if b0225 then 0 else 186000) + (if b0227 then 0 else 186000) + (if b0228 then 0 else 186000) + (if b0229 then 0 else 186000) + (if b0230 then 0 else 186000) + (if b0232 then 0 else 186000) + (if b0235 then 0 else 186000) + (if b0237 then 0 else 186000) + (if b0238 then 0 else 186000) + (if b0239 then 0 else 186000) + (if b0240 then 0 else 186000) + (if b0241 then 0 else 186000) + (if b0243 then 0 else 186000) + (if b0244 then 0 else 186000) + (if b0245 then 0 else 186000) + (if b0246 then 0 else 186000) + (if b0247 then 0 else 186000) + (if b0248 then 0 else 186000) + (if b0249 then 0 else 186000) + (if b0250 then 0 else 186000) + (if b0251 then 0 else 186000) + (if b0252 then 0 else 186000) + (if b0253 then 0 else 186000) + (if b0254 then 0 else 186000) + (if b0255 then 0 else 186000) + (if b0256 then 0 else 186000) + (if b0257 then 0 else 186000) + (if b0258 then 0 else 186000) + (if b0259 then 0 else 186000) + (if b0260 then 0 else 186000) + (if b0261 then 0 else 186000) + (if b0262 then 0 else 186000) + (if b0263 then 0 else 186000) + (if b0264 then 0 else 186000) + (if b0265 then 0 else 186000) + (if b0266 then 0 else 186000) + (if b0267 then 0 else 186000) + (if b0268 then 0 else 186000) + (if b0269 then 0 else 186000) + (if b0270 then 0 else 186000) + (if b0271 then 0 else 186000) + (if b0272 then 0 else 186000) + (if b0273 then 0 else 186000) + (if b0274 then 0 else 186000) + (if b0275 then 0 else 186000) + (if b0276 then 0 else 186000) + (if b0277 then 0 else 186000) + (if b0278 then 0 else 186000) + (if b0279 then 0 else 186000) + (if b0280 then 0 else 186000) + (if b0281 then 0 else 186000) + (if b0282 then 0 else 186000) + (if b0283 then 0 else 186000) + (if b0284 then 0 else 186000) + (if b0285 then 0 else 186000) + (if b0286 then 0 else 186000) + (if b0287 then 0 else 186000) + (if b0288 then 0 else 186000) + (if b0289 then 0 else 186000) + (if b0290 then 0 else 186000) + (if b0291 then 0 else 186000) + (if b0292 then 0 else 186000) + (if b0293 then 0 else 186000) + (if b0294 then 0 else 186000) + (if b0295 then 0 else 186000) + (if b0296 then 0 else 186000) + (if b0297 then 0 else 186000) + (if b0298 then 0 else 186000) + (if b0299 then 0 else 186000) + (if b0300 then 0 else 186000) + (if b0301 then 0 else 186000) + (if b0302 then 0 else 186000) + (if b0303 then 0 else 186000) + (if b0304 then 0 else 186000) + (if b0305 then 0 else 186000) + (if b0306 then 0 else 186000) + (if b0307 then 0 else 186000) + (if b0308 then 0 else 186000) + (if b0309 then 0 else 186000) + (if b0310 then 0 else 186000) + (if b0311 then 0 else 186000) + (if b0312 then 0 else 186000) + (if b0313 then 0 else 186000) + (if b0314 then 0 else 186000) + (if b0315 then 0 else 186000) + (if b0316 then 0 else 186000) + (if b0317 then 0 else 186000) + (if b0318 then 0 else 186000) + (if b0319 then 0 else 186000) + (if b0320 then 0 else 186000) + (if b0321 then 0 else 186000) + (if b0322 then 0 else 186000) + (if b0323 then 0 else 186000) + (if b0324 then 0 else 186000) + (if b0325 then 0 else 186000) + (if b0326 then 0 else 186000) + (if b0327 then 0 else 186000) + (if b0328 then 0 else 186000) + (if b0329 then 0 else 186000) + (if b0330 then 0 else 186000) + (if b0331 then 0 else 186000) + (if b0332 then 0 else 186000) + (if b0333 then 0 else 186000) + (if b0334 then 0 else 186000) + (if b0335 then 0 else 186000) + (if b0336 then 0 else 186000) + (if b0337 then 0 else 186000) + (if b0338 then 0 else 186000) + (if b0339 then 0 else 186000) + (if b0340 then 0 else 186000) + (if b0341 then 0 else 186000) + (if b0378 then 0 else 186000) + (if b0379 then 0 else 186000) + (if b0380 then 0 else 186000) + (if b0381 then 0 else 186000) + (if b0382 then 0 else 186000) + (if b0383 then 0 else 186000) + (if b0385 then 0 else 186000) + (if b0386 then 0 else 186000) + (if b0387 then 0 else 186000) + (if b0388 then 0 else 186000) + (if b0389 then 0 else 186000) + (if b0390 then 0 else 186000) + (if b0424 then 0 else 186000) + (if b0425 then 0 else 186000) + (if b0426 then 0 else 186000) + (if b0427 then 0 else 186000) + (if b0430 then 0 else 186000) + (if b0431 then 0 else 186000) + (if b0432 then 0 else 186000) + (if b0433 then 0 else 186000) + (if b0435 then 0 else 186000) + (if b0436 then 0 else 186000) + (if b0437 then 0 else 186000) + (if b0438 then 0 else 186000) + (if b0439 then 0 else 186000) + (if b0440 then 0 else 186000) + (if b0441 then 0 else 186000) + (if b0442 then 0 else 186000) + (if b0443 then 0 else 186000) + (if b0444 then 0 else 186000) + (if b0445 then 0 else 186000) + (if b0446 then 0 else 186000) + (if b0447 then 0 else 186000) + (if b0448 then 0 else 186000) + (if b0449 then 0 else 186000) + (if b0450 then 0 else 186000) + (if b0451 then 0 else 186000) + (if b0452 then 0 else 186000) + (if b0453 then 0 else 186000) + (if b0454 then 0 else 186000) + (if b0455 then 0 else 186000) + (if b0456 then 0 else 186000) + (if b0457 then 0 else 186000) + (if b0458 then 0 else 186000) + (if b0459 then 0 else 186000) + (if b0460 then 0 else 186000) + (if b0461 then 0 else 186000) + (if b0462 then 0 else 186000) + (if b0463 then 0 else 186000) + (if b0464 then 0 else 186000) + (if b0465 then 0 else 186000) < 441
}
Prover Time taken = 6.919011
Added Horn clause: 31 && 75 && 0 && 0 && 76 && 0 && 78 && 0 && 0 => 81
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/linear-algebra/kernels/3mm/kernel3.bpl.ice2.bpl
Total learner time was 00:00:00.1383450
Verifying $kernel3: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool, b0228: bool, b0229: bool, b0230: bool, b0231: bool, b0232: bool, b0233: bool, b0234: bool, b0235: bool, b0236: bool, b0237: bool, b0238: bool, b0239: bool, b0240: bool, b0241: bool, b0242: bool, b0243: bool, b0244: bool, b0245: bool, b0246: bool, b0247: bool, b0248: bool, b0249: bool, b0250: bool, b0251: bool, b0252: bool, b0253: bool, b0254: bool, b0255: bool, b0256: bool, b0257: bool, b0258: bool, b0259: bool, b0260: bool, b0261: bool, b0262: bool, b0263: bool, b0264: bool, b0265: bool, b0266: bool, b0267: bool, b0268: bool, b0269: bool, b0270: bool, b0271: bool, b0272: bool, b0273: bool, b0274: bool, b0275: bool, b0276: bool, b0277: bool, b0278: bool, b0279: bool, b0280: bool, b0281: bool, b0282: bool, b0283: bool, b0284: bool, b0285: bool, b0286: bool, b0287: bool, b0288: bool, b0289: bool, b0290: bool, b0291: bool, b0292: bool, b0293: bool, b0294: bool, b0295: bool, b0296: bool, b0297: bool, b0298: bool, b0299: bool, b0300: bool, b0301: bool, b0302: bool, b0303: bool, b0304: bool, b0305: bool, b0306: bool, b0307: bool, b0308: bool, b0309: bool, b0310: bool, b0311: bool, b0312: bool, b0313: bool, b0314: bool, b0315: bool, b0316: bool, b0317: bool, b0318: bool, b0319: bool, b0320: bool, b0321: bool, b0322: bool, b0323: bool, b0324: bool, b0325: bool, b0326: bool, b0327: bool, b0328: bool, b0329: bool, b0330: bool, b0331: bool, b0332: bool, b0333: bool, b0334: bool, b0335: bool, b0336: bool, b0337: bool, b0338: bool, b0339: bool, b0340: bool, b0341: bool, b0342: bool, b0343: bool, b0344: bool, b0345: bool, b0346: bool, b0347: bool, b0348: bool, b0349: bool, b0350: bool, b0351: bool, b0352: bool, b0353: bool, b0354: bool, b0355: bool, b0356: bool, b0357: bool, b0358: bool, b0359: bool, b0360: bool, b0361: bool, b0362: bool, b0363: bool, b0364: bool, b0365: bool, b0366: bool, b0367: bool, b0368: bool, b0369: bool, b0370: bool, b0371: bool, b0372: bool, b0373: bool, b0374: bool, b0375: bool, b0376: bool, b0377: bool, b0378: bool, b0379: bool, b0380: bool, b0381: bool, b0382: bool, b0383: bool, b0384: bool, b0385: bool, b0386: bool, b0387: bool, b0388: bool, b0389: bool, b0390: bool, b0391: bool, b0392: bool, b0393: bool, b0394: bool, b0395: bool, b0396: bool, b0397: bool, b0398: bool, b0399: bool, b0400: bool, b0401: bool, b0402: bool, b0403: bool, b0404: bool, b0405: bool, b0406: bool, b0407: bool, b0408: bool, b0409: bool, b0410: bool, b0411: bool, b0412: bool, b0413: bool, b0414: bool, b0415: bool, b0416: bool, b0417: bool, b0418: bool, b0419: bool, b0420: bool, b0421: bool, b0422: bool, b0423: bool, b0424: bool, b0425: bool, b0426: bool, b0427: bool, b0428: bool, b0429: bool, b0430: bool, b0431: bool, b0432: bool, b0433: bool, b0434: bool, b0435: bool, b0436: bool, b0437: bool, b0438: bool, b0439: bool, b0440: bool, b0441: bool, b0442: bool, b0443: bool, b0444: bool, b0445: bool, b0446: bool, b0447: bool, b0448: bool, b0449: bool, b0450: bool, b0451: bool, b0452: bool, b0453: bool, b0454: bool, b0455: bool, b0456: bool, b0457: bool, b0458: bool, b0459: bool, b0460: bool, b0461: bool, b0462: bool, b0463: bool, b0464: bool, b0465: bool) : bool
{
  0 + (if b0000 then 0 else 186000) + (if b0001 then 0 else 186000) + (if b0002 then 0 else 186000) + (if b0003 then 0 else 186000) + (if b0004 then 0 else 186000) + (if b0005 then 0 else 186000) + (if b0006 then 0 else 186000) + (if b0007 then 0 else 186000) + (if b0008 then 0 else 186000) + (if b0009 then 0 else 186000) + (if b0010 then 0 else 186000) + (if b0011 then 0 else 186000) + (if b0012 then 0 else 186000) + (if b0013 then 0 else 186000) + (if b0014 then 0 else 186000) + (if b0015 then 0 else 186000) + (if b0016 then 0 else 186000) + (if b0017 then 0 else 186000) + (if b0018 then 0 else 186000) + (if b0019 then 0 else 186000) + (if b0020 then 0 else 186000) + (if b0021 then 0 else 186000) + (if b0022 then 0 else 186000) + (if b0023 then 0 else 186000) + (if b0024 then 0 else 186000) + (if b0025 then 0 else 186000) + (if b0026 then 0 else 186000) + (if b0027 then 0 else 186000) + (if b0028 then 0 else 186000) + (if b0029 then 0 else 186000) + (if b0030 then 0 else 186000) + (if b0031 then 0 else 186000) + (if b0032 then 0 else 186000) + (if b0033 then 0 else 186000) + (if b0034 then 0 else 186000) + (if b0035 then 0 else 186000) + (if b0036 then 0 else 186000) + (if b0037 then 0 else 186000) + (if b0038 then 0 else 186000) + (if b0039 then 0 else 186000) + (if b0040 then 0 else 186000) + (if b0041 then 0 else 186000) + (if b0042 then 0 else 186000) + (if b0043 then 0 else 186000) + (if b0044 then 0 else 186000) + (if b0045 then 0 else 186000) + (if b0046 then 0 else 186000) + (if b0047 then 0 else 186000) + (if b0048 then 0 else 186000) + (if b0049 then 0 else 186000) + (if b0050 then 0 else 186000) + (if b0051 then 0 else 186000) + (if b0052 then 0 else 186000) + (if b0053 then 0 else 186000) + (if b0054 then 0 else 186000) + (if b0055 then 0 else 186000) + (if b0056 then 0 else 186000) + (if b0057 then 0 else 186000) + (if b0058 then 0 else 186000) + (if b0059 then 0 else 186000) + (if b0060 then 0 else 186000) + (if b0061 then 0 else 186000) + (if b0062 then 0 else 186000) + (if b0063 then 0 else 186000) + (if b0064 then 0 else 186000) + (if b0065 then 0 else 186000) + (if b0066 then 0 else 186000) + (if b0067 then 0 else 186000) + (if b0068 then 0 else 186000) + (if b0069 then 0 else 186000) + (if b0070 then 0 else 186000) + (if b0071 then 0 else 186000) + (if b0072 then 0 else 186000) + (if b0073 then 0 else 186000) + (if b0074 then 0 else 186000) + (if b0075 then 0 else 186000) + (if b0076 then 0 else 186000) + (if b0077 then 0 else 186000) + (if b0078 then 0 else 186000) + (if b0079 then 0 else 186000) + (if b0080 then 0 else 186000) + (if b0081 then 0 else 186000) + (if b0082 then 0 else 186000) + (if b0083 then 0 else 186000) + (if b0084 then 0 else 186000) + (if b0085 then 0 else 186000) + (if b0086 then 0 else 186000) + (if b0087 then 0 else 186000) + (if b0088 then 0 else 186000) + (if b0089 then 0 else 186000) + (if b0090 then 0 else 186000) + (if b0091 then 0 else 186000) + (if b0092 then 0 else 186000) + (if b0093 then 0 else 186000) + (if b0094 then 0 else 186000) + (if b0095 then 0 else 186000) + (if b0096 then 0 else 186000) + (if b0097 then 0 else 186000) + (if b0098 then 0 else 186000) + (if b0099 then 0 else 186000) + (if b0100 then 0 else 186000) + (if b0101 then 0 else 186000) + (if b0102 then 0 else 186000) + (if b0103 then 0 else 186000) + (if b0104 then 0 else 186000) + (if b0105 then 0 else 186000) + (if b0106 then 0 else 186000) + (if b0107 then 0 else 186000) + (if b0108 then 0 else 186000) + (if b0109 then 0 else 186000) + (if b0110 then 0 else 186000) + (if b0111 then 0 else 186000) + (if b0112 then 0 else 186000) + (if b0113 then 0 else 186000) + (if b0114 then 0 else 186000) + (if b0115 then 0 else 186000) + (if b0116 then 0 else 186000) + (if b0118 then 0 else 186000) + (if b0120 then 0 else 186000) + (if b0121 then 0 else 186000) + (if b0122 then 0 else 186000) + (if b0123 then 0 else 186000) + (if b0124 then 0 else 186000) + (if b0125 then 0 else 186000) + (if b0126 then 0 else 186000) + (if b0127 then 0 else 186000) + (if b0128 then 0 else 186000) + (if b0129 then 0 else 186000) + (if b0130 then 0 else 186000) + (if b0131 then 0 else 186000) + (if b0132 then 0 else 186000) + (if b0134 then 0 else 186000) + (if b0136 then 0 else 186000) + (if b0137 then 0 else 186000) + (if b0138 then 0 else 186000) + (if b0139 then 0 else 186000) + (if b0141 then 0 else 186000) + (if b0142 then 0 else 186000) + (if b0143 then 0 else 186000) + (if b0144 then 0 else 186000) + (if b0145 then 0 else 186000) + (if b0147 then 0 else 186000) + (if b0148 then 0 else 186000) + (if b0149 then 0 else 186000) + (if b0150 then 0 else 186000) + (if b0151 then 0 else 186000) + (if b0154 then 0 else 186000) + (if b0156 then 0 else 186000) + (if b0157 then 0 else 186000) + (if b0158 then 0 else 186000) + (if b0159 then 0 else 186000) + (if b0162 then 0 else 186000) + (if b0164 then 0 else 186000) + (if b0167 then 0 else 186000) + (if b0169 then 0 else 186000) + (if b0172 then 0 else 186000) + (if b0174 then 0 else 186000) + (if b0175 then 0 else 186000) + (if b0176 then 0 else 186000) + (if b0177 then 0 else 186000) + (if b0181 then 0 else 186000) + (if b0182 then 0 else 186000) + (if b0184 then 0 else 186000) + (if b0185 then 0 else 186000) + (if b0186 then 0 else 186000) + (if b0188 then 0 else 186000) + (if b0189 then 0 else 186000) + (if b0190 then 0 else 186000) + (if b0191 then 0 else 186000) + (if b0192 then 0 else 186000) + (if b0193 then 0 else 186000) + (if b0195 then 0 else 186000) + (if b0197 then 0 else 186000) + (if b0198 then 0 else 186000) + (if b0199 then 0 else 186000) + (if b0200 then 0 else 186000) + (if b0205 then 0 else 186000) + (if b0206 then 0 else 186000) + (if b0207 then 0 else 186000) + (if b0208 then 0 else 186000) + (if b0210 then 0 else 186000) + (if b0212 then 0 else 186000) + (if b0214 then 0 else 186000) + (if b0215 then 0 else 186000) + (if b0216 then 0 else 186000) + (if b0217 then 0 else 186000) + (if b0222 then 0 else 186000) + (if b0223 then 0 else 186000) + (if b0225 then 0 else 186000) + (if b0227 then 0 else 186000) + (if b0228 then 0 else 186000) + (if b0230 then 0 else 186000) + (if b0232 then 0 else 186000) + (if b0235 then 0 else 186000) + (if b0237 then 0 else 186000) + (if b0238 then 0 else 186000) + (if b0239 then 0 else 186000) + (if b0240 then 0 else 186000) + (if b0241 then 0 else 186000) + (if b0243 then 0 else 186000) + (if b0244 then 0 else 186000) + (if b0245 then 0 else 186000) + (if b0246 then 0 else 186000) + (if b0247 then 0 else 186000) + (if b0248 then 0 else 186000) + (if b0249 then 0 else 186000) + (if b0250 then 0 else 186000) + (if b0251 then 0 else 186000) + (if b0252 then 0 else 186000) + (if b0253 then 0 else 186000) + (if b0254 then 0 else 186000) + (if b0255 then 0 else 186000) + (if b0256 then 0 else 186000) + (if b0257 then 0 else 186000) + (if b0258 then 0 else 186000) + (if b0259 then 0 else 186000) + (if b0260 then 0 else 186000) + (if b0261 then 0 else 186000) + (if b0262 then 0 else 186000) + (if b0263 then 0 else 186000) + (if b0264 then 0 else 186000) + (if b0265 then 0 else 186000) + (if b0266 then 0 else 186000) + (if b0267 then 0 else 186000) + (if b0268 then 0 else 186000) + (if b0269 then 0 else 186000) + (if b0270 then 0 else 186000) + (if b0271 then 0 else 186000) + (if b0272 then 0 else 186000) + (if b0273 then 0 else 186000) + (if b0274 then 0 else 186000) + (if b0275 then 0 else 186000) + (if b0276 then 0 else 186000) + (if b0277 then 0 else 186000) + (if b0278 then 0 else 186000) + (if b0279 then 0 else 186000) + (if b0280 then 0 else 186000) + (if b0281 then 0 else 186000) + (if b0282 then 0 else 186000) + (if b0283 then 0 else 186000) + (if b0284 then 0 else 186000) + (if b0285 then 0 else 186000) + (if b0286 then 0 else 186000) + (if b0287 then 0 else 186000) + (if b0288 then 0 else 186000) + (if b0289 then 0 else 186000) + (if b0290 then 0 else 186000) + (if b0291 then 0 else 186000) + (if b0292 then 0 else 186000) + (if b0293 then 0 else 186000) + (if b0294 then 0 else 186000) + (if b0295 then 0 else 186000) + (if b0296 then 0 else 186000) + (if b0297 then 0 else 186000) + (if b0298 then 0 else 186000) + (if b0299 then 0 else 186000) + (if b0300 then 0 else 186000) + (if b0301 then 0 else 186000) + (if b0302 then 0 else 186000) + (if b0303 then 0 else 186000) + (if b0304 then 0 else 186000) + (if b0305 then 0 else 186000) + (if b0306 then 0 else 186000) + (if b0307 then 0 else 186000) + (if b0308 then 0 else 186000) + (if b0309 then 0 else 186000) + (if b0310 then 0 else 186000) + (if b0311 then 0 else 186000) + (if b0312 then 0 else 186000) + (if b0313 then 0 else 186000) + (if b0314 then 0 else 186000) + (if b0315 then 0 else 186000) + (if b0316 then 0 else 186000) + (if b0317 then 0 else 186000) + (if b0318 then 0 else 186000) + (if b0319 then 0 else 186000) + (if b0320 then 0 else 186000) + (if b0321 then 0 else 186000) + (if b0322 then 0 else 186000) + (if b0323 then 0 else 186000) + (if b0324 then 0 else 186000) + (if b0325 then 0 else 186000) + (if b0326 then 0 else 186000) + (if b0327 then 0 else 186000) + (if b0328 then 0 else 186000) + (if b0329 then 0 else 186000) + (if b0330 then 0 else 186000) + (if b0331 then 0 else 186000) + (if b0332 then 0 else 186000) + (if b0333 then 0 else 186000) + (if b0334 then 0 else 186000) + (if b0335 then 0 else 186000) + (if b0336 then 0 else 186000) + (if b0337 then 0 else 186000) + (if b0338 then 0 else 186000) + (if b0339 then 0 else 186000) + (if b0340 then 0 else 186000) + (if b0341 then 0 else 186000) + (if b0378 then 0 else 186000) + (if b0379 then 0 else 186000) + (if b0380 then 0 else 186000) + (if b0381 then 0 else 186000) + (if b0382 then 0 else 186000) + (if b0383 then 0 else 186000) + (if b0385 then 0 else 186000) + (if b0386 then 0 else 186000) + (if b0387 then 0 else 186000) + (if b0388 then 0 else 186000) + (if b0389 then 0 else 186000) + (if b0390 then 0 else 186000) + (if b0424 then 0 else 186000) + (if b0425 then 0 else 186000) + (if b0426 then 0 else 186000) + (if b0427 then 0 else 186000) + (if b0430 then 0 else 186000) + (if b0431 then 0 else 186000) + (if b0432 then 0 else 186000) + (if b0433 then 0 else 186000) + (if b0435 then 0 else 186000) + (if b0436 then 0 else 186000) + (if b0437 then 0 else 186000) + (if b0438 then 0 else 186000) + (if b0439 then 0 else 186000) + (if b0440 then 0 else 186000) + (if b0441 then 0 else 186000) + (if b0442 then 0 else 186000) + (if b0443 then 0 else 186000) + (if b0444 then 0 else 186000) + (if b0445 then 0 else 186000) + (if b0446 then 0 else 186000) + (if b0447 then 0 else 186000) + (if b0448 then 0 else 186000) + (if b0449 then 0 else 186000) + (if b0450 then 0 else 186000) + (if b0451 then 0 else 186000) + (if b0452 then 0 else 186000) + (if b0453 then 0 else 186000) + (if b0454 then 0 else 186000) + (if b0455 then 0 else 186000) + (if b0456 then 0 else 186000) + (if b0457 then 0 else 186000) + (if b0458 then 0 else 186000) + (if b0459 then 0 else 186000) + (if b0460 then 0 else 186000) + (if b0461 then 0 else 186000) + (if b0462 then 0 else 186000) + (if b0463 then 0 else 186000) + (if b0464 then 0 else 186000) + (if b0465 then 0 else 186000) < 441
}
Prover Time taken = 8.557015
Added Horn clause: 82 => 83
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/linear-algebra/kernels/3mm/kernel3.bpl.ice2.bpl
Total learner time was 00:00:00.1448080
Verifying $kernel3: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool, b0228: bool, b0229: bool, b0230: bool, b0231: bool, b0232: bool, b0233: bool, b0234: bool, b0235: bool, b0236: bool, b0237: bool, b0238: bool, b0239: bool, b0240: bool, b0241: bool, b0242: bool, b0243: bool, b0244: bool, b0245: bool, b0246: bool, b0247: bool, b0248: bool, b0249: bool, b0250: bool, b0251: bool, b0252: bool, b0253: bool, b0254: bool, b0255: bool, b0256: bool, b0257: bool, b0258: bool, b0259: bool, b0260: bool, b0261: bool, b0262: bool, b0263: bool, b0264: bool, b0265: bool, b0266: bool, b0267: bool, b0268: bool, b0269: bool, b0270: bool, b0271: bool, b0272: bool, b0273: bool, b0274: bool, b0275: bool, b0276: bool, b0277: bool, b0278: bool, b0279: bool, b0280: bool, b0281: bool, b0282: bool, b0283: bool, b0284: bool, b0285: bool, b0286: bool, b0287: bool, b0288: bool, b0289: bool, b0290: bool, b0291: bool, b0292: bool, b0293: bool, b0294: bool, b0295: bool, b0296: bool, b0297: bool, b0298: bool, b0299: bool, b0300: bool, b0301: bool, b0302: bool, b0303: bool, b0304: bool, b0305: bool, b0306: bool, b0307: bool, b0308: bool, b0309: bool, b0310: bool, b0311: bool, b0312: bool, b0313: bool, b0314: bool, b0315: bool, b0316: bool, b0317: bool, b0318: bool, b0319: bool, b0320: bool, b0321: bool, b0322: bool, b0323: bool, b0324: bool, b0325: bool, b0326: bool, b0327: bool, b0328: bool, b0329: bool, b0330: bool, b0331: bool, b0332: bool, b0333: bool, b0334: bool, b0335: bool, b0336: bool, b0337: bool, b0338: bool, b0339: bool, b0340: bool, b0341: bool, b0342: bool, b0343: bool, b0344: bool, b0345: bool, b0346: bool, b0347: bool, b0348: bool, b0349: bool, b0350: bool, b0351: bool, b0352: bool, b0353: bool, b0354: bool, b0355: bool, b0356: bool, b0357: bool, b0358: bool, b0359: bool, b0360: bool, b0361: bool, b0362: bool, b0363: bool, b0364: bool, b0365: bool, b0366: bool, b0367: bool, b0368: bool, b0369: bool, b0370: bool, b0371: bool, b0372: bool, b0373: bool, b0374: bool, b0375: bool, b0376: bool, b0377: bool, b0378: bool, b0379: bool, b0380: bool, b0381: bool, b0382: bool, b0383: bool, b0384: bool, b0385: bool, b0386: bool, b0387: bool, b0388: bool, b0389: bool, b0390: bool, b0391: bool, b0392: bool, b0393: bool, b0394: bool, b0395: bool, b0396: bool, b0397: bool, b0398: bool, b0399: bool, b0400: bool, b0401: bool, b0402: bool, b0403: bool, b0404: bool, b0405: bool, b0406: bool, b0407: bool, b0408: bool, b0409: bool, b0410: bool, b0411: bool, b0412: bool, b0413: bool, b0414: bool, b0415: bool, b0416: bool, b0417: bool, b0418: bool, b0419: bool, b0420: bool, b0421: bool, b0422: bool, b0423: bool, b0424: bool, b0425: bool, b0426: bool, b0427: bool, b0428: bool, b0429: bool, b0430: bool, b0431: bool, b0432: bool, b0433: bool, b0434: bool, b0435: bool, b0436: bool, b0437: bool, b0438: bool, b0439: bool, b0440: bool, b0441: bool, b0442: bool, b0443: bool, b0444: bool, b0445: bool, b0446: bool, b0447: bool, b0448: bool, b0449: bool, b0450: bool, b0451: bool, b0452: bool, b0453: bool, b0454: bool, b0455: bool, b0456: bool, b0457: bool, b0458: bool, b0459: bool, b0460: bool, b0461: bool, b0462: bool, b0463: bool, b0464: bool, b0465: bool) : bool
{
  0 + (if b0000 then 0 else 186000) + (if b0001 then 0 else 186000) + (if b0002 then 0 else 186000) + (if b0003 then 0 else 186000) + (if b0004 then 0 else 186000) + (if b0005 then 0 else 186000) + (if b0006 then 0 else 186000) + (if b0007 then 0 else 186000) + (if b0008 then 0 else 186000) + (if b0009 then 0 else 186000) + (if b0010 then 0 else 186000) + (if b0011 then 0 else 186000) + (if b0012 then 0 else 186000) + (if b0013 then 0 else 186000) + (if b0014 then 0 else 186000) + (if b0015 then 0 else 186000) + (if b0016 then 0 else 186000) + (if b0017 then 0 else 186000) + (if b0018 then 0 else 186000) + (if b0019 then 0 else 186000) + (if b0020 then 0 else 186000) + (if b0021 then 0 else 186000) + (if b0022 then 0 else 186000) + (if b0023 then 0 else 186000) + (if b0024 then 0 else 186000) + (if b0025 then 0 else 186000) + (if b0026 then 0 else 186000) + (if b0027 then 0 else 186000) + (if b0028 then 0 else 186000) + (if b0029 then 0 else 186000) + (if b0030 then 0 else 186000) + (if b0031 then 0 else 186000) + (if b0032 then 0 else 186000) + (if b0033 then 0 else 186000) + (if b0034 then 0 else 186000) + (if b0035 then 0 else 186000) + (if b0036 then 0 else 186000) + (if b0037 then 0 else 186000) + (if b0038 then 0 else 186000) + (if b0039 then 0 else 186000) + (if b0040 then 0 else 186000) + (if b0041 then 0 else 186000) + (if b0042 then 0 else 186000) + (if b0043 then 0 else 186000) + (if b0044 then 0 else 186000) + (if b0045 then 0 else 186000) + (if b0046 then 0 else 186000) + (if b0047 then 0 else 186000) + (if b0048 then 0 else 186000) + (if b0049 then 0 else 186000) + (if b0050 then 0 else 186000) + (if b0051 then 0 else 186000) + (if b0052 then 0 else 186000) + (if b0053 then 0 else 186000) + (if b0054 then 0 else 186000) + (if b0055 then 0 else 186000) + (if b0056 then 0 else 186000) + (if b0057 then 0 else 186000) + (if b0058 then 0 else 186000) + (if b0059 then 0 else 186000) + (if b0060 then 0 else 186000) + (if b0061 then 0 else 186000) + (if b0062 then 0 else 186000) + (if b0063 then 0 else 186000) + (if b0064 then 0 else 186000) + (if b0065 then 0 else 186000) + (if b0066 then 0 else 186000) + (if b0067 then 0 else 186000) + (if b0068 then 0 else 186000) + (if b0069 then 0 else 186000) + (if b0070 then 0 else 186000) + (if b0071 then 0 else 186000) + (if b0072 then 0 else 186000) + (if b0073 then 0 else 186000) + (if b0074 then 0 else 186000) + (if b0075 then 0 else 186000) + (if b0076 then 0 else 186000) + (if b0077 then 0 else 186000) + (if b0078 then 0 else 186000) + (if b0079 then 0 else 186000) + (if b0080 then 0 else 186000) + (if b0081 then 0 else 186000) + (if b0082 then 0 else 186000) + (if b0083 then 0 else 186000) + (if b0084 then 0 else 186000) + (if b0085 then 0 else 186000) + (if b0086 then 0 else 186000) + (if b0087 then 0 else 186000) + (if b0088 then 0 else 186000) + (if b0089 then 0 else 186000) + (if b0090 then 0 else 186000) + (if b0091 then 0 else 186000) + (if b0092 then 0 else 186000) + (if b0093 then 0 else 186000) + (if b0094 then 0 else 186000) + (if b0095 then 0 else 186000) + (if b0096 then 0 else 186000) + (if b0097 then 0 else 186000) + (if b0098 then 0 else 186000) + (if b0099 then 0 else 186000) + (if b0100 then 0 else 186000) + (if b0101 then 0 else 186000) + (if b0102 then 0 else 186000) + (if b0103 then 0 else 186000) + (if b0104 then 0 else 186000) + (if b0105 then 0 else 186000) + (if b0106 then 0 else 186000) + (if b0107 then 0 else 186000) + (if b0108 then 0 else 186000) + (if b0109 then 0 else 186000) + (if b0110 then 0 else 186000) + (if b0111 then 0 else 186000) + (if b0112 then 0 else 186000) + (if b0113 then 0 else 186000) + (if b0114 then 0 else 186000) + (if b0115 then 0 else 186000) + (if b0116 then 0 else 186000) + (if b0118 then 0 else 186000) + (if b0120 then 0 else 186000) + (if b0121 then 0 else 186000) + (if b0122 then 0 else 186000) + (if b0123 then 0 else 186000) + (if b0124 then 0 else 186000) + (if b0125 then 0 else 186000) + (if b0126 then 0 else 186000) + (if b0127 then 0 else 186000) + (if b0128 then 0 else 186000) + (if b0129 then 0 else 186000) + (if b0130 then 0 else 186000) + (if b0131 then 0 else 186000) + (if b0132 then 0 else 186000) + (if b0134 then 0 else 186000) + (if b0136 then 0 else 186000) + (if b0137 then 0 else 186000) + (if b0138 then 0 else 186000) + (if b0139 then 0 else 186000) + (if b0141 then 0 else 186000) + (if b0142 then 0 else 186000) + (if b0143 then 0 else 186000) + (if b0145 then 0 else 186000) + (if b0147 then 0 else 186000) + (if b0148 then 0 else 186000) + (if b0149 then 0 else 186000) + (if b0150 then 0 else 186000) + (if b0151 then 0 else 186000) + (if b0154 then 0 else 186000) + (if b0156 then 0 else 186000) + (if b0157 then 0 else 186000) + (if b0158 then 0 else 186000) + (if b0159 then 0 else 186000) + (if b0162 then 0 else 186000) + (if b0164 then 0 else 186000) + (if b0167 then 0 else 186000) + (if b0169 then 0 else 186000) + (if b0172 then 0 else 186000) + (if b0174 then 0 else 186000) + (if b0175 then 0 else 186000) + (if b0176 then 0 else 186000) + (if b0177 then 0 else 186000) + (if b0181 then 0 else 186000) + (if b0182 then 0 else 186000) + (if b0184 then 0 else 186000) + (if b0185 then 0 else 186000) + (if b0186 then 0 else 186000) + (if b0188 then 0 else 186000) + (if b0189 then 0 else 186000) + (if b0190 then 0 else 186000) + (if b0191 then 0 else 186000) + (if b0192 then 0 else 186000) + (if b0193 then 0 else 186000) + (if b0195 then 0 else 186000) + (if b0197 then 0 else 186000) + (if b0198 then 0 else 186000) + (if b0199 then 0 else 186000) + (if b0200 then 0 else 186000) + (if b0205 then 0 else 186000) + (if b0206 then 0 else 186000) + (if b0207 then 0 else 186000) + (if b0208 then 0 else 186000) + (if b0210 then 0 else 186000) + (if b0212 then 0 else 186000) + (if b0214 then 0 else 186000) + (if b0215 then 0 else 186000) + (if b0216 then 0 else 186000) + (if b0217 then 0 else 186000) + (if b0222 then 0 else 186000) + (if b0223 then 0 else 186000) + (if b0225 then 0 else 186000) + (if b0227 then 0 else 186000) + (if b0228 then 0 else 186000) + (if b0230 then 0 else 186000) + (if b0232 then 0 else 186000) + (if b0235 then 0 else 186000) + (if b0237 then 0 else 186000) + (if b0238 then 0 else 186000) + (if b0239 then 0 else 186000) + (if b0240 then 0 else 186000) + (if b0241 then 0 else 186000) + (if b0243 then 0 else 186000) + (if b0244 then 0 else 186000) + (if b0245 then 0 else 186000) + (if b0246 then 0 else 186000) + (if b0247 then 0 else 186000) + (if b0248 then 0 else 186000) + (if b0249 then 0 else 186000) + (if b0250 then 0 else 186000) + (if b0251 then 0 else 186000) + (if b0252 then 0 else 186000) + (if b0253 then 0 else 186000) + (if b0254 then 0 else 186000) + (if b0255 then 0 else 186000) + (if b0256 then 0 else 186000) + (if b0257 then 0 else 186000) + (if b0258 then 0 else 186000) + (if b0259 then 0 else 186000) + (if b0260 then 0 else 186000) + (if b0261 then 0 else 186000) + (if b0262 then 0 else 186000) + (if b0263 then 0 else 186000) + (if b0264 then 0 else 186000) + (if b0265 then 0 else 186000) + (if b0266 then 0 else 186000) + (if b0267 then 0 else 186000) + (if b0268 then 0 else 186000) + (if b0269 then 0 else 186000) + (if b0270 then 0 else 186000) + (if b0271 then 0 else 186000) + (if b0272 then 0 else 186000) + (if b0273 then 0 else 186000) + (if b0274 then 0 else 186000) + (if b0275 then 0 else 186000) + (if b0276 then 0 else 186000) + (if b0277 then 0 else 186000) + (if b0278 then 0 else 186000) + (if b0279 then 0 else 186000) + (if b0280 then 0 else 186000) + (if b0281 then 0 else 186000) + (if b0282 then 0 else 186000) + (if b0283 then 0 else 186000) + (if b0284 then 0 else 186000) + (if b0285 then 0 else 186000) + (if b0286 then 0 else 186000) + (if b0287 then 0 else 186000) + (if b0288 then 0 else 186000) + (if b0289 then 0 else 186000) + (if b0290 then 0 else 186000) + (if b0291 then 0 else 186000) + (if b0292 then 0 else 186000) + (if b0293 then 0 else 186000) + (if b0294 then 0 else 186000) + (if b0295 then 0 else 186000) + (if b0296 then 0 else 186000) + (if b0297 then 0 else 186000) + (if b0298 then 0 else 186000) + (if b0299 then 0 else 186000) + (if b0300 then 0 else 186000) + (if b0301 then 0 else 186000) + (if b0302 then 0 else 186000) + (if b0303 then 0 else 186000) + (if b0304 then 0 else 186000) + (if b0305 then 0 else 186000) + (if b0306 then 0 else 186000) + (if b0307 then 0 else 186000) + (if b0308 then 0 else 186000) + (if b0309 then 0 else 186000) + (if b0310 then 0 else 186000) + (if b0311 then 0 else 186000) + (if b0312 then 0 else 186000) + (if b0313 then 0 else 186000) + (if b0314 then 0 else 186000) + (if b0315 then 0 else 186000) + (if b0316 then 0 else 186000) + (if b0317 then 0 else 186000) + (if b0318 then 0 else 186000) + (if b0319 then 0 else 186000) + (if b0320 then 0 else 186000) + (if b0321 then 0 else 186000) + (if b0322 then 0 else 186000) + (if b0323 then 0 else 186000) + (if b0324 then 0 else 186000) + (if b0325 then 0 else 186000) + (if b0326 then 0 else 186000) + (if b0327 then 0 else 186000) + (if b0328 then 0 else 186000) + (if b0329 then 0 else 186000) + (if b0330 then 0 else 186000) + (if b0331 then 0 else 186000) + (if b0332 then 0 else 186000) + (if b0333 then 0 else 186000) + (if b0334 then 0 else 186000) + (if b0335 then 0 else 186000) + (if b0336 then 0 else 186000) + (if b0337 then 0 else 186000) + (if b0338 then 0 else 186000) + (if b0339 then 0 else 186000) + (if b0340 then 0 else 186000) + (if b0341 then 0 else 186000) + (if b0378 then 0 else 186000) + (if b0379 then 0 else 186000) + (if b0380 then 0 else 186000) + (if b0381 then 0 else 186000) + (if b0382 then 0 else 186000) + (if b0383 then 0 else 186000) + (if b0385 then 0 else 186000) + (if b0386 then 0 else 186000) + (if b0387 then 0 else 186000) + (if b0388 then 0 else 186000) + (if b0389 then 0 else 186000) + (if b0390 then 0 else 186000) + (if b0424 then 0 else 186000) + (if b0425 then 0 else 186000) + (if b0426 then 0 else 186000) + (if b0427 then 0 else 186000) + (if b0430 then 0 else 186000) + (if b0431 then 0 else 186000) + (if b0432 then 0 else 186000) + (if b0433 then 0 else 186000) + (if b0435 then 0 else 186000) + (if b0436 then 0 else 186000) + (if b0437 then 0 else 186000) + (if b0438 then 0 else 186000) + (if b0439 then 0 else 186000) + (if b0440 then 0 else 186000) + (if b0441 then 0 else 186000) + (if b0442 then 0 else 186000) + (if b0443 then 0 else 186000) + (if b0444 then 0 else 186000) + (if b0445 then 0 else 186000) + (if b0446 then 0 else 186000) + (if b0447 then 0 else 186000) + (if b0448 then 0 else 186000) + (if b0449 then 0 else 186000) + (if b0450 then 0 else 186000) + (if b0451 then 0 else 186000) + (if b0452 then 0 else 186000) + (if b0453 then 0 else 186000) + (if b0454 then 0 else 186000) + (if b0455 then 0 else 186000) + (if b0456 then 0 else 186000) + (if b0457 then 0 else 186000) + (if b0458 then 0 else 186000) + (if b0459 then 0 else 186000) + (if b0460 then 0 else 186000) + (if b0461 then 0 else 186000) + (if b0462 then 0 else 186000) + (if b0463 then 0 else 186000) + (if b0464 then 0 else 186000) + (if b0465 then 0 else 186000) < 441
}
Prover Time taken = 6.603157
Added Horn clause: 82 && 84 && 83 => 85
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/linear-algebra/kernels/3mm/kernel3.bpl.ice2.bpl
Total learner time was 00:00:00.1417700
Verifying $kernel3: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool, b0228: bool, b0229: bool, b0230: bool, b0231: bool, b0232: bool, b0233: bool, b0234: bool, b0235: bool, b0236: bool, b0237: bool, b0238: bool, b0239: bool, b0240: bool, b0241: bool, b0242: bool, b0243: bool, b0244: bool, b0245: bool, b0246: bool, b0247: bool, b0248: bool, b0249: bool, b0250: bool, b0251: bool, b0252: bool, b0253: bool, b0254: bool, b0255: bool, b0256: bool, b0257: bool, b0258: bool, b0259: bool, b0260: bool, b0261: bool, b0262: bool, b0263: bool, b0264: bool, b0265: bool, b0266: bool, b0267: bool, b0268: bool, b0269: bool, b0270: bool, b0271: bool, b0272: bool, b0273: bool, b0274: bool, b0275: bool, b0276: bool, b0277: bool, b0278: bool, b0279: bool, b0280: bool, b0281: bool, b0282: bool, b0283: bool, b0284: bool, b0285: bool, b0286: bool, b0287: bool, b0288: bool, b0289: bool, b0290: bool, b0291: bool, b0292: bool, b0293: bool, b0294: bool, b0295: bool, b0296: bool, b0297: bool, b0298: bool, b0299: bool, b0300: bool, b0301: bool, b0302: bool, b0303: bool, b0304: bool, b0305: bool, b0306: bool, b0307: bool, b0308: bool, b0309: bool, b0310: bool, b0311: bool, b0312: bool, b0313: bool, b0314: bool, b0315: bool, b0316: bool, b0317: bool, b0318: bool, b0319: bool, b0320: bool, b0321: bool, b0322: bool, b0323: bool, b0324: bool, b0325: bool, b0326: bool, b0327: bool, b0328: bool, b0329: bool, b0330: bool, b0331: bool, b0332: bool, b0333: bool, b0334: bool, b0335: bool, b0336: bool, b0337: bool, b0338: bool, b0339: bool, b0340: bool, b0341: bool, b0342: bool, b0343: bool, b0344: bool, b0345: bool, b0346: bool, b0347: bool, b0348: bool, b0349: bool, b0350: bool, b0351: bool, b0352: bool, b0353: bool, b0354: bool, b0355: bool, b0356: bool, b0357: bool, b0358: bool, b0359: bool, b0360: bool, b0361: bool, b0362: bool, b0363: bool, b0364: bool, b0365: bool, b0366: bool, b0367: bool, b0368: bool, b0369: bool, b0370: bool, b0371: bool, b0372: bool, b0373: bool, b0374: bool, b0375: bool, b0376: bool, b0377: bool, b0378: bool, b0379: bool, b0380: bool, b0381: bool, b0382: bool, b0383: bool, b0384: bool, b0385: bool, b0386: bool, b0387: bool, b0388: bool, b0389: bool, b0390: bool, b0391: bool, b0392: bool, b0393: bool, b0394: bool, b0395: bool, b0396: bool, b0397: bool, b0398: bool, b0399: bool, b0400: bool, b0401: bool, b0402: bool, b0403: bool, b0404: bool, b0405: bool, b0406: bool, b0407: bool, b0408: bool, b0409: bool, b0410: bool, b0411: bool, b0412: bool, b0413: bool, b0414: bool, b0415: bool, b0416: bool, b0417: bool, b0418: bool, b0419: bool, b0420: bool, b0421: bool, b0422: bool, b0423: bool, b0424: bool, b0425: bool, b0426: bool, b0427: bool, b0428: bool, b0429: bool, b0430: bool, b0431: bool, b0432: bool, b0433: bool, b0434: bool, b0435: bool, b0436: bool, b0437: bool, b0438: bool, b0439: bool, b0440: bool, b0441: bool, b0442: bool, b0443: bool, b0444: bool, b0445: bool, b0446: bool, b0447: bool, b0448: bool, b0449: bool, b0450: bool, b0451: bool, b0452: bool, b0453: bool, b0454: bool, b0455: bool, b0456: bool, b0457: bool, b0458: bool, b0459: bool, b0460: bool, b0461: bool, b0462: bool, b0463: bool, b0464: bool, b0465: bool) : bool
{
  0 + (if b0000 then 0 else 186000) + (if b0001 then 0 else 186000) + (if b0002 then 0 else 186000) + (if b0003 then 0 else 186000) + (if b0004 then 0 else 186000) + (if b0005 then 0 else 186000) + (if b0006 then 0 else 186000) + (if b0007 then 0 else 186000) + (if b0008 then 0 else 186000) + (if b0009 then 0 else 186000) + (if b0010 then 0 else 186000) + (if b0011 then 0 else 186000) + (if b0012 then 0 else 186000) + (if b0013 then 0 else 186000) + (if b0014 then 0 else 186000) + (if b0015 then 0 else 186000) + (if b0016 then 0 else 186000) + (if b0017 then 0 else 186000) + (if b0018 then 0 else 186000) + (if b0019 then 0 else 186000) + (if b0020 then 0 else 186000) + (if b0021 then 0 else 186000) + (if b0022 then 0 else 186000) + (if b0023 then 0 else 186000) + (if b0024 then 0 else 186000) + (if b0025 then 0 else 186000) + (if b0026 then 0 else 186000) + (if b0027 then 0 else 186000) + (if b0028 then 0 else 186000) + (if b0029 then 0 else 186000) + (if b0030 then 0 else 186000) + (if b0031 then 0 else 186000) + (if b0032 then 0 else 186000) + (if b0033 then 0 else 186000) + (if b0034 then 0 else 186000) + (if b0035 then 0 else 186000) + (if b0036 then 0 else 186000) + (if b0037 then 0 else 186000) + (if b0038 then 0 else 186000) + (if b0039 then 0 else 186000) + (if b0040 then 0 else 186000) + (if b0041 then 0 else 186000) + (if b0042 then 0 else 186000) + (if b0043 then 0 else 186000) + (if b0044 then 0 else 186000) + (if b0045 then 0 else 186000) + (if b0046 then 0 else 186000) + (if b0047 then 0 else 186000) + (if b0048 then 0 else 186000) + (if b0049 then 0 else 186000) + (if b0050 then 0 else 186000) + (if b0051 then 0 else 186000) + (if b0052 then 0 else 186000) + (if b0053 then 0 else 186000) + (if b0054 then 0 else 186000) + (if b0055 then 0 else 186000) + (if b0056 then 0 else 186000) + (if b0057 then 0 else 186000) + (if b0058 then 0 else 186000) + (if b0059 then 0 else 186000) + (if b0060 then 0 else 186000) + (if b0061 then 0 else 186000) + (if b0062 then 0 else 186000) + (if b0063 then 0 else 186000) + (if b0064 then 0 else 186000) + (if b0065 then 0 else 186000) + (if b0066 then 0 else 186000) + (if b0067 then 0 else 186000) + (if b0068 then 0 else 186000) + (if b0069 then 0 else 186000) + (if b0070 then 0 else 186000) + (if b0071 then 0 else 186000) + (if b0072 then 0 else 186000) + (if b0073 then 0 else 186000) + (if b0074 then 0 else 186000) + (if b0075 then 0 else 186000) + (if b0076 then 0 else 186000) + (if b0077 then 0 else 186000) + (if b0078 then 0 else 186000) + (if b0079 then 0 else 186000) + (if b0080 then 0 else 186000) + (if b0081 then 0 else 186000) + (if b0082 then 0 else 186000) + (if b0083 then 0 else 186000) + (if b0084 then 0 else 186000) + (if b0085 then 0 else 186000) + (if b0086 then 0 else 186000) + (if b0087 then 0 else 186000) + (if b0088 then 0 else 186000) + (if b0089 then 0 else 186000) + (if b0090 then 0 else 186000) + (if b0091 then 0 else 186000) + (if b0092 then 0 else 186000) + (if b0093 then 0 else 186000) + (if b0094 then 0 else 186000) + (if b0095 then 0 else 186000) + (if b0096 then 0 else 186000) + (if b0097 then 0 else 186000) + (if b0098 then 0 else 186000) + (if b0099 then 0 else 186000) + (if b0100 then 0 else 186000) + (if b0101 then 0 else 186000) + (if b0102 then 0 else 186000) + (if b0103 then 0 else 186000) + (if b0104 then 0 else 186000) + (if b0105 then 0 else 186000) + (if b0106 then 0 else 186000) + (if b0107 then 0 else 186000) + (if b0108 then 0 else 186000) + (if b0109 then 0 else 186000) + (if b0110 then 0 else 186000) + (if b0111 then 0 else 186000) + (if b0112 then 0 else 186000) + (if b0113 then 0 else 186000) + (if b0114 then 0 else 186000) + (if b0115 then 0 else 186000) + (if b0116 then 0 else 186000) + (if b0118 then 0 else 186000) + (if b0120 then 0 else 186000) + (if b0121 then 0 else 186000) + (if b0122 then 0 else 186000) + (if b0123 then 0 else 186000) + (if b0124 then 0 else 186000) + (if b0125 then 0 else 186000) + (if b0126 then 0 else 186000) + (if b0127 then 0 else 186000) + (if b0128 then 0 else 186000) + (if b0129 then 0 else 186000) + (if b0130 then 0 else 186000) + (if b0131 then 0 else 186000) + (if b0132 then 0 else 186000) + (if b0134 then 0 else 186000) + (if b0136 then 0 else 186000) + (if b0137 then 0 else 186000) + (if b0138 then 0 else 186000) + (if b0139 then 0 else 186000) + (if b0141 then 0 else 186000) + (if b0142 then 0 else 186000) + (if b0143 then 0 else 186000) + (if b0145 then 0 else 186000) + (if b0147 then 0 else 186000) + (if b0148 then 0 else 186000) + (if b0149 then 0 else 186000) + (if b0150 then 0 else 186000) + (if b0151 then 0 else 186000) + (if b0154 then 0 else 186000) + (if b0156 then 0 else 186000) + (if b0157 then 0 else 186000) + (if b0158 then 0 else 186000) + (if b0159 then 0 else 186000) + (if b0162 then 0 else 186000) + (if b0164 then 0 else 186000) + (if b0167 then 0 else 186000) + (if b0169 then 0 else 186000) + (if b0172 then 0 else 186000) + (if b0174 then 0 else 186000) + (if b0175 then 0 else 186000) + (if b0176 then 0 else 186000) + (if b0177 then 0 else 186000) + (if b0181 then 0 else 186000) + (if b0182 then 0 else 186000) + (if b0184 then 0 else 186000) + (if b0185 then 0 else 186000) + (if b0186 then 0 else 186000) + (if b0188 then 0 else 186000) + (if b0189 then 0 else 186000) + (if b0190 then 0 else 186000) + (if b0191 then 0 else 186000) + (if b0192 then 0 else 186000) + (if b0193 then 0 else 186000) + (if b0195 then 0 else 186000) + (if b0197 then 0 else 186000) + (if b0198 then 0 else 186000) + (if b0199 then 0 else 186000) + (if b0200 then 0 else 186000) + (if b0205 then 0 else 186000) + (if b0206 then 0 else 186000) + (if b0207 then 0 else 186000) + (if b0208 then 0 else 186000) + (if b0210 then 0 else 186000) + (if b0212 then 0 else 186000) + (if b0214 then 0 else 186000) + (if b0215 then 0 else 186000) + (if b0216 then 0 else 186000) + (if b0217 then 0 else 186000) + (if b0222 then 0 else 186000) + (if b0223 then 0 else 186000) + (if b0225 then 0 else 186000) + (if b0227 then 0 else 186000) + (if b0228 then 0 else 186000) + (if b0230 then 0 else 186000) + (if b0232 then 0 else 186000) + (if b0235 then 0 else 186000) + (if b0237 then 0 else 186000) + (if b0238 then 0 else 186000) + (if b0239 then 0 else 186000) + (if b0240 then 0 else 186000) + (if b0244 then 0 else 186000) + (if b0245 then 0 else 186000) + (if b0246 then 0 else 186000) + (if b0247 then 0 else 186000) + (if b0248 then 0 else 186000) + (if b0249 then 0 else 186000) + (if b0250 then 0 else 186000) + (if b0251 then 0 else 186000) + (if b0252 then 0 else 186000) + (if b0253 then 0 else 186000) + (if b0254 then 0 else 186000) + (if b0255 then 0 else 186000) + (if b0256 then 0 else 186000) + (if b0257 then 0 else 186000) + (if b0258 then 0 else 186000) + (if b0259 then 0 else 186000) + (if b0260 then 0 else 186000) + (if b0261 then 0 else 186000) + (if b0262 then 0 else 186000) + (if b0263 then 0 else 186000) + (if b0264 then 0 else 186000) + (if b0265 then 0 else 186000) + (if b0266 then 0 else 186000) + (if b0267 then 0 else 186000) + (if b0268 then 0 else 186000) + (if b0269 then 0 else 186000) + (if b0270 then 0 else 186000) + (if b0271 then 0 else 186000) + (if b0272 then 0 else 186000) + (if b0273 then 0 else 186000) + (if b0274 then 0 else 186000) + (if b0275 then 0 else 186000) + (if b0276 then 0 else 186000) + (if b0277 then 0 else 186000) + (if b0278 then 0 else 186000) + (if b0279 then 0 else 186000) + (if b0280 then 0 else 186000) + (if b0281 then 0 else 186000) + (if b0282 then 0 else 186000) + (if b0283 then 0 else 186000) + (if b0284 then 0 else 186000) + (if b0285 then 0 else 186000) + (if b0286 then 0 else 186000) + (if b0287 then 0 else 186000) + (if b0288 then 0 else 186000) + (if b0289 then 0 else 186000) + (if b0290 then 0 else 186000) + (if b0291 then 0 else 186000) + (if b0292 then 0 else 186000) + (if b0293 then 0 else 186000) + (if b0294 then 0 else 186000) + (if b0295 then 0 else 186000) + (if b0296 then 0 else 186000) + (if b0297 then 0 else 186000) + (if b0298 then 0 else 186000) + (if b0299 then 0 else 186000) + (if b0300 then 0 else 186000) + (if b0301 then 0 else 186000) + (if b0302 then 0 else 186000) + (if b0303 then 0 else 186000) + (if b0304 then 0 else 186000) + (if b0305 then 0 else 186000) + (if b0306 then 0 else 186000) + (if b0307 then 0 else 186000) + (if b0308 then 0 else 186000) + (if b0309 then 0 else 186000) + (if b0310 then 0 else 186000) + (if b0311 then 0 else 186000) + (if b0312 then 0 else 186000) + (if b0313 then 0 else 186000) + (if b0314 then 0 else 186000) + (if b0315 then 0 else 186000) + (if b0316 then 0 else 186000) + (if b0317 then 0 else 186000) + (if b0318 then 0 else 186000) + (if b0319 then 0 else 186000) + (if b0320 then 0 else 186000) + (if b0321 then 0 else 186000) + (if b0322 then 0 else 186000) + (if b0323 then 0 else 186000) + (if b0324 then 0 else 186000) + (if b0325 then 0 else 186000) + (if b0326 then 0 else 186000) + (if b0327 then 0 else 186000) + (if b0328 then 0 else 186000) + (if b0329 then 0 else 186000) + (if b0330 then 0 else 186000) + (if b0331 then 0 else 186000) + (if b0332 then 0 else 186000) + (if b0333 then 0 else 186000) + (if b0334 then 0 else 186000) + (if b0335 then 0 else 186000) + (if b0336 then 0 else 186000) + (if b0337 then 0 else 186000) + (if b0338 then 0 else 186000) + (if b0339 then 0 else 186000) + (if b0340 then 0 else 186000) + (if b0341 then 0 else 186000) + (if b0378 then 0 else 186000) + (if b0379 then 0 else 186000) + (if b0380 then 0 else 186000) + (if b0381 then 0 else 186000) + (if b0382 then 0 else 186000) + (if b0383 then 0 else 186000) + (if b0385 then 0 else 186000) + (if b0386 then 0 else 186000) + (if b0387 then 0 else 186000) + (if b0388 then 0 else 186000) + (if b0389 then 0 else 186000) + (if b0390 then 0 else 186000) + (if b0424 then 0 else 186000) + (if b0425 then 0 else 186000) + (if b0426 then 0 else 186000) + (if b0427 then 0 else 186000) + (if b0430 then 0 else 186000) + (if b0431 then 0 else 186000) + (if b0432 then 0 else 186000) + (if b0433 then 0 else 186000) + (if b0435 then 0 else 186000) + (if b0436 then 0 else 186000) + (if b0437 then 0 else 186000) + (if b0438 then 0 else 186000) + (if b0439 then 0 else 186000) + (if b0440 then 0 else 186000) + (if b0441 then 0 else 186000) + (if b0442 then 0 else 186000) + (if b0443 then 0 else 186000) + (if b0444 then 0 else 186000) + (if b0445 then 0 else 186000) + (if b0446 then 0 else 186000) + (if b0447 then 0 else 186000) + (if b0448 then 0 else 186000) + (if b0449 then 0 else 186000) + (if b0450 then 0 else 186000) + (if b0451 then 0 else 186000) + (if b0452 then 0 else 186000) + (if b0453 then 0 else 186000) + (if b0454 then 0 else 186000) + (if b0455 then 0 else 186000) + (if b0456 then 0 else 186000) + (if b0457 then 0 else 186000) + (if b0458 then 0 else 186000) + (if b0459 then 0 else 186000) + (if b0460 then 0 else 186000) + (if b0461 then 0 else 186000) + (if b0462 then 0 else 186000) + (if b0463 then 0 else 186000) + (if b0464 then 0 else 186000) + (if b0465 then 0 else 186000) < 441
}
Prover Time taken = 10.797338
Added Horn clause: 6 && 86 && 0 && 0 && 0 && 0 && 87 && 0 && 0 && 0 && 88 && 0 && 0 => 89
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/linear-algebra/kernels/3mm/kernel3.bpl.ice2.bpl
Total learner time was 00:00:00.1401950
Verifying $kernel3: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool, b0228: bool, b0229: bool, b0230: bool, b0231: bool, b0232: bool, b0233: bool, b0234: bool, b0235: bool, b0236: bool, b0237: bool, b0238: bool, b0239: bool, b0240: bool, b0241: bool, b0242: bool, b0243: bool, b0244: bool, b0245: bool, b0246: bool, b0247: bool, b0248: bool, b0249: bool, b0250: bool, b0251: bool, b0252: bool, b0253: bool, b0254: bool, b0255: bool, b0256: bool, b0257: bool, b0258: bool, b0259: bool, b0260: bool, b0261: bool, b0262: bool, b0263: bool, b0264: bool, b0265: bool, b0266: bool, b0267: bool, b0268: bool, b0269: bool, b0270: bool, b0271: bool, b0272: bool, b0273: bool, b0274: bool, b0275: bool, b0276: bool, b0277: bool, b0278: bool, b0279: bool, b0280: bool, b0281: bool, b0282: bool, b0283: bool, b0284: bool, b0285: bool, b0286: bool, b0287: bool, b0288: bool, b0289: bool, b0290: bool, b0291: bool, b0292: bool, b0293: bool, b0294: bool, b0295: bool, b0296: bool, b0297: bool, b0298: bool, b0299: bool, b0300: bool, b0301: bool, b0302: bool, b0303: bool, b0304: bool, b0305: bool, b0306: bool, b0307: bool, b0308: bool, b0309: bool, b0310: bool, b0311: bool, b0312: bool, b0313: bool, b0314: bool, b0315: bool, b0316: bool, b0317: bool, b0318: bool, b0319: bool, b0320: bool, b0321: bool, b0322: bool, b0323: bool, b0324: bool, b0325: bool, b0326: bool, b0327: bool, b0328: bool, b0329: bool, b0330: bool, b0331: bool, b0332: bool, b0333: bool, b0334: bool, b0335: bool, b0336: bool, b0337: bool, b0338: bool, b0339: bool, b0340: bool, b0341: bool, b0342: bool, b0343: bool, b0344: bool, b0345: bool, b0346: bool, b0347: bool, b0348: bool, b0349: bool, b0350: bool, b0351: bool, b0352: bool, b0353: bool, b0354: bool, b0355: bool, b0356: bool, b0357: bool, b0358: bool, b0359: bool, b0360: bool, b0361: bool, b0362: bool, b0363: bool, b0364: bool, b0365: bool, b0366: bool, b0367: bool, b0368: bool, b0369: bool, b0370: bool, b0371: bool, b0372: bool, b0373: bool, b0374: bool, b0375: bool, b0376: bool, b0377: bool, b0378: bool, b0379: bool, b0380: bool, b0381: bool, b0382: bool, b0383: bool, b0384: bool, b0385: bool, b0386: bool, b0387: bool, b0388: bool, b0389: bool, b0390: bool, b0391: bool, b0392: bool, b0393: bool, b0394: bool, b0395: bool, b0396: bool, b0397: bool, b0398: bool, b0399: bool, b0400: bool, b0401: bool, b0402: bool, b0403: bool, b0404: bool, b0405: bool, b0406: bool, b0407: bool, b0408: bool, b0409: bool, b0410: bool, b0411: bool, b0412: bool, b0413: bool, b0414: bool, b0415: bool, b0416: bool, b0417: bool, b0418: bool, b0419: bool, b0420: bool, b0421: bool, b0422: bool, b0423: bool, b0424: bool, b0425: bool, b0426: bool, b0427: bool, b0428: bool, b0429: bool, b0430: bool, b0431: bool, b0432: bool, b0433: bool, b0434: bool, b0435: bool, b0436: bool, b0437: bool, b0438: bool, b0439: bool, b0440: bool, b0441: bool, b0442: bool, b0443: bool, b0444: bool, b0445: bool, b0446: bool, b0447: bool, b0448: bool, b0449: bool, b0450: bool, b0451: bool, b0452: bool, b0453: bool, b0454: bool, b0455: bool, b0456: bool, b0457: bool, b0458: bool, b0459: bool, b0460: bool, b0461: bool, b0462: bool, b0463: bool, b0464: bool, b0465: bool) : bool
{
  0 + (if b0000 then 0 else 186000) + (if b0001 then 0 else 186000) + (if b0002 then 0 else 186000) + (if b0003 then 0 else 186000) + (if b0004 then 0 else 186000) + (if b0005 then 0 else 186000) + (if b0006 then 0 else 186000) + (if b0007 then 0 else 186000) + (if b0008 then 0 else 186000) + (if b0009 then 0 else 186000) + (if b0010 then 0 else 186000) + (if b0011 then 0 else 186000) + (if b0012 then 0 else 186000) + (if b0013 then 0 else 186000) + (if b0014 then 0 else 186000) + (if b0015 then 0 else 186000) + (if b0016 then 0 else 186000) + (if b0017 then 0 else 186000) + (if b0018 then 0 else 186000) + (if b0019 then 0 else 186000) + (if b0020 then 0 else 186000) + (if b0021 then 0 else 186000) + (if b0022 then 0 else 186000) + (if b0023 then 0 else 186000) + (if b0024 then 0 else 186000) + (if b0025 then 0 else 186000) + (if b0026 then 0 else 186000) + (if b0027 then 0 else 186000) + (if b0028 then 0 else 186000) + (if b0029 then 0 else 186000) + (if b0030 then 0 else 186000) + (if b0031 then 0 else 186000) + (if b0032 then 0 else 186000) + (if b0033 then 0 else 186000) + (if b0034 then 0 else 186000) + (if b0035 then 0 else 186000) + (if b0036 then 0 else 186000) + (if b0037 then 0 else 186000) + (if b0038 then 0 else 186000) + (if b0039 then 0 else 186000) + (if b0040 then 0 else 186000) + (if b0041 then 0 else 186000) + (if b0042 then 0 else 186000) + (if b0043 then 0 else 186000) + (if b0044 then 0 else 186000) + (if b0045 then 0 else 186000) + (if b0046 then 0 else 186000) + (if b0047 then 0 else 186000) + (if b0048 then 0 else 186000) + (if b0049 then 0 else 186000) + (if b0050 then 0 else 186000) + (if b0051 then 0 else 186000) + (if b0052 then 0 else 186000) + (if b0053 then 0 else 186000) + (if b0054 then 0 else 186000) + (if b0055 then 0 else 186000) + (if b0056 then 0 else 186000) + (if b0057 then 0 else 186000) + (if b0058 then 0 else 186000) + (if b0059 then 0 else 186000) + (if b0060 then 0 else 186000) + (if b0061 then 0 else 186000) + (if b0062 then 0 else 186000) + (if b0063 then 0 else 186000) + (if b0064 then 0 else 186000) + (if b0065 then 0 else 186000) + (if b0066 then 0 else 186000) + (if b0067 then 0 else 186000) + (if b0068 then 0 else 186000) + (if b0069 then 0 else 186000) + (if b0070 then 0 else 186000) + (if b0071 then 0 else 186000) + (if b0072 then 0 else 186000) + (if b0073 then 0 else 186000) + (if b0074 then 0 else 186000) + (if b0075 then 0 else 186000) + (if b0076 then 0 else 186000) + (if b0077 then 0 else 186000) + (if b0078 then 0 else 186000) + (if b0079 then 0 else 186000) + (if b0080 then 0 else 186000) + (if b0081 then 0 else 186000) + (if b0082 then 0 else 186000) + (if b0083 then 0 else 186000) + (if b0084 then 0 else 186000) + (if b0085 then 0 else 186000) + (if b0086 then 0 else 186000) + (if b0087 then 0 else 186000) + (if b0088 then 0 else 186000) + (if b0089 then 0 else 186000) + (if b0090 then 0 else 186000) + (if b0091 then 0 else 186000) + (if b0092 then 0 else 186000) + (if b0093 then 0 else 186000) + (if b0094 then 0 else 186000) + (if b0095 then 0 else 186000) + (if b0096 then 0 else 186000) + (if b0097 then 0 else 186000) + (if b0098 then 0 else 186000) + (if b0099 then 0 else 186000) + (if b0100 then 0 else 186000) + (if b0101 then 0 else 186000) + (if b0102 then 0 else 186000) + (if b0103 then 0 else 186000) + (if b0104 then 0 else 186000) + (if b0105 then 0 else 186000) + (if b0106 then 0 else 186000) + (if b0107 then 0 else 186000) + (if b0108 then 0 else 186000) + (if b0109 then 0 else 186000) + (if b0110 then 0 else 186000) + (if b0111 then 0 else 186000) + (if b0112 then 0 else 186000) + (if b0113 then 0 else 186000) + (if b0114 then 0 else 186000) + (if b0115 then 0 else 186000) + (if b0116 then 0 else 186000) + (if b0118 then 0 else 186000) + (if b0120 then 0 else 186000) + (if b0121 then 0 else 186000) + (if b0122 then 0 else 186000) + (if b0123 then 0 else 186000) + (if b0124 then 0 else 186000) + (if b0125 then 0 else 186000) + (if b0126 then 0 else 186000) + (if b0127 then 0 else 186000) + (if b0128 then 0 else 186000) + (if b0129 then 0 else 186000) + (if b0130 then 0 else 186000) + (if b0131 then 0 else 186000) + (if b0132 then 0 else 186000) + (if b0134 then 0 else 186000) + (if b0136 then 0 else 186000) + (if b0137 then 0 else 186000) + (if b0138 then 0 else 186000) + (if b0139 then 0 else 186000) + (if b0141 then 0 else 186000) + (if b0142 then 0 else 186000) + (if b0143 then 0 else 186000) + (if b0145 then 0 else 186000) + (if b0147 then 0 else 186000) + (if b0148 then 0 else 186000) + (if b0149 then 0 else 186000) + (if b0150 then 0 else 186000) + (if b0151 then 0 else 186000) + (if b0154 then 0 else 186000) + (if b0156 then 0 else 186000) + (if b0157 then 0 else 186000) + (if b0158 then 0 else 186000) + (if b0159 then 0 else 186000) + (if b0162 then 0 else 186000) + (if b0164 then 0 else 186000) + (if b0167 then 0 else 186000) + (if b0169 then 0 else 186000) + (if b0172 then 0 else 186000) + (if b0174 then 0 else 186000) + (if b0175 then 0 else 186000) + (if b0176 then 0 else 186000) + (if b0177 then 0 else 186000) + (if b0181 then 0 else 186000) + (if b0182 then 0 else 186000) + (if b0184 then 0 else 186000) + (if b0185 then 0 else 186000) + (if b0186 then 0 else 186000) + (if b0188 then 0 else 186000) + (if b0189 then 0 else 186000) + (if b0190 then 0 else 186000) + (if b0191 then 0 else 186000) + (if b0192 then 0 else 186000) + (if b0193 then 0 else 186000) + (if b0195 then 0 else 186000) + (if b0197 then 0 else 186000) + (if b0198 then 0 else 186000) + (if b0199 then 0 else 186000) + (if b0200 then 0 else 186000) + (if b0205 then 0 else 186000) + (if b0206 then 0 else 186000) + (if b0207 then 0 else 186000) + (if b0208 then 0 else 186000) + (if b0210 then 0 else 186000) + (if b0212 then 0 else 186000) + (if b0214 then 0 else 186000) + (if b0215 then 0 else 186000) + (if b0216 then 0 else 186000) + (if b0217 then 0 else 186000) + (if b0222 then 0 else 186000) + (if b0223 then 0 else 186000) + (if b0225 then 0 else 186000) + (if b0227 then 0 else 186000) + (if b0228 then 0 else 186000) + (if b0230 then 0 else 186000) + (if b0232 then 0 else 186000) + (if b0235 then 0 else 186000) + (if b0237 then 0 else 186000) + (if b0238 then 0 else 186000) + (if b0239 then 0 else 186000) + (if b0240 then 0 else 186000) + (if b0244 then 0 else 186000) + (if b0245 then 0 else 186000) + (if b0246 then 0 else 186000) + (if b0247 then 0 else 186000) + (if b0248 then 0 else 186000) + (if b0249 then 0 else 186000) + (if b0250 then 0 else 186000) + (if b0251 then 0 else 186000) + (if b0252 then 0 else 186000) + (if b0253 then 0 else 186000) + (if b0254 then 0 else 186000) + (if b0255 then 0 else 186000) + (if b0256 then 0 else 186000) + (if b0257 then 0 else 186000) + (if b0258 then 0 else 186000) + (if b0259 then 0 else 186000) + (if b0260 then 0 else 186000) + (if b0261 then 0 else 186000) + (if b0262 then 0 else 186000) + (if b0263 then 0 else 186000) + (if b0264 then 0 else 186000) + (if b0265 then 0 else 186000) + (if b0266 then 0 else 186000) + (if b0267 then 0 else 186000) + (if b0268 then 0 else 186000) + (if b0269 then 0 else 186000) + (if b0270 then 0 else 186000) + (if b0271 then 0 else 186000) + (if b0272 then 0 else 186000) + (if b0273 then 0 else 186000) + (if b0274 then 0 else 186000) + (if b0275 then 0 else 186000) + (if b0276 then 0 else 186000) + (if b0277 then 0 else 186000) + (if b0278 then 0 else 186000) + (if b0279 then 0 else 186000) + (if b0280 then 0 else 186000) + (if b0281 then 0 else 186000) + (if b0282 then 0 else 186000) + (if b0283 then 0 else 186000) + (if b0284 then 0 else 186000) + (if b0285 then 0 else 186000) + (if b0286 then 0 else 186000) + (if b0287 then 0 else 186000) + (if b0288 then 0 else 186000) + (if b0289 then 0 else 186000) + (if b0290 then 0 else 186000) + (if b0291 then 0 else 186000) + (if b0292 then 0 else 186000) + (if b0293 then 0 else 186000) + (if b0294 then 0 else 186000) + (if b0295 then 0 else 186000) + (if b0296 then 0 else 186000) + (if b0297 then 0 else 186000) + (if b0298 then 0 else 186000) + (if b0299 then 0 else 186000) + (if b0300 then 0 else 186000) + (if b0301 then 0 else 186000) + (if b0302 then 0 else 186000) + (if b0303 then 0 else 186000) + (if b0304 then 0 else 186000) + (if b0305 then 0 else 186000) + (if b0306 then 0 else 186000) + (if b0307 then 0 else 186000) + (if b0308 then 0 else 186000) + (if b0309 then 0 else 186000) + (if b0310 then 0 else 186000) + (if b0311 then 0 else 186000) + (if b0312 then 0 else 186000) + (if b0313 then 0 else 186000) + (if b0314 then 0 else 186000) + (if b0315 then 0 else 186000) + (if b0316 then 0 else 186000) + (if b0317 then 0 else 186000) + (if b0318 then 0 else 186000) + (if b0319 then 0 else 186000) + (if b0320 then 0 else 186000) + (if b0321 then 0 else 186000) + (if b0322 then 0 else 186000) + (if b0323 then 0 else 186000) + (if b0324 then 0 else 186000) + (if b0325 then 0 else 186000) + (if b0326 then 0 else 186000) + (if b0327 then 0 else 186000) + (if b0328 then 0 else 186000) + (if b0329 then 0 else 186000) + (if b0330 then 0 else 186000) + (if b0331 then 0 else 186000) + (if b0332 then 0 else 186000) + (if b0333 then 0 else 186000) + (if b0334 then 0 else 186000) + (if b0335 then 0 else 186000) + (if b0336 then 0 else 186000) + (if b0337 then 0 else 186000) + (if b0338 then 0 else 186000) + (if b0339 then 0 else 186000) + (if b0340 then 0 else 186000) + (if b0341 then 0 else 186000) + (if b0378 then 0 else 186000) + (if b0379 then 0 else 186000) + (if b0380 then 0 else 186000) + (if b0382 then 0 else 186000) + (if b0383 then 0 else 186000) + (if b0385 then 0 else 186000) + (if b0386 then 0 else 186000) + (if b0387 then 0 else 186000) + (if b0388 then 0 else 186000) + (if b0389 then 0 else 186000) + (if b0390 then 0 else 186000) + (if b0424 then 0 else 186000) + (if b0425 then 0 else 186000) + (if b0426 then 0 else 186000) + (if b0427 then 0 else 186000) + (if b0430 then 0 else 186000) + (if b0431 then 0 else 186000) + (if b0432 then 0 else 186000) + (if b0433 then 0 else 186000) + (if b0435 then 0 else 186000) + (if b0436 then 0 else 186000) + (if b0437 then 0 else 186000) + (if b0438 then 0 else 186000) + (if b0439 then 0 else 186000) + (if b0440 then 0 else 186000) + (if b0441 then 0 else 186000) + (if b0442 then 0 else 186000) + (if b0443 then 0 else 186000) + (if b0444 then 0 else 186000) + (if b0445 then 0 else 186000) + (if b0446 then 0 else 186000) + (if b0447 then 0 else 186000) + (if b0448 then 0 else 186000) + (if b0449 then 0 else 186000) + (if b0450 then 0 else 186000) + (if b0451 then 0 else 186000) + (if b0452 then 0 else 186000) + (if b0453 then 0 else 186000) + (if b0454 then 0 else 186000) + (if b0455 then 0 else 186000) + (if b0456 then 0 else 186000) + (if b0457 then 0 else 186000) + (if b0458 then 0 else 186000) + (if b0459 then 0 else 186000) + (if b0460 then 0 else 186000) + (if b0461 then 0 else 186000) + (if b0462 then 0 else 186000) + (if b0463 then 0 else 186000) + (if b0464 then 0 else 186000) + (if b0465 then 0 else 186000) < 441
}
Prover Time taken = 11.785075
Added Horn clause: 31 && 90 && 0 && 0 && 0 && 0 && 91 && 0 && 0 && 0 && 92 && 0 && 0 => 93
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/linear-algebra/kernels/3mm/kernel3.bpl.ice2.bpl
Total learner time was 00:00:00.1423630
Verifying $kernel3: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool, b0228: bool, b0229: bool, b0230: bool, b0231: bool, b0232: bool, b0233: bool, b0234: bool, b0235: bool, b0236: bool, b0237: bool, b0238: bool, b0239: bool, b0240: bool, b0241: bool, b0242: bool, b0243: bool, b0244: bool, b0245: bool, b0246: bool, b0247: bool, b0248: bool, b0249: bool, b0250: bool, b0251: bool, b0252: bool, b0253: bool, b0254: bool, b0255: bool, b0256: bool, b0257: bool, b0258: bool, b0259: bool, b0260: bool, b0261: bool, b0262: bool, b0263: bool, b0264: bool, b0265: bool, b0266: bool, b0267: bool, b0268: bool, b0269: bool, b0270: bool, b0271: bool, b0272: bool, b0273: bool, b0274: bool, b0275: bool, b0276: bool, b0277: bool, b0278: bool, b0279: bool, b0280: bool, b0281: bool, b0282: bool, b0283: bool, b0284: bool, b0285: bool, b0286: bool, b0287: bool, b0288: bool, b0289: bool, b0290: bool, b0291: bool, b0292: bool, b0293: bool, b0294: bool, b0295: bool, b0296: bool, b0297: bool, b0298: bool, b0299: bool, b0300: bool, b0301: bool, b0302: bool, b0303: bool, b0304: bool, b0305: bool, b0306: bool, b0307: bool, b0308: bool, b0309: bool, b0310: bool, b0311: bool, b0312: bool, b0313: bool, b0314: bool, b0315: bool, b0316: bool, b0317: bool, b0318: bool, b0319: bool, b0320: bool, b0321: bool, b0322: bool, b0323: bool, b0324: bool, b0325: bool, b0326: bool, b0327: bool, b0328: bool, b0329: bool, b0330: bool, b0331: bool, b0332: bool, b0333: bool, b0334: bool, b0335: bool, b0336: bool, b0337: bool, b0338: bool, b0339: bool, b0340: bool, b0341: bool, b0342: bool, b0343: bool, b0344: bool, b0345: bool, b0346: bool, b0347: bool, b0348: bool, b0349: bool, b0350: bool, b0351: bool, b0352: bool, b0353: bool, b0354: bool, b0355: bool, b0356: bool, b0357: bool, b0358: bool, b0359: bool, b0360: bool, b0361: bool, b0362: bool, b0363: bool, b0364: bool, b0365: bool, b0366: bool, b0367: bool, b0368: bool, b0369: bool, b0370: bool, b0371: bool, b0372: bool, b0373: bool, b0374: bool, b0375: bool, b0376: bool, b0377: bool, b0378: bool, b0379: bool, b0380: bool, b0381: bool, b0382: bool, b0383: bool, b0384: bool, b0385: bool, b0386: bool, b0387: bool, b0388: bool, b0389: bool, b0390: bool, b0391: bool, b0392: bool, b0393: bool, b0394: bool, b0395: bool, b0396: bool, b0397: bool, b0398: bool, b0399: bool, b0400: bool, b0401: bool, b0402: bool, b0403: bool, b0404: bool, b0405: bool, b0406: bool, b0407: bool, b0408: bool, b0409: bool, b0410: bool, b0411: bool, b0412: bool, b0413: bool, b0414: bool, b0415: bool, b0416: bool, b0417: bool, b0418: bool, b0419: bool, b0420: bool, b0421: bool, b0422: bool, b0423: bool, b0424: bool, b0425: bool, b0426: bool, b0427: bool, b0428: bool, b0429: bool, b0430: bool, b0431: bool, b0432: bool, b0433: bool, b0434: bool, b0435: bool, b0436: bool, b0437: bool, b0438: bool, b0439: bool, b0440: bool, b0441: bool, b0442: bool, b0443: bool, b0444: bool, b0445: bool, b0446: bool, b0447: bool, b0448: bool, b0449: bool, b0450: bool, b0451: bool, b0452: bool, b0453: bool, b0454: bool, b0455: bool, b0456: bool, b0457: bool, b0458: bool, b0459: bool, b0460: bool, b0461: bool, b0462: bool, b0463: bool, b0464: bool, b0465: bool) : bool
{
  0 + (if b0000 then 0 else 186000) + (if b0001 then 0 else 186000) + (if b0002 then 0 else 186000) + (if b0003 then 0 else 186000) + (if b0004 then 0 else 186000) + (if b0005 then 0 else 186000) + (if b0006 then 0 else 186000) + (if b0007 then 0 else 186000) + (if b0008 then 0 else 186000) + (if b0009 then 0 else 186000) + (if b0010 then 0 else 186000) + (if b0011 then 0 else 186000) + (if b0012 then 0 else 186000) + (if b0013 then 0 else 186000) + (if b0014 then 0 else 186000) + (if b0015 then 0 else 186000) + (if b0016 then 0 else 186000) + (if b0017 then 0 else 186000) + (if b0018 then 0 else 186000) + (if b0019 then 0 else 186000) + (if b0020 then 0 else 186000) + (if b0021 then 0 else 186000) + (if b0022 then 0 else 186000) + (if b0023 then 0 else 186000) + (if b0024 then 0 else 186000) + (if b0025 then 0 else 186000) + (if b0026 then 0 else 186000) + (if b0027 then 0 else 186000) + (if b0028 then 0 else 186000) + (if b0029 then 0 else 186000) + (if b0030 then 0 else 186000) + (if b0031 then 0 else 186000) + (if b0032 then 0 else 186000) + (if b0033 then 0 else 186000) + (if b0034 then 0 else 186000) + (if b0035 then 0 else 186000) + (if b0036 then 0 else 186000) + (if b0037 then 0 else 186000) + (if b0038 then 0 else 186000) + (if b0039 then 0 else 186000) + (if b0040 then 0 else 186000) + (if b0041 then 0 else 186000) + (if b0042 then 0 else 186000) + (if b0043 then 0 else 186000) + (if b0044 then 0 else 186000) + (if b0045 then 0 else 186000) + (if b0046 then 0 else 186000) + (if b0047 then 0 else 186000) + (if b0048 then 0 else 186000) + (if b0049 then 0 else 186000) + (if b0050 then 0 else 186000) + (if b0051 then 0 else 186000) + (if b0052 then 0 else 186000) + (if b0053 then 0 else 186000) + (if b0054 then 0 else 186000) + (if b0055 then 0 else 186000) + (if b0056 then 0 else 186000) + (if b0057 then 0 else 186000) + (if b0058 then 0 else 186000) + (if b0059 then 0 else 186000) + (if b0060 then 0 else 186000) + (if b0061 then 0 else 186000) + (if b0062 then 0 else 186000) + (if b0063 then 0 else 186000) + (if b0064 then 0 else 186000) + (if b0065 then 0 else 186000) + (if b0066 then 0 else 186000) + (if b0067 then 0 else 186000) + (if b0068 then 0 else 186000) + (if b0069 then 0 else 186000) + (if b0070 then 0 else 186000) + (if b0071 then 0 else 186000) + (if b0072 then 0 else 186000) + (if b0073 then 0 else 186000) + (if b0074 then 0 else 186000) + (if b0075 then 0 else 186000) + (if b0076 then 0 else 186000) + (if b0077 then 0 else 186000) + (if b0078 then 0 else 186000) + (if b0079 then 0 else 186000) + (if b0080 then 0 else 186000) + (if b0081 then 0 else 186000) + (if b0082 then 0 else 186000) + (if b0083 then 0 else 186000) + (if b0084 then 0 else 186000) + (if b0085 then 0 else 186000) + (if b0086 then 0 else 186000) + (if b0087 then 0 else 186000) + (if b0088 then 0 else 186000) + (if b0089 then 0 else 186000) + (if b0090 then 0 else 186000) + (if b0091 then 0 else 186000) + (if b0092 then 0 else 186000) + (if b0093 then 0 else 186000) + (if b0094 then 0 else 186000) + (if b0095 then 0 else 186000) + (if b0096 then 0 else 186000) + (if b0097 then 0 else 186000) + (if b0098 then 0 else 186000) + (if b0099 then 0 else 186000) + (if b0100 then 0 else 186000) + (if b0101 then 0 else 186000) + (if b0102 then 0 else 186000) + (if b0103 then 0 else 186000) + (if b0104 then 0 else 186000) + (if b0105 then 0 else 186000) + (if b0106 then 0 else 186000) + (if b0107 then 0 else 186000) + (if b0108 then 0 else 186000) + (if b0109 then 0 else 186000) + (if b0110 then 0 else 186000) + (if b0111 then 0 else 186000) + (if b0112 then 0 else 186000) + (if b0113 then 0 else 186000) + (if b0114 then 0 else 186000) + (if b0115 then 0 else 186000) + (if b0116 then 0 else 186000) + (if b0118 then 0 else 186000) + (if b0120 then 0 else 186000) + (if b0121 then 0 else 186000) + (if b0122 then 0 else 186000) + (if b0123 then 0 else 186000) + (if b0124 then 0 else 186000) + (if b0125 then 0 else 186000) + (if b0126 then 0 else 186000) + (if b0127 then 0 else 186000) + (if b0128 then 0 else 186000) + (if b0129 then 0 else 186000) + (if b0130 then 0 else 186000) + (if b0131 then 0 else 186000) + (if b0132 then 0 else 186000) + (if b0134 then 0 else 186000) + (if b0136 then 0 else 186000) + (if b0137 then 0 else 186000) + (if b0138 then 0 else 186000) + (if b0139 then 0 else 186000) + (if b0141 then 0 else 186000) + (if b0142 then 0 else 186000) + (if b0143 then 0 else 186000) + (if b0145 then 0 else 186000) + (if b0147 then 0 else 186000) + (if b0148 then 0 else 186000) + (if b0149 then 0 else 186000) + (if b0150 then 0 else 186000) + (if b0151 then 0 else 186000) + (if b0154 then 0 else 186000) + (if b0156 then 0 else 186000) + (if b0157 then 0 else 186000) + (if b0158 then 0 else 186000) + (if b0159 then 0 else 186000) + (if b0162 then 0 else 186000) + (if b0164 then 0 else 186000) + (if b0167 then 0 else 186000) + (if b0169 then 0 else 186000) + (if b0172 then 0 else 186000) + (if b0174 then 0 else 186000) + (if b0175 then 0 else 186000) + (if b0176 then 0 else 186000) + (if b0177 then 0 else 186000) + (if b0181 then 0 else 186000) + (if b0182 then 0 else 186000) + (if b0184 then 0 else 186000) + (if b0185 then 0 else 186000) + (if b0186 then 0 else 186000) + (if b0188 then 0 else 186000) + (if b0189 then 0 else 186000) + (if b0190 then 0 else 186000) + (if b0191 then 0 else 186000) + (if b0192 then 0 else 186000) + (if b0193 then 0 else 186000) + (if b0195 then 0 else 186000) + (if b0197 then 0 else 186000) + (if b0198 then 0 else 186000) + (if b0199 then 0 else 186000) + (if b0200 then 0 else 186000) + (if b0205 then 0 else 186000) + (if b0206 then 0 else 186000) + (if b0207 then 0 else 186000) + (if b0208 then 0 else 186000) + (if b0210 then 0 else 186000) + (if b0212 then 0 else 186000) + (if b0214 then 0 else 186000) + (if b0215 then 0 else 186000) + (if b0216 then 0 else 186000) + (if b0217 then 0 else 186000) + (if b0222 then 0 else 186000) + (if b0223 then 0 else 186000) + (if b0225 then 0 else 186000) + (if b0227 then 0 else 186000) + (if b0228 then 0 else 186000) + (if b0230 then 0 else 186000) + (if b0232 then 0 else 186000) + (if b0235 then 0 else 186000) + (if b0237 then 0 else 186000) + (if b0238 then 0 else 186000) + (if b0239 then 0 else 186000) + (if b0240 then 0 else 186000) + (if b0244 then 0 else 186000) + (if b0245 then 0 else 186000) + (if b0246 then 0 else 186000) + (if b0247 then 0 else 186000) + (if b0248 then 0 else 186000) + (if b0249 then 0 else 186000) + (if b0250 then 0 else 186000) + (if b0251 then 0 else 186000) + (if b0252 then 0 else 186000) + (if b0253 then 0 else 186000) + (if b0254 then 0 else 186000) + (if b0255 then 0 else 186000) + (if b0256 then 0 else 186000) + (if b0257 then 0 else 186000) + (if b0258 then 0 else 186000) + (if b0259 then 0 else 186000) + (if b0260 then 0 else 186000) + (if b0261 then 0 else 186000) + (if b0262 then 0 else 186000) + (if b0263 then 0 else 186000) + (if b0264 then 0 else 186000) + (if b0265 then 0 else 186000) + (if b0266 then 0 else 186000) + (if b0267 then 0 else 186000) + (if b0268 then 0 else 186000) + (if b0269 then 0 else 186000) + (if b0270 then 0 else 186000) + (if b0271 then 0 else 186000) + (if b0272 then 0 else 186000) + (if b0273 then 0 else 186000) + (if b0274 then 0 else 186000) + (if b0275 then 0 else 186000) + (if b0276 then 0 else 186000) + (if b0277 then 0 else 186000) + (if b0278 then 0 else 186000) + (if b0279 then 0 else 186000) + (if b0280 then 0 else 186000) + (if b0281 then 0 else 186000) + (if b0282 then 0 else 186000) + (if b0283 then 0 else 186000) + (if b0284 then 0 else 186000) + (if b0285 then 0 else 186000) + (if b0286 then 0 else 186000) + (if b0287 then 0 else 186000) + (if b0288 then 0 else 186000) + (if b0289 then 0 else 186000) + (if b0290 then 0 else 186000) + (if b0291 then 0 else 186000) + (if b0292 then 0 else 186000) + (if b0293 then 0 else 186000) + (if b0294 then 0 else 186000) + (if b0295 then 0 else 186000) + (if b0296 then 0 else 186000) + (if b0297 then 0 else 186000) + (if b0298 then 0 else 186000) + (if b0299 then 0 else 186000) + (if b0300 then 0 else 186000) + (if b0301 then 0 else 186000) + (if b0302 then 0 else 186000) + (if b0303 then 0 else 186000) + (if b0304 then 0 else 186000) + (if b0305 then 0 else 186000) + (if b0306 then 0 else 186000) + (if b0307 then 0 else 186000) + (if b0308 then 0 else 186000) + (if b0309 then 0 else 186000) + (if b0310 then 0 else 186000) + (if b0311 then 0 else 186000) + (if b0312 then 0 else 186000) + (if b0313 then 0 else 186000) + (if b0314 then 0 else 186000) + (if b0315 then 0 else 186000) + (if b0316 then 0 else 186000) + (if b0317 then 0 else 186000) + (if b0318 then 0 else 186000) + (if b0319 then 0 else 186000) + (if b0320 then 0 else 186000) + (if b0321 then 0 else 186000) + (if b0322 then 0 else 186000) + (if b0323 then 0 else 186000) + (if b0324 then 0 else 186000) + (if b0325 then 0 else 186000) + (if b0326 then 0 else 186000) + (if b0327 then 0 else 186000) + (if b0328 then 0 else 186000) + (if b0329 then 0 else 186000) + (if b0330 then 0 else 186000) + (if b0331 then 0 else 186000) + (if b0332 then 0 else 186000) + (if b0333 then 0 else 186000) + (if b0334 then 0 else 186000) + (if b0335 then 0 else 186000) + (if b0336 then 0 else 186000) + (if b0337 then 0 else 186000) + (if b0338 then 0 else 186000) + (if b0339 then 0 else 186000) + (if b0340 then 0 else 186000) + (if b0341 then 0 else 186000) + (if b0378 then 0 else 186000) + (if b0379 then 0 else 186000) + (if b0382 then 0 else 186000) + (if b0383 then 0 else 186000) + (if b0385 then 0 else 186000) + (if b0386 then 0 else 186000) + (if b0387 then 0 else 186000) + (if b0388 then 0 else 186000) + (if b0389 then 0 else 186000) + (if b0390 then 0 else 186000) + (if b0424 then 0 else 186000) + (if b0425 then 0 else 186000) + (if b0426 then 0 else 186000) + (if b0427 then 0 else 186000) + (if b0430 then 0 else 186000) + (if b0431 then 0 else 186000) + (if b0432 then 0 else 186000) + (if b0433 then 0 else 186000) + (if b0435 then 0 else 186000) + (if b0436 then 0 else 186000) + (if b0437 then 0 else 186000) + (if b0438 then 0 else 186000) + (if b0439 then 0 else 186000) + (if b0440 then 0 else 186000) + (if b0441 then 0 else 186000) + (if b0442 then 0 else 186000) + (if b0443 then 0 else 186000) + (if b0444 then 0 else 186000) + (if b0445 then 0 else 186000) + (if b0446 then 0 else 186000) + (if b0447 then 0 else 186000) + (if b0448 then 0 else 186000) + (if b0449 then 0 else 186000) + (if b0450 then 0 else 186000) + (if b0451 then 0 else 186000) + (if b0452 then 0 else 186000) + (if b0453 then 0 else 186000) + (if b0454 then 0 else 186000) + (if b0455 then 0 else 186000) + (if b0456 then 0 else 186000) + (if b0457 then 0 else 186000) + (if b0458 then 0 else 186000) + (if b0459 then 0 else 186000) + (if b0460 then 0 else 186000) + (if b0461 then 0 else 186000) + (if b0462 then 0 else 186000) + (if b0463 then 0 else 186000) + (if b0464 then 0 else 186000) + (if b0465 then 0 else 186000) < 441
}
Prover Time taken = 11.033174
Added Horn clause: 94 => 95
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/linear-algebra/kernels/3mm/kernel3.bpl.ice2.bpl
Total learner time was 00:00:00.1414670
Verifying $kernel3: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool, b0228: bool, b0229: bool, b0230: bool, b0231: bool, b0232: bool, b0233: bool, b0234: bool, b0235: bool, b0236: bool, b0237: bool, b0238: bool, b0239: bool, b0240: bool, b0241: bool, b0242: bool, b0243: bool, b0244: bool, b0245: bool, b0246: bool, b0247: bool, b0248: bool, b0249: bool, b0250: bool, b0251: bool, b0252: bool, b0253: bool, b0254: bool, b0255: bool, b0256: bool, b0257: bool, b0258: bool, b0259: bool, b0260: bool, b0261: bool, b0262: bool, b0263: bool, b0264: bool, b0265: bool, b0266: bool, b0267: bool, b0268: bool, b0269: bool, b0270: bool, b0271: bool, b0272: bool, b0273: bool, b0274: bool, b0275: bool, b0276: bool, b0277: bool, b0278: bool, b0279: bool, b0280: bool, b0281: bool, b0282: bool, b0283: bool, b0284: bool, b0285: bool, b0286: bool, b0287: bool, b0288: bool, b0289: bool, b0290: bool, b0291: bool, b0292: bool, b0293: bool, b0294: bool, b0295: bool, b0296: bool, b0297: bool, b0298: bool, b0299: bool, b0300: bool, b0301: bool, b0302: bool, b0303: bool, b0304: bool, b0305: bool, b0306: bool, b0307: bool, b0308: bool, b0309: bool, b0310: bool, b0311: bool, b0312: bool, b0313: bool, b0314: bool, b0315: bool, b0316: bool, b0317: bool, b0318: bool, b0319: bool, b0320: bool, b0321: bool, b0322: bool, b0323: bool, b0324: bool, b0325: bool, b0326: bool, b0327: bool, b0328: bool, b0329: bool, b0330: bool, b0331: bool, b0332: bool, b0333: bool, b0334: bool, b0335: bool, b0336: bool, b0337: bool, b0338: bool, b0339: bool, b0340: bool, b0341: bool, b0342: bool, b0343: bool, b0344: bool, b0345: bool, b0346: bool, b0347: bool, b0348: bool, b0349: bool, b0350: bool, b0351: bool, b0352: bool, b0353: bool, b0354: bool, b0355: bool, b0356: bool, b0357: bool, b0358: bool, b0359: bool, b0360: bool, b0361: bool, b0362: bool, b0363: bool, b0364: bool, b0365: bool, b0366: bool, b0367: bool, b0368: bool, b0369: bool, b0370: bool, b0371: bool, b0372: bool, b0373: bool, b0374: bool, b0375: bool, b0376: bool, b0377: bool, b0378: bool, b0379: bool, b0380: bool, b0381: bool, b0382: bool, b0383: bool, b0384: bool, b0385: bool, b0386: bool, b0387: bool, b0388: bool, b0389: bool, b0390: bool, b0391: bool, b0392: bool, b0393: bool, b0394: bool, b0395: bool, b0396: bool, b0397: bool, b0398: bool, b0399: bool, b0400: bool, b0401: bool, b0402: bool, b0403: bool, b0404: bool, b0405: bool, b0406: bool, b0407: bool, b0408: bool, b0409: bool, b0410: bool, b0411: bool, b0412: bool, b0413: bool, b0414: bool, b0415: bool, b0416: bool, b0417: bool, b0418: bool, b0419: bool, b0420: bool, b0421: bool, b0422: bool, b0423: bool, b0424: bool, b0425: bool, b0426: bool, b0427: bool, b0428: bool, b0429: bool, b0430: bool, b0431: bool, b0432: bool, b0433: bool, b0434: bool, b0435: bool, b0436: bool, b0437: bool, b0438: bool, b0439: bool, b0440: bool, b0441: bool, b0442: bool, b0443: bool, b0444: bool, b0445: bool, b0446: bool, b0447: bool, b0448: bool, b0449: bool, b0450: bool, b0451: bool, b0452: bool, b0453: bool, b0454: bool, b0455: bool, b0456: bool, b0457: bool, b0458: bool, b0459: bool, b0460: bool, b0461: bool, b0462: bool, b0463: bool, b0464: bool, b0465: bool) : bool
{
  0 + (if b0000 then 0 else 186000) + (if b0001 then 0 else 186000) + (if b0002 then 0 else 186000) + (if b0003 then 0 else 186000) + (if b0004 then 0 else 186000) + (if b0005 then 0 else 186000) + (if b0006 then 0 else 186000) + (if b0007 then 0 else 186000) + (if b0008 then 0 else 186000) + (if b0009 then 0 else 186000) + (if b0010 then 0 else 186000) + (if b0011 then 0 else 186000) + (if b0012 then 0 else 186000) + (if b0013 then 0 else 186000) + (if b0014 then 0 else 186000) + (if b0015 then 0 else 186000) + (if b0016 then 0 else 186000) + (if b0017 then 0 else 186000) + (if b0018 then 0 else 186000) + (if b0019 then 0 else 186000) + (if b0020 then 0 else 186000) + (if b0021 then 0 else 186000) + (if b0022 then 0 else 186000) + (if b0023 then 0 else 186000) + (if b0024 then 0 else 186000) + (if b0025 then 0 else 186000) + (if b0026 then 0 else 186000) + (if b0027 then 0 else 186000) + (if b0028 then 0 else 186000) + (if b0029 then 0 else 186000) + (if b0030 then 0 else 186000) + (if b0031 then 0 else 186000) + (if b0032 then 0 else 186000) + (if b0033 then 0 else 186000) + (if b0034 then 0 else 186000) + (if b0035 then 0 else 186000) + (if b0036 then 0 else 186000) + (if b0037 then 0 else 186000) + (if b0038 then 0 else 186000) + (if b0039 then 0 else 186000) + (if b0040 then 0 else 186000) + (if b0041 then 0 else 186000) + (if b0042 then 0 else 186000) + (if b0043 then 0 else 186000) + (if b0044 then 0 else 186000) + (if b0045 then 0 else 186000) + (if b0046 then 0 else 186000) + (if b0047 then 0 else 186000) + (if b0048 then 0 else 186000) + (if b0049 then 0 else 186000) + (if b0050 then 0 else 186000) + (if b0051 then 0 else 186000) + (if b0052 then 0 else 186000) + (if b0053 then 0 else 186000) + (if b0054 then 0 else 186000) + (if b0055 then 0 else 186000) + (if b0056 then 0 else 186000) + (if b0057 then 0 else 186000) + (if b0058 then 0 else 186000) + (if b0059 then 0 else 186000) + (if b0060 then 0 else 186000) + (if b0061 then 0 else 186000) + (if b0062 then 0 else 186000) + (if b0063 then 0 else 186000) + (if b0064 then 0 else 186000) + (if b0065 then 0 else 186000) + (if b0066 then 0 else 186000) + (if b0067 then 0 else 186000) + (if b0068 then 0 else 186000) + (if b0069 then 0 else 186000) + (if b0070 then 0 else 186000) + (if b0071 then 0 else 186000) + (if b0072 then 0 else 186000) + (if b0073 then 0 else 186000) + (if b0074 then 0 else 186000) + (if b0075 then 0 else 186000) + (if b0076 then 0 else 186000) + (if b0077 then 0 else 186000) + (if b0078 then 0 else 186000) + (if b0079 then 0 else 186000) + (if b0080 then 0 else 186000) + (if b0081 then 0 else 186000) + (if b0082 then 0 else 186000) + (if b0083 then 0 else 186000) + (if b0084 then 0 else 186000) + (if b0085 then 0 else 186000) + (if b0086 then 0 else 186000) + (if b0087 then 0 else 186000) + (if b0088 then 0 else 186000) + (if b0089 then 0 else 186000) + (if b0090 then 0 else 186000) + (if b0091 then 0 else 186000) + (if b0092 then 0 else 186000) + (if b0093 then 0 else 186000) + (if b0094 then 0 else 186000) + (if b0095 then 0 else 186000) + (if b0096 then 0 else 186000) + (if b0097 then 0 else 186000) + (if b0098 then 0 else 186000) + (if b0099 then 0 else 186000) + (if b0100 then 0 else 186000) + (if b0101 then 0 else 186000) + (if b0102 then 0 else 186000) + (if b0103 then 0 else 186000) + (if b0104 then 0 else 186000) + (if b0105 then 0 else 186000) + (if b0106 then 0 else 186000) + (if b0107 then 0 else 186000) + (if b0108 then 0 else 186000) + (if b0109 then 0 else 186000) + (if b0110 then 0 else 186000) + (if b0111 then 0 else 186000) + (if b0112 then 0 else 186000) + (if b0113 then 0 else 186000) + (if b0114 then 0 else 186000) + (if b0115 then 0 else 186000) + (if b0116 then 0 else 186000) + (if b0118 then 0 else 186000) + (if b0120 then 0 else 186000) + (if b0121 then 0 else 186000) + (if b0122 then 0 else 186000) + (if b0123 then 0 else 186000) + (if b0124 then 0 else 186000) + (if b0125 then 0 else 186000) + (if b0126 then 0 else 186000) + (if b0127 then 0 else 186000) + (if b0128 then 0 else 186000) + (if b0129 then 0 else 186000) + (if b0130 then 0 else 186000) + (if b0131 then 0 else 186000) + (if b0132 then 0 else 186000) + (if b0134 then 0 else 186000) + (if b0136 then 0 else 186000) + (if b0137 then 0 else 186000) + (if b0138 then 0 else 186000) + (if b0139 then 0 else 186000) + (if b0141 then 0 else 186000) + (if b0143 then 0 else 186000) + (if b0145 then 0 else 186000) + (if b0147 then 0 else 186000) + (if b0149 then 0 else 186000) + (if b0150 then 0 else 186000) + (if b0151 then 0 else 186000) + (if b0154 then 0 else 186000) + (if b0156 then 0 else 186000) + (if b0157 then 0 else 186000) + (if b0158 then 0 else 186000) + (if b0159 then 0 else 186000) + (if b0162 then 0 else 186000) + (if b0164 then 0 else 186000) + (if b0167 then 0 else 186000) + (if b0169 then 0 else 186000) + (if b0172 then 0 else 186000) + (if b0174 then 0 else 186000) + (if b0175 then 0 else 186000) + (if b0176 then 0 else 186000) + (if b0177 then 0 else 186000) + (if b0181 then 0 else 186000) + (if b0182 then 0 else 186000) + (if b0184 then 0 else 186000) + (if b0185 then 0 else 186000) + (if b0186 then 0 else 186000) + (if b0188 then 0 else 186000) + (if b0189 then 0 else 186000) + (if b0190 then 0 else 186000) + (if b0191 then 0 else 186000) + (if b0192 then 0 else 186000) + (if b0193 then 0 else 186000) + (if b0195 then 0 else 186000) + (if b0197 then 0 else 186000) + (if b0198 then 0 else 186000) + (if b0199 then 0 else 186000) + (if b0200 then 0 else 186000) + (if b0205 then 0 else 186000) + (if b0206 then 0 else 186000) + (if b0207 then 0 else 186000) + (if b0208 then 0 else 186000) + (if b0210 then 0 else 186000) + (if b0212 then 0 else 186000) + (if b0214 then 0 else 186000) + (if b0215 then 0 else 186000) + (if b0216 then 0 else 186000) + (if b0217 then 0 else 186000) + (if b0222 then 0 else 186000) + (if b0223 then 0 else 186000) + (if b0225 then 0 else 186000) + (if b0227 then 0 else 186000) + (if b0228 then 0 else 186000) + (if b0230 then 0 else 186000) + (if b0232 then 0 else 186000) + (if b0235 then 0 else 186000) + (if b0237 then 0 else 186000) + (if b0238 then 0 else 186000) + (if b0239 then 0 else 186000) + (if b0240 then 0 else 186000) + (if b0244 then 0 else 186000) + (if b0245 then 0 else 186000) + (if b0246 then 0 else 186000) + (if b0247 then 0 else 186000) + (if b0248 then 0 else 186000) + (if b0249 then 0 else 186000) + (if b0250 then 0 else 186000) + (if b0251 then 0 else 186000) + (if b0252 then 0 else 186000) + (if b0253 then 0 else 186000) + (if b0254 then 0 else 186000) + (if b0255 then 0 else 186000) + (if b0256 then 0 else 186000) + (if b0257 then 0 else 186000) + (if b0258 then 0 else 186000) + (if b0259 then 0 else 186000) + (if b0260 then 0 else 186000) + (if b0261 then 0 else 186000) + (if b0262 then 0 else 186000) + (if b0263 then 0 else 186000) + (if b0264 then 0 else 186000) + (if b0265 then 0 else 186000) + (if b0266 then 0 else 186000) + (if b0267 then 0 else 186000) + (if b0268 then 0 else 186000) + (if b0269 then 0 else 186000) + (if b0270 then 0 else 186000) + (if b0271 then 0 else 186000) + (if b0272 then 0 else 186000) + (if b0273 then 0 else 186000) + (if b0274 then 0 else 186000) + (if b0275 then 0 else 186000) + (if b0276 then 0 else 186000) + (if b0277 then 0 else 186000) + (if b0278 then 0 else 186000) + (if b0279 then 0 else 186000) + (if b0280 then 0 else 186000) + (if b0281 then 0 else 186000) + (if b0282 then 0 else 186000) + (if b0283 then 0 else 186000) + (if b0284 then 0 else 186000) + (if b0285 then 0 else 186000) + (if b0286 then 0 else 186000) + (if b0287 then 0 else 186000) + (if b0288 then 0 else 186000) + (if b0289 then 0 else 186000) + (if b0290 then 0 else 186000) + (if b0291 then 0 else 186000) + (if b0292 then 0 else 186000) + (if b0293 then 0 else 186000) + (if b0294 then 0 else 186000) + (if b0295 then 0 else 186000) + (if b0296 then 0 else 186000) + (if b0297 then 0 else 186000) + (if b0298 then 0 else 186000) + (if b0299 then 0 else 186000) + (if b0300 then 0 else 186000) + (if b0301 then 0 else 186000) + (if b0302 then 0 else 186000) + (if b0303 then 0 else 186000) + (if b0304 then 0 else 186000) + (if b0305 then 0 else 186000) + (if b0306 then 0 else 186000) + (if b0307 then 0 else 186000) + (if b0308 then 0 else 186000) + (if b0309 then 0 else 186000) + (if b0310 then 0 else 186000) + (if b0311 then 0 else 186000) + (if b0312 then 0 else 186000) + (if b0313 then 0 else 186000) + (if b0314 then 0 else 186000) + (if b0315 then 0 else 186000) + (if b0316 then 0 else 186000) + (if b0317 then 0 else 186000) + (if b0318 then 0 else 186000) + (if b0319 then 0 else 186000) + (if b0320 then 0 else 186000) + (if b0321 then 0 else 186000) + (if b0322 then 0 else 186000) + (if b0323 then 0 else 186000) + (if b0324 then 0 else 186000) + (if b0325 then 0 else 186000) + (if b0326 then 0 else 186000) + (if b0327 then 0 else 186000) + (if b0328 then 0 else 186000) + (if b0329 then 0 else 186000) + (if b0330 then 0 else 186000) + (if b0331 then 0 else 186000) + (if b0332 then 0 else 186000) + (if b0333 then 0 else 186000) + (if b0334 then 0 else 186000) + (if b0335 then 0 else 186000) + (if b0336 then 0 else 186000) + (if b0337 then 0 else 186000) + (if b0338 then 0 else 186000) + (if b0339 then 0 else 186000) + (if b0340 then 0 else 186000) + (if b0341 then 0 else 186000) + (if b0378 then 0 else 186000) + (if b0379 then 0 else 186000) + (if b0382 then 0 else 186000) + (if b0383 then 0 else 186000) + (if b0385 then 0 else 186000) + (if b0386 then 0 else 186000) + (if b0387 then 0 else 186000) + (if b0388 then 0 else 186000) + (if b0389 then 0 else 186000) + (if b0390 then 0 else 186000) + (if b0424 then 0 else 186000) + (if b0425 then 0 else 186000) + (if b0426 then 0 else 186000) + (if b0427 then 0 else 186000) + (if b0430 then 0 else 186000) + (if b0431 then 0 else 186000) + (if b0432 then 0 else 186000) + (if b0433 then 0 else 186000) + (if b0435 then 0 else 186000) + (if b0436 then 0 else 186000) + (if b0437 then 0 else 186000) + (if b0438 then 0 else 186000) + (if b0439 then 0 else 186000) + (if b0440 then 0 else 186000) + (if b0441 then 0 else 186000) + (if b0442 then 0 else 186000) + (if b0443 then 0 else 186000) + (if b0444 then 0 else 186000) + (if b0445 then 0 else 186000) + (if b0446 then 0 else 186000) + (if b0447 then 0 else 186000) + (if b0448 then 0 else 186000) + (if b0449 then 0 else 186000) + (if b0450 then 0 else 186000) + (if b0451 then 0 else 186000) + (if b0452 then 0 else 186000) + (if b0453 then 0 else 186000) + (if b0454 then 0 else 186000) + (if b0455 then 0 else 186000) + (if b0456 then 0 else 186000) + (if b0457 then 0 else 186000) + (if b0458 then 0 else 186000) + (if b0459 then 0 else 186000) + (if b0460 then 0 else 186000) + (if b0461 then 0 else 186000) + (if b0462 then 0 else 186000) + (if b0463 then 0 else 186000) + (if b0464 then 0 else 186000) + (if b0465 then 0 else 186000) < 441
}
Prover Time taken = 10.290106
Added Horn clause: 96 && 97 && 98 && 0 && 0 => 99
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/linear-algebra/kernels/3mm/kernel3.bpl.ice2.bpl
Total learner time was 00:00:00.1495500
Verifying $kernel3: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool, b0228: bool, b0229: bool, b0230: bool, b0231: bool, b0232: bool, b0233: bool, b0234: bool, b0235: bool, b0236: bool, b0237: bool, b0238: bool, b0239: bool, b0240: bool, b0241: bool, b0242: bool, b0243: bool, b0244: bool, b0245: bool, b0246: bool, b0247: bool, b0248: bool, b0249: bool, b0250: bool, b0251: bool, b0252: bool, b0253: bool, b0254: bool, b0255: bool, b0256: bool, b0257: bool, b0258: bool, b0259: bool, b0260: bool, b0261: bool, b0262: bool, b0263: bool, b0264: bool, b0265: bool, b0266: bool, b0267: bool, b0268: bool, b0269: bool, b0270: bool, b0271: bool, b0272: bool, b0273: bool, b0274: bool, b0275: bool, b0276: bool, b0277: bool, b0278: bool, b0279: bool, b0280: bool, b0281: bool, b0282: bool, b0283: bool, b0284: bool, b0285: bool, b0286: bool, b0287: bool, b0288: bool, b0289: bool, b0290: bool, b0291: bool, b0292: bool, b0293: bool, b0294: bool, b0295: bool, b0296: bool, b0297: bool, b0298: bool, b0299: bool, b0300: bool, b0301: bool, b0302: bool, b0303: bool, b0304: bool, b0305: bool, b0306: bool, b0307: bool, b0308: bool, b0309: bool, b0310: bool, b0311: bool, b0312: bool, b0313: bool, b0314: bool, b0315: bool, b0316: bool, b0317: bool, b0318: bool, b0319: bool, b0320: bool, b0321: bool, b0322: bool, b0323: bool, b0324: bool, b0325: bool, b0326: bool, b0327: bool, b0328: bool, b0329: bool, b0330: bool, b0331: bool, b0332: bool, b0333: bool, b0334: bool, b0335: bool, b0336: bool, b0337: bool, b0338: bool, b0339: bool, b0340: bool, b0341: bool, b0342: bool, b0343: bool, b0344: bool, b0345: bool, b0346: bool, b0347: bool, b0348: bool, b0349: bool, b0350: bool, b0351: bool, b0352: bool, b0353: bool, b0354: bool, b0355: bool, b0356: bool, b0357: bool, b0358: bool, b0359: bool, b0360: bool, b0361: bool, b0362: bool, b0363: bool, b0364: bool, b0365: bool, b0366: bool, b0367: bool, b0368: bool, b0369: bool, b0370: bool, b0371: bool, b0372: bool, b0373: bool, b0374: bool, b0375: bool, b0376: bool, b0377: bool, b0378: bool, b0379: bool, b0380: bool, b0381: bool, b0382: bool, b0383: bool, b0384: bool, b0385: bool, b0386: bool, b0387: bool, b0388: bool, b0389: bool, b0390: bool, b0391: bool, b0392: bool, b0393: bool, b0394: bool, b0395: bool, b0396: bool, b0397: bool, b0398: bool, b0399: bool, b0400: bool, b0401: bool, b0402: bool, b0403: bool, b0404: bool, b0405: bool, b0406: bool, b0407: bool, b0408: bool, b0409: bool, b0410: bool, b0411: bool, b0412: bool, b0413: bool, b0414: bool, b0415: bool, b0416: bool, b0417: bool, b0418: bool, b0419: bool, b0420: bool, b0421: bool, b0422: bool, b0423: bool, b0424: bool, b0425: bool, b0426: bool, b0427: bool, b0428: bool, b0429: bool, b0430: bool, b0431: bool, b0432: bool, b0433: bool, b0434: bool, b0435: bool, b0436: bool, b0437: bool, b0438: bool, b0439: bool, b0440: bool, b0441: bool, b0442: bool, b0443: bool, b0444: bool, b0445: bool, b0446: bool, b0447: bool, b0448: bool, b0449: bool, b0450: bool, b0451: bool, b0452: bool, b0453: bool, b0454: bool, b0455: bool, b0456: bool, b0457: bool, b0458: bool, b0459: bool, b0460: bool, b0461: bool, b0462: bool, b0463: bool, b0464: bool, b0465: bool) : bool
{
  0 + (if b0000 then 0 else 186000) + (if b0001 then 0 else 186000) + (if b0002 then 0 else 186000) + (if b0003 then 0 else 186000) + (if b0004 then 0 else 186000) + (if b0005 then 0 else 186000) + (if b0006 then 0 else 186000) + (if b0007 then 0 else 186000) + (if b0008 then 0 else 186000) + (if b0009 then 0 else 186000) + (if b0010 then 0 else 186000) + (if b0011 then 0 else 186000) + (if b0012 then 0 else 186000) + (if b0013 then 0 else 186000) + (if b0014 then 0 else 186000) + (if b0015 then 0 else 186000) + (if b0016 then 0 else 186000) + (if b0017 then 0 else 186000) + (if b0018 then 0 else 186000) + (if b0019 then 0 else 186000) + (if b0020 then 0 else 186000) + (if b0021 then 0 else 186000) + (if b0022 then 0 else 186000) + (if b0023 then 0 else 186000) + (if b0024 then 0 else 186000) + (if b0025 then 0 else 186000) + (if b0026 then 0 else 186000) + (if b0027 then 0 else 186000) + (if b0028 then 0 else 186000) + (if b0029 then 0 else 186000) + (if b0030 then 0 else 186000) + (if b0031 then 0 else 186000) + (if b0032 then 0 else 186000) + (if b0033 then 0 else 186000) + (if b0034 then 0 else 186000) + (if b0035 then 0 else 186000) + (if b0036 then 0 else 186000) + (if b0037 then 0 else 186000) + (if b0038 then 0 else 186000) + (if b0039 then 0 else 186000) + (if b0040 then 0 else 186000) + (if b0041 then 0 else 186000) + (if b0042 then 0 else 186000) + (if b0043 then 0 else 186000) + (if b0044 then 0 else 186000) + (if b0045 then 0 else 186000) + (if b0046 then 0 else 186000) + (if b0047 then 0 else 186000) + (if b0048 then 0 else 186000) + (if b0049 then 0 else 186000) + (if b0050 then 0 else 186000) + (if b0051 then 0 else 186000) + (if b0052 then 0 else 186000) + (if b0053 then 0 else 186000) + (if b0054 then 0 else 186000) + (if b0055 then 0 else 186000) + (if b0056 then 0 else 186000) + (if b0057 then 0 else 186000) + (if b0058 then 0 else 186000) + (if b0059 then 0 else 186000) + (if b0060 then 0 else 186000) + (if b0061 then 0 else 186000) + (if b0062 then 0 else 186000) + (if b0063 then 0 else 186000) + (if b0064 then 0 else 186000) + (if b0065 then 0 else 186000) + (if b0066 then 0 else 186000) + (if b0067 then 0 else 186000) + (if b0068 then 0 else 186000) + (if b0069 then 0 else 186000) + (if b0070 then 0 else 186000) + (if b0071 then 0 else 186000) + (if b0072 then 0 else 186000) + (if b0073 then 0 else 186000) + (if b0074 then 0 else 186000) + (if b0075 then 0 else 186000) + (if b0076 then 0 else 186000) + (if b0077 then 0 else 186000) + (if b0078 then 0 else 186000) + (if b0079 then 0 else 186000) + (if b0080 then 0 else 186000) + (if b0081 then 0 else 186000) + (if b0082 then 0 else 186000) + (if b0083 then 0 else 186000) + (if b0084 then 0 else 186000) + (if b0085 then 0 else 186000) + (if b0086 then 0 else 186000) + (if b0087 then 0 else 186000) + (if b0088 then 0 else 186000) + (if b0089 then 0 else 186000) + (if b0090 then 0 else 186000) + (if b0091 then 0 else 186000) + (if b0092 then 0 else 186000) + (if b0093 then 0 else 186000) + (if b0094 then 0 else 186000) + (if b0095 then 0 else 186000) + (if b0096 then 0 else 186000) + (if b0097 then 0 else 186000) + (if b0098 then 0 else 186000) + (if b0099 then 0 else 186000) + (if b0100 then 0 else 186000) + (if b0101 then 0 else 186000) + (if b0102 then 0 else 186000) + (if b0103 then 0 else 186000) + (if b0104 then 0 else 186000) + (if b0105 then 0 else 186000) + (if b0106 then 0 else 186000) + (if b0107 then 0 else 186000) + (if b0108 then 0 else 186000) + (if b0109 then 0 else 186000) + (if b0110 then 0 else 186000) + (if b0111 then 0 else 186000) + (if b0112 then 0 else 186000) + (if b0113 then 0 else 186000) + (if b0114 then 0 else 186000) + (if b0115 then 0 else 186000) + (if b0116 then 0 else 186000) + (if b0118 then 0 else 186000) + (if b0120 then 0 else 186000) + (if b0121 then 0 else 186000) + (if b0122 then 0 else 186000) + (if b0123 then 0 else 186000) + (if b0124 then 0 else 186000) + (if b0125 then 0 else 186000) + (if b0126 then 0 else 186000) + (if b0127 then 0 else 186000) + (if b0128 then 0 else 186000) + (if b0129 then 0 else 186000) + (if b0130 then 0 else 186000) + (if b0131 then 0 else 186000) + (if b0132 then 0 else 186000) + (if b0134 then 0 else 186000) + (if b0136 then 0 else 186000) + (if b0137 then 0 else 186000) + (if b0138 then 0 else 186000) + (if b0139 then 0 else 186000) + (if b0141 then 0 else 186000) + (if b0143 then 0 else 186000) + (if b0145 then 0 else 186000) + (if b0147 then 0 else 186000) + (if b0149 then 0 else 186000) + (if b0150 then 0 else 186000) + (if b0151 then 0 else 186000) + (if b0154 then 0 else 186000) + (if b0156 then 0 else 186000) + (if b0157 then 0 else 186000) + (if b0158 then 0 else 186000) + (if b0159 then 0 else 186000) + (if b0162 then 0 else 186000) + (if b0164 then 0 else 186000) + (if b0167 then 0 else 186000) + (if b0169 then 0 else 186000) + (if b0172 then 0 else 186000) + (if b0174 then 0 else 186000) + (if b0175 then 0 else 186000) + (if b0176 then 0 else 186000) + (if b0177 then 0 else 186000) + (if b0181 then 0 else 186000) + (if b0185 then 0 else 186000) + (if b0189 then 0 else 186000) + (if b0190 then 0 else 186000) + (if b0191 then 0 else 186000) + (if b0192 then 0 else 186000) + (if b0193 then 0 else 186000) + (if b0195 then 0 else 186000) + (if b0197 then 0 else 186000) + (if b0198 then 0 else 186000) + (if b0199 then 0 else 186000) + (if b0200 then 0 else 186000) + (if b0205 then 0 else 186000) + (if b0206 then 0 else 186000) + (if b0207 then 0 else 186000) + (if b0208 then 0 else 186000) + (if b0210 then 0 else 186000) + (if b0212 then 0 else 186000) + (if b0214 then 0 else 186000) + (if b0215 then 0 else 186000) + (if b0216 then 0 else 186000) + (if b0217 then 0 else 186000) + (if b0222 then 0 else 186000) + (if b0223 then 0 else 186000) + (if b0225 then 0 else 186000) + (if b0227 then 0 else 186000) + (if b0228 then 0 else 186000) + (if b0230 then 0 else 186000) + (if b0232 then 0 else 186000) + (if b0235 then 0 else 186000) + (if b0237 then 0 else 186000) + (if b0238 then 0 else 186000) + (if b0239 then 0 else 186000) + (if b0240 then 0 else 186000) + (if b0244 then 0 else 186000) + (if b0245 then 0 else 186000) + (if b0246 then 0 else 186000) + (if b0247 then 0 else 186000) + (if b0248 then 0 else 186000) + (if b0249 then 0 else 186000) + (if b0250 then 0 else 186000) + (if b0251 then 0 else 186000) + (if b0252 then 0 else 186000) + (if b0253 then 0 else 186000) + (if b0254 then 0 else 186000) + (if b0255 then 0 else 186000) + (if b0256 then 0 else 186000) + (if b0257 then 0 else 186000) + (if b0258 then 0 else 186000) + (if b0259 then 0 else 186000) + (if b0260 then 0 else 186000) + (if b0261 then 0 else 186000) + (if b0262 then 0 else 186000) + (if b0263 then 0 else 186000) + (if b0264 then 0 else 186000) + (if b0265 then 0 else 186000) + (if b0266 then 0 else 186000) + (if b0267 then 0 else 186000) + (if b0268 then 0 else 186000) + (if b0269 then 0 else 186000) + (if b0270 then 0 else 186000) + (if b0271 then 0 else 186000) + (if b0272 then 0 else 186000) + (if b0273 then 0 else 186000) + (if b0274 then 0 else 186000) + (if b0275 then 0 else 186000) + (if b0276 then 0 else 186000) + (if b0277 then 0 else 186000) + (if b0278 then 0 else 186000) + (if b0279 then 0 else 186000) + (if b0280 then 0 else 186000) + (if b0281 then 0 else 186000) + (if b0282 then 0 else 186000) + (if b0283 then 0 else 186000) + (if b0284 then 0 else 186000) + (if b0285 then 0 else 186000) + (if b0286 then 0 else 186000) + (if b0287 then 0 else 186000) + (if b0288 then 0 else 186000) + (if b0289 then 0 else 186000) + (if b0290 then 0 else 186000) + (if b0291 then 0 else 186000) + (if b0292 then 0 else 186000) + (if b0293 then 0 else 186000) + (if b0294 then 0 else 186000) + (if b0295 then 0 else 186000) + (if b0296 then 0 else 186000) + (if b0297 then 0 else 186000) + (if b0298 then 0 else 186000) + (if b0299 then 0 else 186000) + (if b0300 then 0 else 186000) + (if b0301 then 0 else 186000) + (if b0302 then 0 else 186000) + (if b0303 then 0 else 186000) + (if b0304 then 0 else 186000) + (if b0305 then 0 else 186000) + (if b0306 then 0 else 186000) + (if b0307 then 0 else 186000) + (if b0308 then 0 else 186000) + (if b0309 then 0 else 186000) + (if b0310 then 0 else 186000) + (if b0311 then 0 else 186000) + (if b0312 then 0 else 186000) + (if b0313 then 0 else 186000) + (if b0314 then 0 else 186000) + (if b0315 then 0 else 186000) + (if b0316 then 0 else 186000) + (if b0317 then 0 else 186000) + (if b0318 then 0 else 186000) + (if b0319 then 0 else 186000) + (if b0320 then 0 else 186000) + (if b0321 then 0 else 186000) + (if b0322 then 0 else 186000) + (if b0323 then 0 else 186000) + (if b0324 then 0 else 186000) + (if b0325 then 0 else 186000) + (if b0326 then 0 else 186000) + (if b0327 then 0 else 186000) + (if b0328 then 0 else 186000) + (if b0329 then 0 else 186000) + (if b0330 then 0 else 186000) + (if b0331 then 0 else 186000) + (if b0332 then 0 else 186000) + (if b0333 then 0 else 186000) + (if b0334 then 0 else 186000) + (if b0335 then 0 else 186000) + (if b0336 then 0 else 186000) + (if b0337 then 0 else 186000) + (if b0338 then 0 else 186000) + (if b0339 then 0 else 186000) + (if b0340 then 0 else 186000) + (if b0341 then 0 else 186000) + (if b0378 then 0 else 186000) + (if b0379 then 0 else 186000) + (if b0382 then 0 else 186000) + (if b0383 then 0 else 186000) + (if b0385 then 0 else 186000) + (if b0386 then 0 else 186000) + (if b0387 then 0 else 186000) + (if b0388 then 0 else 186000) + (if b0389 then 0 else 186000) + (if b0390 then 0 else 186000) + (if b0424 then 0 else 186000) + (if b0425 then 0 else 186000) + (if b0426 then 0 else 186000) + (if b0427 then 0 else 186000) + (if b0430 then 0 else 186000) + (if b0431 then 0 else 186000) + (if b0432 then 0 else 186000) + (if b0433 then 0 else 186000) + (if b0435 then 0 else 186000) + (if b0436 then 0 else 186000) + (if b0437 then 0 else 186000) + (if b0438 then 0 else 186000) + (if b0439 then 0 else 186000) + (if b0440 then 0 else 186000) + (if b0441 then 0 else 186000) + (if b0442 then 0 else 186000) + (if b0443 then 0 else 186000) + (if b0444 then 0 else 186000) + (if b0445 then 0 else 186000) + (if b0446 then 0 else 186000) + (if b0447 then 0 else 186000) + (if b0448 then 0 else 186000) + (if b0449 then 0 else 186000) + (if b0450 then 0 else 186000) + (if b0451 then 0 else 186000) + (if b0452 then 0 else 186000) + (if b0453 then 0 else 186000) + (if b0454 then 0 else 186000) + (if b0455 then 0 else 186000) + (if b0456 then 0 else 186000) + (if b0457 then 0 else 186000) + (if b0458 then 0 else 186000) + (if b0459 then 0 else 186000) + (if b0460 then 0 else 186000) + (if b0461 then 0 else 186000) + (if b0462 then 0 else 186000) + (if b0463 then 0 else 186000) + (if b0464 then 0 else 186000) + (if b0465 then 0 else 186000) < 441
}
Prover Time taken = 9.688545
Added Horn clause: 100 && 77 && 101 && 0 && 0 && 0 && 99 && 0 && 0 => 102
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/linear-algebra/kernels/3mm/kernel3.bpl.ice2.bpl
Total learner time was 00:00:00.1445530
Verifying $kernel3: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool, b0228: bool, b0229: bool, b0230: bool, b0231: bool, b0232: bool, b0233: bool, b0234: bool, b0235: bool, b0236: bool, b0237: bool, b0238: bool, b0239: bool, b0240: bool, b0241: bool, b0242: bool, b0243: bool, b0244: bool, b0245: bool, b0246: bool, b0247: bool, b0248: bool, b0249: bool, b0250: bool, b0251: bool, b0252: bool, b0253: bool, b0254: bool, b0255: bool, b0256: bool, b0257: bool, b0258: bool, b0259: bool, b0260: bool, b0261: bool, b0262: bool, b0263: bool, b0264: bool, b0265: bool, b0266: bool, b0267: bool, b0268: bool, b0269: bool, b0270: bool, b0271: bool, b0272: bool, b0273: bool, b0274: bool, b0275: bool, b0276: bool, b0277: bool, b0278: bool, b0279: bool, b0280: bool, b0281: bool, b0282: bool, b0283: bool, b0284: bool, b0285: bool, b0286: bool, b0287: bool, b0288: bool, b0289: bool, b0290: bool, b0291: bool, b0292: bool, b0293: bool, b0294: bool, b0295: bool, b0296: bool, b0297: bool, b0298: bool, b0299: bool, b0300: bool, b0301: bool, b0302: bool, b0303: bool, b0304: bool, b0305: bool, b0306: bool, b0307: bool, b0308: bool, b0309: bool, b0310: bool, b0311: bool, b0312: bool, b0313: bool, b0314: bool, b0315: bool, b0316: bool, b0317: bool, b0318: bool, b0319: bool, b0320: bool, b0321: bool, b0322: bool, b0323: bool, b0324: bool, b0325: bool, b0326: bool, b0327: bool, b0328: bool, b0329: bool, b0330: bool, b0331: bool, b0332: bool, b0333: bool, b0334: bool, b0335: bool, b0336: bool, b0337: bool, b0338: bool, b0339: bool, b0340: bool, b0341: bool, b0342: bool, b0343: bool, b0344: bool, b0345: bool, b0346: bool, b0347: bool, b0348: bool, b0349: bool, b0350: bool, b0351: bool, b0352: bool, b0353: bool, b0354: bool, b0355: bool, b0356: bool, b0357: bool, b0358: bool, b0359: bool, b0360: bool, b0361: bool, b0362: bool, b0363: bool, b0364: bool, b0365: bool, b0366: bool, b0367: bool, b0368: bool, b0369: bool, b0370: bool, b0371: bool, b0372: bool, b0373: bool, b0374: bool, b0375: bool, b0376: bool, b0377: bool, b0378: bool, b0379: bool, b0380: bool, b0381: bool, b0382: bool, b0383: bool, b0384: bool, b0385: bool, b0386: bool, b0387: bool, b0388: bool, b0389: bool, b0390: bool, b0391: bool, b0392: bool, b0393: bool, b0394: bool, b0395: bool, b0396: bool, b0397: bool, b0398: bool, b0399: bool, b0400: bool, b0401: bool, b0402: bool, b0403: bool, b0404: bool, b0405: bool, b0406: bool, b0407: bool, b0408: bool, b0409: bool, b0410: bool, b0411: bool, b0412: bool, b0413: bool, b0414: bool, b0415: bool, b0416: bool, b0417: bool, b0418: bool, b0419: bool, b0420: bool, b0421: bool, b0422: bool, b0423: bool, b0424: bool, b0425: bool, b0426: bool, b0427: bool, b0428: bool, b0429: bool, b0430: bool, b0431: bool, b0432: bool, b0433: bool, b0434: bool, b0435: bool, b0436: bool, b0437: bool, b0438: bool, b0439: bool, b0440: bool, b0441: bool, b0442: bool, b0443: bool, b0444: bool, b0445: bool, b0446: bool, b0447: bool, b0448: bool, b0449: bool, b0450: bool, b0451: bool, b0452: bool, b0453: bool, b0454: bool, b0455: bool, b0456: bool, b0457: bool, b0458: bool, b0459: bool, b0460: bool, b0461: bool, b0462: bool, b0463: bool, b0464: bool, b0465: bool) : bool
{
  0 + (if b0000 then 0 else 186000) + (if b0001 then 0 else 186000) + (if b0002 then 0 else 186000) + (if b0003 then 0 else 186000) + (if b0004 then 0 else 186000) + (if b0005 then 0 else 186000) + (if b0006 then 0 else 186000) + (if b0007 then 0 else 186000) + (if b0008 then 0 else 186000) + (if b0009 then 0 else 186000) + (if b0010 then 0 else 186000) + (if b0011 then 0 else 186000) + (if b0012 then 0 else 186000) + (if b0013 then 0 else 186000) + (if b0014 then 0 else 186000) + (if b0015 then 0 else 186000) + (if b0016 then 0 else 186000) + (if b0017 then 0 else 186000) + (if b0018 then 0 else 186000) + (if b0019 then 0 else 186000) + (if b0020 then 0 else 186000) + (if b0021 then 0 else 186000) + (if b0022 then 0 else 186000) + (if b0023 then 0 else 186000) + (if b0024 then 0 else 186000) + (if b0025 then 0 else 186000) + (if b0026 then 0 else 186000) + (if b0027 then 0 else 186000) + (if b0028 then 0 else 186000) + (if b0029 then 0 else 186000) + (if b0030 then 0 else 186000) + (if b0031 then 0 else 186000) + (if b0032 then 0 else 186000) + (if b0033 then 0 else 186000) + (if b0034 then 0 else 186000) + (if b0035 then 0 else 186000) + (if b0036 then 0 else 186000) + (if b0037 then 0 else 186000) + (if b0038 then 0 else 186000) + (if b0039 then 0 else 186000) + (if b0040 then 0 else 186000) + (if b0041 then 0 else 186000) + (if b0042 then 0 else 186000) + (if b0043 then 0 else 186000) + (if b0044 then 0 else 186000) + (if b0045 then 0 else 186000) + (if b0046 then 0 else 186000) + (if b0047 then 0 else 186000) + (if b0048 then 0 else 186000) + (if b0049 then 0 else 186000) + (if b0050 then 0 else 186000) + (if b0051 then 0 else 186000) + (if b0052 then 0 else 186000) + (if b0053 then 0 else 186000) + (if b0054 then 0 else 186000) + (if b0055 then 0 else 186000) + (if b0056 then 0 else 186000) + (if b0057 then 0 else 186000) + (if b0058 then 0 else 186000) + (if b0059 then 0 else 186000) + (if b0060 then 0 else 186000) + (if b0061 then 0 else 186000) + (if b0062 then 0 else 186000) + (if b0063 then 0 else 186000) + (if b0064 then 0 else 186000) + (if b0065 then 0 else 186000) + (if b0066 then 0 else 186000) + (if b0067 then 0 else 186000) + (if b0068 then 0 else 186000) + (if b0069 then 0 else 186000) + (if b0070 then 0 else 186000) + (if b0071 then 0 else 186000) + (if b0072 then 0 else 186000) + (if b0073 then 0 else 186000) + (if b0074 then 0 else 186000) + (if b0075 then 0 else 186000) + (if b0076 then 0 else 186000) + (if b0077 then 0 else 186000) + (if b0078 then 0 else 186000) + (if b0079 then 0 else 186000) + (if b0080 then 0 else 186000) + (if b0081 then 0 else 186000) + (if b0082 then 0 else 186000) + (if b0083 then 0 else 186000) + (if b0084 then 0 else 186000) + (if b0085 then 0 else 186000) + (if b0086 then 0 else 186000) + (if b0087 then 0 else 186000) + (if b0088 then 0 else 186000) + (if b0089 then 0 else 186000) + (if b0090 then 0 else 186000) + (if b0091 then 0 else 186000) + (if b0092 then 0 else 186000) + (if b0093 then 0 else 186000) + (if b0094 then 0 else 186000) + (if b0095 then 0 else 186000) + (if b0096 then 0 else 186000) + (if b0097 then 0 else 186000) + (if b0098 then 0 else 186000) + (if b0099 then 0 else 186000) + (if b0100 then 0 else 186000) + (if b0101 then 0 else 186000) + (if b0102 then 0 else 186000) + (if b0103 then 0 else 186000) + (if b0104 then 0 else 186000) + (if b0105 then 0 else 186000) + (if b0106 then 0 else 186000) + (if b0107 then 0 else 186000) + (if b0108 then 0 else 186000) + (if b0109 then 0 else 186000) + (if b0110 then 0 else 186000) + (if b0111 then 0 else 186000) + (if b0112 then 0 else 186000) + (if b0113 then 0 else 186000) + (if b0114 then 0 else 186000) + (if b0115 then 0 else 186000) + (if b0116 then 0 else 186000) + (if b0118 then 0 else 186000) + (if b0120 then 0 else 186000) + (if b0121 then 0 else 186000) + (if b0122 then 0 else 186000) + (if b0123 then 0 else 186000) + (if b0124 then 0 else 186000) + (if b0125 then 0 else 186000) + (if b0126 then 0 else 186000) + (if b0127 then 0 else 186000) + (if b0128 then 0 else 186000) + (if b0129 then 0 else 186000) + (if b0130 then 0 else 186000) + (if b0131 then 0 else 186000) + (if b0132 then 0 else 186000) + (if b0134 then 0 else 186000) + (if b0136 then 0 else 186000) + (if b0137 then 0 else 186000) + (if b0138 then 0 else 186000) + (if b0139 then 0 else 186000) + (if b0141 then 0 else 186000) + (if b0143 then 0 else 186000) + (if b0145 then 0 else 186000) + (if b0147 then 0 else 186000) + (if b0149 then 0 else 186000) + (if b0150 then 0 else 186000) + (if b0151 then 0 else 186000) + (if b0154 then 0 else 186000) + (if b0156 then 0 else 186000) + (if b0157 then 0 else 186000) + (if b0158 then 0 else 186000) + (if b0159 then 0 else 186000) + (if b0162 then 0 else 186000) + (if b0164 then 0 else 186000) + (if b0167 then 0 else 186000) + (if b0169 then 0 else 186000) + (if b0172 then 0 else 186000) + (if b0174 then 0 else 186000) + (if b0175 then 0 else 186000) + (if b0176 then 0 else 186000) + (if b0177 then 0 else 186000) + (if b0181 then 0 else 186000) + (if b0185 then 0 else 186000) + (if b0189 then 0 else 186000) + (if b0190 then 0 else 186000) + (if b0191 then 0 else 186000) + (if b0192 then 0 else 186000) + (if b0193 then 0 else 186000) + (if b0195 then 0 else 186000) + (if b0197 then 0 else 186000) + (if b0198 then 0 else 186000) + (if b0199 then 0 else 186000) + (if b0200 then 0 else 186000) + (if b0205 then 0 else 186000) + (if b0206 then 0 else 186000) + (if b0207 then 0 else 186000) + (if b0208 then 0 else 186000) + (if b0210 then 0 else 186000) + (if b0212 then 0 else 186000) + (if b0214 then 0 else 186000) + (if b0215 then 0 else 186000) + (if b0216 then 0 else 186000) + (if b0217 then 0 else 186000) + (if b0222 then 0 else 186000) + (if b0227 then 0 else 186000) + (if b0232 then 0 else 186000) + (if b0235 then 0 else 186000) + (if b0237 then 0 else 186000) + (if b0238 then 0 else 186000) + (if b0239 then 0 else 186000) + (if b0240 then 0 else 186000) + (if b0244 then 0 else 186000) + (if b0245 then 0 else 186000) + (if b0246 then 0 else 186000) + (if b0247 then 0 else 186000) + (if b0248 then 0 else 186000) + (if b0249 then 0 else 186000) + (if b0250 then 0 else 186000) + (if b0251 then 0 else 186000) + (if b0252 then 0 else 186000) + (if b0253 then 0 else 186000) + (if b0254 then 0 else 186000) + (if b0255 then 0 else 186000) + (if b0256 then 0 else 186000) + (if b0257 then 0 else 186000) + (if b0258 then 0 else 186000) + (if b0259 then 0 else 186000) + (if b0260 then 0 else 186000) + (if b0261 then 0 else 186000) + (if b0262 then 0 else 186000) + (if b0263 then 0 else 186000) + (if b0264 then 0 else 186000) + (if b0265 then 0 else 186000) + (if b0266 then 0 else 186000) + (if b0267 then 0 else 186000) + (if b0268 then 0 else 186000) + (if b0269 then 0 else 186000) + (if b0270 then 0 else 186000) + (if b0271 then 0 else 186000) + (if b0272 then 0 else 186000) + (if b0273 then 0 else 186000) + (if b0274 then 0 else 186000) + (if b0275 then 0 else 186000) + (if b0276 then 0 else 186000) + (if b0277 then 0 else 186000) + (if b0278 then 0 else 186000) + (if b0279 then 0 else 186000) + (if b0280 then 0 else 186000) + (if b0281 then 0 else 186000) + (if b0282 then 0 else 186000) + (if b0283 then 0 else 186000) + (if b0284 then 0 else 186000) + (if b0285 then 0 else 186000) + (if b0286 then 0 else 186000) + (if b0287 then 0 else 186000) + (if b0288 then 0 else 186000) + (if b0289 then 0 else 186000) + (if b0290 then 0 else 186000) + (if b0291 then 0 else 186000) + (if b0292 then 0 else 186000) + (if b0293 then 0 else 186000) + (if b0294 then 0 else 186000) + (if b0295 then 0 else 186000) + (if b0296 then 0 else 186000) + (if b0297 then 0 else 186000) + (if b0298 then 0 else 186000) + (if b0299 then 0 else 186000) + (if b0300 then 0 else 186000) + (if b0301 then 0 else 186000) + (if b0302 then 0 else 186000) + (if b0303 then 0 else 186000) + (if b0304 then 0 else 186000) + (if b0305 then 0 else 186000) + (if b0306 then 0 else 186000) + (if b0307 then 0 else 186000) + (if b0308 then 0 else 186000) + (if b0309 then 0 else 186000) + (if b0310 then 0 else 186000) + (if b0311 then 0 else 186000) + (if b0312 then 0 else 186000) + (if b0313 then 0 else 186000) + (if b0314 then 0 else 186000) + (if b0315 then 0 else 186000) + (if b0316 then 0 else 186000) + (if b0317 then 0 else 186000) + (if b0318 then 0 else 186000) + (if b0319 then 0 else 186000) + (if b0320 then 0 else 186000) + (if b0321 then 0 else 186000) + (if b0322 then 0 else 186000) + (if b0323 then 0 else 186000) + (if b0324 then 0 else 186000) + (if b0325 then 0 else 186000) + (if b0326 then 0 else 186000) + (if b0327 then 0 else 186000) + (if b0328 then 0 else 186000) + (if b0329 then 0 else 186000) + (if b0330 then 0 else 186000) + (if b0331 then 0 else 186000) + (if b0332 then 0 else 186000) + (if b0333 then 0 else 186000) + (if b0334 then 0 else 186000) + (if b0335 then 0 else 186000) + (if b0336 then 0 else 186000) + (if b0337 then 0 else 186000) + (if b0338 then 0 else 186000) + (if b0339 then 0 else 186000) + (if b0340 then 0 else 186000) + (if b0341 then 0 else 186000) + (if b0378 then 0 else 186000) + (if b0379 then 0 else 186000) + (if b0382 then 0 else 186000) + (if b0383 then 0 else 186000) + (if b0385 then 0 else 186000) + (if b0386 then 0 else 186000) + (if b0387 then 0 else 186000) + (if b0388 then 0 else 186000) + (if b0389 then 0 else 186000) + (if b0390 then 0 else 186000) + (if b0424 then 0 else 186000) + (if b0425 then 0 else 186000) + (if b0426 then 0 else 186000) + (if b0427 then 0 else 186000) + (if b0430 then 0 else 186000) + (if b0431 then 0 else 186000) + (if b0432 then 0 else 186000) + (if b0433 then 0 else 186000) + (if b0435 then 0 else 186000) + (if b0436 then 0 else 186000) + (if b0437 then 0 else 186000) + (if b0438 then 0 else 186000) + (if b0439 then 0 else 186000) + (if b0440 then 0 else 186000) + (if b0441 then 0 else 186000) + (if b0442 then 0 else 186000) + (if b0443 then 0 else 186000) + (if b0444 then 0 else 186000) + (if b0445 then 0 else 186000) + (if b0446 then 0 else 186000) + (if b0447 then 0 else 186000) + (if b0448 then 0 else 186000) + (if b0449 then 0 else 186000) + (if b0450 then 0 else 186000) + (if b0451 then 0 else 186000) + (if b0452 then 0 else 186000) + (if b0453 then 0 else 186000) + (if b0454 then 0 else 186000) + (if b0455 then 0 else 186000) + (if b0456 then 0 else 186000) + (if b0457 then 0 else 186000) + (if b0458 then 0 else 186000) + (if b0459 then 0 else 186000) + (if b0460 then 0 else 186000) + (if b0461 then 0 else 186000) + (if b0462 then 0 else 186000) + (if b0463 then 0 else 186000) + (if b0464 then 0 else 186000) + (if b0465 then 0 else 186000) < 441
}
Prover Time taken = 10.846134
Prover time = 519.97
Number of prover queries = 53
Learner time = 6.91
Number of learner queries = 52
Total time: 550.57
Number of positive examples:7
Number of negative examples:0
Number of Horn clauses:45
verified

Boogie program verifier finished with 1 verified, 0 errors
45.99user 9.34system 9:12.84elapsed 10%CPU (0avgtext+0avgdata 143372maxresident)k
752inputs+9880outputs (1major+1091598minor)pagefaults 0swaps
FILE:polybench/linear-algebra/kernels/3mm/kernel3.bpl.ice2.bpl
#################
Wed May 12 03:45:31 UTC 2021
KEY=awinnow
OUTPUT=/root/Docker/winnow_gpu_timeout.txt
[TRACE] Using prover: /root/Docker/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/root/Docker/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a winnow
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/errorLimit:1
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/linear-algebra/solvers/cholesky/kernel2.bpl.ice2.bpl
--------------------
Parsing /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/linear-algebra/solvers/cholesky/kernel2.bpl.ice2.bpl
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/linear-algebra/solvers/cholesky/kernel2.bpl.ice2.bpl(237,2368): Error: invalid argument types (bv64 and bv32) to binary operator ==
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/linear-algebra/solvers/cholesky/kernel2.bpl.ice2.bpl(237,2410): Error: invalid type for argument 1 in application of BV64_SUB: bv32 (expected: bv64)
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/linear-algebra/solvers/cholesky/kernel2.bpl.ice2.bpl(237,2440): Error: invalid argument types (bv64 and bv32) to binary operator !=
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/linear-algebra/solvers/cholesky/kernel2.bpl.ice2.bpl(237,2462): Error: invalid argument types (bv64 and bv32) to binary operator ==
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/linear-algebra/solvers/cholesky/kernel2.bpl.ice2.bpl(237,2504): Error: invalid type for argument 1 in application of BV64_SUB: bv32 (expected: bv64)
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/linear-algebra/solvers/cholesky/kernel2.bpl.ice2.bpl(237,2534): Error: invalid argument types (bv64 and bv32) to binary operator !=
6 type checking errors detected in /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/linear-algebra/solvers/cholesky/kernel2.bpl.ice2.bpl
0.19user 0.33system 0:00.53elapsed 99%CPU (0avgtext+0avgdata 29240maxresident)k
72inputs+0outputs (1major+4364minor)pagefaults 0swaps
FILE:polybench/linear-algebra/solvers/cholesky/kernel2.bpl.ice2.bpl
#################
Wed May 12 03:45:32 UTC 2021
KEY=awinnow
OUTPUT=/root/Docker/winnow_gpu_timeout.txt
[TRACE] Using prover: /root/Docker/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/root/Docker/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a winnow
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/errorLimit:1
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/linear-algebra/solvers/cholesky/kernel4.bpl.ice2.bpl
--------------------
Parsing /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/linear-algebra/solvers/cholesky/kernel4.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /root/Docker/z3/bin/z3
#parameters: 44
Generating VC of $kernel4
Verifying $kernel4: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.324787
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/linear-algebra/solvers/cholesky/kernel4.bpl.ice2.bpl
Total learner time was 00:00:00.1189460
Verifying $kernel4: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool) : bool
{
  0 + (if b0000 then 0 else 17000) + (if b0001 then 0 else 17000) + (if b0002 then 0 else 17000) + (if b0003 then 0 else 17000) + (if b0004 then 0 else 17000) + (if b0005 then 0 else 17000) + (if b0006 then 0 else 17000) + (if b0007 then 0 else 17000) + (if b0008 then 0 else 17000) + (if b0009 then 0 else 17000) + (if b0010 then 0 else 17000) + (if b0011 then 0 else 17000) + (if b0012 then 0 else 17000) + (if b0013 then 0 else 17000) + (if b0014 then 0 else 17000) + (if b0015 then 0 else 17000) + (if b0016 then 0 else 17000) + (if b0017 then 0 else 17000) + (if b0018 then 0 else 17000) + (if b0019 then 0 else 17000) + (if b0020 then 0 else 17000) + (if b0021 then 0 else 17000) + (if b0022 then 0 else 17000) + (if b0023 then 0 else 17000) + (if b0024 then 0 else 17000) + (if b0025 then 0 else 17000) + (if b0026 then 0 else 17000) + (if b0027 then 0 else 17000) + (if b0028 then 0 else 17000) + (if b0029 then 0 else 17000) + (if b0030 then 0 else 17000) + (if b0031 then 0 else 17000) + (if b0032 then 0 else 17000) + (if b0033 then 0 else 17000) + (if b0034 then 0 else 17000) + (if b0035 then 0 else 17000) + (if b0036 then 0 else 17000) + (if b0037 then 0 else 17000) + (if b0038 then 0 else 17000) + (if b0039 then 0 else 17000) + (if b0040 then 0 else 17000) + (if b0041 then 0 else 17000) + (if b0042 then 0 else 17000) + (if b0043 then 0 else 17000) < 441
}
Added: my_inv:1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 5.623308
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/linear-algebra/solvers/cholesky/kernel4.bpl.ice2.bpl
Total learner time was 00:00:00.1187420
Verifying $kernel4: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool) : bool
{
  0 + (if b0000 then 0 else 17000) + (if b0001 then 0 else 17000) + (if b0003 then 0 else 17000) + (if b0004 then 0 else 17000) + (if b0005 then 0 else 17000) + (if b0006 then 0 else 17000) + (if b0007 then 0 else 17000) + (if b0008 then 0 else 17000) + (if b0009 then 0 else 17000) + (if b0010 then 0 else 17000) + (if b0011 then 0 else 17000) + (if b0012 then 0 else 17000) + (if b0013 then 0 else 17000) + (if b0014 then 0 else 17000) + (if b0015 then 0 else 17000) + (if b0016 then 0 else 17000) + (if b0017 then 0 else 17000) + (if b0018 then 0 else 17000) + (if b0019 then 0 else 17000) + (if b0020 then 0 else 17000) + (if b0021 then 0 else 17000) + (if b0022 then 0 else 17000) + (if b0023 then 0 else 17000) + (if b0024 then 0 else 17000) + (if b0025 then 0 else 17000) + (if b0026 then 0 else 17000) + (if b0027 then 0 else 17000) + (if b0028 then 0 else 17000) + (if b0029 then 0 else 17000) + (if b0030 then 0 else 17000) + (if b0031 then 0 else 17000) + (if b0032 then 0 else 17000) + (if b0033 then 0 else 17000) + (if b0034 then 0 else 17000) + (if b0035 then 0 else 17000) + (if b0036 then 0 else 17000) + (if b0037 then 0 else 17000) + (if b0038 then 0 else 17000) + (if b0039 then 0 else 17000) + (if b0040 then 0 else 17000) + (if b0041 then 0 else 17000) + (if b0042 then 0 else 17000) + (if b0043 then 0 else 17000) < 441
}
Prover Time taken = 6.82531
Added Horn clause: 0 && 0 && 0 => 2
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/linear-algebra/solvers/cholesky/kernel4.bpl.ice2.bpl
Total learner time was 00:00:00.1217850
Verifying $kernel4: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool) : bool
{
  0 + (if b0000 then 0 else 17000) + (if b0001 then 0 else 17000) + (if b0003 then 0 else 17000) + (if b0004 then 0 else 17000) + (if b0005 then 0 else 17000) + (if b0006 then 0 else 17000) + (if b0007 then 0 else 17000) + (if b0008 then 0 else 17000) + (if b0009 then 0 else 17000) + (if b0010 then 0 else 17000) + (if b0011 then 0 else 17000) + (if b0012 then 0 else 17000) + (if b0013 then 0 else 17000) + (if b0014 then 0 else 17000) + (if b0015 then 0 else 17000) + (if b0016 then 0 else 17000) + (if b0017 then 0 else 17000) + (if b0018 then 0 else 17000) + (if b0019 then 0 else 17000) + (if b0020 then 0 else 17000) + (if b0021 then 0 else 17000) + (if b0022 then 0 else 17000) + (if b0023 then 0 else 17000) + (if b0024 then 0 else 17000) + (if b0025 then 0 else 17000) + (if b0026 then 0 else 17000) + (if b0027 then 0 else 17000) + (if b0028 then 0 else 17000) + (if b0029 then 0 else 17000) + (if b0030 then 0 else 17000) + (if b0032 then 0 else 17000) + (if b0033 then 0 else 17000) + (if b0034 then 0 else 17000) + (if b0035 then 0 else 17000) + (if b0036 then 0 else 17000) + (if b0037 then 0 else 17000) + (if b0038 then 0 else 17000) + (if b0039 then 0 else 17000) + (if b0040 then 0 else 17000) + (if b0041 then 0 else 17000) + (if b0042 then 0 else 17000) + (if b0043 then 0 else 17000) < 441
}
Prover Time taken = 7.678369
Added Horn clause: 0 => 3
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/linear-algebra/solvers/cholesky/kernel4.bpl.ice2.bpl
Total learner time was 00:00:00.1187710
Verifying $kernel4: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool) : bool
{
  0 + (if b0000 then 0 else 17000) + (if b0001 then 0 else 17000) + (if b0003 then 0 else 17000) + (if b0004 then 0 else 17000) + (if b0005 then 0 else 17000) + (if b0006 then 0 else 17000) + (if b0007 then 0 else 17000) + (if b0008 then 0 else 17000) + (if b0009 then 0 else 17000) + (if b0010 then 0 else 17000) + (if b0012 then 0 else 17000) + (if b0013 then 0 else 17000) + (if b0014 then 0 else 17000) + (if b0015 then 0 else 17000) + (if b0016 then 0 else 17000) + (if b0017 then 0 else 17000) + (if b0018 then 0 else 17000) + (if b0019 then 0 else 17000) + (if b0020 then 0 else 17000) + (if b0021 then 0 else 17000) + (if b0022 then 0 else 17000) + (if b0023 then 0 else 17000) + (if b0024 then 0 else 17000) + (if b0025 then 0 else 17000) + (if b0026 then 0 else 17000) + (if b0027 then 0 else 17000) + (if b0028 then 0 else 17000) + (if b0029 then 0 else 17000) + (if b0030 then 0 else 17000) + (if b0032 then 0 else 17000) + (if b0033 then 0 else 17000) + (if b0034 then 0 else 17000) + (if b0035 then 0 else 17000) + (if b0036 then 0 else 17000) + (if b0037 then 0 else 17000) + (if b0038 then 0 else 17000) + (if b0039 then 0 else 17000) + (if b0040 then 0 else 17000) + (if b0041 then 0 else 17000) + (if b0042 then 0 else 17000) + (if b0043 then 0 else 17000) < 441
}
Prover Time taken = 7.085903
Added Horn clause: 0 => 4
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/linear-algebra/solvers/cholesky/kernel4.bpl.ice2.bpl
Total learner time was 00:00:00.1199440
Verifying $kernel4: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool) : bool
{
  0 + (if b0000 then 0 else 17000) + (if b0001 then 0 else 17000) + (if b0003 then 0 else 17000) + (if b0004 then 0 else 17000) + (if b0005 then 0 else 17000) + (if b0006 then 0 else 17000) + (if b0007 then 0 else 17000) + (if b0008 then 0 else 17000) + (if b0009 then 0 else 17000) + (if b0010 then 0 else 17000) + (if b0012 then 0 else 17000) + (if b0013 then 0 else 17000) + (if b0014 then 0 else 17000) + (if b0015 then 0 else 17000) + (if b0016 then 0 else 17000) + (if b0017 then 0 else 17000) + (if b0019 then 0 else 17000) + (if b0020 then 0 else 17000) + (if b0021 then 0 else 17000) + (if b0022 then 0 else 17000) + (if b0023 then 0 else 17000) + (if b0024 then 0 else 17000) + (if b0025 then 0 else 17000) + (if b0026 then 0 else 17000) + (if b0027 then 0 else 17000) + (if b0028 then 0 else 17000) + (if b0029 then 0 else 17000) + (if b0030 then 0 else 17000) + (if b0032 then 0 else 17000) + (if b0033 then 0 else 17000) + (if b0034 then 0 else 17000) + (if b0035 then 0 else 17000) + (if b0036 then 0 else 17000) + (if b0037 then 0 else 17000) + (if b0038 then 0 else 17000) + (if b0039 then 0 else 17000) + (if b0040 then 0 else 17000) + (if b0041 then 0 else 17000) + (if b0042 then 0 else 17000) + (if b0043 then 0 else 17000) < 441
}
Prover Time taken = 7.973105
Added Horn clause: 0 => 5
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/linear-algebra/solvers/cholesky/kernel4.bpl.ice2.bpl
Total learner time was 00:00:00.1184470
Verifying $kernel4: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool) : bool
{
  0 + (if b0000 then 0 else 17000) + (if b0001 then 0 else 17000) + (if b0003 then 0 else 17000) + (if b0004 then 0 else 17000) + (if b0005 then 0 else 17000) + (if b0006 then 0 else 17000) + (if b0007 then 0 else 17000) + (if b0008 then 0 else 17000) + (if b0010 then 0 else 17000) + (if b0012 then 0 else 17000) + (if b0013 then 0 else 17000) + (if b0014 then 0 else 17000) + (if b0015 then 0 else 17000) + (if b0016 then 0 else 17000) + (if b0017 then 0 else 17000) + (if b0019 then 0 else 17000) + (if b0020 then 0 else 17000) + (if b0021 then 0 else 17000) + (if b0022 then 0 else 17000) + (if b0023 then 0 else 17000) + (if b0024 then 0 else 17000) + (if b0025 then 0 else 17000) + (if b0026 then 0 else 17000) + (if b0027 then 0 else 17000) + (if b0028 then 0 else 17000) + (if b0029 then 0 else 17000) + (if b0030 then 0 else 17000) + (if b0032 then 0 else 17000) + (if b0033 then 0 else 17000) + (if b0034 then 0 else 17000) + (if b0035 then 0 else 17000) + (if b0036 then 0 else 17000) + (if b0037 then 0 else 17000) + (if b0038 then 0 else 17000) + (if b0039 then 0 else 17000) + (if b0040 then 0 else 17000) + (if b0041 then 0 else 17000) + (if b0042 then 0 else 17000) + (if b0043 then 0 else 17000) < 441
}
Prover Time taken = 11.104372
Added Horn clause: 0 && 0 && 4 => 6
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/linear-algebra/solvers/cholesky/kernel4.bpl.ice2.bpl
Total learner time was 00:00:00.1197060
Verifying $kernel4: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool) : bool
{
  0 + (if b0000 then 0 else 17000) + (if b0001 then 0 else 17000) + (if b0003 then 0 else 17000) + (if b0004 then 0 else 17000) + (if b0005 then 0 else 17000) + (if b0006 then 0 else 17000) + (if b0007 then 0 else 17000) + (if b0008 then 0 else 17000) + (if b0010 then 0 else 17000) + (if b0012 then 0 else 17000) + (if b0013 then 0 else 17000) + (if b0014 then 0 else 17000) + (if b0015 then 0 else 17000) + (if b0016 then 0 else 17000) + (if b0017 then 0 else 17000) + (if b0019 then 0 else 17000) + (if b0020 then 0 else 17000) + (if b0021 then 0 else 17000) + (if b0022 then 0 else 17000) + (if b0023 then 0 else 17000) + (if b0024 then 0 else 17000) + (if b0025 then 0 else 17000) + (if b0026 then 0 else 17000) + (if b0027 then 0 else 17000) + (if b0028 then 0 else 17000) + (if b0029 then 0 else 17000) + (if b0032 then 0 else 17000) + (if b0033 then 0 else 17000) + (if b0034 then 0 else 17000) + (if b0035 then 0 else 17000) + (if b0036 then 0 else 17000) + (if b0037 then 0 else 17000) + (if b0038 then 0 else 17000) + (if b0039 then 0 else 17000) + (if b0040 then 0 else 17000) + (if b0041 then 0 else 17000) + (if b0042 then 0 else 17000) + (if b0043 then 0 else 17000) < 441
}
Prover Time taken = 11.589132
Added Horn clause: 0 => 7
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/linear-algebra/solvers/cholesky/kernel4.bpl.ice2.bpl
Total learner time was 00:00:00.1184870
Verifying $kernel4: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool) : bool
{
  0 + (if b0000 then 0 else 17000) + (if b0001 then 0 else 17000) + (if b0003 then 0 else 17000) + (if b0004 then 0 else 17000) + (if b0005 then 0 else 17000) + (if b0006 then 0 else 17000) + (if b0007 then 0 else 17000) + (if b0008 then 0 else 17000) + (if b0010 then 0 else 17000) + (if b0012 then 0 else 17000) + (if b0013 then 0 else 17000) + (if b0014 then 0 else 17000) + (if b0015 then 0 else 17000) + (if b0016 then 0 else 17000) + (if b0017 then 0 else 17000) + (if b0020 then 0 else 17000) + (if b0021 then 0 else 17000) + (if b0022 then 0 else 17000) + (if b0023 then 0 else 17000) + (if b0024 then 0 else 17000) + (if b0025 then 0 else 17000) + (if b0026 then 0 else 17000) + (if b0027 then 0 else 17000) + (if b0028 then 0 else 17000) + (if b0029 then 0 else 17000) + (if b0032 then 0 else 17000) + (if b0033 then 0 else 17000) + (if b0034 then 0 else 17000) + (if b0035 then 0 else 17000) + (if b0036 then 0 else 17000) + (if b0037 then 0 else 17000) + (if b0038 then 0 else 17000) + (if b0039 then 0 else 17000) + (if b0040 then 0 else 17000) + (if b0041 then 0 else 17000) + (if b0042 then 0 else 17000) + (if b0043 then 0 else 17000) < 441
}
Prover Time taken = 9.207543
Added Horn clause: 0 && 0 && 7 => 8
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/linear-algebra/solvers/cholesky/kernel4.bpl.ice2.bpl
Total learner time was 00:00:00.1195250
Verifying $kernel4: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool) : bool
{
  0 + (if b0000 then 0 else 17000) + (if b0001 then 0 else 17000) + (if b0003 then 0 else 17000) + (if b0004 then 0 else 17000) + (if b0005 then 0 else 17000) + (if b0006 then 0 else 17000) + (if b0007 then 0 else 17000) + (if b0008 then 0 else 17000) + (if b0010 then 0 else 17000) + (if b0012 then 0 else 17000) + (if b0013 then 0 else 17000) + (if b0014 then 0 else 17000) + (if b0015 then 0 else 17000) + (if b0016 then 0 else 17000) + (if b0017 then 0 else 17000) + (if b0020 then 0 else 17000) + (if b0021 then 0 else 17000) + (if b0022 then 0 else 17000) + (if b0023 then 0 else 17000) + (if b0024 then 0 else 17000) + (if b0025 then 0 else 17000) + (if b0026 then 0 else 17000) + (if b0027 then 0 else 17000) + (if b0028 then 0 else 17000) + (if b0029 then 0 else 17000) + (if b0034 then 0 else 17000) + (if b0035 then 0 else 17000) + (if b0036 then 0 else 17000) + (if b0037 then 0 else 17000) + (if b0038 then 0 else 17000) + (if b0039 then 0 else 17000) + (if b0040 then 0 else 17000) + (if b0041 then 0 else 17000) + (if b0042 then 0 else 17000) + (if b0043 then 0 else 17000) < 441
}
Prover Time taken = 8.935172
Added Horn clause: 0 && 0 && 0 && 0 && 0 => 9
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/linear-algebra/solvers/cholesky/kernel4.bpl.ice2.bpl
Total learner time was 00:00:00.1227930
Verifying $kernel4: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool) : bool
{
  0 + (if b0000 then 0 else 17000) + (if b0001 then 0 else 17000) + (if b0004 then 0 else 17000) + (if b0006 then 0 else 17000) + (if b0007 then 0 else 17000) + (if b0008 then 0 else 17000) + (if b0010 then 0 else 17000) + (if b0012 then 0 else 17000) + (if b0013 then 0 else 17000) + (if b0014 then 0 else 17000) + (if b0015 then 0 else 17000) + (if b0016 then 0 else 17000) + (if b0017 then 0 else 17000) + (if b0020 then 0 else 17000) + (if b0021 then 0 else 17000) + (if b0022 then 0 else 17000) + (if b0023 then 0 else 17000) + (if b0024 then 0 else 17000) + (if b0025 then 0 else 17000) + (if b0026 then 0 else 17000) + (if b0027 then 0 else 17000) + (if b0028 then 0 else 17000) + (if b0029 then 0 else 17000) + (if b0034 then 0 else 17000) + (if b0035 then 0 else 17000) + (if b0036 then 0 else 17000) + (if b0037 then 0 else 17000) + (if b0038 then 0 else 17000) + (if b0039 then 0 else 17000) + (if b0040 then 0 else 17000) + (if b0041 then 0 else 17000) + (if b0042 then 0 else 17000) + (if b0043 then 0 else 17000) < 441
}
Prover Time taken = 21.403792
Added Horn clause: 0 && 0 && 10 && 0 && 0 => 11
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/linear-algebra/solvers/cholesky/kernel4.bpl.ice2.bpl
Total learner time was 00:00:00.1206930
Verifying $kernel4: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool) : bool
{
  0 + (if b0000 then 0 else 17000) + (if b0001 then 0 else 17000) + (if b0004 then 0 else 17000) + (if b0006 then 0 else 17000) + (if b0007 then 0 else 17000) + (if b0008 then 0 else 17000) + (if b0010 then 0 else 17000) + (if b0013 then 0 else 17000) + (if b0015 then 0 else 17000) + (if b0016 then 0 else 17000) + (if b0017 then 0 else 17000) + (if b0020 then 0 else 17000) + (if b0021 then 0 else 17000) + (if b0022 then 0 else 17000) + (if b0023 then 0 else 17000) + (if b0024 then 0 else 17000) + (if b0025 then 0 else 17000) + (if b0026 then 0 else 17000) + (if b0027 then 0 else 17000) + (if b0028 then 0 else 17000) + (if b0029 then 0 else 17000) + (if b0034 then 0 else 17000) + (if b0035 then 0 else 17000) + (if b0036 then 0 else 17000) + (if b0037 then 0 else 17000) + (if b0038 then 0 else 17000) + (if b0039 then 0 else 17000) + (if b0040 then 0 else 17000) + (if b0041 then 0 else 17000) + (if b0042 then 0 else 17000) + (if b0043 then 0 else 17000) < 441
}
Prover Time taken = 17.733114
Added Horn clause: 0 && 0 && 5 => 12
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/linear-algebra/solvers/cholesky/kernel4.bpl.ice2.bpl
Total learner time was 00:00:00.1201730
Verifying $kernel4: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool) : bool
{
  0 + (if b0000 then 0 else 17000) + (if b0001 then 0 else 17000) + (if b0004 then 0 else 17000) + (if b0006 then 0 else 17000) + (if b0007 then 0 else 17000) + (if b0008 then 0 else 17000) + (if b0010 then 0 else 17000) + (if b0013 then 0 else 17000) + (if b0015 then 0 else 17000) + (if b0016 then 0 else 17000) + (if b0017 then 0 else 17000) + (if b0020 then 0 else 17000) + (if b0022 then 0 else 17000) + (if b0024 then 0 else 17000) + (if b0025 then 0 else 17000) + (if b0026 then 0 else 17000) + (if b0027 then 0 else 17000) + (if b0028 then 0 else 17000) + (if b0029 then 0 else 17000) + (if b0034 then 0 else 17000) + (if b0035 then 0 else 17000) + (if b0036 then 0 else 17000) + (if b0037 then 0 else 17000) + (if b0038 then 0 else 17000) + (if b0039 then 0 else 17000) + (if b0040 then 0 else 17000) + (if b0041 then 0 else 17000) + (if b0042 then 0 else 17000) + (if b0043 then 0 else 17000) < 441
}
Prover Time taken = 20.453222
Added Horn clause: 0 && 0 && 10 && 0 && 13 => 14
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/linear-algebra/solvers/cholesky/kernel4.bpl.ice2.bpl
Total learner time was 00:00:00.1205750
Verifying $kernel4: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool) : bool
{
  0 + (if b0000 then 0 else 17000) + (if b0001 then 0 else 17000) + (if b0004 then 0 else 17000) + (if b0006 then 0 else 17000) + (if b0007 then 0 else 17000) + (if b0008 then 0 else 17000) + (if b0010 then 0 else 17000) + (if b0013 then 0 else 17000) + (if b0015 then 0 else 17000) + (if b0016 then 0 else 17000) + (if b0017 then 0 else 17000) + (if b0020 then 0 else 17000) + (if b0022 then 0 else 17000) + (if b0025 then 0 else 17000) + (if b0027 then 0 else 17000) + (if b0028 then 0 else 17000) + (if b0029 then 0 else 17000) + (if b0034 then 0 else 17000) + (if b0035 then 0 else 17000) + (if b0036 then 0 else 17000) + (if b0037 then 0 else 17000) + (if b0038 then 0 else 17000) + (if b0039 then 0 else 17000) + (if b0040 then 0 else 17000) + (if b0041 then 0 else 17000) + (if b0042 then 0 else 17000) + (if b0043 then 0 else 17000) < 441
}
Command exited with non-zero status 124
3.05user 3.75system 19:58.62elapsed 0%CPU (0avgtext+0avgdata 62944maxresident)k
168inputs+488outputs (1major+44124minor)pagefaults 0swaps
FILE:polybench/linear-algebra/solvers/cholesky/kernel4.bpl.ice2.bpl
#################
Wed May 12 04:05:30 UTC 2021
KEY=awinnow
OUTPUT=/root/Docker/winnow_gpu_timeout.txt
[TRACE] Using prover: /root/Docker/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/root/Docker/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a winnow
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/errorLimit:1
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/linear-algebra/solvers/gramschmidt/kernel2.bpl.ice2.bpl
--------------------
Parsing /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/linear-algebra/solvers/gramschmidt/kernel2.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /root/Docker/z3/bin/z3
#parameters: 47
Generating VC of $kernel2
Verifying $kernel2: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.402509
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/linear-algebra/solvers/gramschmidt/kernel2.bpl.ice2.bpl
Total learner time was 00:00:00.1184390
Verifying $kernel2: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool) : bool
{
  0 + (if b0000 then 0 else 18000) + (if b0001 then 0 else 18000) + (if b0002 then 0 else 18000) + (if b0003 then 0 else 18000) + (if b0004 then 0 else 18000) + (if b0005 then 0 else 18000) + (if b0006 then 0 else 18000) + (if b0007 then 0 else 18000) + (if b0008 then 0 else 18000) + (if b0009 then 0 else 18000) + (if b0010 then 0 else 18000) + (if b0011 then 0 else 18000) + (if b0012 then 0 else 18000) + (if b0013 then 0 else 18000) + (if b0014 then 0 else 18000) + (if b0015 then 0 else 18000) + (if b0016 then 0 else 18000) + (if b0017 then 0 else 18000) + (if b0018 then 0 else 18000) + (if b0019 then 0 else 18000) + (if b0020 then 0 else 18000) + (if b0021 then 0 else 18000) + (if b0022 then 0 else 18000) + (if b0023 then 0 else 18000) + (if b0024 then 0 else 18000) + (if b0025 then 0 else 18000) + (if b0026 then 0 else 18000) + (if b0027 then 0 else 18000) + (if b0028 then 0 else 18000) + (if b0029 then 0 else 18000) + (if b0030 then 0 else 18000) + (if b0031 then 0 else 18000) + (if b0032 then 0 else 18000) + (if b0033 then 0 else 18000) + (if b0034 then 0 else 18000) + (if b0035 then 0 else 18000) + (if b0036 then 0 else 18000) + (if b0037 then 0 else 18000) + (if b0038 then 0 else 18000) + (if b0039 then 0 else 18000) + (if b0040 then 0 else 18000) + (if b0041 then 0 else 18000) + (if b0042 then 0 else 18000) + (if b0043 then 0 else 18000) + (if b0044 then 0 else 18000) + (if b0045 then 0 else 18000) + (if b0046 then 0 else 18000) < 441
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,1,1,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.932269
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/linear-algebra/solvers/gramschmidt/kernel2.bpl.ice2.bpl
Total learner time was 00:00:00.1197350
Verifying $kernel2: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool) : bool
{
  0 + (if b0000 then 0 else 18000) + (if b0001 then 0 else 18000) + (if b0002 then 0 else 18000) + (if b0003 then 0 else 18000) + (if b0004 then 0 else 18000) + (if b0005 then 0 else 18000) + (if b0006 then 0 else 18000) + (if b0007 then 0 else 18000) + (if b0008 then 0 else 18000) + (if b0009 then 0 else 18000) + (if b0010 then 0 else 18000) + (if b0011 then 0 else 18000) + (if b0012 then 0 else 18000) + (if b0013 then 0 else 18000) + (if b0014 then 0 else 18000) + (if b0015 then 0 else 18000) + (if b0016 then 0 else 18000) + (if b0017 then 0 else 18000) + (if b0018 then 0 else 18000) + (if b0019 then 0 else 18000) + (if b0020 then 0 else 18000) + (if b0021 then 0 else 18000) + (if b0022 then 0 else 18000) + (if b0023 then 0 else 18000) + (if b0024 then 0 else 18000) + (if b0025 then 0 else 18000) + (if b0026 then 0 else 18000) + (if b0030 then 0 else 18000) + (if b0031 then 0 else 18000) + (if b0038 then 0 else 18000) + (if b0039 then 0 else 18000) + (if b0040 then 0 else 18000) + (if b0041 then 0 else 18000) + (if b0042 then 0 else 18000) + (if b0043 then 0 else 18000) + (if b0044 then 0 else 18000) + (if b0045 then 0 else 18000) + (if b0046 then 0 else 18000) < 441
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,0,1,1,1,1,1,1,1,1,0,0,1,0,1,1,1,1: positive
Prover Time taken = 0.850212
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/linear-algebra/solvers/gramschmidt/kernel2.bpl.ice2.bpl
Total learner time was 00:00:00.1235100
Verifying $kernel2: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool) : bool
{
  0 + (if b0000 then 0 else 18000) + (if b0001 then 0 else 18000) + (if b0002 then 0 else 18000) + (if b0003 then 0 else 18000) + (if b0004 then 0 else 18000) + (if b0005 then 0 else 18000) + (if b0006 then 0 else 18000) + (if b0007 then 0 else 18000) + (if b0008 then 0 else 18000) + (if b0009 then 0 else 18000) + (if b0010 then 0 else 18000) + (if b0011 then 0 else 18000) + (if b0012 then 0 else 18000) + (if b0013 then 0 else 18000) + (if b0014 then 0 else 18000) + (if b0015 then 0 else 18000) + (if b0016 then 0 else 18000) + (if b0017 then 0 else 18000) + (if b0018 then 0 else 18000) + (if b0019 then 0 else 18000) + (if b0020 then 0 else 18000) + (if b0021 then 0 else 18000) + (if b0022 then 0 else 18000) + (if b0023 then 0 else 18000) + (if b0024 then 0 else 18000) + (if b0025 then 0 else 18000) + (if b0026 then 0 else 18000) + (if b0031 then 0 else 18000) + (if b0038 then 0 else 18000) + (if b0041 then 0 else 18000) + (if b0043 then 0 else 18000) + (if b0044 then 0 else 18000) + (if b0045 then 0 else 18000) + (if b0046 then 0 else 18000) < 441
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1: positive
Prover Time taken = 1.387847
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/linear-algebra/solvers/gramschmidt/kernel2.bpl.ice2.bpl
Total learner time was 00:00:00.1232230
Verifying $kernel2: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool) : bool
{
  0 + (if b0000 then 0 else 18000) + (if b0001 then 0 else 18000) + (if b0002 then 0 else 18000) + (if b0003 then 0 else 18000) + (if b0004 then 0 else 18000) + (if b0005 then 0 else 18000) + (if b0006 then 0 else 18000) + (if b0007 then 0 else 18000) + (if b0008 then 0 else 18000) + (if b0009 then 0 else 18000) + (if b0010 then 0 else 18000) + (if b0011 then 0 else 18000) + (if b0012 then 0 else 18000) + (if b0013 then 0 else 18000) + (if b0014 then 0 else 18000) + (if b0015 then 0 else 18000) + (if b0016 then 0 else 18000) + (if b0017 then 0 else 18000) + (if b0018 then 0 else 18000) + (if b0019 then 0 else 18000) + (if b0020 then 0 else 18000) + (if b0021 then 0 else 18000) + (if b0022 then 0 else 18000) + (if b0023 then 0 else 18000) + (if b0024 then 0 else 18000) + (if b0025 then 0 else 18000) + (if b0026 then 0 else 18000) + (if b0031 then 0 else 18000) + (if b0038 then 0 else 18000) + (if b0043 then 0 else 18000) + (if b0044 then 0 else 18000) + (if b0045 then 0 else 18000) + (if b0046 then 0 else 18000) < 441
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1: positive
Prover Time taken = 1.340288
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/linear-algebra/solvers/gramschmidt/kernel2.bpl.ice2.bpl
Total learner time was 00:00:00.1232040
Verifying $kernel2: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool) : bool
{
  0 + (if b0000 then 0 else 18000) + (if b0001 then 0 else 18000) + (if b0002 then 0 else 18000) + (if b0003 then 0 else 18000) + (if b0004 then 0 else 18000) + (if b0005 then 0 else 18000) + (if b0006 then 0 else 18000) + (if b0007 then 0 else 18000) + (if b0008 then 0 else 18000) + (if b0009 then 0 else 18000) + (if b0010 then 0 else 18000) + (if b0011 then 0 else 18000) + (if b0012 then 0 else 18000) + (if b0013 then 0 else 18000) + (if b0014 then 0 else 18000) + (if b0015 then 0 else 18000) + (if b0016 then 0 else 18000) + (if b0017 then 0 else 18000) + (if b0018 then 0 else 18000) + (if b0019 then 0 else 18000) + (if b0020 then 0 else 18000) + (if b0021 then 0 else 18000) + (if b0022 then 0 else 18000) + (if b0023 then 0 else 18000) + (if b0024 then 0 else 18000) + (if b0025 then 0 else 18000) + (if b0026 then 0 else 18000) + (if b0031 then 0 else 18000) + (if b0043 then 0 else 18000) + (if b0044 then 0 else 18000) + (if b0045 then 0 else 18000) + (if b0046 then 0 else 18000) < 441
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 1.031629
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/linear-algebra/solvers/gramschmidt/kernel2.bpl.ice2.bpl
Total learner time was 00:00:00.1187540
Verifying $kernel2: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool) : bool
{
  0 + (if b0000 then 0 else 18000) + (if b0001 then 0 else 18000) + (if b0002 then 0 else 18000) + (if b0003 then 0 else 18000) + (if b0004 then 0 else 18000) + (if b0005 then 0 else 18000) + (if b0006 then 0 else 18000) + (if b0007 then 0 else 18000) + (if b0008 then 0 else 18000) + (if b0009 then 0 else 18000) + (if b0010 then 0 else 18000) + (if b0011 then 0 else 18000) + (if b0012 then 0 else 18000) + (if b0013 then 0 else 18000) + (if b0014 then 0 else 18000) + (if b0015 then 0 else 18000) + (if b0016 then 0 else 18000) + (if b0017 then 0 else 18000) + (if b0018 then 0 else 18000) + (if b0019 then 0 else 18000) + (if b0020 then 0 else 18000) + (if b0021 then 0 else 18000) + (if b0022 then 0 else 18000) + (if b0023 then 0 else 18000) + (if b0024 then 0 else 18000) + (if b0025 then 0 else 18000) + (if b0026 then 0 else 18000) + (if b0043 then 0 else 18000) + (if b0044 then 0 else 18000) + (if b0045 then 0 else 18000) + (if b0046 then 0 else 18000) < 441
}
Prover Time taken = 1.836613
Added Horn clause: 6 && 0 && 0 => 7
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/linear-algebra/solvers/gramschmidt/kernel2.bpl.ice2.bpl
Total learner time was 00:00:00.1205960
Verifying $kernel2: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool) : bool
{
  0 + (if b0000 then 0 else 18000) + (if b0001 then 0 else 18000) + (if b0002 then 0 else 18000) + (if b0003 then 0 else 18000) + (if b0005 then 0 else 18000) + (if b0007 then 0 else 18000) + (if b0008 then 0 else 18000) + (if b0009 then 0 else 18000) + (if b0010 then 0 else 18000) + (if b0011 then 0 else 18000) + (if b0012 then 0 else 18000) + (if b0013 then 0 else 18000) + (if b0014 then 0 else 18000) + (if b0015 then 0 else 18000) + (if b0016 then 0 else 18000) + (if b0017 then 0 else 18000) + (if b0018 then 0 else 18000) + (if b0019 then 0 else 18000) + (if b0020 then 0 else 18000) + (if b0021 then 0 else 18000) + (if b0022 then 0 else 18000) + (if b0023 then 0 else 18000) + (if b0024 then 0 else 18000) + (if b0025 then 0 else 18000) + (if b0026 then 0 else 18000) + (if b0043 then 0 else 18000) + (if b0044 then 0 else 18000) + (if b0045 then 0 else 18000) + (if b0046 then 0 else 18000) < 441
}
Prover Time taken = 1.745292
Added Horn clause: 8 && 0 && 0 => 9
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/linear-algebra/solvers/gramschmidt/kernel2.bpl.ice2.bpl
Total learner time was 00:00:00.1226890
Verifying $kernel2: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool) : bool
{
  0 + (if b0000 then 0 else 18000) + (if b0001 then 0 else 18000) + (if b0003 then 0 else 18000) + (if b0005 then 0 else 18000) + (if b0007 then 0 else 18000) + (if b0008 then 0 else 18000) + (if b0009 then 0 else 18000) + (if b0010 then 0 else 18000) + (if b0011 then 0 else 18000) + (if b0012 then 0 else 18000) + (if b0013 then 0 else 18000) + (if b0014 then 0 else 18000) + (if b0015 then 0 else 18000) + (if b0016 then 0 else 18000) + (if b0017 then 0 else 18000) + (if b0018 then 0 else 18000) + (if b0019 then 0 else 18000) + (if b0020 then 0 else 18000) + (if b0021 then 0 else 18000) + (if b0022 then 0 else 18000) + (if b0023 then 0 else 18000) + (if b0024 then 0 else 18000) + (if b0026 then 0 else 18000) + (if b0043 then 0 else 18000) + (if b0044 then 0 else 18000) + (if b0045 then 0 else 18000) + (if b0046 then 0 else 18000) < 441
}
Prover Time taken = 1.670447
Added Horn clause: 10 && 0 => 11
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/linear-algebra/solvers/gramschmidt/kernel2.bpl.ice2.bpl
Total learner time was 00:00:00.1206450
Verifying $kernel2: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool) : bool
{
  0 + (if b0000 then 0 else 18000) + (if b0001 then 0 else 18000) + (if b0003 then 0 else 18000) + (if b0005 then 0 else 18000) + (if b0007 then 0 else 18000) + (if b0008 then 0 else 18000) + (if b0009 then 0 else 18000) + (if b0010 then 0 else 18000) + (if b0011 then 0 else 18000) + (if b0012 then 0 else 18000) + (if b0013 then 0 else 18000) + (if b0014 then 0 else 18000) + (if b0015 then 0 else 18000) + (if b0016 then 0 else 18000) + (if b0017 then 0 else 18000) + (if b0019 then 0 else 18000) + (if b0020 then 0 else 18000) + (if b0021 then 0 else 18000) + (if b0022 then 0 else 18000) + (if b0023 then 0 else 18000) + (if b0024 then 0 else 18000) + (if b0026 then 0 else 18000) + (if b0043 then 0 else 18000) + (if b0044 then 0 else 18000) + (if b0045 then 0 else 18000) + (if b0046 then 0 else 18000) < 441
}
Prover Time taken = 3.252985
Added Horn clause: 10 && 0 && 0 => 12
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/linear-algebra/solvers/gramschmidt/kernel2.bpl.ice2.bpl
Total learner time was 00:00:00.1203280
Verifying $kernel2: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool) : bool
{
  0 + (if b0000 then 0 else 18000) + (if b0001 then 0 else 18000) + (if b0003 then 0 else 18000) + (if b0005 then 0 else 18000) + (if b0007 then 0 else 18000) + (if b0008 then 0 else 18000) + (if b0009 then 0 else 18000) + (if b0010 then 0 else 18000) + (if b0012 then 0 else 18000) + (if b0014 then 0 else 18000) + (if b0015 then 0 else 18000) + (if b0016 then 0 else 18000) + (if b0017 then 0 else 18000) + (if b0019 then 0 else 18000) + (if b0020 then 0 else 18000) + (if b0021 then 0 else 18000) + (if b0022 then 0 else 18000) + (if b0023 then 0 else 18000) + (if b0024 then 0 else 18000) + (if b0026 then 0 else 18000) + (if b0043 then 0 else 18000) + (if b0044 then 0 else 18000) + (if b0045 then 0 else 18000) + (if b0046 then 0 else 18000) < 441
}
Prover Time taken = 2.072799
Added Horn clause: 10 && 12 && 11 => 13
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/linear-algebra/solvers/gramschmidt/kernel2.bpl.ice2.bpl
Total learner time was 00:00:00.1220520
Verifying $kernel2: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool) : bool
{
  0 + (if b0000 then 0 else 18000) + (if b0001 then 0 else 18000) + (if b0003 then 0 else 18000) + (if b0005 then 0 else 18000) + (if b0007 then 0 else 18000) + (if b0008 then 0 else 18000) + (if b0009 then 0 else 18000) + (if b0010 then 0 else 18000) + (if b0012 then 0 else 18000) + (if b0014 then 0 else 18000) + (if b0015 then 0 else 18000) + (if b0016 then 0 else 18000) + (if b0017 then 0 else 18000) + (if b0020 then 0 else 18000) + (if b0022 then 0 else 18000) + (if b0023 then 0 else 18000) + (if b0024 then 0 else 18000) + (if b0026 then 0 else 18000) + (if b0043 then 0 else 18000) + (if b0044 then 0 else 18000) + (if b0045 then 0 else 18000) + (if b0046 then 0 else 18000) < 441
}
Prover Time taken = 4.134181
Added Horn clause: 10 && 12 && 0 => 14
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/linear-algebra/solvers/gramschmidt/kernel2.bpl.ice2.bpl
Total learner time was 00:00:00.1196430
Verifying $kernel2: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool) : bool
{
  0 + (if b0000 then 0 else 18000) + (if b0001 then 0 else 18000) + (if b0003 then 0 else 18000) + (if b0005 then 0 else 18000) + (if b0007 then 0 else 18000) + (if b0008 then 0 else 18000) + (if b0009 then 0 else 18000) + (if b0010 then 0 else 18000) + (if b0012 then 0 else 18000) + (if b0014 then 0 else 18000) + (if b0015 then 0 else 18000) + (if b0016 then 0 else 18000) + (if b0017 then 0 else 18000) + (if b0020 then 0 else 18000) + (if b0022 then 0 else 18000) + (if b0023 then 0 else 18000) + (if b0024 then 0 else 18000) + (if b0026 then 0 else 18000) + (if b0043 then 0 else 18000) + (if b0045 then 0 else 18000) + (if b0046 then 0 else 18000) < 441
}
Prover Time taken = 4.179578
Added Horn clause: 10 && 0 && 0 => 15
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/linear-algebra/solvers/gramschmidt/kernel2.bpl.ice2.bpl
Total learner time was 00:00:00.1237260
Verifying $kernel2: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool) : bool
{
  0 + (if b0000 then 0 else 18000) + (if b0001 then 0 else 18000) + (if b0003 then 0 else 18000) + (if b0005 then 0 else 18000) + (if b0007 then 0 else 18000) + (if b0008 then 0 else 18000) + (if b0009 then 0 else 18000) + (if b0010 then 0 else 18000) + (if b0012 then 0 else 18000) + (if b0014 then 0 else 18000) + (if b0015 then 0 else 18000) + (if b0016 then 0 else 18000) + (if b0017 then 0 else 18000) + (if b0020 then 0 else 18000) + (if b0022 then 0 else 18000) + (if b0023 then 0 else 18000) + (if b0024 then 0 else 18000) + (if b0026 then 0 else 18000) + (if b0045 then 0 else 18000) + (if b0046 then 0 else 18000) < 441
}
Command exited with non-zero status 124
2.77user 3.56system 19:58.61elapsed 0%CPU (0avgtext+0avgdata 57944maxresident)k
144inputs+424outputs (1major+41022minor)pagefaults 0swaps
FILE:polybench/linear-algebra/solvers/gramschmidt/kernel2.bpl.ice2.bpl
#################
Wed May 12 04:25:29 UTC 2021
KEY=awinnow
OUTPUT=/root/Docker/winnow_gpu_timeout.txt
[TRACE] Using prover: /root/Docker/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/root/Docker/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a winnow
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/errorLimit:1
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/linear-algebra/solvers/gramschmidt/kernel3.bpl.ice2.bpl
--------------------
Parsing /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/linear-algebra/solvers/gramschmidt/kernel3.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /root/Docker/z3/bin/z3
#parameters: 52
Generating VC of $kernel3
Verifying $kernel3: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.569956
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/linear-algebra/solvers/gramschmidt/kernel3.bpl.ice2.bpl
Total learner time was 00:00:00.1250330
Verifying $kernel3: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool) : bool
{
  0 + (if b0000 then 0 else 20000) + (if b0001 then 0 else 20000) + (if b0002 then 0 else 20000) + (if b0003 then 0 else 20000) + (if b0004 then 0 else 20000) + (if b0005 then 0 else 20000) + (if b0006 then 0 else 20000) + (if b0007 then 0 else 20000) + (if b0008 then 0 else 20000) + (if b0009 then 0 else 20000) + (if b0010 then 0 else 20000) + (if b0011 then 0 else 20000) + (if b0012 then 0 else 20000) + (if b0013 then 0 else 20000) + (if b0014 then 0 else 20000) + (if b0015 then 0 else 20000) + (if b0016 then 0 else 20000) + (if b0017 then 0 else 20000) + (if b0018 then 0 else 20000) + (if b0019 then 0 else 20000) + (if b0020 then 0 else 20000) + (if b0021 then 0 else 20000) + (if b0022 then 0 else 20000) + (if b0023 then 0 else 20000) + (if b0024 then 0 else 20000) + (if b0025 then 0 else 20000) + (if b0026 then 0 else 20000) + (if b0027 then 0 else 20000) + (if b0028 then 0 else 20000) + (if b0029 then 0 else 20000) + (if b0030 then 0 else 20000) + (if b0031 then 0 else 20000) + (if b0032 then 0 else 20000) + (if b0033 then 0 else 20000) + (if b0034 then 0 else 20000) + (if b0035 then 0 else 20000) + (if b0036 then 0 else 20000) + (if b0037 then 0 else 20000) + (if b0038 then 0 else 20000) + (if b0039 then 0 else 20000) + (if b0040 then 0 else 20000) + (if b0041 then 0 else 20000) + (if b0042 then 0 else 20000) + (if b0043 then 0 else 20000) + (if b0044 then 0 else 20000) + (if b0045 then 0 else 20000) + (if b0046 then 0 else 20000) + (if b0047 then 0 else 20000) + (if b0048 then 0 else 20000) + (if b0049 then 0 else 20000) + (if b0050 then 0 else 20000) + (if b0051 then 0 else 20000) < 441
}
Prover Time taken = 1.687869
Added Horn clause: 0 => 1
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/linear-algebra/solvers/gramschmidt/kernel3.bpl.ice2.bpl
Total learner time was 00:00:00.1199480
Verifying $kernel3: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool) : bool
{
  0 + (if b0000 then 0 else 20000) + (if b0001 then 0 else 20000) + (if b0002 then 0 else 20000) + (if b0003 then 0 else 20000) + (if b0004 then 0 else 20000) + (if b0005 then 0 else 20000) + (if b0006 then 0 else 20000) + (if b0007 then 0 else 20000) + (if b0008 then 0 else 20000) + (if b0009 then 0 else 20000) + (if b0010 then 0 else 20000) + (if b0011 then 0 else 20000) + (if b0012 then 0 else 20000) + (if b0013 then 0 else 20000) + (if b0014 then 0 else 20000) + (if b0023 then 0 else 20000) + (if b0024 then 0 else 20000) + (if b0025 then 0 else 20000) + (if b0026 then 0 else 20000) + (if b0027 then 0 else 20000) + (if b0028 then 0 else 20000) + (if b0029 then 0 else 20000) + (if b0030 then 0 else 20000) + (if b0031 then 0 else 20000) + (if b0032 then 0 else 20000) + (if b0033 then 0 else 20000) + (if b0034 then 0 else 20000) + (if b0035 then 0 else 20000) + (if b0036 then 0 else 20000) + (if b0037 then 0 else 20000) + (if b0038 then 0 else 20000) + (if b0039 then 0 else 20000) + (if b0040 then 0 else 20000) + (if b0041 then 0 else 20000) + (if b0042 then 0 else 20000) + (if b0043 then 0 else 20000) + (if b0044 then 0 else 20000) + (if b0045 then 0 else 20000) + (if b0046 then 0 else 20000) + (if b0047 then 0 else 20000) + (if b0048 then 0 else 20000) + (if b0049 then 0 else 20000) + (if b0050 then 0 else 20000) + (if b0051 then 0 else 20000) < 441
}
Prover Time taken = 2.330045
Added Horn clause: 0 && 0 && 0 && 0 && 0 => 2
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/linear-algebra/solvers/gramschmidt/kernel3.bpl.ice2.bpl
Total learner time was 00:00:00.1222450
Verifying $kernel3: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool) : bool
{
  0 + (if b0000 then 0 else 20000) + (if b0001 then 0 else 20000) + (if b0003 then 0 else 20000) + (if b0005 then 0 else 20000) + (if b0006 then 0 else 20000) + (if b0007 then 0 else 20000) + (if b0008 then 0 else 20000) + (if b0009 then 0 else 20000) + (if b0010 then 0 else 20000) + (if b0011 then 0 else 20000) + (if b0012 then 0 else 20000) + (if b0013 then 0 else 20000) + (if b0014 then 0 else 20000) + (if b0023 then 0 else 20000) + (if b0024 then 0 else 20000) + (if b0025 then 0 else 20000) + (if b0026 then 0 else 20000) + (if b0027 then 0 else 20000) + (if b0028 then 0 else 20000) + (if b0029 then 0 else 20000) + (if b0030 then 0 else 20000) + (if b0031 then 0 else 20000) + (if b0032 then 0 else 20000) + (if b0033 then 0 else 20000) + (if b0034 then 0 else 20000) + (if b0035 then 0 else 20000) + (if b0036 then 0 else 20000) + (if b0037 then 0 else 20000) + (if b0038 then 0 else 20000) + (if b0039 then 0 else 20000) + (if b0040 then 0 else 20000) + (if b0041 then 0 else 20000) + (if b0042 then 0 else 20000) + (if b0043 then 0 else 20000) + (if b0044 then 0 else 20000) + (if b0045 then 0 else 20000) + (if b0046 then 0 else 20000) + (if b0047 then 0 else 20000) + (if b0048 then 0 else 20000) + (if b0049 then 0 else 20000) + (if b0050 then 0 else 20000) + (if b0051 then 0 else 20000) < 441
}
Prover Time taken = 3.251117
Added Horn clause: 0 && 0 && 0 => 3
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/linear-algebra/solvers/gramschmidt/kernel3.bpl.ice2.bpl
Total learner time was 00:00:00.1230070
Verifying $kernel3: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool) : bool
{
  0 + (if b0000 then 0 else 20000) + (if b0001 then 0 else 20000) + (if b0003 then 0 else 20000) + (if b0005 then 0 else 20000) + (if b0006 then 0 else 20000) + (if b0007 then 0 else 20000) + (if b0008 then 0 else 20000) + (if b0009 then 0 else 20000) + (if b0010 then 0 else 20000) + (if b0011 then 0 else 20000) + (if b0012 then 0 else 20000) + (if b0013 then 0 else 20000) + (if b0014 then 0 else 20000) + (if b0023 then 0 else 20000) + (if b0024 then 0 else 20000) + (if b0026 then 0 else 20000) + (if b0027 then 0 else 20000) + (if b0028 then 0 else 20000) + (if b0029 then 0 else 20000) + (if b0030 then 0 else 20000) + (if b0031 then 0 else 20000) + (if b0032 then 0 else 20000) + (if b0033 then 0 else 20000) + (if b0034 then 0 else 20000) + (if b0035 then 0 else 20000) + (if b0036 then 0 else 20000) + (if b0037 then 0 else 20000) + (if b0038 then 0 else 20000) + (if b0039 then 0 else 20000) + (if b0040 then 0 else 20000) + (if b0041 then 0 else 20000) + (if b0042 then 0 else 20000) + (if b0043 then 0 else 20000) + (if b0044 then 0 else 20000) + (if b0045 then 0 else 20000) + (if b0046 then 0 else 20000) + (if b0047 then 0 else 20000) + (if b0048 then 0 else 20000) + (if b0049 then 0 else 20000) + (if b0050 then 0 else 20000) + (if b0051 then 0 else 20000) < 441
}
Prover Time taken = 3.362232
Added Horn clause: 2 && 0 && 4 => 5
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/linear-algebra/solvers/gramschmidt/kernel3.bpl.ice2.bpl
Total learner time was 00:00:00.1242890
Verifying $kernel3: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool) : bool
{
  0 + (if b0000 then 0 else 20000) + (if b0001 then 0 else 20000) + (if b0003 then 0 else 20000) + (if b0005 then 0 else 20000) + (if b0006 then 0 else 20000) + (if b0007 then 0 else 20000) + (if b0008 then 0 else 20000) + (if b0009 then 0 else 20000) + (if b0010 then 0 else 20000) + (if b0011 then 0 else 20000) + (if b0012 then 0 else 20000) + (if b0013 then 0 else 20000) + (if b0014 then 0 else 20000) + (if b0023 then 0 else 20000) + (if b0024 then 0 else 20000) + (if b0026 then 0 else 20000) + (if b0027 then 0 else 20000) + (if b0028 then 0 else 20000) + (if b0029 then 0 else 20000) + (if b0030 then 0 else 20000) + (if b0031 then 0 else 20000) + (if b0033 then 0 else 20000) + (if b0035 then 0 else 20000) + (if b0038 then 0 else 20000) + (if b0040 then 0 else 20000) + (if b0042 then 0 else 20000) + (if b0043 then 0 else 20000) + (if b0044 then 0 else 20000) + (if b0045 then 0 else 20000) + (if b0046 then 0 else 20000) + (if b0047 then 0 else 20000) + (if b0048 then 0 else 20000) + (if b0049 then 0 else 20000) + (if b0050 then 0 else 20000) + (if b0051 then 0 else 20000) < 441
}
Prover Time taken = 3.958081
Added Horn clause: 0 && 0 && 0 && 0 && 0 => 6
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/linear-algebra/solvers/gramschmidt/kernel3.bpl.ice2.bpl
Total learner time was 00:00:00.1201020
Verifying $kernel3: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool) : bool
{
  0 + (if b0000 then 0 else 20000) + (if b0001 then 0 else 20000) + (if b0003 then 0 else 20000) + (if b0005 then 0 else 20000) + (if b0006 then 0 else 20000) + (if b0007 then 0 else 20000) + (if b0008 then 0 else 20000) + (if b0010 then 0 else 20000) + (if b0012 then 0 else 20000) + (if b0013 then 0 else 20000) + (if b0014 then 0 else 20000) + (if b0023 then 0 else 20000) + (if b0024 then 0 else 20000) + (if b0026 then 0 else 20000) + (if b0027 then 0 else 20000) + (if b0028 then 0 else 20000) + (if b0029 then 0 else 20000) + (if b0030 then 0 else 20000) + (if b0031 then 0 else 20000) + (if b0033 then 0 else 20000) + (if b0035 then 0 else 20000) + (if b0038 then 0 else 20000) + (if b0040 then 0 else 20000) + (if b0042 then 0 else 20000) + (if b0043 then 0 else 20000) + (if b0044 then 0 else 20000) + (if b0045 then 0 else 20000) + (if b0046 then 0 else 20000) + (if b0047 then 0 else 20000) + (if b0048 then 0 else 20000) + (if b0049 then 0 else 20000) + (if b0050 then 0 else 20000) + (if b0051 then 0 else 20000) < 441
}
Prover Time taken = 1.68054
Added Horn clause: 2 && 0 && 7 => 8
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/linear-algebra/solvers/gramschmidt/kernel3.bpl.ice2.bpl
Total learner time was 00:00:00.1211210
Verifying $kernel3: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool) : bool
{
  0 + (if b0000 then 0 else 20000) + (if b0001 then 0 else 20000) + (if b0003 then 0 else 20000) + (if b0005 then 0 else 20000) + (if b0006 then 0 else 20000) + (if b0007 then 0 else 20000) + (if b0008 then 0 else 20000) + (if b0010 then 0 else 20000) + (if b0012 then 0 else 20000) + (if b0013 then 0 else 20000) + (if b0014 then 0 else 20000) + (if b0023 then 0 else 20000) + (if b0024 then 0 else 20000) + (if b0026 then 0 else 20000) + (if b0027 then 0 else 20000) + (if b0028 then 0 else 20000) + (if b0029 then 0 else 20000) + (if b0030 then 0 else 20000) + (if b0031 then 0 else 20000) + (if b0033 then 0 else 20000) + (if b0035 then 0 else 20000) + (if b0040 then 0 else 20000) + (if b0042 then 0 else 20000) + (if b0043 then 0 else 20000) + (if b0044 then 0 else 20000) + (if b0045 then 0 else 20000) + (if b0046 then 0 else 20000) + (if b0047 then 0 else 20000) + (if b0048 then 0 else 20000) + (if b0049 then 0 else 20000) + (if b0050 then 0 else 20000) + (if b0051 then 0 else 20000) < 441
}
Prover Time taken = 2.152723
Added Horn clause: 0 && 0 && 1 => 9
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/linear-algebra/solvers/gramschmidt/kernel3.bpl.ice2.bpl
Total learner time was 00:00:00.1192390
Verifying $kernel3: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool) : bool
{
  0 + (if b0000 then 0 else 20000) + (if b0001 then 0 else 20000) + (if b0003 then 0 else 20000) + (if b0005 then 0 else 20000) + (if b0006 then 0 else 20000) + (if b0007 then 0 else 20000) + (if b0008 then 0 else 20000) + (if b0010 then 0 else 20000) + (if b0012 then 0 else 20000) + (if b0013 then 0 else 20000) + (if b0014 then 0 else 20000) + (if b0023 then 0 else 20000) + (if b0024 then 0 else 20000) + (if b0026 then 0 else 20000) + (if b0027 then 0 else 20000) + (if b0028 then 0 else 20000) + (if b0029 then 0 else 20000) + (if b0030 then 0 else 20000) + (if b0031 then 0 else 20000) + (if b0042 then 0 else 20000) + (if b0043 then 0 else 20000) + (if b0044 then 0 else 20000) + (if b0045 then 0 else 20000) + (if b0046 then 0 else 20000) + (if b0047 then 0 else 20000) + (if b0048 then 0 else 20000) + (if b0049 then 0 else 20000) + (if b0050 then 0 else 20000) + (if b0051 then 0 else 20000) < 441
}
Prover Time taken = 6.028589
Added Horn clause: 0 && 0 && 0 && 0 && 0 => 10
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/linear-algebra/solvers/gramschmidt/kernel3.bpl.ice2.bpl
Total learner time was 00:00:00.1199100
Verifying $kernel3: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool) : bool
{
  0 + (if b0000 then 0 else 20000) + (if b0001 then 0 else 20000) + (if b0003 then 0 else 20000) + (if b0005 then 0 else 20000) + (if b0006 then 0 else 20000) + (if b0007 then 0 else 20000) + (if b0008 then 0 else 20000) + (if b0010 then 0 else 20000) + (if b0012 then 0 else 20000) + (if b0013 then 0 else 20000) + (if b0014 then 0 else 20000) + (if b0023 then 0 else 20000) + (if b0024 then 0 else 20000) + (if b0027 then 0 else 20000) + (if b0029 then 0 else 20000) + (if b0030 then 0 else 20000) + (if b0031 then 0 else 20000) + (if b0042 then 0 else 20000) + (if b0043 then 0 else 20000) + (if b0044 then 0 else 20000) + (if b0045 then 0 else 20000) + (if b0046 then 0 else 20000) + (if b0047 then 0 else 20000) + (if b0048 then 0 else 20000) + (if b0049 then 0 else 20000) + (if b0050 then 0 else 20000) + (if b0051 then 0 else 20000) < 441
}
Prover Time taken = 295.573829
Prover time = 320.59
Number of prover queries = 10
Learner time = 1.09
Number of learner queries = 9
Total time: 321.96
Number of positive examples:1
Number of negative examples:0
Number of Horn clauses:8
verified

Boogie program verifier finished with 1 verified, 0 errors
1.86user 2.14system 5:23.41elapsed 1%CPU (0avgtext+0avgdata 58644maxresident)k
160inputs+384outputs (1major+40513minor)pagefaults 0swaps
FILE:polybench/linear-algebra/solvers/gramschmidt/kernel3.bpl.ice2.bpl
#################
Wed May 12 04:30:52 UTC 2021
KEY=awinnow
OUTPUT=/root/Docker/winnow_gpu_timeout.txt
[TRACE] Using prover: /root/Docker/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/root/Docker/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a winnow
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/errorLimit:1
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/linear-algebra/solvers/lu/kernel1.bpl.ice2.bpl
--------------------
Parsing /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/linear-algebra/solvers/lu/kernel1.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /root/Docker/z3/bin/z3
#parameters: 228
Generating VC of $kernel1
Verifying $kernel1: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.35005
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/linear-algebra/solvers/lu/kernel1.bpl.ice2.bpl
Total learner time was 00:00:00.1189890
Verifying $kernel1: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool) : bool
{
  0 + (if b0000 then 0 else 91000) + (if b0001 then 0 else 91000) + (if b0002 then 0 else 91000) + (if b0003 then 0 else 91000) + (if b0004 then 0 else 91000) + (if b0005 then 0 else 91000) + (if b0006 then 0 else 91000) + (if b0007 then 0 else 91000) + (if b0008 then 0 else 91000) + (if b0009 then 0 else 91000) + (if b0010 then 0 else 91000) + (if b0011 then 0 else 91000) + (if b0012 then 0 else 91000) + (if b0013 then 0 else 91000) + (if b0014 then 0 else 91000) + (if b0015 then 0 else 91000) + (if b0016 then 0 else 91000) + (if b0017 then 0 else 91000) + (if b0018 then 0 else 91000) + (if b0019 then 0 else 91000) + (if b0020 then 0 else 91000) + (if b0021 then 0 else 91000) + (if b0022 then 0 else 91000) + (if b0023 then 0 else 91000) + (if b0024 then 0 else 91000) + (if b0025 then 0 else 91000) + (if b0026 then 0 else 91000) + (if b0027 then 0 else 91000) + (if b0028 then 0 else 91000) + (if b0029 then 0 else 91000) + (if b0030 then 0 else 91000) + (if b0031 then 0 else 91000) + (if b0032 then 0 else 91000) + (if b0033 then 0 else 91000) + (if b0034 then 0 else 91000) + (if b0035 then 0 else 91000) + (if b0036 then 0 else 91000) + (if b0037 then 0 else 91000) + (if b0038 then 0 else 91000) + (if b0039 then 0 else 91000) + (if b0040 then 0 else 91000) + (if b0041 then 0 else 91000) + (if b0042 then 0 else 91000) + (if b0043 then 0 else 91000) + (if b0044 then 0 else 91000) + (if b0045 then 0 else 91000) + (if b0046 then 0 else 91000) + (if b0047 then 0 else 91000) + (if b0048 then 0 else 91000) + (if b0049 then 0 else 91000) + (if b0050 then 0 else 91000) + (if b0051 then 0 else 91000) + (if b0052 then 0 else 91000) + (if b0053 then 0 else 91000) + (if b0054 then 0 else 91000) + (if b0055 then 0 else 91000) + (if b0056 then 0 else 91000) + (if b0057 then 0 else 91000) + (if b0058 then 0 else 91000) + (if b0059 then 0 else 91000) + (if b0060 then 0 else 91000) + (if b0061 then 0 else 91000) + (if b0062 then 0 else 91000) + (if b0063 then 0 else 91000) + (if b0064 then 0 else 91000) + (if b0065 then 0 else 91000) + (if b0066 then 0 else 91000) + (if b0067 then 0 else 91000) + (if b0068 then 0 else 91000) + (if b0069 then 0 else 91000) + (if b0070 then 0 else 91000) + (if b0071 then 0 else 91000) + (if b0072 then 0 else 91000) + (if b0073 then 0 else 91000) + (if b0074 then 0 else 91000) + (if b0075 then 0 else 91000) + (if b0076 then 0 else 91000) + (if b0077 then 0 else 91000) + (if b0078 then 0 else 91000) + (if b0079 then 0 else 91000) + (if b0080 then 0 else 91000) + (if b0081 then 0 else 91000) + (if b0082 then 0 else 91000) + (if b0083 then 0 else 91000) + (if b0084 then 0 else 91000) + (if b0085 then 0 else 91000) + (if b0086 then 0 else 91000) + (if b0087 then 0 else 91000) + (if b0088 then 0 else 91000) + (if b0089 then 0 else 91000) + (if b0090 then 0 else 91000) + (if b0091 then 0 else 91000) + (if b0092 then 0 else 91000) + (if b0093 then 0 else 91000) + (if b0094 then 0 else 91000) + (if b0095 then 0 else 91000) + (if b0096 then 0 else 91000) + (if b0097 then 0 else 91000) + (if b0098 then 0 else 91000) + (if b0099 then 0 else 91000) + (if b0100 then 0 else 91000) + (if b0101 then 0 else 91000) + (if b0102 then 0 else 91000) + (if b0103 then 0 else 91000) + (if b0104 then 0 else 91000) + (if b0105 then 0 else 91000) + (if b0106 then 0 else 91000) + (if b0107 then 0 else 91000) + (if b0108 then 0 else 91000) + (if b0109 then 0 else 91000) + (if b0110 then 0 else 91000) + (if b0111 then 0 else 91000) + (if b0112 then 0 else 91000) + (if b0113 then 0 else 91000) + (if b0114 then 0 else 91000) + (if b0115 then 0 else 91000) + (if b0116 then 0 else 91000) + (if b0117 then 0 else 91000) + (if b0118 then 0 else 91000) + (if b0119 then 0 else 91000) + (if b0120 then 0 else 91000) + (if b0121 then 0 else 91000) + (if b0122 then 0 else 91000) + (if b0123 then 0 else 91000) + (if b0124 then 0 else 91000) + (if b0125 then 0 else 91000) + (if b0126 then 0 else 91000) + (if b0127 then 0 else 91000) + (if b0128 then 0 else 91000) + (if b0129 then 0 else 91000) + (if b0130 then 0 else 91000) + (if b0131 then 0 else 91000) + (if b0132 then 0 else 91000) + (if b0133 then 0 else 91000) + (if b0134 then 0 else 91000) + (if b0135 then 0 else 91000) + (if b0136 then 0 else 91000) + (if b0137 then 0 else 91000) + (if b0138 then 0 else 91000) + (if b0139 then 0 else 91000) + (if b0140 then 0 else 91000) + (if b0141 then 0 else 91000) + (if b0142 then 0 else 91000) + (if b0143 then 0 else 91000) + (if b0144 then 0 else 91000) + (if b0145 then 0 else 91000) + (if b0146 then 0 else 91000) + (if b0147 then 0 else 91000) + (if b0148 then 0 else 91000) + (if b0149 then 0 else 91000) + (if b0150 then 0 else 91000) + (if b0151 then 0 else 91000) + (if b0152 then 0 else 91000) + (if b0153 then 0 else 91000) + (if b0154 then 0 else 91000) + (if b0155 then 0 else 91000) + (if b0156 then 0 else 91000) + (if b0157 then 0 else 91000) + (if b0158 then 0 else 91000) + (if b0159 then 0 else 91000) + (if b0160 then 0 else 91000) + (if b0161 then 0 else 91000) + (if b0162 then 0 else 91000) + (if b0163 then 0 else 91000) + (if b0164 then 0 else 91000) + (if b0165 then 0 else 91000) + (if b0166 then 0 else 91000) + (if b0167 then 0 else 91000) + (if b0168 then 0 else 91000) + (if b0169 then 0 else 91000) + (if b0170 then 0 else 91000) + (if b0171 then 0 else 91000) + (if b0172 then 0 else 91000) + (if b0173 then 0 else 91000) + (if b0174 then 0 else 91000) + (if b0175 then 0 else 91000) + (if b0176 then 0 else 91000) + (if b0177 then 0 else 91000) + (if b0178 then 0 else 91000) + (if b0179 then 0 else 91000) + (if b0180 then 0 else 91000) + (if b0181 then 0 else 91000) + (if b0182 then 0 else 91000) + (if b0183 then 0 else 91000) + (if b0184 then 0 else 91000) + (if b0185 then 0 else 91000) + (if b0186 then 0 else 91000) + (if b0187 then 0 else 91000) + (if b0188 then 0 else 91000) + (if b0189 then 0 else 91000) + (if b0190 then 0 else 91000) + (if b0191 then 0 else 91000) + (if b0192 then 0 else 91000) + (if b0193 then 0 else 91000) + (if b0194 then 0 else 91000) + (if b0195 then 0 else 91000) + (if b0196 then 0 else 91000) + (if b0197 then 0 else 91000) + (if b0198 then 0 else 91000) + (if b0199 then 0 else 91000) + (if b0200 then 0 else 91000) + (if b0201 then 0 else 91000) + (if b0202 then 0 else 91000) + (if b0203 then 0 else 91000) + (if b0204 then 0 else 91000) + (if b0205 then 0 else 91000) + (if b0206 then 0 else 91000) + (if b0207 then 0 else 91000) + (if b0208 then 0 else 91000) + (if b0209 then 0 else 91000) + (if b0210 then 0 else 91000) + (if b0211 then 0 else 91000) + (if b0212 then 0 else 91000) + (if b0213 then 0 else 91000) + (if b0214 then 0 else 91000) + (if b0215 then 0 else 91000) + (if b0216 then 0 else 91000) + (if b0217 then 0 else 91000) + (if b0218 then 0 else 91000) + (if b0219 then 0 else 91000) + (if b0220 then 0 else 91000) + (if b0221 then 0 else 91000) + (if b0222 then 0 else 91000) + (if b0223 then 0 else 91000) + (if b0224 then 0 else 91000) + (if b0225 then 0 else 91000) + (if b0226 then 0 else 91000) + (if b0227 then 0 else 91000) < 441
}
Added: my_inv:1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,1,0,1,1,0,0,0,0,0,1,1,0,1,0,1,1,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,0,0,1,1,1,1,1,1,0,1,1,0,1,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 14.945956
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/linear-algebra/solvers/lu/kernel1.bpl.ice2.bpl
Total learner time was 00:00:00.1231890
Verifying $kernel1: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool) : bool
{
  0 + (if b0000 then 0 else 91000) + (if b0001 then 0 else 91000) + (if b0003 then 0 else 91000) + (if b0004 then 0 else 91000) + (if b0005 then 0 else 91000) + (if b0006 then 0 else 91000) + (if b0007 then 0 else 91000) + (if b0008 then 0 else 91000) + (if b0009 then 0 else 91000) + (if b0010 then 0 else 91000) + (if b0011 then 0 else 91000) + (if b0012 then 0 else 91000) + (if b0013 then 0 else 91000) + (if b0014 then 0 else 91000) + (if b0015 then 0 else 91000) + (if b0016 then 0 else 91000) + (if b0017 then 0 else 91000) + (if b0018 then 0 else 91000) + (if b0019 then 0 else 91000) + (if b0020 then 0 else 91000) + (if b0021 then 0 else 91000) + (if b0022 then 0 else 91000) + (if b0023 then 0 else 91000) + (if b0024 then 0 else 91000) + (if b0025 then 0 else 91000) + (if b0026 then 0 else 91000) + (if b0027 then 0 else 91000) + (if b0028 then 0 else 91000) + (if b0029 then 0 else 91000) + (if b0030 then 0 else 91000) + (if b0031 then 0 else 91000) + (if b0032 then 0 else 91000) + (if b0033 then 0 else 91000) + (if b0034 then 0 else 91000) + (if b0035 then 0 else 91000) + (if b0036 then 0 else 91000) + (if b0037 then 0 else 91000) + (if b0038 then 0 else 91000) + (if b0039 then 0 else 91000) + (if b0040 then 0 else 91000) + (if b0041 then 0 else 91000) + (if b0042 then 0 else 91000) + (if b0043 then 0 else 91000) + (if b0044 then 0 else 91000) + (if b0045 then 0 else 91000) + (if b0046 then 0 else 91000) + (if b0047 then 0 else 91000) + (if b0048 then 0 else 91000) + (if b0049 then 0 else 91000) + (if b0050 then 0 else 91000) + (if b0051 then 0 else 91000) + (if b0052 then 0 else 91000) + (if b0053 then 0 else 91000) + (if b0054 then 0 else 91000) + (if b0055 then 0 else 91000) + (if b0056 then 0 else 91000) + (if b0057 then 0 else 91000) + (if b0058 then 0 else 91000) + (if b0059 then 0 else 91000) + (if b0060 then 0 else 91000) + (if b0061 then 0 else 91000) + (if b0062 then 0 else 91000) + (if b0063 then 0 else 91000) + (if b0064 then 0 else 91000) + (if b0065 then 0 else 91000) + (if b0066 then 0 else 91000) + (if b0067 then 0 else 91000) + (if b0068 then 0 else 91000) + (if b0069 then 0 else 91000) + (if b0070 then 0 else 91000) + (if b0071 then 0 else 91000) + (if b0074 then 0 else 91000) + (if b0080 then 0 else 91000) + (if b0087 then 0 else 91000) + (if b0089 then 0 else 91000) + (if b0090 then 0 else 91000) + (if b0096 then 0 else 91000) + (if b0097 then 0 else 91000) + (if b0099 then 0 else 91000) + (if b0101 then 0 else 91000) + (if b0102 then 0 else 91000) + (if b0113 then 0 else 91000) + (if b0114 then 0 else 91000) + (if b0115 then 0 else 91000) + (if b0116 then 0 else 91000) + (if b0117 then 0 else 91000) + (if b0120 then 0 else 91000) + (if b0121 then 0 else 91000) + (if b0122 then 0 else 91000) + (if b0123 then 0 else 91000) + (if b0124 then 0 else 91000) + (if b0125 then 0 else 91000) + (if b0127 then 0 else 91000) + (if b0128 then 0 else 91000) + (if b0130 then 0 else 91000) + (if b0135 then 0 else 91000) + (if b0136 then 0 else 91000) + (if b0137 then 0 else 91000) + (if b0138 then 0 else 91000) + (if b0139 then 0 else 91000) + (if b0140 then 0 else 91000) + (if b0141 then 0 else 91000) + (if b0142 then 0 else 91000) + (if b0143 then 0 else 91000) + (if b0144 then 0 else 91000) + (if b0145 then 0 else 91000) + (if b0146 then 0 else 91000) + (if b0147 then 0 else 91000) + (if b0148 then 0 else 91000) + (if b0149 then 0 else 91000) + (if b0150 then 0 else 91000) + (if b0151 then 0 else 91000) + (if b0152 then 0 else 91000) + (if b0153 then 0 else 91000) + (if b0154 then 0 else 91000) + (if b0155 then 0 else 91000) + (if b0156 then 0 else 91000) + (if b0157 then 0 else 91000) + (if b0158 then 0 else 91000) + (if b0159 then 0 else 91000) + (if b0160 then 0 else 91000) + (if b0161 then 0 else 91000) + (if b0162 then 0 else 91000) + (if b0163 then 0 else 91000) + (if b0164 then 0 else 91000) + (if b0165 then 0 else 91000) + (if b0166 then 0 else 91000) + (if b0167 then 0 else 91000) + (if b0168 then 0 else 91000) + (if b0169 then 0 else 91000) + (if b0170 then 0 else 91000) + (if b0171 then 0 else 91000) + (if b0172 then 0 else 91000) + (if b0173 then 0 else 91000) + (if b0174 then 0 else 91000) + (if b0175 then 0 else 91000) + (if b0176 then 0 else 91000) + (if b0177 then 0 else 91000) + (if b0178 then 0 else 91000) + (if b0179 then 0 else 91000) + (if b0180 then 0 else 91000) + (if b0181 then 0 else 91000) + (if b0182 then 0 else 91000) + (if b0183 then 0 else 91000) + (if b0184 then 0 else 91000) + (if b0185 then 0 else 91000) + (if b0186 then 0 else 91000) + (if b0187 then 0 else 91000) + (if b0188 then 0 else 91000) + (if b0189 then 0 else 91000) + (if b0190 then 0 else 91000) + (if b0191 then 0 else 91000) + (if b0192 then 0 else 91000) + (if b0193 then 0 else 91000) + (if b0194 then 0 else 91000) + (if b0195 then 0 else 91000) + (if b0196 then 0 else 91000) + (if b0197 then 0 else 91000) + (if b0198 then 0 else 91000) + (if b0199 then 0 else 91000) + (if b0200 then 0 else 91000) + (if b0201 then 0 else 91000) + (if b0202 then 0 else 91000) + (if b0203 then 0 else 91000) + (if b0204 then 0 else 91000) + (if b0205 then 0 else 91000) + (if b0206 then 0 else 91000) + (if b0207 then 0 else 91000) + (if b0208 then 0 else 91000) + (if b0209 then 0 else 91000) + (if b0210 then 0 else 91000) + (if b0211 then 0 else 91000) + (if b0212 then 0 else 91000) + (if b0213 then 0 else 91000) + (if b0214 then 0 else 91000) + (if b0215 then 0 else 91000) + (if b0216 then 0 else 91000) + (if b0217 then 0 else 91000) + (if b0218 then 0 else 91000) + (if b0219 then 0 else 91000) + (if b0220 then 0 else 91000) + (if b0221 then 0 else 91000) + (if b0222 then 0 else 91000) + (if b0223 then 0 else 91000) + (if b0224 then 0 else 91000) + (if b0225 then 0 else 91000) + (if b0226 then 0 else 91000) + (if b0227 then 0 else 91000) < 441
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,0,1,0,0,1,1,1,1,1,0,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,0,1,1,0,0,0,0,0,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 18.13486
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/linear-algebra/solvers/lu/kernel1.bpl.ice2.bpl
Total learner time was 00:00:00.1199610
Verifying $kernel1: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool) : bool
{
  0 + (if b0000 then 0 else 91000) + (if b0001 then 0 else 91000) + (if b0003 then 0 else 91000) + (if b0004 then 0 else 91000) + (if b0005 then 0 else 91000) + (if b0006 then 0 else 91000) + (if b0007 then 0 else 91000) + (if b0008 then 0 else 91000) + (if b0009 then 0 else 91000) + (if b0010 then 0 else 91000) + (if b0011 then 0 else 91000) + (if b0012 then 0 else 91000) + (if b0013 then 0 else 91000) + (if b0014 then 0 else 91000) + (if b0015 then 0 else 91000) + (if b0016 then 0 else 91000) + (if b0017 then 0 else 91000) + (if b0018 then 0 else 91000) + (if b0019 then 0 else 91000) + (if b0020 then 0 else 91000) + (if b0021 then 0 else 91000) + (if b0022 then 0 else 91000) + (if b0023 then 0 else 91000) + (if b0024 then 0 else 91000) + (if b0025 then 0 else 91000) + (if b0026 then 0 else 91000) + (if b0027 then 0 else 91000) + (if b0028 then 0 else 91000) + (if b0029 then 0 else 91000) + (if b0030 then 0 else 91000) + (if b0031 then 0 else 91000) + (if b0032 then 0 else 91000) + (if b0033 then 0 else 91000) + (if b0034 then 0 else 91000) + (if b0035 then 0 else 91000) + (if b0036 then 0 else 91000) + (if b0037 then 0 else 91000) + (if b0038 then 0 else 91000) + (if b0039 then 0 else 91000) + (if b0040 then 0 else 91000) + (if b0041 then 0 else 91000) + (if b0042 then 0 else 91000) + (if b0043 then 0 else 91000) + (if b0044 then 0 else 91000) + (if b0045 then 0 else 91000) + (if b0046 then 0 else 91000) + (if b0047 then 0 else 91000) + (if b0048 then 0 else 91000) + (if b0049 then 0 else 91000) + (if b0050 then 0 else 91000) + (if b0051 then 0 else 91000) + (if b0052 then 0 else 91000) + (if b0053 then 0 else 91000) + (if b0054 then 0 else 91000) + (if b0055 then 0 else 91000) + (if b0056 then 0 else 91000) + (if b0057 then 0 else 91000) + (if b0058 then 0 else 91000) + (if b0059 then 0 else 91000) + (if b0060 then 0 else 91000) + (if b0061 then 0 else 91000) + (if b0062 then 0 else 91000) + (if b0063 then 0 else 91000) + (if b0064 then 0 else 91000) + (if b0065 then 0 else 91000) + (if b0066 then 0 else 91000) + (if b0067 then 0 else 91000) + (if b0068 then 0 else 91000) + (if b0069 then 0 else 91000) + (if b0070 then 0 else 91000) + (if b0071 then 0 else 91000) + (if b0074 then 0 else 91000) + (if b0097 then 0 else 91000) + (if b0099 then 0 else 91000) + (if b0102 then 0 else 91000) + (if b0113 then 0 else 91000) + (if b0116 then 0 else 91000) + (if b0125 then 0 else 91000) + (if b0127 then 0 else 91000) + (if b0130 then 0 else 91000) + (if b0135 then 0 else 91000) + (if b0136 then 0 else 91000) + (if b0137 then 0 else 91000) + (if b0138 then 0 else 91000) + (if b0139 then 0 else 91000) + (if b0140 then 0 else 91000) + (if b0141 then 0 else 91000) + (if b0142 then 0 else 91000) + (if b0143 then 0 else 91000) + (if b0144 then 0 else 91000) + (if b0145 then 0 else 91000) + (if b0146 then 0 else 91000) + (if b0147 then 0 else 91000) + (if b0148 then 0 else 91000) + (if b0149 then 0 else 91000) + (if b0150 then 0 else 91000) + (if b0151 then 0 else 91000) + (if b0152 then 0 else 91000) + (if b0153 then 0 else 91000) + (if b0154 then 0 else 91000) + (if b0155 then 0 else 91000) + (if b0156 then 0 else 91000) + (if b0157 then 0 else 91000) + (if b0158 then 0 else 91000) + (if b0159 then 0 else 91000) + (if b0160 then 0 else 91000) + (if b0161 then 0 else 91000) + (if b0162 then 0 else 91000) + (if b0163 then 0 else 91000) + (if b0164 then 0 else 91000) + (if b0165 then 0 else 91000) + (if b0166 then 0 else 91000) + (if b0167 then 0 else 91000) + (if b0168 then 0 else 91000) + (if b0169 then 0 else 91000) + (if b0170 then 0 else 91000) + (if b0171 then 0 else 91000) + (if b0172 then 0 else 91000) + (if b0173 then 0 else 91000) + (if b0174 then 0 else 91000) + (if b0175 then 0 else 91000) + (if b0176 then 0 else 91000) + (if b0177 then 0 else 91000) + (if b0178 then 0 else 91000) + (if b0179 then 0 else 91000) + (if b0180 then 0 else 91000) + (if b0181 then 0 else 91000) + (if b0182 then 0 else 91000) + (if b0183 then 0 else 91000) + (if b0184 then 0 else 91000) + (if b0185 then 0 else 91000) + (if b0186 then 0 else 91000) + (if b0187 then 0 else 91000) + (if b0188 then 0 else 91000) + (if b0189 then 0 else 91000) + (if b0190 then 0 else 91000) + (if b0191 then 0 else 91000) + (if b0192 then 0 else 91000) + (if b0193 then 0 else 91000) + (if b0194 then 0 else 91000) + (if b0195 then 0 else 91000) + (if b0196 then 0 else 91000) + (if b0197 then 0 else 91000) + (if b0198 then 0 else 91000) + (if b0199 then 0 else 91000) + (if b0200 then 0 else 91000) + (if b0201 then 0 else 91000) + (if b0202 then 0 else 91000) + (if b0203 then 0 else 91000) + (if b0204 then 0 else 91000) + (if b0205 then 0 else 91000) + (if b0206 then 0 else 91000) + (if b0207 then 0 else 91000) + (if b0208 then 0 else 91000) + (if b0209 then 0 else 91000) + (if b0210 then 0 else 91000) + (if b0211 then 0 else 91000) + (if b0212 then 0 else 91000) + (if b0213 then 0 else 91000) + (if b0214 then 0 else 91000) + (if b0215 then 0 else 91000) + (if b0216 then 0 else 91000) + (if b0217 then 0 else 91000) + (if b0218 then 0 else 91000) + (if b0219 then 0 else 91000) + (if b0220 then 0 else 91000) + (if b0221 then 0 else 91000) + (if b0222 then 0 else 91000) + (if b0223 then 0 else 91000) + (if b0224 then 0 else 91000) + (if b0225 then 0 else 91000) + (if b0226 then 0 else 91000) + (if b0227 then 0 else 91000) < 441
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,0,1,0,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 21.035179
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/linear-algebra/solvers/lu/kernel1.bpl.ice2.bpl
Total learner time was 00:00:00.1241050
Verifying $kernel1: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool) : bool
{
  0 + (if b0000 then 0 else 91000) + (if b0001 then 0 else 91000) + (if b0003 then 0 else 91000) + (if b0004 then 0 else 91000) + (if b0005 then 0 else 91000) + (if b0006 then 0 else 91000) + (if b0007 then 0 else 91000) + (if b0008 then 0 else 91000) + (if b0009 then 0 else 91000) + (if b0010 then 0 else 91000) + (if b0011 then 0 else 91000) + (if b0012 then 0 else 91000) + (if b0013 then 0 else 91000) + (if b0014 then 0 else 91000) + (if b0015 then 0 else 91000) + (if b0016 then 0 else 91000) + (if b0017 then 0 else 91000) + (if b0018 then 0 else 91000) + (if b0019 then 0 else 91000) + (if b0020 then 0 else 91000) + (if b0021 then 0 else 91000) + (if b0022 then 0 else 91000) + (if b0023 then 0 else 91000) + (if b0024 then 0 else 91000) + (if b0025 then 0 else 91000) + (if b0026 then 0 else 91000) + (if b0027 then 0 else 91000) + (if b0028 then 0 else 91000) + (if b0029 then 0 else 91000) + (if b0030 then 0 else 91000) + (if b0031 then 0 else 91000) + (if b0032 then 0 else 91000) + (if b0033 then 0 else 91000) + (if b0034 then 0 else 91000) + (if b0035 then 0 else 91000) + (if b0036 then 0 else 91000) + (if b0037 then 0 else 91000) + (if b0038 then 0 else 91000) + (if b0039 then 0 else 91000) + (if b0040 then 0 else 91000) + (if b0041 then 0 else 91000) + (if b0042 then 0 else 91000) + (if b0043 then 0 else 91000) + (if b0044 then 0 else 91000) + (if b0045 then 0 else 91000) + (if b0046 then 0 else 91000) + (if b0047 then 0 else 91000) + (if b0048 then 0 else 91000) + (if b0049 then 0 else 91000) + (if b0050 then 0 else 91000) + (if b0051 then 0 else 91000) + (if b0052 then 0 else 91000) + (if b0053 then 0 else 91000) + (if b0054 then 0 else 91000) + (if b0055 then 0 else 91000) + (if b0056 then 0 else 91000) + (if b0057 then 0 else 91000) + (if b0058 then 0 else 91000) + (if b0059 then 0 else 91000) + (if b0060 then 0 else 91000) + (if b0061 then 0 else 91000) + (if b0062 then 0 else 91000) + (if b0063 then 0 else 91000) + (if b0064 then 0 else 91000) + (if b0065 then 0 else 91000) + (if b0066 then 0 else 91000) + (if b0067 then 0 else 91000) + (if b0068 then 0 else 91000) + (if b0069 then 0 else 91000) + (if b0070 then 0 else 91000) + (if b0071 then 0 else 91000) + (if b0102 then 0 else 91000) + (if b0116 then 0 else 91000) + (if b0135 then 0 else 91000) + (if b0136 then 0 else 91000) + (if b0137 then 0 else 91000) + (if b0138 then 0 else 91000) + (if b0139 then 0 else 91000) + (if b0140 then 0 else 91000) + (if b0141 then 0 else 91000) + (if b0142 then 0 else 91000) + (if b0143 then 0 else 91000) + (if b0144 then 0 else 91000) + (if b0145 then 0 else 91000) + (if b0146 then 0 else 91000) + (if b0147 then 0 else 91000) + (if b0148 then 0 else 91000) + (if b0149 then 0 else 91000) + (if b0150 then 0 else 91000) + (if b0151 then 0 else 91000) + (if b0152 then 0 else 91000) + (if b0153 then 0 else 91000) + (if b0154 then 0 else 91000) + (if b0155 then 0 else 91000) + (if b0156 then 0 else 91000) + (if b0157 then 0 else 91000) + (if b0158 then 0 else 91000) + (if b0159 then 0 else 91000) + (if b0160 then 0 else 91000) + (if b0161 then 0 else 91000) + (if b0162 then 0 else 91000) + (if b0163 then 0 else 91000) + (if b0164 then 0 else 91000) + (if b0165 then 0 else 91000) + (if b0166 then 0 else 91000) + (if b0167 then 0 else 91000) + (if b0168 then 0 else 91000) + (if b0169 then 0 else 91000) + (if b0170 then 0 else 91000) + (if b0171 then 0 else 91000) + (if b0172 then 0 else 91000) + (if b0173 then 0 else 91000) + (if b0174 then 0 else 91000) + (if b0175 then 0 else 91000) + (if b0176 then 0 else 91000) + (if b0177 then 0 else 91000) + (if b0178 then 0 else 91000) + (if b0179 then 0 else 91000) + (if b0180 then 0 else 91000) + (if b0181 then 0 else 91000) + (if b0182 then 0 else 91000) + (if b0183 then 0 else 91000) + (if b0184 then 0 else 91000) + (if b0185 then 0 else 91000) + (if b0186 then 0 else 91000) + (if b0187 then 0 else 91000) + (if b0188 then 0 else 91000) + (if b0189 then 0 else 91000) + (if b0190 then 0 else 91000) + (if b0191 then 0 else 91000) + (if b0192 then 0 else 91000) + (if b0193 then 0 else 91000) + (if b0194 then 0 else 91000) + (if b0195 then 0 else 91000) + (if b0196 then 0 else 91000) + (if b0197 then 0 else 91000) + (if b0198 then 0 else 91000) + (if b0199 then 0 else 91000) + (if b0200 then 0 else 91000) + (if b0201 then 0 else 91000) + (if b0202 then 0 else 91000) + (if b0203 then 0 else 91000) + (if b0204 then 0 else 91000) + (if b0205 then 0 else 91000) + (if b0206 then 0 else 91000) + (if b0207 then 0 else 91000) + (if b0208 then 0 else 91000) + (if b0209 then 0 else 91000) + (if b0210 then 0 else 91000) + (if b0211 then 0 else 91000) + (if b0212 then 0 else 91000) + (if b0213 then 0 else 91000) + (if b0214 then 0 else 91000) + (if b0215 then 0 else 91000) + (if b0216 then 0 else 91000) + (if b0217 then 0 else 91000) + (if b0218 then 0 else 91000) + (if b0219 then 0 else 91000) + (if b0220 then 0 else 91000) + (if b0221 then 0 else 91000) + (if b0222 then 0 else 91000) + (if b0223 then 0 else 91000) + (if b0224 then 0 else 91000) + (if b0225 then 0 else 91000) + (if b0226 then 0 else 91000) + (if b0227 then 0 else 91000) < 441
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 17.638574
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/linear-algebra/solvers/lu/kernel1.bpl.ice2.bpl
Total learner time was 00:00:00.1273850
Verifying $kernel1: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool) : bool
{
  0 + (if b0000 then 0 else 91000) + (if b0001 then 0 else 91000) + (if b0003 then 0 else 91000) + (if b0004 then 0 else 91000) + (if b0005 then 0 else 91000) + (if b0006 then 0 else 91000) + (if b0007 then 0 else 91000) + (if b0008 then 0 else 91000) + (if b0009 then 0 else 91000) + (if b0010 then 0 else 91000) + (if b0011 then 0 else 91000) + (if b0012 then 0 else 91000) + (if b0013 then 0 else 91000) + (if b0014 then 0 else 91000) + (if b0015 then 0 else 91000) + (if b0016 then 0 else 91000) + (if b0017 then 0 else 91000) + (if b0018 then 0 else 91000) + (if b0019 then 0 else 91000) + (if b0020 then 0 else 91000) + (if b0021 then 0 else 91000) + (if b0022 then 0 else 91000) + (if b0023 then 0 else 91000) + (if b0024 then 0 else 91000) + (if b0025 then 0 else 91000) + (if b0026 then 0 else 91000) + (if b0027 then 0 else 91000) + (if b0028 then 0 else 91000) + (if b0029 then 0 else 91000) + (if b0030 then 0 else 91000) + (if b0031 then 0 else 91000) + (if b0032 then 0 else 91000) + (if b0033 then 0 else 91000) + (if b0034 then 0 else 91000) + (if b0035 then 0 else 91000) + (if b0036 then 0 else 91000) + (if b0037 then 0 else 91000) + (if b0038 then 0 else 91000) + (if b0039 then 0 else 91000) + (if b0040 then 0 else 91000) + (if b0041 then 0 else 91000) + (if b0042 then 0 else 91000) + (if b0043 then 0 else 91000) + (if b0044 then 0 else 91000) + (if b0045 then 0 else 91000) + (if b0046 then 0 else 91000) + (if b0047 then 0 else 91000) + (if b0048 then 0 else 91000) + (if b0049 then 0 else 91000) + (if b0050 then 0 else 91000) + (if b0051 then 0 else 91000) + (if b0052 then 0 else 91000) + (if b0053 then 0 else 91000) + (if b0054 then 0 else 91000) + (if b0055 then 0 else 91000) + (if b0056 then 0 else 91000) + (if b0057 then 0 else 91000) + (if b0058 then 0 else 91000) + (if b0059 then 0 else 91000) + (if b0060 then 0 else 91000) + (if b0061 then 0 else 91000) + (if b0062 then 0 else 91000) + (if b0063 then 0 else 91000) + (if b0064 then 0 else 91000) + (if b0065 then 0 else 91000) + (if b0066 then 0 else 91000) + (if b0067 then 0 else 91000) + (if b0068 then 0 else 91000) + (if b0069 then 0 else 91000) + (if b0070 then 0 else 91000) + (if b0071 then 0 else 91000) + (if b0116 then 0 else 91000) + (if b0135 then 0 else 91000) + (if b0136 then 0 else 91000) + (if b0137 then 0 else 91000) + (if b0138 then 0 else 91000) + (if b0139 then 0 else 91000) + (if b0140 then 0 else 91000) + (if b0141 then 0 else 91000) + (if b0142 then 0 else 91000) + (if b0143 then 0 else 91000) + (if b0144 then 0 else 91000) + (if b0145 then 0 else 91000) + (if b0146 then 0 else 91000) + (if b0147 then 0 else 91000) + (if b0148 then 0 else 91000) + (if b0149 then 0 else 91000) + (if b0150 then 0 else 91000) + (if b0151 then 0 else 91000) + (if b0152 then 0 else 91000) + (if b0153 then 0 else 91000) + (if b0154 then 0 else 91000) + (if b0155 then 0 else 91000) + (if b0156 then 0 else 91000) + (if b0157 then 0 else 91000) + (if b0158 then 0 else 91000) + (if b0159 then 0 else 91000) + (if b0160 then 0 else 91000) + (if b0161 then 0 else 91000) + (if b0162 then 0 else 91000) + (if b0163 then 0 else 91000) + (if b0164 then 0 else 91000) + (if b0165 then 0 else 91000) + (if b0166 then 0 else 91000) + (if b0167 then 0 else 91000) + (if b0168 then 0 else 91000) + (if b0169 then 0 else 91000) + (if b0170 then 0 else 91000) + (if b0171 then 0 else 91000) + (if b0172 then 0 else 91000) + (if b0173 then 0 else 91000) + (if b0174 then 0 else 91000) + (if b0175 then 0 else 91000) + (if b0176 then 0 else 91000) + (if b0177 then 0 else 91000) + (if b0178 then 0 else 91000) + (if b0179 then 0 else 91000) + (if b0180 then 0 else 91000) + (if b0181 then 0 else 91000) + (if b0182 then 0 else 91000) + (if b0183 then 0 else 91000) + (if b0184 then 0 else 91000) + (if b0185 then 0 else 91000) + (if b0186 then 0 else 91000) + (if b0187 then 0 else 91000) + (if b0188 then 0 else 91000) + (if b0189 then 0 else 91000) + (if b0190 then 0 else 91000) + (if b0191 then 0 else 91000) + (if b0192 then 0 else 91000) + (if b0193 then 0 else 91000) + (if b0194 then 0 else 91000) + (if b0195 then 0 else 91000) + (if b0196 then 0 else 91000) + (if b0197 then 0 else 91000) + (if b0198 then 0 else 91000) + (if b0199 then 0 else 91000) + (if b0200 then 0 else 91000) + (if b0201 then 0 else 91000) + (if b0202 then 0 else 91000) + (if b0203 then 0 else 91000) + (if b0204 then 0 else 91000) + (if b0205 then 0 else 91000) + (if b0206 then 0 else 91000) + (if b0207 then 0 else 91000) + (if b0208 then 0 else 91000) + (if b0209 then 0 else 91000) + (if b0210 then 0 else 91000) + (if b0211 then 0 else 91000) + (if b0212 then 0 else 91000) + (if b0213 then 0 else 91000) + (if b0214 then 0 else 91000) + (if b0215 then 0 else 91000) + (if b0216 then 0 else 91000) + (if b0217 then 0 else 91000) + (if b0218 then 0 else 91000) + (if b0219 then 0 else 91000) + (if b0220 then 0 else 91000) + (if b0221 then 0 else 91000) + (if b0222 then 0 else 91000) + (if b0223 then 0 else 91000) + (if b0224 then 0 else 91000) + (if b0225 then 0 else 91000) + (if b0226 then 0 else 91000) + (if b0227 then 0 else 91000) < 441
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 11.676996
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/linear-algebra/solvers/lu/kernel1.bpl.ice2.bpl
Total learner time was 00:00:00.1223510
Verifying $kernel1: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool) : bool
{
  0 + (if b0000 then 0 else 91000) + (if b0001 then 0 else 91000) + (if b0003 then 0 else 91000) + (if b0004 then 0 else 91000) + (if b0005 then 0 else 91000) + (if b0006 then 0 else 91000) + (if b0007 then 0 else 91000) + (if b0008 then 0 else 91000) + (if b0009 then 0 else 91000) + (if b0010 then 0 else 91000) + (if b0011 then 0 else 91000) + (if b0012 then 0 else 91000) + (if b0013 then 0 else 91000) + (if b0014 then 0 else 91000) + (if b0015 then 0 else 91000) + (if b0016 then 0 else 91000) + (if b0017 then 0 else 91000) + (if b0018 then 0 else 91000) + (if b0019 then 0 else 91000) + (if b0020 then 0 else 91000) + (if b0021 then 0 else 91000) + (if b0022 then 0 else 91000) + (if b0023 then 0 else 91000) + (if b0024 then 0 else 91000) + (if b0025 then 0 else 91000) + (if b0026 then 0 else 91000) + (if b0027 then 0 else 91000) + (if b0028 then 0 else 91000) + (if b0029 then 0 else 91000) + (if b0030 then 0 else 91000) + (if b0031 then 0 else 91000) + (if b0032 then 0 else 91000) + (if b0033 then 0 else 91000) + (if b0034 then 0 else 91000) + (if b0035 then 0 else 91000) + (if b0036 then 0 else 91000) + (if b0037 then 0 else 91000) + (if b0038 then 0 else 91000) + (if b0039 then 0 else 91000) + (if b0040 then 0 else 91000) + (if b0041 then 0 else 91000) + (if b0042 then 0 else 91000) + (if b0043 then 0 else 91000) + (if b0044 then 0 else 91000) + (if b0045 then 0 else 91000) + (if b0046 then 0 else 91000) + (if b0047 then 0 else 91000) + (if b0048 then 0 else 91000) + (if b0049 then 0 else 91000) + (if b0050 then 0 else 91000) + (if b0051 then 0 else 91000) + (if b0052 then 0 else 91000) + (if b0053 then 0 else 91000) + (if b0054 then 0 else 91000) + (if b0055 then 0 else 91000) + (if b0056 then 0 else 91000) + (if b0057 then 0 else 91000) + (if b0058 then 0 else 91000) + (if b0059 then 0 else 91000) + (if b0060 then 0 else 91000) + (if b0061 then 0 else 91000) + (if b0062 then 0 else 91000) + (if b0063 then 0 else 91000) + (if b0064 then 0 else 91000) + (if b0065 then 0 else 91000) + (if b0066 then 0 else 91000) + (if b0067 then 0 else 91000) + (if b0068 then 0 else 91000) + (if b0069 then 0 else 91000) + (if b0070 then 0 else 91000) + (if b0071 then 0 else 91000) + (if b0135 then 0 else 91000) + (if b0136 then 0 else 91000) + (if b0137 then 0 else 91000) + (if b0138 then 0 else 91000) + (if b0139 then 0 else 91000) + (if b0140 then 0 else 91000) + (if b0141 then 0 else 91000) + (if b0142 then 0 else 91000) + (if b0143 then 0 else 91000) + (if b0144 then 0 else 91000) + (if b0145 then 0 else 91000) + (if b0146 then 0 else 91000) + (if b0147 then 0 else 91000) + (if b0148 then 0 else 91000) + (if b0149 then 0 else 91000) + (if b0150 then 0 else 91000) + (if b0151 then 0 else 91000) + (if b0152 then 0 else 91000) + (if b0153 then 0 else 91000) + (if b0154 then 0 else 91000) + (if b0155 then 0 else 91000) + (if b0156 then 0 else 91000) + (if b0157 then 0 else 91000) + (if b0158 then 0 else 91000) + (if b0159 then 0 else 91000) + (if b0160 then 0 else 91000) + (if b0161 then 0 else 91000) + (if b0162 then 0 else 91000) + (if b0163 then 0 else 91000) + (if b0164 then 0 else 91000) + (if b0165 then 0 else 91000) + (if b0166 then 0 else 91000) + (if b0167 then 0 else 91000) + (if b0168 then 0 else 91000) + (if b0169 then 0 else 91000) + (if b0170 then 0 else 91000) + (if b0171 then 0 else 91000) + (if b0172 then 0 else 91000) + (if b0173 then 0 else 91000) + (if b0174 then 0 else 91000) + (if b0175 then 0 else 91000) + (if b0176 then 0 else 91000) + (if b0177 then 0 else 91000) + (if b0178 then 0 else 91000) + (if b0179 then 0 else 91000) + (if b0180 then 0 else 91000) + (if b0181 then 0 else 91000) + (if b0182 then 0 else 91000) + (if b0183 then 0 else 91000) + (if b0184 then 0 else 91000) + (if b0185 then 0 else 91000) + (if b0186 then 0 else 91000) + (if b0187 then 0 else 91000) + (if b0188 then 0 else 91000) + (if b0189 then 0 else 91000) + (if b0190 then 0 else 91000) + (if b0191 then 0 else 91000) + (if b0192 then 0 else 91000) + (if b0193 then 0 else 91000) + (if b0194 then 0 else 91000) + (if b0195 then 0 else 91000) + (if b0196 then 0 else 91000) + (if b0197 then 0 else 91000) + (if b0198 then 0 else 91000) + (if b0199 then 0 else 91000) + (if b0200 then 0 else 91000) + (if b0201 then 0 else 91000) + (if b0202 then 0 else 91000) + (if b0203 then 0 else 91000) + (if b0204 then 0 else 91000) + (if b0205 then 0 else 91000) + (if b0206 then 0 else 91000) + (if b0207 then 0 else 91000) + (if b0208 then 0 else 91000) + (if b0209 then 0 else 91000) + (if b0210 then 0 else 91000) + (if b0211 then 0 else 91000) + (if b0212 then 0 else 91000) + (if b0213 then 0 else 91000) + (if b0214 then 0 else 91000) + (if b0215 then 0 else 91000) + (if b0216 then 0 else 91000) + (if b0217 then 0 else 91000) + (if b0218 then 0 else 91000) + (if b0219 then 0 else 91000) + (if b0220 then 0 else 91000) + (if b0221 then 0 else 91000) + (if b0222 then 0 else 91000) + (if b0223 then 0 else 91000) + (if b0224 then 0 else 91000) + (if b0225 then 0 else 91000) + (if b0226 then 0 else 91000) + (if b0227 then 0 else 91000) < 441
}
Prover Time taken = 23.062117
Added Horn clause: 6 => 7
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/linear-algebra/solvers/lu/kernel1.bpl.ice2.bpl
Total learner time was 00:00:00.1224940
Verifying $kernel1: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool) : bool
{
  0 + (if b0000 then 0 else 91000) + (if b0001 then 0 else 91000) + (if b0003 then 0 else 91000) + (if b0004 then 0 else 91000) + (if b0005 then 0 else 91000) + (if b0006 then 0 else 91000) + (if b0007 then 0 else 91000) + (if b0008 then 0 else 91000) + (if b0009 then 0 else 91000) + (if b0010 then 0 else 91000) + (if b0011 then 0 else 91000) + (if b0012 then 0 else 91000) + (if b0013 then 0 else 91000) + (if b0014 then 0 else 91000) + (if b0015 then 0 else 91000) + (if b0016 then 0 else 91000) + (if b0017 then 0 else 91000) + (if b0018 then 0 else 91000) + (if b0019 then 0 else 91000) + (if b0020 then 0 else 91000) + (if b0021 then 0 else 91000) + (if b0022 then 0 else 91000) + (if b0023 then 0 else 91000) + (if b0024 then 0 else 91000) + (if b0025 then 0 else 91000) + (if b0026 then 0 else 91000) + (if b0027 then 0 else 91000) + (if b0028 then 0 else 91000) + (if b0029 then 0 else 91000) + (if b0030 then 0 else 91000) + (if b0031 then 0 else 91000) + (if b0032 then 0 else 91000) + (if b0033 then 0 else 91000) + (if b0034 then 0 else 91000) + (if b0035 then 0 else 91000) + (if b0036 then 0 else 91000) + (if b0037 then 0 else 91000) + (if b0038 then 0 else 91000) + (if b0039 then 0 else 91000) + (if b0040 then 0 else 91000) + (if b0041 then 0 else 91000) + (if b0042 then 0 else 91000) + (if b0043 then 0 else 91000) + (if b0044 then 0 else 91000) + (if b0045 then 0 else 91000) + (if b0046 then 0 else 91000) + (if b0047 then 0 else 91000) + (if b0048 then 0 else 91000) + (if b0049 then 0 else 91000) + (if b0050 then 0 else 91000) + (if b0051 then 0 else 91000) + (if b0052 then 0 else 91000) + (if b0053 then 0 else 91000) + (if b0054 then 0 else 91000) + (if b0055 then 0 else 91000) + (if b0056 then 0 else 91000) + (if b0057 then 0 else 91000) + (if b0058 then 0 else 91000) + (if b0059 then 0 else 91000) + (if b0060 then 0 else 91000) + (if b0061 then 0 else 91000) + (if b0062 then 0 else 91000) + (if b0063 then 0 else 91000) + (if b0064 then 0 else 91000) + (if b0065 then 0 else 91000) + (if b0066 then 0 else 91000) + (if b0067 then 0 else 91000) + (if b0068 then 0 else 91000) + (if b0069 then 0 else 91000) + (if b0070 then 0 else 91000) + (if b0071 then 0 else 91000) + (if b0135 then 0 else 91000) + (if b0136 then 0 else 91000) + (if b0137 then 0 else 91000) + (if b0138 then 0 else 91000) + (if b0139 then 0 else 91000) + (if b0140 then 0 else 91000) + (if b0141 then 0 else 91000) + (if b0142 then 0 else 91000) + (if b0144 then 0 else 91000) + (if b0145 then 0 else 91000) + (if b0146 then 0 else 91000) + (if b0147 then 0 else 91000) + (if b0148 then 0 else 91000) + (if b0149 then 0 else 91000) + (if b0150 then 0 else 91000) + (if b0151 then 0 else 91000) + (if b0152 then 0 else 91000) + (if b0153 then 0 else 91000) + (if b0154 then 0 else 91000) + (if b0155 then 0 else 91000) + (if b0156 then 0 else 91000) + (if b0157 then 0 else 91000) + (if b0158 then 0 else 91000) + (if b0159 then 0 else 91000) + (if b0160 then 0 else 91000) + (if b0161 then 0 else 91000) + (if b0162 then 0 else 91000) + (if b0163 then 0 else 91000) + (if b0164 then 0 else 91000) + (if b0165 then 0 else 91000) + (if b0166 then 0 else 91000) + (if b0167 then 0 else 91000) + (if b0168 then 0 else 91000) + (if b0169 then 0 else 91000) + (if b0170 then 0 else 91000) + (if b0171 then 0 else 91000) + (if b0172 then 0 else 91000) + (if b0173 then 0 else 91000) + (if b0174 then 0 else 91000) + (if b0175 then 0 else 91000) + (if b0176 then 0 else 91000) + (if b0177 then 0 else 91000) + (if b0178 then 0 else 91000) + (if b0179 then 0 else 91000) + (if b0180 then 0 else 91000) + (if b0181 then 0 else 91000) + (if b0182 then 0 else 91000) + (if b0183 then 0 else 91000) + (if b0184 then 0 else 91000) + (if b0185 then 0 else 91000) + (if b0186 then 0 else 91000) + (if b0187 then 0 else 91000) + (if b0188 then 0 else 91000) + (if b0189 then 0 else 91000) + (if b0190 then 0 else 91000) + (if b0191 then 0 else 91000) + (if b0192 then 0 else 91000) + (if b0193 then 0 else 91000) + (if b0194 then 0 else 91000) + (if b0195 then 0 else 91000) + (if b0196 then 0 else 91000) + (if b0197 then 0 else 91000) + (if b0198 then 0 else 91000) + (if b0199 then 0 else 91000) + (if b0200 then 0 else 91000) + (if b0201 then 0 else 91000) + (if b0202 then 0 else 91000) + (if b0203 then 0 else 91000) + (if b0204 then 0 else 91000) + (if b0205 then 0 else 91000) + (if b0206 then 0 else 91000) + (if b0207 then 0 else 91000) + (if b0208 then 0 else 91000) + (if b0209 then 0 else 91000) + (if b0210 then 0 else 91000) + (if b0211 then 0 else 91000) + (if b0212 then 0 else 91000) + (if b0213 then 0 else 91000) + (if b0214 then 0 else 91000) + (if b0215 then 0 else 91000) + (if b0216 then 0 else 91000) + (if b0217 then 0 else 91000) + (if b0218 then 0 else 91000) + (if b0219 then 0 else 91000) + (if b0220 then 0 else 91000) + (if b0221 then 0 else 91000) + (if b0222 then 0 else 91000) + (if b0223 then 0 else 91000) + (if b0224 then 0 else 91000) + (if b0225 then 0 else 91000) + (if b0226 then 0 else 91000) + (if b0227 then 0 else 91000) < 441
}
Prover Time taken = 19.626488
Added Horn clause: 8 => 9
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/linear-algebra/solvers/lu/kernel1.bpl.ice2.bpl
Total learner time was 00:00:00.1217750
Verifying $kernel1: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool) : bool
{
  0 + (if b0000 then 0 else 91000) + (if b0001 then 0 else 91000) + (if b0003 then 0 else 91000) + (if b0004 then 0 else 91000) + (if b0005 then 0 else 91000) + (if b0006 then 0 else 91000) + (if b0007 then 0 else 91000) + (if b0008 then 0 else 91000) + (if b0009 then 0 else 91000) + (if b0010 then 0 else 91000) + (if b0012 then 0 else 91000) + (if b0014 then 0 else 91000) + (if b0015 then 0 else 91000) + (if b0016 then 0 else 91000) + (if b0017 then 0 else 91000) + (if b0018 then 0 else 91000) + (if b0019 then 0 else 91000) + (if b0020 then 0 else 91000) + (if b0021 then 0 else 91000) + (if b0022 then 0 else 91000) + (if b0023 then 0 else 91000) + (if b0024 then 0 else 91000) + (if b0025 then 0 else 91000) + (if b0026 then 0 else 91000) + (if b0027 then 0 else 91000) + (if b0028 then 0 else 91000) + (if b0029 then 0 else 91000) + (if b0030 then 0 else 91000) + (if b0031 then 0 else 91000) + (if b0032 then 0 else 91000) + (if b0033 then 0 else 91000) + (if b0034 then 0 else 91000) + (if b0035 then 0 else 91000) + (if b0036 then 0 else 91000) + (if b0037 then 0 else 91000) + (if b0038 then 0 else 91000) + (if b0039 then 0 else 91000) + (if b0040 then 0 else 91000) + (if b0041 then 0 else 91000) + (if b0042 then 0 else 91000) + (if b0043 then 0 else 91000) + (if b0044 then 0 else 91000) + (if b0045 then 0 else 91000) + (if b0046 then 0 else 91000) + (if b0047 then 0 else 91000) + (if b0048 then 0 else 91000) + (if b0049 then 0 else 91000) + (if b0050 then 0 else 91000) + (if b0051 then 0 else 91000) + (if b0052 then 0 else 91000) + (if b0053 then 0 else 91000) + (if b0054 then 0 else 91000) + (if b0055 then 0 else 91000) + (if b0056 then 0 else 91000) + (if b0057 then 0 else 91000) + (if b0058 then 0 else 91000) + (if b0059 then 0 else 91000) + (if b0060 then 0 else 91000) + (if b0061 then 0 else 91000) + (if b0062 then 0 else 91000) + (if b0063 then 0 else 91000) + (if b0064 then 0 else 91000) + (if b0065 then 0 else 91000) + (if b0066 then 0 else 91000) + (if b0067 then 0 else 91000) + (if b0068 then 0 else 91000) + (if b0069 then 0 else 91000) + (if b0070 then 0 else 91000) + (if b0071 then 0 else 91000) + (if b0135 then 0 else 91000) + (if b0136 then 0 else 91000) + (if b0137 then 0 else 91000) + (if b0138 then 0 else 91000) + (if b0139 then 0 else 91000) + (if b0140 then 0 else 91000) + (if b0141 then 0 else 91000) + (if b0142 then 0 else 91000) + (if b0144 then 0 else 91000) + (if b0145 then 0 else 91000) + (if b0146 then 0 else 91000) + (if b0147 then 0 else 91000) + (if b0148 then 0 else 91000) + (if b0149 then 0 else 91000) + (if b0150 then 0 else 91000) + (if b0151 then 0 else 91000) + (if b0152 then 0 else 91000) + (if b0153 then 0 else 91000) + (if b0154 then 0 else 91000) + (if b0155 then 0 else 91000) + (if b0156 then 0 else 91000) + (if b0157 then 0 else 91000) + (if b0158 then 0 else 91000) + (if b0159 then 0 else 91000) + (if b0160 then 0 else 91000) + (if b0161 then 0 else 91000) + (if b0162 then 0 else 91000) + (if b0163 then 0 else 91000) + (if b0164 then 0 else 91000) + (if b0165 then 0 else 91000) + (if b0166 then 0 else 91000) + (if b0167 then 0 else 91000) + (if b0168 then 0 else 91000) + (if b0169 then 0 else 91000) + (if b0170 then 0 else 91000) + (if b0171 then 0 else 91000) + (if b0172 then 0 else 91000) + (if b0173 then 0 else 91000) + (if b0174 then 0 else 91000) + (if b0175 then 0 else 91000) + (if b0176 then 0 else 91000) + (if b0177 then 0 else 91000) + (if b0178 then 0 else 91000) + (if b0179 then 0 else 91000) + (if b0180 then 0 else 91000) + (if b0181 then 0 else 91000) + (if b0182 then 0 else 91000) + (if b0183 then 0 else 91000) + (if b0184 then 0 else 91000) + (if b0185 then 0 else 91000) + (if b0186 then 0 else 91000) + (if b0187 then 0 else 91000) + (if b0188 then 0 else 91000) + (if b0189 then 0 else 91000) + (if b0190 then 0 else 91000) + (if b0191 then 0 else 91000) + (if b0192 then 0 else 91000) + (if b0193 then 0 else 91000) + (if b0194 then 0 else 91000) + (if b0195 then 0 else 91000) + (if b0196 then 0 else 91000) + (if b0197 then 0 else 91000) + (if b0198 then 0 else 91000) + (if b0199 then 0 else 91000) + (if b0200 then 0 else 91000) + (if b0201 then 0 else 91000) + (if b0202 then 0 else 91000) + (if b0203 then 0 else 91000) + (if b0204 then 0 else 91000) + (if b0205 then 0 else 91000) + (if b0206 then 0 else 91000) + (if b0207 then 0 else 91000) + (if b0208 then 0 else 91000) + (if b0209 then 0 else 91000) + (if b0210 then 0 else 91000) + (if b0211 then 0 else 91000) + (if b0212 then 0 else 91000) + (if b0213 then 0 else 91000) + (if b0214 then 0 else 91000) + (if b0215 then 0 else 91000) + (if b0216 then 0 else 91000) + (if b0217 then 0 else 91000) + (if b0218 then 0 else 91000) + (if b0219 then 0 else 91000) + (if b0220 then 0 else 91000) + (if b0221 then 0 else 91000) + (if b0222 then 0 else 91000) + (if b0223 then 0 else 91000) + (if b0224 then 0 else 91000) + (if b0225 then 0 else 91000) + (if b0226 then 0 else 91000) + (if b0227 then 0 else 91000) < 441
}
Prover Time taken = 14.976034
Added Horn clause: 10 => 11
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/linear-algebra/solvers/lu/kernel1.bpl.ice2.bpl
Total learner time was 00:00:00.1222910
Verifying $kernel1: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool) : bool
{
  0 + (if b0000 then 0 else 91000) + (if b0001 then 0 else 91000) + (if b0003 then 0 else 91000) + (if b0004 then 0 else 91000) + (if b0005 then 0 else 91000) + (if b0006 then 0 else 91000) + (if b0007 then 0 else 91000) + (if b0008 then 0 else 91000) + (if b0009 then 0 else 91000) + (if b0010 then 0 else 91000) + (if b0012 then 0 else 91000) + (if b0015 then 0 else 91000) + (if b0016 then 0 else 91000) + (if b0017 then 0 else 91000) + (if b0018 then 0 else 91000) + (if b0019 then 0 else 91000) + (if b0020 then 0 else 91000) + (if b0021 then 0 else 91000) + (if b0022 then 0 else 91000) + (if b0023 then 0 else 91000) + (if b0024 then 0 else 91000) + (if b0025 then 0 else 91000) + (if b0026 then 0 else 91000) + (if b0027 then 0 else 91000) + (if b0028 then 0 else 91000) + (if b0029 then 0 else 91000) + (if b0030 then 0 else 91000) + (if b0031 then 0 else 91000) + (if b0032 then 0 else 91000) + (if b0033 then 0 else 91000) + (if b0034 then 0 else 91000) + (if b0035 then 0 else 91000) + (if b0036 then 0 else 91000) + (if b0037 then 0 else 91000) + (if b0038 then 0 else 91000) + (if b0039 then 0 else 91000) + (if b0040 then 0 else 91000) + (if b0041 then 0 else 91000) + (if b0042 then 0 else 91000) + (if b0043 then 0 else 91000) + (if b0044 then 0 else 91000) + (if b0045 then 0 else 91000) + (if b0046 then 0 else 91000) + (if b0047 then 0 else 91000) + (if b0048 then 0 else 91000) + (if b0049 then 0 else 91000) + (if b0050 then 0 else 91000) + (if b0051 then 0 else 91000) + (if b0052 then 0 else 91000) + (if b0053 then 0 else 91000) + (if b0054 then 0 else 91000) + (if b0055 then 0 else 91000) + (if b0056 then 0 else 91000) + (if b0057 then 0 else 91000) + (if b0058 then 0 else 91000) + (if b0059 then 0 else 91000) + (if b0060 then 0 else 91000) + (if b0061 then 0 else 91000) + (if b0062 then 0 else 91000) + (if b0063 then 0 else 91000) + (if b0064 then 0 else 91000) + (if b0065 then 0 else 91000) + (if b0066 then 0 else 91000) + (if b0067 then 0 else 91000) + (if b0068 then 0 else 91000) + (if b0069 then 0 else 91000) + (if b0070 then 0 else 91000) + (if b0071 then 0 else 91000) + (if b0135 then 0 else 91000) + (if b0136 then 0 else 91000) + (if b0137 then 0 else 91000) + (if b0138 then 0 else 91000) + (if b0139 then 0 else 91000) + (if b0140 then 0 else 91000) + (if b0141 then 0 else 91000) + (if b0142 then 0 else 91000) + (if b0144 then 0 else 91000) + (if b0145 then 0 else 91000) + (if b0146 then 0 else 91000) + (if b0147 then 0 else 91000) + (if b0148 then 0 else 91000) + (if b0149 then 0 else 91000) + (if b0150 then 0 else 91000) + (if b0151 then 0 else 91000) + (if b0152 then 0 else 91000) + (if b0153 then 0 else 91000) + (if b0154 then 0 else 91000) + (if b0155 then 0 else 91000) + (if b0156 then 0 else 91000) + (if b0157 then 0 else 91000) + (if b0158 then 0 else 91000) + (if b0159 then 0 else 91000) + (if b0160 then 0 else 91000) + (if b0161 then 0 else 91000) + (if b0162 then 0 else 91000) + (if b0163 then 0 else 91000) + (if b0164 then 0 else 91000) + (if b0165 then 0 else 91000) + (if b0166 then 0 else 91000) + (if b0167 then 0 else 91000) + (if b0168 then 0 else 91000) + (if b0169 then 0 else 91000) + (if b0170 then 0 else 91000) + (if b0171 then 0 else 91000) + (if b0172 then 0 else 91000) + (if b0173 then 0 else 91000) + (if b0174 then 0 else 91000) + (if b0175 then 0 else 91000) + (if b0176 then 0 else 91000) + (if b0177 then 0 else 91000) + (if b0178 then 0 else 91000) + (if b0179 then 0 else 91000) + (if b0180 then 0 else 91000) + (if b0181 then 0 else 91000) + (if b0182 then 0 else 91000) + (if b0183 then 0 else 91000) + (if b0184 then 0 else 91000) + (if b0185 then 0 else 91000) + (if b0186 then 0 else 91000) + (if b0187 then 0 else 91000) + (if b0188 then 0 else 91000) + (if b0189 then 0 else 91000) + (if b0190 then 0 else 91000) + (if b0191 then 0 else 91000) + (if b0192 then 0 else 91000) + (if b0193 then 0 else 91000) + (if b0194 then 0 else 91000) + (if b0195 then 0 else 91000) + (if b0196 then 0 else 91000) + (if b0197 then 0 else 91000) + (if b0198 then 0 else 91000) + (if b0199 then 0 else 91000) + (if b0200 then 0 else 91000) + (if b0201 then 0 else 91000) + (if b0202 then 0 else 91000) + (if b0203 then 0 else 91000) + (if b0204 then 0 else 91000) + (if b0205 then 0 else 91000) + (if b0206 then 0 else 91000) + (if b0207 then 0 else 91000) + (if b0208 then 0 else 91000) + (if b0209 then 0 else 91000) + (if b0210 then 0 else 91000) + (if b0211 then 0 else 91000) + (if b0212 then 0 else 91000) + (if b0213 then 0 else 91000) + (if b0214 then 0 else 91000) + (if b0215 then 0 else 91000) + (if b0216 then 0 else 91000) + (if b0217 then 0 else 91000) + (if b0218 then 0 else 91000) + (if b0219 then 0 else 91000) + (if b0220 then 0 else 91000) + (if b0221 then 0 else 91000) + (if b0222 then 0 else 91000) + (if b0223 then 0 else 91000) + (if b0224 then 0 else 91000) + (if b0225 then 0 else 91000) + (if b0226 then 0 else 91000) + (if b0227 then 0 else 91000) < 441
}
Prover Time taken = 30.488293
Added Horn clause: 12 && 7 && 13 => 14
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/linear-algebra/solvers/lu/kernel1.bpl.ice2.bpl
Total learner time was 00:00:00.1300190
Verifying $kernel1: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool) : bool
{
  0 + (if b0000 then 0 else 91000) + (if b0001 then 0 else 91000) + (if b0003 then 0 else 91000) + (if b0004 then 0 else 91000) + (if b0005 then 0 else 91000) + (if b0006 then 0 else 91000) + (if b0007 then 0 else 91000) + (if b0008 then 0 else 91000) + (if b0009 then 0 else 91000) + (if b0010 then 0 else 91000) + (if b0012 then 0 else 91000) + (if b0015 then 0 else 91000) + (if b0016 then 0 else 91000) + (if b0017 then 0 else 91000) + (if b0018 then 0 else 91000) + (if b0019 then 0 else 91000) + (if b0020 then 0 else 91000) + (if b0021 then 0 else 91000) + (if b0022 then 0 else 91000) + (if b0023 then 0 else 91000) + (if b0024 then 0 else 91000) + (if b0025 then 0 else 91000) + (if b0026 then 0 else 91000) + (if b0027 then 0 else 91000) + (if b0028 then 0 else 91000) + (if b0029 then 0 else 91000) + (if b0030 then 0 else 91000) + (if b0031 then 0 else 91000) + (if b0032 then 0 else 91000) + (if b0033 then 0 else 91000) + (if b0034 then 0 else 91000) + (if b0035 then 0 else 91000) + (if b0036 then 0 else 91000) + (if b0037 then 0 else 91000) + (if b0038 then 0 else 91000) + (if b0039 then 0 else 91000) + (if b0040 then 0 else 91000) + (if b0041 then 0 else 91000) + (if b0042 then 0 else 91000) + (if b0043 then 0 else 91000) + (if b0044 then 0 else 91000) + (if b0045 then 0 else 91000) + (if b0046 then 0 else 91000) + (if b0047 then 0 else 91000) + (if b0048 then 0 else 91000) + (if b0049 then 0 else 91000) + (if b0050 then 0 else 91000) + (if b0051 then 0 else 91000) + (if b0052 then 0 else 91000) + (if b0053 then 0 else 91000) + (if b0054 then 0 else 91000) + (if b0055 then 0 else 91000) + (if b0056 then 0 else 91000) + (if b0058 then 0 else 91000) + (if b0059 then 0 else 91000) + (if b0060 then 0 else 91000) + (if b0061 then 0 else 91000) + (if b0062 then 0 else 91000) + (if b0063 then 0 else 91000) + (if b0064 then 0 else 91000) + (if b0065 then 0 else 91000) + (if b0066 then 0 else 91000) + (if b0067 then 0 else 91000) + (if b0068 then 0 else 91000) + (if b0069 then 0 else 91000) + (if b0070 then 0 else 91000) + (if b0071 then 0 else 91000) + (if b0135 then 0 else 91000) + (if b0136 then 0 else 91000) + (if b0137 then 0 else 91000) + (if b0138 then 0 else 91000) + (if b0139 then 0 else 91000) + (if b0140 then 0 else 91000) + (if b0141 then 0 else 91000) + (if b0142 then 0 else 91000) + (if b0144 then 0 else 91000) + (if b0145 then 0 else 91000) + (if b0146 then 0 else 91000) + (if b0147 then 0 else 91000) + (if b0148 then 0 else 91000) + (if b0149 then 0 else 91000) + (if b0150 then 0 else 91000) + (if b0151 then 0 else 91000) + (if b0152 then 0 else 91000) + (if b0153 then 0 else 91000) + (if b0154 then 0 else 91000) + (if b0155 then 0 else 91000) + (if b0156 then 0 else 91000) + (if b0157 then 0 else 91000) + (if b0158 then 0 else 91000) + (if b0159 then 0 else 91000) + (if b0160 then 0 else 91000) + (if b0161 then 0 else 91000) + (if b0162 then 0 else 91000) + (if b0163 then 0 else 91000) + (if b0164 then 0 else 91000) + (if b0165 then 0 else 91000) + (if b0166 then 0 else 91000) + (if b0167 then 0 else 91000) + (if b0168 then 0 else 91000) + (if b0169 then 0 else 91000) + (if b0170 then 0 else 91000) + (if b0171 then 0 else 91000) + (if b0172 then 0 else 91000) + (if b0173 then 0 else 91000) + (if b0174 then 0 else 91000) + (if b0175 then 0 else 91000) + (if b0176 then 0 else 91000) + (if b0177 then 0 else 91000) + (if b0178 then 0 else 91000) + (if b0179 then 0 else 91000) + (if b0180 then 0 else 91000) + (if b0181 then 0 else 91000) + (if b0182 then 0 else 91000) + (if b0183 then 0 else 91000) + (if b0184 then 0 else 91000) + (if b0185 then 0 else 91000) + (if b0186 then 0 else 91000) + (if b0187 then 0 else 91000) + (if b0188 then 0 else 91000) + (if b0189 then 0 else 91000) + (if b0190 then 0 else 91000) + (if b0191 then 0 else 91000) + (if b0192 then 0 else 91000) + (if b0193 then 0 else 91000) + (if b0194 then 0 else 91000) + (if b0195 then 0 else 91000) + (if b0196 then 0 else 91000) + (if b0197 then 0 else 91000) + (if b0198 then 0 else 91000) + (if b0199 then 0 else 91000) + (if b0200 then 0 else 91000) + (if b0201 then 0 else 91000) + (if b0202 then 0 else 91000) + (if b0203 then 0 else 91000) + (if b0204 then 0 else 91000) + (if b0205 then 0 else 91000) + (if b0206 then 0 else 91000) + (if b0207 then 0 else 91000) + (if b0208 then 0 else 91000) + (if b0209 then 0 else 91000) + (if b0210 then 0 else 91000) + (if b0211 then 0 else 91000) + (if b0212 then 0 else 91000) + (if b0213 then 0 else 91000) + (if b0214 then 0 else 91000) + (if b0215 then 0 else 91000) + (if b0216 then 0 else 91000) + (if b0217 then 0 else 91000) + (if b0218 then 0 else 91000) + (if b0219 then 0 else 91000) + (if b0220 then 0 else 91000) + (if b0221 then 0 else 91000) + (if b0222 then 0 else 91000) + (if b0223 then 0 else 91000) + (if b0224 then 0 else 91000) + (if b0225 then 0 else 91000) + (if b0226 then 0 else 91000) + (if b0227 then 0 else 91000) < 441
}
Prover Time taken = 26.202465
Added Horn clause: 15 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 => 16
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/linear-algebra/solvers/lu/kernel1.bpl.ice2.bpl
Total learner time was 00:00:00.1302380
Verifying $kernel1: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool) : bool
{
  0 + (if b0000 then 0 else 91000) + (if b0001 then 0 else 91000) + (if b0004 then 0 else 91000) + (if b0006 then 0 else 91000) + (if b0008 then 0 else 91000) + (if b0009 then 0 else 91000) + (if b0010 then 0 else 91000) + (if b0012 then 0 else 91000) + (if b0015 then 0 else 91000) + (if b0016 then 0 else 91000) + (if b0017 then 0 else 91000) + (if b0018 then 0 else 91000) + (if b0019 then 0 else 91000) + (if b0020 then 0 else 91000) + (if b0021 then 0 else 91000) + (if b0022 then 0 else 91000) + (if b0023 then 0 else 91000) + (if b0024 then 0 else 91000) + (if b0025 then 0 else 91000) + (if b0026 then 0 else 91000) + (if b0027 then 0 else 91000) + (if b0028 then 0 else 91000) + (if b0029 then 0 else 91000) + (if b0030 then 0 else 91000) + (if b0031 then 0 else 91000) + (if b0032 then 0 else 91000) + (if b0033 then 0 else 91000) + (if b0034 then 0 else 91000) + (if b0035 then 0 else 91000) + (if b0036 then 0 else 91000) + (if b0037 then 0 else 91000) + (if b0038 then 0 else 91000) + (if b0039 then 0 else 91000) + (if b0040 then 0 else 91000) + (if b0041 then 0 else 91000) + (if b0042 then 0 else 91000) + (if b0043 then 0 else 91000) + (if b0044 then 0 else 91000) + (if b0045 then 0 else 91000) + (if b0046 then 0 else 91000) + (if b0047 then 0 else 91000) + (if b0048 then 0 else 91000) + (if b0049 then 0 else 91000) + (if b0050 then 0 else 91000) + (if b0051 then 0 else 91000) + (if b0052 then 0 else 91000) + (if b0053 then 0 else 91000) + (if b0054 then 0 else 91000) + (if b0055 then 0 else 91000) + (if b0056 then 0 else 91000) + (if b0058 then 0 else 91000) + (if b0059 then 0 else 91000) + (if b0060 then 0 else 91000) + (if b0061 then 0 else 91000) + (if b0062 then 0 else 91000) + (if b0063 then 0 else 91000) + (if b0064 then 0 else 91000) + (if b0065 then 0 else 91000) + (if b0066 then 0 else 91000) + (if b0067 then 0 else 91000) + (if b0068 then 0 else 91000) + (if b0069 then 0 else 91000) + (if b0071 then 0 else 91000) + (if b0135 then 0 else 91000) + (if b0136 then 0 else 91000) + (if b0137 then 0 else 91000) + (if b0138 then 0 else 91000) + (if b0139 then 0 else 91000) + (if b0140 then 0 else 91000) + (if b0141 then 0 else 91000) + (if b0142 then 0 else 91000) + (if b0144 then 0 else 91000) + (if b0145 then 0 else 91000) + (if b0146 then 0 else 91000) + (if b0147 then 0 else 91000) + (if b0148 then 0 else 91000) + (if b0149 then 0 else 91000) + (if b0150 then 0 else 91000) + (if b0151 then 0 else 91000) + (if b0152 then 0 else 91000) + (if b0153 then 0 else 91000) + (if b0154 then 0 else 91000) + (if b0155 then 0 else 91000) + (if b0156 then 0 else 91000) + (if b0157 then 0 else 91000) + (if b0158 then 0 else 91000) + (if b0159 then 0 else 91000) + (if b0160 then 0 else 91000) + (if b0161 then 0 else 91000) + (if b0162 then 0 else 91000) + (if b0163 then 0 else 91000) + (if b0164 then 0 else 91000) + (if b0165 then 0 else 91000) + (if b0166 then 0 else 91000) + (if b0167 then 0 else 91000) + (if b0168 then 0 else 91000) + (if b0169 then 0 else 91000) + (if b0170 then 0 else 91000) + (if b0171 then 0 else 91000) + (if b0172 then 0 else 91000) + (if b0173 then 0 else 91000) + (if b0174 then 0 else 91000) + (if b0175 then 0 else 91000) + (if b0176 then 0 else 91000) + (if b0177 then 0 else 91000) + (if b0178 then 0 else 91000) + (if b0179 then 0 else 91000) + (if b0180 then 0 else 91000) + (if b0181 then 0 else 91000) + (if b0182 then 0 else 91000) + (if b0183 then 0 else 91000) + (if b0184 then 0 else 91000) + (if b0185 then 0 else 91000) + (if b0186 then 0 else 91000) + (if b0187 then 0 else 91000) + (if b0188 then 0 else 91000) + (if b0189 then 0 else 91000) + (if b0190 then 0 else 91000) + (if b0191 then 0 else 91000) + (if b0192 then 0 else 91000) + (if b0193 then 0 else 91000) + (if b0194 then 0 else 91000) + (if b0195 then 0 else 91000) + (if b0196 then 0 else 91000) + (if b0197 then 0 else 91000) + (if b0198 then 0 else 91000) + (if b0199 then 0 else 91000) + (if b0200 then 0 else 91000) + (if b0201 then 0 else 91000) + (if b0202 then 0 else 91000) + (if b0203 then 0 else 91000) + (if b0204 then 0 else 91000) + (if b0205 then 0 else 91000) + (if b0206 then 0 else 91000) + (if b0207 then 0 else 91000) + (if b0208 then 0 else 91000) + (if b0209 then 0 else 91000) + (if b0210 then 0 else 91000) + (if b0211 then 0 else 91000) + (if b0212 then 0 else 91000) + (if b0213 then 0 else 91000) + (if b0214 then 0 else 91000) + (if b0215 then 0 else 91000) + (if b0216 then 0 else 91000) + (if b0217 then 0 else 91000) + (if b0218 then 0 else 91000) + (if b0219 then 0 else 91000) + (if b0220 then 0 else 91000) + (if b0221 then 0 else 91000) + (if b0222 then 0 else 91000) + (if b0223 then 0 else 91000) + (if b0224 then 0 else 91000) + (if b0225 then 0 else 91000) + (if b0226 then 0 else 91000) + (if b0227 then 0 else 91000) < 441
}
Prover Time taken = 32.484754
Added Horn clause: 17 => 18
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/linear-algebra/solvers/lu/kernel1.bpl.ice2.bpl
Total learner time was 00:00:00.1233320
Verifying $kernel1: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool) : bool
{
  0 + (if b0000 then 0 else 91000) + (if b0001 then 0 else 91000) + (if b0004 then 0 else 91000) + (if b0006 then 0 else 91000) + (if b0008 then 0 else 91000) + (if b0009 then 0 else 91000) + (if b0010 then 0 else 91000) + (if b0012 then 0 else 91000) + (if b0015 then 0 else 91000) + (if b0016 then 0 else 91000) + (if b0017 then 0 else 91000) + (if b0018 then 0 else 91000) + (if b0019 then 0 else 91000) + (if b0020 then 0 else 91000) + (if b0021 then 0 else 91000) + (if b0022 then 0 else 91000) + (if b0023 then 0 else 91000) + (if b0024 then 0 else 91000) + (if b0025 then 0 else 91000) + (if b0026 then 0 else 91000) + (if b0027 then 0 else 91000) + (if b0028 then 0 else 91000) + (if b0029 then 0 else 91000) + (if b0030 then 0 else 91000) + (if b0031 then 0 else 91000) + (if b0032 then 0 else 91000) + (if b0033 then 0 else 91000) + (if b0034 then 0 else 91000) + (if b0035 then 0 else 91000) + (if b0036 then 0 else 91000) + (if b0037 then 0 else 91000) + (if b0038 then 0 else 91000) + (if b0039 then 0 else 91000) + (if b0040 then 0 else 91000) + (if b0041 then 0 else 91000) + (if b0042 then 0 else 91000) + (if b0043 then 0 else 91000) + (if b0044 then 0 else 91000) + (if b0045 then 0 else 91000) + (if b0046 then 0 else 91000) + (if b0047 then 0 else 91000) + (if b0048 then 0 else 91000) + (if b0049 then 0 else 91000) + (if b0050 then 0 else 91000) + (if b0051 then 0 else 91000) + (if b0052 then 0 else 91000) + (if b0053 then 0 else 91000) + (if b0054 then 0 else 91000) + (if b0055 then 0 else 91000) + (if b0056 then 0 else 91000) + (if b0058 then 0 else 91000) + (if b0059 then 0 else 91000) + (if b0060 then 0 else 91000) + (if b0061 then 0 else 91000) + (if b0062 then 0 else 91000) + (if b0063 then 0 else 91000) + (if b0064 then 0 else 91000) + (if b0065 then 0 else 91000) + (if b0066 then 0 else 91000) + (if b0067 then 0 else 91000) + (if b0068 then 0 else 91000) + (if b0069 then 0 else 91000) + (if b0071 then 0 else 91000) + (if b0135 then 0 else 91000) + (if b0136 then 0 else 91000) + (if b0137 then 0 else 91000) + (if b0138 then 0 else 91000) + (if b0139 then 0 else 91000) + (if b0140 then 0 else 91000) + (if b0141 then 0 else 91000) + (if b0142 then 0 else 91000) + (if b0144 then 0 else 91000) + (if b0198 then 0 else 91000) + (if b0199 then 0 else 91000) + (if b0200 then 0 else 91000) + (if b0201 then 0 else 91000) + (if b0202 then 0 else 91000) + (if b0203 then 0 else 91000) + (if b0204 then 0 else 91000) + (if b0205 then 0 else 91000) + (if b0206 then 0 else 91000) + (if b0207 then 0 else 91000) + (if b0208 then 0 else 91000) + (if b0209 then 0 else 91000) + (if b0210 then 0 else 91000) + (if b0211 then 0 else 91000) + (if b0212 then 0 else 91000) + (if b0213 then 0 else 91000) + (if b0214 then 0 else 91000) + (if b0215 then 0 else 91000) + (if b0216 then 0 else 91000) + (if b0217 then 0 else 91000) + (if b0218 then 0 else 91000) + (if b0219 then 0 else 91000) + (if b0220 then 0 else 91000) + (if b0221 then 0 else 91000) + (if b0222 then 0 else 91000) + (if b0223 then 0 else 91000) + (if b0224 then 0 else 91000) + (if b0225 then 0 else 91000) + (if b0226 then 0 else 91000) + (if b0227 then 0 else 91000) < 441
}
Prover Time taken = 19.625341
Added Horn clause: 19 && 7 && 11 && 0 && 14 => 20
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/linear-algebra/solvers/lu/kernel1.bpl.ice2.bpl
Total learner time was 00:00:00.1237980
Verifying $kernel1: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool) : bool
{
  0 + (if b0000 then 0 else 91000) + (if b0001 then 0 else 91000) + (if b0004 then 0 else 91000) + (if b0006 then 0 else 91000) + (if b0008 then 0 else 91000) + (if b0009 then 0 else 91000) + (if b0010 then 0 else 91000) + (if b0012 then 0 else 91000) + (if b0015 then 0 else 91000) + (if b0016 then 0 else 91000) + (if b0017 then 0 else 91000) + (if b0018 then 0 else 91000) + (if b0019 then 0 else 91000) + (if b0020 then 0 else 91000) + (if b0021 then 0 else 91000) + (if b0022 then 0 else 91000) + (if b0023 then 0 else 91000) + (if b0024 then 0 else 91000) + (if b0025 then 0 else 91000) + (if b0026 then 0 else 91000) + (if b0027 then 0 else 91000) + (if b0028 then 0 else 91000) + (if b0029 then 0 else 91000) + (if b0030 then 0 else 91000) + (if b0031 then 0 else 91000) + (if b0032 then 0 else 91000) + (if b0033 then 0 else 91000) + (if b0034 then 0 else 91000) + (if b0035 then 0 else 91000) + (if b0036 then 0 else 91000) + (if b0037 then 0 else 91000) + (if b0038 then 0 else 91000) + (if b0039 then 0 else 91000) + (if b0040 then 0 else 91000) + (if b0041 then 0 else 91000) + (if b0042 then 0 else 91000) + (if b0043 then 0 else 91000) + (if b0044 then 0 else 91000) + (if b0045 then 0 else 91000) + (if b0046 then 0 else 91000) + (if b0047 then 0 else 91000) + (if b0048 then 0 else 91000) + (if b0049 then 0 else 91000) + (if b0050 then 0 else 91000) + (if b0051 then 0 else 91000) + (if b0052 then 0 else 91000) + (if b0053 then 0 else 91000) + (if b0054 then 0 else 91000) + (if b0055 then 0 else 91000) + (if b0056 then 0 else 91000) + (if b0059 then 0 else 91000) + (if b0061 then 0 else 91000) + (if b0062 then 0 else 91000) + (if b0063 then 0 else 91000) + (if b0064 then 0 else 91000) + (if b0065 then 0 else 91000) + (if b0066 then 0 else 91000) + (if b0067 then 0 else 91000) + (if b0068 then 0 else 91000) + (if b0069 then 0 else 91000) + (if b0071 then 0 else 91000) + (if b0135 then 0 else 91000) + (if b0136 then 0 else 91000) + (if b0137 then 0 else 91000) + (if b0138 then 0 else 91000) + (if b0139 then 0 else 91000) + (if b0140 then 0 else 91000) + (if b0141 then 0 else 91000) + (if b0142 then 0 else 91000) + (if b0144 then 0 else 91000) + (if b0198 then 0 else 91000) + (if b0199 then 0 else 91000) + (if b0200 then 0 else 91000) + (if b0201 then 0 else 91000) + (if b0202 then 0 else 91000) + (if b0203 then 0 else 91000) + (if b0204 then 0 else 91000) + (if b0205 then 0 else 91000) + (if b0206 then 0 else 91000) + (if b0207 then 0 else 91000) + (if b0208 then 0 else 91000) + (if b0209 then 0 else 91000) + (if b0210 then 0 else 91000) + (if b0211 then 0 else 91000) + (if b0212 then 0 else 91000) + (if b0213 then 0 else 91000) + (if b0214 then 0 else 91000) + (if b0215 then 0 else 91000) + (if b0216 then 0 else 91000) + (if b0217 then 0 else 91000) + (if b0218 then 0 else 91000) + (if b0219 then 0 else 91000) + (if b0220 then 0 else 91000) + (if b0221 then 0 else 91000) + (if b0222 then 0 else 91000) + (if b0223 then 0 else 91000) + (if b0224 then 0 else 91000) + (if b0225 then 0 else 91000) + (if b0226 then 0 else 91000) + (if b0227 then 0 else 91000) < 441
}
Prover Time taken = 32.906369
Added Horn clause: 21 && 7 && 13 && 0 && 0 => 22
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/linear-algebra/solvers/lu/kernel1.bpl.ice2.bpl
Total learner time was 00:00:00.1354720
Verifying $kernel1: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool) : bool
{
  0 + (if b0000 then 0 else 91000) + (if b0001 then 0 else 91000) + (if b0004 then 0 else 91000) + (if b0006 then 0 else 91000) + (if b0008 then 0 else 91000) + (if b0009 then 0 else 91000) + (if b0010 then 0 else 91000) + (if b0012 then 0 else 91000) + (if b0015 then 0 else 91000) + (if b0016 then 0 else 91000) + (if b0017 then 0 else 91000) + (if b0018 then 0 else 91000) + (if b0019 then 0 else 91000) + (if b0020 then 0 else 91000) + (if b0021 then 0 else 91000) + (if b0022 then 0 else 91000) + (if b0023 then 0 else 91000) + (if b0024 then 0 else 91000) + (if b0025 then 0 else 91000) + (if b0026 then 0 else 91000) + (if b0027 then 0 else 91000) + (if b0028 then 0 else 91000) + (if b0030 then 0 else 91000) + (if b0031 then 0 else 91000) + (if b0032 then 0 else 91000) + (if b0033 then 0 else 91000) + (if b0034 then 0 else 91000) + (if b0035 then 0 else 91000) + (if b0036 then 0 else 91000) + (if b0037 then 0 else 91000) + (if b0038 then 0 else 91000) + (if b0039 then 0 else 91000) + (if b0040 then 0 else 91000) + (if b0041 then 0 else 91000) + (if b0042 then 0 else 91000) + (if b0043 then 0 else 91000) + (if b0044 then 0 else 91000) + (if b0045 then 0 else 91000) + (if b0046 then 0 else 91000) + (if b0047 then 0 else 91000) + (if b0048 then 0 else 91000) + (if b0049 then 0 else 91000) + (if b0050 then 0 else 91000) + (if b0051 then 0 else 91000) + (if b0052 then 0 else 91000) + (if b0053 then 0 else 91000) + (if b0054 then 0 else 91000) + (if b0055 then 0 else 91000) + (if b0056 then 0 else 91000) + (if b0059 then 0 else 91000) + (if b0061 then 0 else 91000) + (if b0062 then 0 else 91000) + (if b0063 then 0 else 91000) + (if b0064 then 0 else 91000) + (if b0065 then 0 else 91000) + (if b0066 then 0 else 91000) + (if b0067 then 0 else 91000) + (if b0068 then 0 else 91000) + (if b0069 then 0 else 91000) + (if b0071 then 0 else 91000) + (if b0135 then 0 else 91000) + (if b0136 then 0 else 91000) + (if b0137 then 0 else 91000) + (if b0138 then 0 else 91000) + (if b0139 then 0 else 91000) + (if b0140 then 0 else 91000) + (if b0141 then 0 else 91000) + (if b0142 then 0 else 91000) + (if b0144 then 0 else 91000) + (if b0198 then 0 else 91000) + (if b0199 then 0 else 91000) + (if b0200 then 0 else 91000) + (if b0201 then 0 else 91000) + (if b0202 then 0 else 91000) + (if b0203 then 0 else 91000) + (if b0204 then 0 else 91000) + (if b0205 then 0 else 91000) + (if b0206 then 0 else 91000) + (if b0207 then 0 else 91000) + (if b0208 then 0 else 91000) + (if b0209 then 0 else 91000) + (if b0210 then 0 else 91000) + (if b0211 then 0 else 91000) + (if b0212 then 0 else 91000) + (if b0213 then 0 else 91000) + (if b0214 then 0 else 91000) + (if b0215 then 0 else 91000) + (if b0216 then 0 else 91000) + (if b0217 then 0 else 91000) + (if b0218 then 0 else 91000) + (if b0219 then 0 else 91000) + (if b0220 then 0 else 91000) + (if b0221 then 0 else 91000) + (if b0222 then 0 else 91000) + (if b0223 then 0 else 91000) + (if b0224 then 0 else 91000) + (if b0225 then 0 else 91000) + (if b0226 then 0 else 91000) + (if b0227 then 0 else 91000) < 441
}
Prover Time taken = 45.259876
Added Horn clause: 19 && 7 && 13 && 0 && 0 => 23
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/linear-algebra/solvers/lu/kernel1.bpl.ice2.bpl
Total learner time was 00:00:00.1246410
Verifying $kernel1: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool) : bool
{
  0 + (if b0000 then 0 else 91000) + (if b0001 then 0 else 91000) + (if b0004 then 0 else 91000) + (if b0006 then 0 else 91000) + (if b0008 then 0 else 91000) + (if b0009 then 0 else 91000) + (if b0010 then 0 else 91000) + (if b0012 then 0 else 91000) + (if b0015 then 0 else 91000) + (if b0016 then 0 else 91000) + (if b0017 then 0 else 91000) + (if b0018 then 0 else 91000) + (if b0019 then 0 else 91000) + (if b0020 then 0 else 91000) + (if b0021 then 0 else 91000) + (if b0022 then 0 else 91000) + (if b0023 then 0 else 91000) + (if b0024 then 0 else 91000) + (if b0025 then 0 else 91000) + (if b0026 then 0 else 91000) + (if b0028 then 0 else 91000) + (if b0030 then 0 else 91000) + (if b0031 then 0 else 91000) + (if b0032 then 0 else 91000) + (if b0033 then 0 else 91000) + (if b0034 then 0 else 91000) + (if b0035 then 0 else 91000) + (if b0036 then 0 else 91000) + (if b0037 then 0 else 91000) + (if b0038 then 0 else 91000) + (if b0039 then 0 else 91000) + (if b0040 then 0 else 91000) + (if b0041 then 0 else 91000) + (if b0042 then 0 else 91000) + (if b0043 then 0 else 91000) + (if b0044 then 0 else 91000) + (if b0045 then 0 else 91000) + (if b0046 then 0 else 91000) + (if b0047 then 0 else 91000) + (if b0048 then 0 else 91000) + (if b0049 then 0 else 91000) + (if b0050 then 0 else 91000) + (if b0051 then 0 else 91000) + (if b0052 then 0 else 91000) + (if b0053 then 0 else 91000) + (if b0054 then 0 else 91000) + (if b0055 then 0 else 91000) + (if b0056 then 0 else 91000) + (if b0059 then 0 else 91000) + (if b0061 then 0 else 91000) + (if b0062 then 0 else 91000) + (if b0063 then 0 else 91000) + (if b0064 then 0 else 91000) + (if b0065 then 0 else 91000) + (if b0066 then 0 else 91000) + (if b0067 then 0 else 91000) + (if b0068 then 0 else 91000) + (if b0069 then 0 else 91000) + (if b0071 then 0 else 91000) + (if b0135 then 0 else 91000) + (if b0136 then 0 else 91000) + (if b0137 then 0 else 91000) + (if b0138 then 0 else 91000) + (if b0139 then 0 else 91000) + (if b0140 then 0 else 91000) + (if b0141 then 0 else 91000) + (if b0142 then 0 else 91000) + (if b0144 then 0 else 91000) + (if b0198 then 0 else 91000) + (if b0199 then 0 else 91000) + (if b0200 then 0 else 91000) + (if b0201 then 0 else 91000) + (if b0202 then 0 else 91000) + (if b0203 then 0 else 91000) + (if b0204 then 0 else 91000) + (if b0205 then 0 else 91000) + (if b0206 then 0 else 91000) + (if b0207 then 0 else 91000) + (if b0208 then 0 else 91000) + (if b0209 then 0 else 91000) + (if b0210 then 0 else 91000) + (if b0211 then 0 else 91000) + (if b0212 then 0 else 91000) + (if b0213 then 0 else 91000) + (if b0214 then 0 else 91000) + (if b0215 then 0 else 91000) + (if b0216 then 0 else 91000) + (if b0217 then 0 else 91000) + (if b0218 then 0 else 91000) + (if b0219 then 0 else 91000) + (if b0220 then 0 else 91000) + (if b0221 then 0 else 91000) + (if b0222 then 0 else 91000) + (if b0223 then 0 else 91000) + (if b0224 then 0 else 91000) + (if b0225 then 0 else 91000) + (if b0226 then 0 else 91000) + (if b0227 then 0 else 91000) < 441
}
Prover Time taken = 26.868762
Added Horn clause: 21 && 7 && 13 && 0 && 0 && 0 && 0 && 0 && 0 => 24
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/linear-algebra/solvers/lu/kernel1.bpl.ice2.bpl
Total learner time was 00:00:00.1287210
Verifying $kernel1: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool) : bool
{
  0 + (if b0000 then 0 else 91000) + (if b0001 then 0 else 91000) + (if b0004 then 0 else 91000) + (if b0006 then 0 else 91000) + (if b0008 then 0 else 91000) + (if b0009 then 0 else 91000) + (if b0010 then 0 else 91000) + (if b0012 then 0 else 91000) + (if b0015 then 0 else 91000) + (if b0016 then 0 else 91000) + (if b0017 then 0 else 91000) + (if b0018 then 0 else 91000) + (if b0019 then 0 else 91000) + (if b0020 then 0 else 91000) + (if b0021 then 0 else 91000) + (if b0022 then 0 else 91000) + (if b0023 then 0 else 91000) + (if b0024 then 0 else 91000) + (if b0025 then 0 else 91000) + (if b0026 then 0 else 91000) + (if b0028 then 0 else 91000) + (if b0030 then 0 else 91000) + (if b0031 then 0 else 91000) + (if b0032 then 0 else 91000) + (if b0033 then 0 else 91000) + (if b0034 then 0 else 91000) + (if b0035 then 0 else 91000) + (if b0036 then 0 else 91000) + (if b0037 then 0 else 91000) + (if b0038 then 0 else 91000) + (if b0039 then 0 else 91000) + (if b0040 then 0 else 91000) + (if b0041 then 0 else 91000) + (if b0042 then 0 else 91000) + (if b0043 then 0 else 91000) + (if b0044 then 0 else 91000) + (if b0046 then 0 else 91000) + (if b0048 then 0 else 91000) + (if b0049 then 0 else 91000) + (if b0050 then 0 else 91000) + (if b0051 then 0 else 91000) + (if b0052 then 0 else 91000) + (if b0053 then 0 else 91000) + (if b0054 then 0 else 91000) + (if b0055 then 0 else 91000) + (if b0056 then 0 else 91000) + (if b0059 then 0 else 91000) + (if b0061 then 0 else 91000) + (if b0062 then 0 else 91000) + (if b0063 then 0 else 91000) + (if b0064 then 0 else 91000) + (if b0065 then 0 else 91000) + (if b0066 then 0 else 91000) + (if b0067 then 0 else 91000) + (if b0068 then 0 else 91000) + (if b0069 then 0 else 91000) + (if b0071 then 0 else 91000) + (if b0135 then 0 else 91000) + (if b0136 then 0 else 91000) + (if b0137 then 0 else 91000) + (if b0138 then 0 else 91000) + (if b0139 then 0 else 91000) + (if b0140 then 0 else 91000) + (if b0141 then 0 else 91000) + (if b0142 then 0 else 91000) + (if b0144 then 0 else 91000) + (if b0198 then 0 else 91000) + (if b0199 then 0 else 91000) + (if b0200 then 0 else 91000) + (if b0201 then 0 else 91000) + (if b0202 then 0 else 91000) + (if b0203 then 0 else 91000) + (if b0204 then 0 else 91000) + (if b0205 then 0 else 91000) + (if b0206 then 0 else 91000) + (if b0207 then 0 else 91000) + (if b0208 then 0 else 91000) + (if b0209 then 0 else 91000) + (if b0210 then 0 else 91000) + (if b0211 then 0 else 91000) + (if b0212 then 0 else 91000) + (if b0213 then 0 else 91000) + (if b0214 then 0 else 91000) + (if b0215 then 0 else 91000) + (if b0216 then 0 else 91000) + (if b0217 then 0 else 91000) + (if b0218 then 0 else 91000) + (if b0219 then 0 else 91000) + (if b0220 then 0 else 91000) + (if b0221 then 0 else 91000) + (if b0222 then 0 else 91000) + (if b0223 then 0 else 91000) + (if b0224 then 0 else 91000) + (if b0225 then 0 else 91000) + (if b0226 then 0 else 91000) + (if b0227 then 0 else 91000) < 441
}
Prover Time taken = 35.746782
Added Horn clause: 19 && 7 && 13 && 0 && 0 && 0 && 22 => 25
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/linear-algebra/solvers/lu/kernel1.bpl.ice2.bpl
Total learner time was 00:00:00.1239580
Verifying $kernel1: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool) : bool
{
  0 + (if b0000 then 0 else 91000) + (if b0001 then 0 else 91000) + (if b0004 then 0 else 91000) + (if b0006 then 0 else 91000) + (if b0008 then 0 else 91000) + (if b0009 then 0 else 91000) + (if b0010 then 0 else 91000) + (if b0012 then 0 else 91000) + (if b0015 then 0 else 91000) + (if b0016 then 0 else 91000) + (if b0017 then 0 else 91000) + (if b0018 then 0 else 91000) + (if b0019 then 0 else 91000) + (if b0020 then 0 else 91000) + (if b0021 then 0 else 91000) + (if b0022 then 0 else 91000) + (if b0023 then 0 else 91000) + (if b0024 then 0 else 91000) + (if b0025 then 0 else 91000) + (if b0026 then 0 else 91000) + (if b0028 then 0 else 91000) + (if b0031 then 0 else 91000) + (if b0033 then 0 else 91000) + (if b0034 then 0 else 91000) + (if b0035 then 0 else 91000) + (if b0036 then 0 else 91000) + (if b0037 then 0 else 91000) + (if b0038 then 0 else 91000) + (if b0039 then 0 else 91000) + (if b0040 then 0 else 91000) + (if b0041 then 0 else 91000) + (if b0042 then 0 else 91000) + (if b0043 then 0 else 91000) + (if b0044 then 0 else 91000) + (if b0046 then 0 else 91000) + (if b0048 then 0 else 91000) + (if b0049 then 0 else 91000) + (if b0050 then 0 else 91000) + (if b0051 then 0 else 91000) + (if b0052 then 0 else 91000) + (if b0053 then 0 else 91000) + (if b0054 then 0 else 91000) + (if b0055 then 0 else 91000) + (if b0056 then 0 else 91000) + (if b0059 then 0 else 91000) + (if b0061 then 0 else 91000) + (if b0062 then 0 else 91000) + (if b0063 then 0 else 91000) + (if b0064 then 0 else 91000) + (if b0065 then 0 else 91000) + (if b0066 then 0 else 91000) + (if b0067 then 0 else 91000) + (if b0068 then 0 else 91000) + (if b0069 then 0 else 91000) + (if b0071 then 0 else 91000) + (if b0135 then 0 else 91000) + (if b0136 then 0 else 91000) + (if b0137 then 0 else 91000) + (if b0138 then 0 else 91000) + (if b0139 then 0 else 91000) + (if b0140 then 0 else 91000) + (if b0141 then 0 else 91000) + (if b0142 then 0 else 91000) + (if b0144 then 0 else 91000) + (if b0198 then 0 else 91000) + (if b0199 then 0 else 91000) + (if b0200 then 0 else 91000) + (if b0201 then 0 else 91000) + (if b0202 then 0 else 91000) + (if b0203 then 0 else 91000) + (if b0204 then 0 else 91000) + (if b0205 then 0 else 91000) + (if b0206 then 0 else 91000) + (if b0207 then 0 else 91000) + (if b0208 then 0 else 91000) + (if b0209 then 0 else 91000) + (if b0210 then 0 else 91000) + (if b0211 then 0 else 91000) + (if b0212 then 0 else 91000) + (if b0213 then 0 else 91000) + (if b0214 then 0 else 91000) + (if b0215 then 0 else 91000) + (if b0216 then 0 else 91000) + (if b0217 then 0 else 91000) + (if b0218 then 0 else 91000) + (if b0219 then 0 else 91000) + (if b0220 then 0 else 91000) + (if b0221 then 0 else 91000) + (if b0222 then 0 else 91000) + (if b0223 then 0 else 91000) + (if b0224 then 0 else 91000) + (if b0225 then 0 else 91000) + (if b0226 then 0 else 91000) + (if b0227 then 0 else 91000) < 441
}
Prover Time taken = 32.837851
Added Horn clause: 19 && 7 && 13 && 0 && 0 && 0 && 0 => 26
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/linear-algebra/solvers/lu/kernel1.bpl.ice2.bpl
Total learner time was 00:00:00.1277110
Verifying $kernel1: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool) : bool
{
  0 + (if b0000 then 0 else 91000) + (if b0001 then 0 else 91000) + (if b0004 then 0 else 91000) + (if b0006 then 0 else 91000) + (if b0008 then 0 else 91000) + (if b0009 then 0 else 91000) + (if b0010 then 0 else 91000) + (if b0012 then 0 else 91000) + (if b0015 then 0 else 91000) + (if b0016 then 0 else 91000) + (if b0017 then 0 else 91000) + (if b0018 then 0 else 91000) + (if b0019 then 0 else 91000) + (if b0020 then 0 else 91000) + (if b0021 then 0 else 91000) + (if b0022 then 0 else 91000) + (if b0023 then 0 else 91000) + (if b0024 then 0 else 91000) + (if b0025 then 0 else 91000) + (if b0026 then 0 else 91000) + (if b0028 then 0 else 91000) + (if b0031 then 0 else 91000) + (if b0033 then 0 else 91000) + (if b0034 then 0 else 91000) + (if b0035 then 0 else 91000) + (if b0036 then 0 else 91000) + (if b0037 then 0 else 91000) + (if b0038 then 0 else 91000) + (if b0039 then 0 else 91000) + (if b0040 then 0 else 91000) + (if b0041 then 0 else 91000) + (if b0042 then 0 else 91000) + (if b0043 then 0 else 91000) + (if b0046 then 0 else 91000) + (if b0048 then 0 else 91000) + (if b0049 then 0 else 91000) + (if b0050 then 0 else 91000) + (if b0051 then 0 else 91000) + (if b0052 then 0 else 91000) + (if b0053 then 0 else 91000) + (if b0054 then 0 else 91000) + (if b0055 then 0 else 91000) + (if b0056 then 0 else 91000) + (if b0059 then 0 else 91000) + (if b0061 then 0 else 91000) + (if b0062 then 0 else 91000) + (if b0063 then 0 else 91000) + (if b0064 then 0 else 91000) + (if b0065 then 0 else 91000) + (if b0066 then 0 else 91000) + (if b0067 then 0 else 91000) + (if b0068 then 0 else 91000) + (if b0069 then 0 else 91000) + (if b0071 then 0 else 91000) + (if b0135 then 0 else 91000) + (if b0136 then 0 else 91000) + (if b0137 then 0 else 91000) + (if b0138 then 0 else 91000) + (if b0139 then 0 else 91000) + (if b0140 then 0 else 91000) + (if b0141 then 0 else 91000) + (if b0142 then 0 else 91000) + (if b0144 then 0 else 91000) + (if b0198 then 0 else 91000) + (if b0199 then 0 else 91000) + (if b0200 then 0 else 91000) + (if b0201 then 0 else 91000) + (if b0202 then 0 else 91000) + (if b0203 then 0 else 91000) + (if b0204 then 0 else 91000) + (if b0205 then 0 else 91000) + (if b0206 then 0 else 91000) + (if b0207 then 0 else 91000) + (if b0208 then 0 else 91000) + (if b0209 then 0 else 91000) + (if b0210 then 0 else 91000) + (if b0211 then 0 else 91000) + (if b0212 then 0 else 91000) + (if b0213 then 0 else 91000) + (if b0214 then 0 else 91000) + (if b0215 then 0 else 91000) + (if b0216 then 0 else 91000) + (if b0217 then 0 else 91000) + (if b0218 then 0 else 91000) + (if b0219 then 0 else 91000) + (if b0220 then 0 else 91000) + (if b0221 then 0 else 91000) + (if b0222 then 0 else 91000) + (if b0223 then 0 else 91000) + (if b0224 then 0 else 91000) + (if b0225 then 0 else 91000) + (if b0226 then 0 else 91000) + (if b0227 then 0 else 91000) < 441
}
Prover Time taken = 24.351292
Added Horn clause: 19 && 7 && 11 && 0 && 0 && 0 && 27 && 0 && 0 => 28
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/linear-algebra/solvers/lu/kernel1.bpl.ice2.bpl
Total learner time was 00:00:00.1244110
Verifying $kernel1: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool) : bool
{
  0 + (if b0000 then 0 else 91000) + (if b0001 then 0 else 91000) + (if b0004 then 0 else 91000) + (if b0006 then 0 else 91000) + (if b0008 then 0 else 91000) + (if b0009 then 0 else 91000) + (if b0010 then 0 else 91000) + (if b0012 then 0 else 91000) + (if b0015 then 0 else 91000) + (if b0017 then 0 else 91000) + (if b0019 then 0 else 91000) + (if b0020 then 0 else 91000) + (if b0021 then 0 else 91000) + (if b0022 then 0 else 91000) + (if b0023 then 0 else 91000) + (if b0024 then 0 else 91000) + (if b0025 then 0 else 91000) + (if b0026 then 0 else 91000) + (if b0028 then 0 else 91000) + (if b0031 then 0 else 91000) + (if b0033 then 0 else 91000) + (if b0034 then 0 else 91000) + (if b0035 then 0 else 91000) + (if b0036 then 0 else 91000) + (if b0037 then 0 else 91000) + (if b0038 then 0 else 91000) + (if b0039 then 0 else 91000) + (if b0040 then 0 else 91000) + (if b0041 then 0 else 91000) + (if b0042 then 0 else 91000) + (if b0043 then 0 else 91000) + (if b0046 then 0 else 91000) + (if b0048 then 0 else 91000) + (if b0049 then 0 else 91000) + (if b0050 then 0 else 91000) + (if b0051 then 0 else 91000) + (if b0052 then 0 else 91000) + (if b0053 then 0 else 91000) + (if b0054 then 0 else 91000) + (if b0055 then 0 else 91000) + (if b0056 then 0 else 91000) + (if b0059 then 0 else 91000) + (if b0061 then 0 else 91000) + (if b0062 then 0 else 91000) + (if b0063 then 0 else 91000) + (if b0064 then 0 else 91000) + (if b0065 then 0 else 91000) + (if b0066 then 0 else 91000) + (if b0067 then 0 else 91000) + (if b0068 then 0 else 91000) + (if b0069 then 0 else 91000) + (if b0071 then 0 else 91000) + (if b0135 then 0 else 91000) + (if b0136 then 0 else 91000) + (if b0137 then 0 else 91000) + (if b0138 then 0 else 91000) + (if b0139 then 0 else 91000) + (if b0140 then 0 else 91000) + (if b0141 then 0 else 91000) + (if b0142 then 0 else 91000) + (if b0144 then 0 else 91000) + (if b0198 then 0 else 91000) + (if b0199 then 0 else 91000) + (if b0200 then 0 else 91000) + (if b0201 then 0 else 91000) + (if b0202 then 0 else 91000) + (if b0203 then 0 else 91000) + (if b0204 then 0 else 91000) + (if b0205 then 0 else 91000) + (if b0206 then 0 else 91000) + (if b0207 then 0 else 91000) + (if b0208 then 0 else 91000) + (if b0209 then 0 else 91000) + (if b0210 then 0 else 91000) + (if b0211 then 0 else 91000) + (if b0212 then 0 else 91000) + (if b0213 then 0 else 91000) + (if b0214 then 0 else 91000) + (if b0215 then 0 else 91000) + (if b0216 then 0 else 91000) + (if b0217 then 0 else 91000) + (if b0218 then 0 else 91000) + (if b0219 then 0 else 91000) + (if b0220 then 0 else 91000) + (if b0221 then 0 else 91000) + (if b0222 then 0 else 91000) + (if b0223 then 0 else 91000) + (if b0224 then 0 else 91000) + (if b0225 then 0 else 91000) + (if b0226 then 0 else 91000) + (if b0227 then 0 else 91000) < 441
}
Prover Time taken = 37.348172
Added Horn clause: 21 && 7 && 13 && 0 && 0 && 0 && 0 && 0 && 0 => 29
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/linear-algebra/solvers/lu/kernel1.bpl.ice2.bpl
Total learner time was 00:00:00.1239100
Verifying $kernel1: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool) : bool
{
  0 + (if b0000 then 0 else 91000) + (if b0001 then 0 else 91000) + (if b0004 then 0 else 91000) + (if b0006 then 0 else 91000) + (if b0008 then 0 else 91000) + (if b0009 then 0 else 91000) + (if b0010 then 0 else 91000) + (if b0012 then 0 else 91000) + (if b0015 then 0 else 91000) + (if b0017 then 0 else 91000) + (if b0019 then 0 else 91000) + (if b0020 then 0 else 91000) + (if b0021 then 0 else 91000) + (if b0022 then 0 else 91000) + (if b0023 then 0 else 91000) + (if b0024 then 0 else 91000) + (if b0025 then 0 else 91000) + (if b0026 then 0 else 91000) + (if b0028 then 0 else 91000) + (if b0031 then 0 else 91000) + (if b0033 then 0 else 91000) + (if b0034 then 0 else 91000) + (if b0035 then 0 else 91000) + (if b0036 then 0 else 91000) + (if b0037 then 0 else 91000) + (if b0038 then 0 else 91000) + (if b0039 then 0 else 91000) + (if b0040 then 0 else 91000) + (if b0041 then 0 else 91000) + (if b0042 then 0 else 91000) + (if b0043 then 0 else 91000) + (if b0046 then 0 else 91000) + (if b0048 then 0 else 91000) + (if b0049 then 0 else 91000) + (if b0050 then 0 else 91000) + (if b0051 then 0 else 91000) + (if b0052 then 0 else 91000) + (if b0053 then 0 else 91000) + (if b0054 then 0 else 91000) + (if b0055 then 0 else 91000) + (if b0056 then 0 else 91000) + (if b0059 then 0 else 91000) + (if b0061 then 0 else 91000) + (if b0062 then 0 else 91000) + (if b0063 then 0 else 91000) + (if b0064 then 0 else 91000) + (if b0065 then 0 else 91000) + (if b0066 then 0 else 91000) + (if b0067 then 0 else 91000) + (if b0068 then 0 else 91000) + (if b0069 then 0 else 91000) + (if b0071 then 0 else 91000) + (if b0135 then 0 else 91000) + (if b0136 then 0 else 91000) + (if b0137 then 0 else 91000) + (if b0138 then 0 else 91000) + (if b0139 then 0 else 91000) + (if b0140 then 0 else 91000) + (if b0141 then 0 else 91000) + (if b0142 then 0 else 91000) + (if b0144 then 0 else 91000) + (if b0199 then 0 else 91000) + (if b0200 then 0 else 91000) + (if b0201 then 0 else 91000) + (if b0202 then 0 else 91000) + (if b0203 then 0 else 91000) + (if b0204 then 0 else 91000) + (if b0205 then 0 else 91000) + (if b0206 then 0 else 91000) + (if b0207 then 0 else 91000) + (if b0208 then 0 else 91000) + (if b0209 then 0 else 91000) + (if b0210 then 0 else 91000) + (if b0211 then 0 else 91000) + (if b0212 then 0 else 91000) + (if b0213 then 0 else 91000) + (if b0214 then 0 else 91000) + (if b0215 then 0 else 91000) + (if b0216 then 0 else 91000) + (if b0217 then 0 else 91000) + (if b0218 then 0 else 91000) + (if b0219 then 0 else 91000) + (if b0220 then 0 else 91000) + (if b0221 then 0 else 91000) + (if b0222 then 0 else 91000) + (if b0223 then 0 else 91000) + (if b0224 then 0 else 91000) + (if b0225 then 0 else 91000) + (if b0226 then 0 else 91000) + (if b0227 then 0 else 91000) < 441
}
Prover Time taken = 21.352922
Added Horn clause: 21 && 29 && 28 => 30
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/linear-algebra/solvers/lu/kernel1.bpl.ice2.bpl
Total learner time was 00:00:00.1236260
Verifying $kernel1: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool) : bool
{
  0 + (if b0000 then 0 else 91000) + (if b0001 then 0 else 91000) + (if b0004 then 0 else 91000) + (if b0006 then 0 else 91000) + (if b0008 then 0 else 91000) + (if b0009 then 0 else 91000) + (if b0010 then 0 else 91000) + (if b0012 then 0 else 91000) + (if b0015 then 0 else 91000) + (if b0017 then 0 else 91000) + (if b0019 then 0 else 91000) + (if b0020 then 0 else 91000) + (if b0021 then 0 else 91000) + (if b0022 then 0 else 91000) + (if b0023 then 0 else 91000) + (if b0024 then 0 else 91000) + (if b0025 then 0 else 91000) + (if b0026 then 0 else 91000) + (if b0028 then 0 else 91000) + (if b0031 then 0 else 91000) + (if b0033 then 0 else 91000) + (if b0034 then 0 else 91000) + (if b0035 then 0 else 91000) + (if b0036 then 0 else 91000) + (if b0037 then 0 else 91000) + (if b0038 then 0 else 91000) + (if b0039 then 0 else 91000) + (if b0040 then 0 else 91000) + (if b0041 then 0 else 91000) + (if b0042 then 0 else 91000) + (if b0043 then 0 else 91000) + (if b0046 then 0 else 91000) + (if b0048 then 0 else 91000) + (if b0049 then 0 else 91000) + (if b0050 then 0 else 91000) + (if b0051 then 0 else 91000) + (if b0052 then 0 else 91000) + (if b0053 then 0 else 91000) + (if b0054 then 0 else 91000) + (if b0055 then 0 else 91000) + (if b0056 then 0 else 91000) + (if b0059 then 0 else 91000) + (if b0061 then 0 else 91000) + (if b0062 then 0 else 91000) + (if b0063 then 0 else 91000) + (if b0064 then 0 else 91000) + (if b0066 then 0 else 91000) + (if b0067 then 0 else 91000) + (if b0068 then 0 else 91000) + (if b0069 then 0 else 91000) + (if b0071 then 0 else 91000) + (if b0135 then 0 else 91000) + (if b0136 then 0 else 91000) + (if b0137 then 0 else 91000) + (if b0138 then 0 else 91000) + (if b0139 then 0 else 91000) + (if b0140 then 0 else 91000) + (if b0141 then 0 else 91000) + (if b0142 then 0 else 91000) + (if b0144 then 0 else 91000) + (if b0199 then 0 else 91000) + (if b0200 then 0 else 91000) + (if b0201 then 0 else 91000) + (if b0202 then 0 else 91000) + (if b0203 then 0 else 91000) + (if b0204 then 0 else 91000) + (if b0205 then 0 else 91000) + (if b0206 then 0 else 91000) + (if b0207 then 0 else 91000) + (if b0208 then 0 else 91000) + (if b0209 then 0 else 91000) + (if b0210 then 0 else 91000) + (if b0211 then 0 else 91000) + (if b0212 then 0 else 91000) + (if b0213 then 0 else 91000) + (if b0214 then 0 else 91000) + (if b0215 then 0 else 91000) + (if b0216 then 0 else 91000) + (if b0217 then 0 else 91000) + (if b0218 then 0 else 91000) + (if b0219 then 0 else 91000) + (if b0220 then 0 else 91000) + (if b0221 then 0 else 91000) + (if b0222 then 0 else 91000) + (if b0223 then 0 else 91000) + (if b0224 then 0 else 91000) + (if b0225 then 0 else 91000) + (if b0226 then 0 else 91000) + (if b0227 then 0 else 91000) < 441
}
Prover Time taken = 37.621666
Added Horn clause: 31 && 32 && 0 && 0 && 30 => 33
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/linear-algebra/solvers/lu/kernel1.bpl.ice2.bpl
Total learner time was 00:00:00.1241780
Verifying $kernel1: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool) : bool
{
  0 + (if b0000 then 0 else 91000) + (if b0001 then 0 else 91000) + (if b0004 then 0 else 91000) + (if b0006 then 0 else 91000) + (if b0008 then 0 else 91000) + (if b0009 then 0 else 91000) + (if b0010 then 0 else 91000) + (if b0012 then 0 else 91000) + (if b0015 then 0 else 91000) + (if b0017 then 0 else 91000) + (if b0019 then 0 else 91000) + (if b0020 then 0 else 91000) + (if b0021 then 0 else 91000) + (if b0022 then 0 else 91000) + (if b0023 then 0 else 91000) + (if b0024 then 0 else 91000) + (if b0025 then 0 else 91000) + (if b0026 then 0 else 91000) + (if b0028 then 0 else 91000) + (if b0031 then 0 else 91000) + (if b0033 then 0 else 91000) + (if b0034 then 0 else 91000) + (if b0035 then 0 else 91000) + (if b0036 then 0 else 91000) + (if b0038 then 0 else 91000) + (if b0039 then 0 else 91000) + (if b0040 then 0 else 91000) + (if b0041 then 0 else 91000) + (if b0042 then 0 else 91000) + (if b0043 then 0 else 91000) + (if b0046 then 0 else 91000) + (if b0048 then 0 else 91000) + (if b0049 then 0 else 91000) + (if b0050 then 0 else 91000) + (if b0051 then 0 else 91000) + (if b0052 then 0 else 91000) + (if b0053 then 0 else 91000) + (if b0054 then 0 else 91000) + (if b0055 then 0 else 91000) + (if b0056 then 0 else 91000) + (if b0059 then 0 else 91000) + (if b0061 then 0 else 91000) + (if b0062 then 0 else 91000) + (if b0063 then 0 else 91000) + (if b0064 then 0 else 91000) + (if b0066 then 0 else 91000) + (if b0067 then 0 else 91000) + (if b0068 then 0 else 91000) + (if b0069 then 0 else 91000) + (if b0071 then 0 else 91000) + (if b0135 then 0 else 91000) + (if b0136 then 0 else 91000) + (if b0137 then 0 else 91000) + (if b0138 then 0 else 91000) + (if b0139 then 0 else 91000) + (if b0140 then 0 else 91000) + (if b0141 then 0 else 91000) + (if b0142 then 0 else 91000) + (if b0144 then 0 else 91000) + (if b0199 then 0 else 91000) + (if b0200 then 0 else 91000) + (if b0201 then 0 else 91000) + (if b0202 then 0 else 91000) + (if b0203 then 0 else 91000) + (if b0204 then 0 else 91000) + (if b0205 then 0 else 91000) + (if b0206 then 0 else 91000) + (if b0207 then 0 else 91000) + (if b0208 then 0 else 91000) + (if b0209 then 0 else 91000) + (if b0210 then 0 else 91000) + (if b0211 then 0 else 91000) + (if b0212 then 0 else 91000) + (if b0213 then 0 else 91000) + (if b0214 then 0 else 91000) + (if b0215 then 0 else 91000) + (if b0216 then 0 else 91000) + (if b0217 then 0 else 91000) + (if b0218 then 0 else 91000) + (if b0219 then 0 else 91000) + (if b0220 then 0 else 91000) + (if b0221 then 0 else 91000) + (if b0222 then 0 else 91000) + (if b0223 then 0 else 91000) + (if b0224 then 0 else 91000) + (if b0225 then 0 else 91000) + (if b0226 then 0 else 91000) + (if b0227 then 0 else 91000) < 441
}
Prover Time taken = 15.168899
Added Horn clause: 34 && 32 && 0 && 0 && 30 && 0 && 33 && 0 && 0 => 35
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/linear-algebra/solvers/lu/kernel1.bpl.ice2.bpl
Total learner time was 00:00:00.1229430
Verifying $kernel1: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool) : bool
{
  0 + (if b0000 then 0 else 91000) + (if b0001 then 0 else 91000) + (if b0004 then 0 else 91000) + (if b0006 then 0 else 91000) + (if b0008 then 0 else 91000) + (if b0009 then 0 else 91000) + (if b0010 then 0 else 91000) + (if b0012 then 0 else 91000) + (if b0015 then 0 else 91000) + (if b0017 then 0 else 91000) + (if b0019 then 0 else 91000) + (if b0020 then 0 else 91000) + (if b0021 then 0 else 91000) + (if b0022 then 0 else 91000) + (if b0023 then 0 else 91000) + (if b0024 then 0 else 91000) + (if b0025 then 0 else 91000) + (if b0026 then 0 else 91000) + (if b0028 then 0 else 91000) + (if b0031 then 0 else 91000) + (if b0033 then 0 else 91000) + (if b0034 then 0 else 91000) + (if b0035 then 0 else 91000) + (if b0036 then 0 else 91000) + (if b0038 then 0 else 91000) + (if b0039 then 0 else 91000) + (if b0040 then 0 else 91000) + (if b0041 then 0 else 91000) + (if b0042 then 0 else 91000) + (if b0043 then 0 else 91000) + (if b0046 then 0 else 91000) + (if b0048 then 0 else 91000) + (if b0049 then 0 else 91000) + (if b0050 then 0 else 91000) + (if b0051 then 0 else 91000) + (if b0052 then 0 else 91000) + (if b0053 then 0 else 91000) + (if b0054 then 0 else 91000) + (if b0055 then 0 else 91000) + (if b0056 then 0 else 91000) + (if b0059 then 0 else 91000) + (if b0061 then 0 else 91000) + (if b0062 then 0 else 91000) + (if b0063 then 0 else 91000) + (if b0064 then 0 else 91000) + (if b0066 then 0 else 91000) + (if b0067 then 0 else 91000) + (if b0068 then 0 else 91000) + (if b0069 then 0 else 91000) + (if b0071 then 0 else 91000) + (if b0136 then 0 else 91000) + (if b0137 then 0 else 91000) + (if b0138 then 0 else 91000) + (if b0139 then 0 else 91000) + (if b0140 then 0 else 91000) + (if b0141 then 0 else 91000) + (if b0142 then 0 else 91000) + (if b0144 then 0 else 91000) + (if b0199 then 0 else 91000) + (if b0200 then 0 else 91000) + (if b0201 then 0 else 91000) + (if b0202 then 0 else 91000) + (if b0203 then 0 else 91000) + (if b0204 then 0 else 91000) + (if b0205 then 0 else 91000) + (if b0206 then 0 else 91000) + (if b0207 then 0 else 91000) + (if b0208 then 0 else 91000) + (if b0209 then 0 else 91000) + (if b0210 then 0 else 91000) + (if b0211 then 0 else 91000) + (if b0212 then 0 else 91000) + (if b0213 then 0 else 91000) + (if b0214 then 0 else 91000) + (if b0215 then 0 else 91000) + (if b0216 then 0 else 91000) + (if b0217 then 0 else 91000) + (if b0218 then 0 else 91000) + (if b0219 then 0 else 91000) + (if b0220 then 0 else 91000) + (if b0221 then 0 else 91000) + (if b0222 then 0 else 91000) + (if b0223 then 0 else 91000) + (if b0224 then 0 else 91000) + (if b0225 then 0 else 91000) + (if b0226 then 0 else 91000) + (if b0227 then 0 else 91000) < 441
}
Prover Time taken = 9.318799
Added Horn clause: 35 => 36
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/linear-algebra/solvers/lu/kernel1.bpl.ice2.bpl
Total learner time was 00:00:00.1274400
Verifying $kernel1: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool) : bool
{
  0 + (if b0000 then 0 else 91000) + (if b0001 then 0 else 91000) + (if b0004 then 0 else 91000) + (if b0006 then 0 else 91000) + (if b0008 then 0 else 91000) + (if b0009 then 0 else 91000) + (if b0010 then 0 else 91000) + (if b0012 then 0 else 91000) + (if b0015 then 0 else 91000) + (if b0017 then 0 else 91000) + (if b0019 then 0 else 91000) + (if b0020 then 0 else 91000) + (if b0021 then 0 else 91000) + (if b0022 then 0 else 91000) + (if b0024 then 0 else 91000) + (if b0025 then 0 else 91000) + (if b0026 then 0 else 91000) + (if b0028 then 0 else 91000) + (if b0031 then 0 else 91000) + (if b0033 then 0 else 91000) + (if b0034 then 0 else 91000) + (if b0035 then 0 else 91000) + (if b0036 then 0 else 91000) + (if b0038 then 0 else 91000) + (if b0039 then 0 else 91000) + (if b0040 then 0 else 91000) + (if b0041 then 0 else 91000) + (if b0042 then 0 else 91000) + (if b0043 then 0 else 91000) + (if b0046 then 0 else 91000) + (if b0048 then 0 else 91000) + (if b0049 then 0 else 91000) + (if b0050 then 0 else 91000) + (if b0051 then 0 else 91000) + (if b0052 then 0 else 91000) + (if b0053 then 0 else 91000) + (if b0054 then 0 else 91000) + (if b0055 then 0 else 91000) + (if b0056 then 0 else 91000) + (if b0059 then 0 else 91000) + (if b0061 then 0 else 91000) + (if b0062 then 0 else 91000) + (if b0063 then 0 else 91000) + (if b0064 then 0 else 91000) + (if b0066 then 0 else 91000) + (if b0067 then 0 else 91000) + (if b0068 then 0 else 91000) + (if b0069 then 0 else 91000) + (if b0071 then 0 else 91000) + (if b0136 then 0 else 91000) + (if b0137 then 0 else 91000) + (if b0138 then 0 else 91000) + (if b0139 then 0 else 91000) + (if b0140 then 0 else 91000) + (if b0141 then 0 else 91000) + (if b0142 then 0 else 91000) + (if b0144 then 0 else 91000) + (if b0199 then 0 else 91000) + (if b0200 then 0 else 91000) + (if b0201 then 0 else 91000) + (if b0202 then 0 else 91000) + (if b0203 then 0 else 91000) + (if b0204 then 0 else 91000) + (if b0205 then 0 else 91000) + (if b0206 then 0 else 91000) + (if b0207 then 0 else 91000) + (if b0208 then 0 else 91000) + (if b0209 then 0 else 91000) + (if b0210 then 0 else 91000) + (if b0211 then 0 else 91000) + (if b0212 then 0 else 91000) + (if b0213 then 0 else 91000) + (if b0214 then 0 else 91000) + (if b0215 then 0 else 91000) + (if b0216 then 0 else 91000) + (if b0217 then 0 else 91000) + (if b0218 then 0 else 91000) + (if b0219 then 0 else 91000) + (if b0220 then 0 else 91000) + (if b0221 then 0 else 91000) + (if b0222 then 0 else 91000) + (if b0223 then 0 else 91000) + (if b0224 then 0 else 91000) + (if b0225 then 0 else 91000) + (if b0226 then 0 else 91000) + (if b0227 then 0 else 91000) < 441
}
Prover Time taken = 14.327032
Added Horn clause: 37 && 32 && 36 => 38
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/linear-algebra/solvers/lu/kernel1.bpl.ice2.bpl
Total learner time was 00:00:00.1292890
Verifying $kernel1: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool) : bool
{
  0 + (if b0000 then 0 else 91000) + (if b0001 then 0 else 91000) + (if b0004 then 0 else 91000) + (if b0006 then 0 else 91000) + (if b0008 then 0 else 91000) + (if b0009 then 0 else 91000) + (if b0010 then 0 else 91000) + (if b0012 then 0 else 91000) + (if b0015 then 0 else 91000) + (if b0017 then 0 else 91000) + (if b0019 then 0 else 91000) + (if b0020 then 0 else 91000) + (if b0021 then 0 else 91000) + (if b0022 then 0 else 91000) + (if b0024 then 0 else 91000) + (if b0025 then 0 else 91000) + (if b0026 then 0 else 91000) + (if b0028 then 0 else 91000) + (if b0031 then 0 else 91000) + (if b0033 then 0 else 91000) + (if b0034 then 0 else 91000) + (if b0035 then 0 else 91000) + (if b0036 then 0 else 91000) + (if b0038 then 0 else 91000) + (if b0039 then 0 else 91000) + (if b0040 then 0 else 91000) + (if b0041 then 0 else 91000) + (if b0042 then 0 else 91000) + (if b0043 then 0 else 91000) + (if b0046 then 0 else 91000) + (if b0048 then 0 else 91000) + (if b0049 then 0 else 91000) + (if b0050 then 0 else 91000) + (if b0051 then 0 else 91000) + (if b0052 then 0 else 91000) + (if b0053 then 0 else 91000) + (if b0054 then 0 else 91000) + (if b0055 then 0 else 91000) + (if b0056 then 0 else 91000) + (if b0059 then 0 else 91000) + (if b0061 then 0 else 91000) + (if b0062 then 0 else 91000) + (if b0063 then 0 else 91000) + (if b0067 then 0 else 91000) + (if b0068 then 0 else 91000) + (if b0069 then 0 else 91000) + (if b0071 then 0 else 91000) + (if b0136 then 0 else 91000) + (if b0137 then 0 else 91000) + (if b0138 then 0 else 91000) + (if b0139 then 0 else 91000) + (if b0140 then 0 else 91000) + (if b0141 then 0 else 91000) + (if b0142 then 0 else 91000) + (if b0144 then 0 else 91000) + (if b0199 then 0 else 91000) + (if b0200 then 0 else 91000) + (if b0201 then 0 else 91000) + (if b0202 then 0 else 91000) + (if b0203 then 0 else 91000) + (if b0204 then 0 else 91000) + (if b0205 then 0 else 91000) + (if b0206 then 0 else 91000) + (if b0207 then 0 else 91000) + (if b0208 then 0 else 91000) + (if b0209 then 0 else 91000) + (if b0210 then 0 else 91000) + (if b0211 then 0 else 91000) + (if b0212 then 0 else 91000) + (if b0213 then 0 else 91000) + (if b0214 then 0 else 91000) + (if b0215 then 0 else 91000) + (if b0216 then 0 else 91000) + (if b0217 then 0 else 91000) + (if b0218 then 0 else 91000) + (if b0219 then 0 else 91000) + (if b0220 then 0 else 91000) + (if b0221 then 0 else 91000) + (if b0222 then 0 else 91000) + (if b0223 then 0 else 91000) + (if b0224 then 0 else 91000) + (if b0225 then 0 else 91000) + (if b0226 then 0 else 91000) + (if b0227 then 0 else 91000) < 441
}
Prover Time taken = 12.148975
Added Horn clause: 39 && 32 && 36 && 0 && 40 => 41
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/linear-algebra/solvers/lu/kernel1.bpl.ice2.bpl
Total learner time was 00:00:00.1256280
Verifying $kernel1: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool) : bool
{
  0 + (if b0000 then 0 else 91000) + (if b0001 then 0 else 91000) + (if b0004 then 0 else 91000) + (if b0006 then 0 else 91000) + (if b0008 then 0 else 91000) + (if b0009 then 0 else 91000) + (if b0010 then 0 else 91000) + (if b0012 then 0 else 91000) + (if b0015 then 0 else 91000) + (if b0017 then 0 else 91000) + (if b0019 then 0 else 91000) + (if b0020 then 0 else 91000) + (if b0021 then 0 else 91000) + (if b0022 then 0 else 91000) + (if b0024 then 0 else 91000) + (if b0025 then 0 else 91000) + (if b0026 then 0 else 91000) + (if b0028 then 0 else 91000) + (if b0031 then 0 else 91000) + (if b0033 then 0 else 91000) + (if b0034 then 0 else 91000) + (if b0035 then 0 else 91000) + (if b0038 then 0 else 91000) + (if b0039 then 0 else 91000) + (if b0040 then 0 else 91000) + (if b0041 then 0 else 91000) + (if b0042 then 0 else 91000) + (if b0043 then 0 else 91000) + (if b0046 then 0 else 91000) + (if b0048 then 0 else 91000) + (if b0049 then 0 else 91000) + (if b0050 then 0 else 91000) + (if b0051 then 0 else 91000) + (if b0052 then 0 else 91000) + (if b0053 then 0 else 91000) + (if b0054 then 0 else 91000) + (if b0055 then 0 else 91000) + (if b0056 then 0 else 91000) + (if b0059 then 0 else 91000) + (if b0061 then 0 else 91000) + (if b0062 then 0 else 91000) + (if b0063 then 0 else 91000) + (if b0067 then 0 else 91000) + (if b0068 then 0 else 91000) + (if b0069 then 0 else 91000) + (if b0071 then 0 else 91000) + (if b0136 then 0 else 91000) + (if b0137 then 0 else 91000) + (if b0138 then 0 else 91000) + (if b0139 then 0 else 91000) + (if b0140 then 0 else 91000) + (if b0141 then 0 else 91000) + (if b0142 then 0 else 91000) + (if b0144 then 0 else 91000) + (if b0199 then 0 else 91000) + (if b0200 then 0 else 91000) + (if b0201 then 0 else 91000) + (if b0202 then 0 else 91000) + (if b0203 then 0 else 91000) + (if b0204 then 0 else 91000) + (if b0205 then 0 else 91000) + (if b0206 then 0 else 91000) + (if b0207 then 0 else 91000) + (if b0208 then 0 else 91000) + (if b0209 then 0 else 91000) + (if b0210 then 0 else 91000) + (if b0211 then 0 else 91000) + (if b0212 then 0 else 91000) + (if b0213 then 0 else 91000) + (if b0214 then 0 else 91000) + (if b0215 then 0 else 91000) + (if b0216 then 0 else 91000) + (if b0217 then 0 else 91000) + (if b0218 then 0 else 91000) + (if b0219 then 0 else 91000) + (if b0220 then 0 else 91000) + (if b0221 then 0 else 91000) + (if b0222 then 0 else 91000) + (if b0223 then 0 else 91000) + (if b0224 then 0 else 91000) + (if b0225 then 0 else 91000) + (if b0226 then 0 else 91000) + (if b0227 then 0 else 91000) < 441
}
Prover Time taken = 75.162396
Added Horn clause: 19 && 7 && 11 && 0 && 0 && 0 && 0 && 0 && 0 => 42
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/linear-algebra/solvers/lu/kernel1.bpl.ice2.bpl
Total learner time was 00:00:00.1231640
Verifying $kernel1: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool) : bool
{
  0 + (if b0000 then 0 else 91000) + (if b0001 then 0 else 91000) + (if b0004 then 0 else 91000) + (if b0006 then 0 else 91000) + (if b0008 then 0 else 91000) + (if b0009 then 0 else 91000) + (if b0010 then 0 else 91000) + (if b0012 then 0 else 91000) + (if b0015 then 0 else 91000) + (if b0017 then 0 else 91000) + (if b0019 then 0 else 91000) + (if b0020 then 0 else 91000) + (if b0021 then 0 else 91000) + (if b0022 then 0 else 91000) + (if b0024 then 0 else 91000) + (if b0025 then 0 else 91000) + (if b0026 then 0 else 91000) + (if b0028 then 0 else 91000) + (if b0031 then 0 else 91000) + (if b0033 then 0 else 91000) + (if b0034 then 0 else 91000) + (if b0035 then 0 else 91000) + (if b0038 then 0 else 91000) + (if b0039 then 0 else 91000) + (if b0040 then 0 else 91000) + (if b0041 then 0 else 91000) + (if b0042 then 0 else 91000) + (if b0043 then 0 else 91000) + (if b0046 then 0 else 91000) + (if b0048 then 0 else 91000) + (if b0049 then 0 else 91000) + (if b0050 then 0 else 91000) + (if b0051 then 0 else 91000) + (if b0052 then 0 else 91000) + (if b0053 then 0 else 91000) + (if b0054 then 0 else 91000) + (if b0055 then 0 else 91000) + (if b0056 then 0 else 91000) + (if b0059 then 0 else 91000) + (if b0061 then 0 else 91000) + (if b0062 then 0 else 91000) + (if b0063 then 0 else 91000) + (if b0067 then 0 else 91000) + (if b0068 then 0 else 91000) + (if b0069 then 0 else 91000) + (if b0071 then 0 else 91000) + (if b0136 then 0 else 91000) + (if b0137 then 0 else 91000) + (if b0138 then 0 else 91000) + (if b0139 then 0 else 91000) + (if b0140 then 0 else 91000) + (if b0141 then 0 else 91000) + (if b0142 then 0 else 91000) + (if b0144 then 0 else 91000) + (if b0200 then 0 else 91000) + (if b0201 then 0 else 91000) + (if b0202 then 0 else 91000) + (if b0203 then 0 else 91000) + (if b0204 then 0 else 91000) + (if b0205 then 0 else 91000) + (if b0206 then 0 else 91000) + (if b0207 then 0 else 91000) + (if b0208 then 0 else 91000) + (if b0209 then 0 else 91000) + (if b0210 then 0 else 91000) + (if b0211 then 0 else 91000) + (if b0212 then 0 else 91000) + (if b0213 then 0 else 91000) + (if b0214 then 0 else 91000) + (if b0215 then 0 else 91000) + (if b0216 then 0 else 91000) + (if b0217 then 0 else 91000) + (if b0218 then 0 else 91000) + (if b0219 then 0 else 91000) + (if b0220 then 0 else 91000) + (if b0221 then 0 else 91000) + (if b0222 then 0 else 91000) + (if b0223 then 0 else 91000) + (if b0224 then 0 else 91000) + (if b0225 then 0 else 91000) + (if b0226 then 0 else 91000) + (if b0227 then 0 else 91000) < 441
}
Prover Time taken = 53.668704
Added Horn clause: 43 && 44 && 0 && 0 && 0 && 0 && 0 => 45
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/linear-algebra/solvers/lu/kernel1.bpl.ice2.bpl
Total learner time was 00:00:00.1256620
Verifying $kernel1: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool) : bool
{
  0 + (if b0000 then 0 else 91000) + (if b0001 then 0 else 91000) + (if b0004 then 0 else 91000) + (if b0006 then 0 else 91000) + (if b0008 then 0 else 91000) + (if b0009 then 0 else 91000) + (if b0010 then 0 else 91000) + (if b0012 then 0 else 91000) + (if b0015 then 0 else 91000) + (if b0017 then 0 else 91000) + (if b0019 then 0 else 91000) + (if b0020 then 0 else 91000) + (if b0021 then 0 else 91000) + (if b0022 then 0 else 91000) + (if b0024 then 0 else 91000) + (if b0025 then 0 else 91000) + (if b0026 then 0 else 91000) + (if b0028 then 0 else 91000) + (if b0031 then 0 else 91000) + (if b0033 then 0 else 91000) + (if b0034 then 0 else 91000) + (if b0035 then 0 else 91000) + (if b0038 then 0 else 91000) + (if b0039 then 0 else 91000) + (if b0040 then 0 else 91000) + (if b0041 then 0 else 91000) + (if b0042 then 0 else 91000) + (if b0043 then 0 else 91000) + (if b0046 then 0 else 91000) + (if b0048 then 0 else 91000) + (if b0049 then 0 else 91000) + (if b0050 then 0 else 91000) + (if b0051 then 0 else 91000) + (if b0052 then 0 else 91000) + (if b0053 then 0 else 91000) + (if b0055 then 0 else 91000) + (if b0056 then 0 else 91000) + (if b0059 then 0 else 91000) + (if b0061 then 0 else 91000) + (if b0062 then 0 else 91000) + (if b0063 then 0 else 91000) + (if b0067 then 0 else 91000) + (if b0068 then 0 else 91000) + (if b0069 then 0 else 91000) + (if b0071 then 0 else 91000) + (if b0136 then 0 else 91000) + (if b0137 then 0 else 91000) + (if b0138 then 0 else 91000) + (if b0139 then 0 else 91000) + (if b0140 then 0 else 91000) + (if b0141 then 0 else 91000) + (if b0142 then 0 else 91000) + (if b0144 then 0 else 91000) + (if b0200 then 0 else 91000) + (if b0201 then 0 else 91000) + (if b0202 then 0 else 91000) + (if b0203 then 0 else 91000) + (if b0204 then 0 else 91000) + (if b0205 then 0 else 91000) + (if b0206 then 0 else 91000) + (if b0207 then 0 else 91000) + (if b0208 then 0 else 91000) + (if b0209 then 0 else 91000) + (if b0210 then 0 else 91000) + (if b0211 then 0 else 91000) + (if b0212 then 0 else 91000) + (if b0213 then 0 else 91000) + (if b0214 then 0 else 91000) + (if b0215 then 0 else 91000) + (if b0216 then 0 else 91000) + (if b0217 then 0 else 91000) + (if b0218 then 0 else 91000) + (if b0219 then 0 else 91000) + (if b0220 then 0 else 91000) + (if b0221 then 0 else 91000) + (if b0222 then 0 else 91000) + (if b0223 then 0 else 91000) + (if b0224 then 0 else 91000) + (if b0225 then 0 else 91000) + (if b0226 then 0 else 91000) + (if b0227 then 0 else 91000) < 441
}
Prover Time taken = 34.382474
Added Horn clause: 21 && 44 && 0 && 0 && 0 && 0 && 0 && 0 && 45 => 46
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/linear-algebra/solvers/lu/kernel1.bpl.ice2.bpl
Total learner time was 00:00:00.1235370
Verifying $kernel1: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool) : bool
{
  0 + (if b0000 then 0 else 91000) + (if b0001 then 0 else 91000) + (if b0004 then 0 else 91000) + (if b0006 then 0 else 91000) + (if b0008 then 0 else 91000) + (if b0009 then 0 else 91000) + (if b0010 then 0 else 91000) + (if b0012 then 0 else 91000) + (if b0015 then 0 else 91000) + (if b0017 then 0 else 91000) + (if b0019 then 0 else 91000) + (if b0020 then 0 else 91000) + (if b0021 then 0 else 91000) + (if b0022 then 0 else 91000) + (if b0024 then 0 else 91000) + (if b0025 then 0 else 91000) + (if b0026 then 0 else 91000) + (if b0028 then 0 else 91000) + (if b0031 then 0 else 91000) + (if b0033 then 0 else 91000) + (if b0034 then 0 else 91000) + (if b0035 then 0 else 91000) + (if b0038 then 0 else 91000) + (if b0039 then 0 else 91000) + (if b0040 then 0 else 91000) + (if b0041 then 0 else 91000) + (if b0042 then 0 else 91000) + (if b0043 then 0 else 91000) + (if b0046 then 0 else 91000) + (if b0048 then 0 else 91000) + (if b0049 then 0 else 91000) + (if b0050 then 0 else 91000) + (if b0051 then 0 else 91000) + (if b0052 then 0 else 91000) + (if b0053 then 0 else 91000) + (if b0055 then 0 else 91000) + (if b0056 then 0 else 91000) + (if b0059 then 0 else 91000) + (if b0061 then 0 else 91000) + (if b0062 then 0 else 91000) + (if b0063 then 0 else 91000) + (if b0067 then 0 else 91000) + (if b0068 then 0 else 91000) + (if b0069 then 0 else 91000) + (if b0071 then 0 else 91000) + (if b0137 then 0 else 91000) + (if b0138 then 0 else 91000) + (if b0139 then 0 else 91000) + (if b0140 then 0 else 91000) + (if b0141 then 0 else 91000) + (if b0142 then 0 else 91000) + (if b0144 then 0 else 91000) + (if b0200 then 0 else 91000) + (if b0201 then 0 else 91000) + (if b0202 then 0 else 91000) + (if b0203 then 0 else 91000) + (if b0204 then 0 else 91000) + (if b0205 then 0 else 91000) + (if b0206 then 0 else 91000) + (if b0207 then 0 else 91000) + (if b0208 then 0 else 91000) + (if b0209 then 0 else 91000) + (if b0210 then 0 else 91000) + (if b0211 then 0 else 91000) + (if b0212 then 0 else 91000) + (if b0213 then 0 else 91000) + (if b0214 then 0 else 91000) + (if b0215 then 0 else 91000) + (if b0216 then 0 else 91000) + (if b0217 then 0 else 91000) + (if b0218 then 0 else 91000) + (if b0219 then 0 else 91000) + (if b0220 then 0 else 91000) + (if b0221 then 0 else 91000) + (if b0222 then 0 else 91000) + (if b0223 then 0 else 91000) + (if b0224 then 0 else 91000) + (if b0225 then 0 else 91000) + (if b0226 then 0 else 91000) + (if b0227 then 0 else 91000) < 441
}
Prover Time taken = 17.543214
Added Horn clause: 47 => 48
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/linear-algebra/solvers/lu/kernel1.bpl.ice2.bpl
Total learner time was 00:00:00.1227710
Verifying $kernel1: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool) : bool
{
  0 + (if b0000 then 0 else 91000) + (if b0001 then 0 else 91000) + (if b0004 then 0 else 91000) + (if b0006 then 0 else 91000) + (if b0008 then 0 else 91000) + (if b0009 then 0 else 91000) + (if b0010 then 0 else 91000) + (if b0012 then 0 else 91000) + (if b0015 then 0 else 91000) + (if b0017 then 0 else 91000) + (if b0019 then 0 else 91000) + (if b0020 then 0 else 91000) + (if b0021 then 0 else 91000) + (if b0022 then 0 else 91000) + (if b0025 then 0 else 91000) + (if b0026 then 0 else 91000) + (if b0028 then 0 else 91000) + (if b0031 then 0 else 91000) + (if b0033 then 0 else 91000) + (if b0034 then 0 else 91000) + (if b0035 then 0 else 91000) + (if b0038 then 0 else 91000) + (if b0039 then 0 else 91000) + (if b0040 then 0 else 91000) + (if b0041 then 0 else 91000) + (if b0042 then 0 else 91000) + (if b0043 then 0 else 91000) + (if b0046 then 0 else 91000) + (if b0048 then 0 else 91000) + (if b0049 then 0 else 91000) + (if b0050 then 0 else 91000) + (if b0051 then 0 else 91000) + (if b0052 then 0 else 91000) + (if b0053 then 0 else 91000) + (if b0055 then 0 else 91000) + (if b0056 then 0 else 91000) + (if b0059 then 0 else 91000) + (if b0061 then 0 else 91000) + (if b0062 then 0 else 91000) + (if b0063 then 0 else 91000) + (if b0067 then 0 else 91000) + (if b0068 then 0 else 91000) + (if b0069 then 0 else 91000) + (if b0071 then 0 else 91000) + (if b0137 then 0 else 91000) + (if b0138 then 0 else 91000) + (if b0139 then 0 else 91000) + (if b0140 then 0 else 91000) + (if b0141 then 0 else 91000) + (if b0142 then 0 else 91000) + (if b0144 then 0 else 91000) + (if b0200 then 0 else 91000) + (if b0201 then 0 else 91000) + (if b0202 then 0 else 91000) + (if b0203 then 0 else 91000) + (if b0204 then 0 else 91000) + (if b0205 then 0 else 91000) + (if b0206 then 0 else 91000) + (if b0207 then 0 else 91000) + (if b0208 then 0 else 91000) + (if b0209 then 0 else 91000) + (if b0210 then 0 else 91000) + (if b0211 then 0 else 91000) + (if b0212 then 0 else 91000) + (if b0213 then 0 else 91000) + (if b0214 then 0 else 91000) + (if b0215 then 0 else 91000) + (if b0216 then 0 else 91000) + (if b0217 then 0 else 91000) + (if b0218 then 0 else 91000) + (if b0219 then 0 else 91000) + (if b0220 then 0 else 91000) + (if b0221 then 0 else 91000) + (if b0222 then 0 else 91000) + (if b0223 then 0 else 91000) + (if b0224 then 0 else 91000) + (if b0225 then 0 else 91000) + (if b0226 then 0 else 91000) + (if b0227 then 0 else 91000) < 441
}
Prover Time taken = 19.813841
Added Horn clause: 47 && 44 && 48 && 0 && 0 && 0 && 0 => 49
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/linear-algebra/solvers/lu/kernel1.bpl.ice2.bpl
Total learner time was 00:00:00.1242500
Verifying $kernel1: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool) : bool
{
  0 + (if b0000 then 0 else 91000) + (if b0001 then 0 else 91000) + (if b0004 then 0 else 91000) + (if b0006 then 0 else 91000) + (if b0008 then 0 else 91000) + (if b0009 then 0 else 91000) + (if b0010 then 0 else 91000) + (if b0012 then 0 else 91000) + (if b0015 then 0 else 91000) + (if b0017 then 0 else 91000) + (if b0019 then 0 else 91000) + (if b0020 then 0 else 91000) + (if b0021 then 0 else 91000) + (if b0022 then 0 else 91000) + (if b0025 then 0 else 91000) + (if b0026 then 0 else 91000) + (if b0028 then 0 else 91000) + (if b0031 then 0 else 91000) + (if b0033 then 0 else 91000) + (if b0034 then 0 else 91000) + (if b0035 then 0 else 91000) + (if b0038 then 0 else 91000) + (if b0039 then 0 else 91000) + (if b0040 then 0 else 91000) + (if b0041 then 0 else 91000) + (if b0042 then 0 else 91000) + (if b0043 then 0 else 91000) + (if b0046 then 0 else 91000) + (if b0048 then 0 else 91000) + (if b0049 then 0 else 91000) + (if b0050 then 0 else 91000) + (if b0051 then 0 else 91000) + (if b0052 then 0 else 91000) + (if b0055 then 0 else 91000) + (if b0056 then 0 else 91000) + (if b0059 then 0 else 91000) + (if b0061 then 0 else 91000) + (if b0062 then 0 else 91000) + (if b0063 then 0 else 91000) + (if b0067 then 0 else 91000) + (if b0068 then 0 else 91000) + (if b0069 then 0 else 91000) + (if b0071 then 0 else 91000) + (if b0137 then 0 else 91000) + (if b0138 then 0 else 91000) + (if b0139 then 0 else 91000) + (if b0140 then 0 else 91000) + (if b0141 then 0 else 91000) + (if b0142 then 0 else 91000) + (if b0144 then 0 else 91000) + (if b0200 then 0 else 91000) + (if b0201 then 0 else 91000) + (if b0202 then 0 else 91000) + (if b0203 then 0 else 91000) + (if b0204 then 0 else 91000) + (if b0205 then 0 else 91000) + (if b0206 then 0 else 91000) + (if b0207 then 0 else 91000) + (if b0208 then 0 else 91000) + (if b0209 then 0 else 91000) + (if b0210 then 0 else 91000) + (if b0211 then 0 else 91000) + (if b0212 then 0 else 91000) + (if b0213 then 0 else 91000) + (if b0214 then 0 else 91000) + (if b0215 then 0 else 91000) + (if b0216 then 0 else 91000) + (if b0217 then 0 else 91000) + (if b0218 then 0 else 91000) + (if b0219 then 0 else 91000) + (if b0220 then 0 else 91000) + (if b0221 then 0 else 91000) + (if b0222 then 0 else 91000) + (if b0223 then 0 else 91000) + (if b0224 then 0 else 91000) + (if b0225 then 0 else 91000) + (if b0226 then 0 else 91000) + (if b0227 then 0 else 91000) < 441
}
Prover Time taken = 226.442541
Added Horn clause: 50 && 51 && 52 && 0 && 0 && 0 && 0 && 0 && 0 => 53
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/linear-algebra/solvers/lu/kernel1.bpl.ice2.bpl
Total learner time was 00:00:00.1243850
Verifying $kernel1: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool) : bool
{
  0 + (if b0000 then 0 else 91000) + (if b0001 then 0 else 91000) + (if b0004 then 0 else 91000) + (if b0006 then 0 else 91000) + (if b0008 then 0 else 91000) + (if b0009 then 0 else 91000) + (if b0010 then 0 else 91000) + (if b0012 then 0 else 91000) + (if b0015 then 0 else 91000) + (if b0017 then 0 else 91000) + (if b0019 then 0 else 91000) + (if b0020 then 0 else 91000) + (if b0021 then 0 else 91000) + (if b0022 then 0 else 91000) + (if b0025 then 0 else 91000) + (if b0026 then 0 else 91000) + (if b0028 then 0 else 91000) + (if b0031 then 0 else 91000) + (if b0033 then 0 else 91000) + (if b0034 then 0 else 91000) + (if b0035 then 0 else 91000) + (if b0038 then 0 else 91000) + (if b0039 then 0 else 91000) + (if b0040 then 0 else 91000) + (if b0041 then 0 else 91000) + (if b0042 then 0 else 91000) + (if b0043 then 0 else 91000) + (if b0046 then 0 else 91000) + (if b0048 then 0 else 91000) + (if b0049 then 0 else 91000) + (if b0050 then 0 else 91000) + (if b0051 then 0 else 91000) + (if b0052 then 0 else 91000) + (if b0055 then 0 else 91000) + (if b0056 then 0 else 91000) + (if b0059 then 0 else 91000) + (if b0061 then 0 else 91000) + (if b0062 then 0 else 91000) + (if b0063 then 0 else 91000) + (if b0067 then 0 else 91000) + (if b0068 then 0 else 91000) + (if b0069 then 0 else 91000) + (if b0071 then 0 else 91000) + (if b0137 then 0 else 91000) + (if b0138 then 0 else 91000) + (if b0139 then 0 else 91000) + (if b0140 then 0 else 91000) + (if b0141 then 0 else 91000) + (if b0142 then 0 else 91000) + (if b0144 then 0 else 91000) + (if b0200 then 0 else 91000) + (if b0201 then 0 else 91000) + (if b0202 then 0 else 91000) + (if b0203 then 0 else 91000) + (if b0205 then 0 else 91000) + (if b0206 then 0 else 91000) + (if b0207 then 0 else 91000) + (if b0208 then 0 else 91000) + (if b0209 then 0 else 91000) + (if b0210 then 0 else 91000) + (if b0211 then 0 else 91000) + (if b0212 then 0 else 91000) + (if b0213 then 0 else 91000) + (if b0214 then 0 else 91000) + (if b0215 then 0 else 91000) + (if b0216 then 0 else 91000) + (if b0217 then 0 else 91000) + (if b0218 then 0 else 91000) + (if b0219 then 0 else 91000) + (if b0220 then 0 else 91000) + (if b0221 then 0 else 91000) + (if b0222 then 0 else 91000) + (if b0223 then 0 else 91000) + (if b0224 then 0 else 91000) + (if b0225 then 0 else 91000) + (if b0226 then 0 else 91000) + (if b0227 then 0 else 91000) < 441
}
Prover Time taken = 29.961747
Added Horn clause: 54 && 55 && 0 && 0 && 0 => 56
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/linear-algebra/solvers/lu/kernel1.bpl.ice2.bpl
Total learner time was 00:00:00.1245540
Verifying $kernel1: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool) : bool
{
  0 + (if b0000 then 0 else 91000) + (if b0001 then 0 else 91000) + (if b0004 then 0 else 91000) + (if b0006 then 0 else 91000) + (if b0008 then 0 else 91000) + (if b0009 then 0 else 91000) + (if b0010 then 0 else 91000) + (if b0012 then 0 else 91000) + (if b0015 then 0 else 91000) + (if b0017 then 0 else 91000) + (if b0019 then 0 else 91000) + (if b0020 then 0 else 91000) + (if b0021 then 0 else 91000) + (if b0022 then 0 else 91000) + (if b0025 then 0 else 91000) + (if b0026 then 0 else 91000) + (if b0028 then 0 else 91000) + (if b0031 then 0 else 91000) + (if b0033 then 0 else 91000) + (if b0034 then 0 else 91000) + (if b0035 then 0 else 91000) + (if b0038 then 0 else 91000) + (if b0039 then 0 else 91000) + (if b0040 then 0 else 91000) + (if b0041 then 0 else 91000) + (if b0042 then 0 else 91000) + (if b0043 then 0 else 91000) + (if b0046 then 0 else 91000) + (if b0048 then 0 else 91000) + (if b0049 then 0 else 91000) + (if b0050 then 0 else 91000) + (if b0051 then 0 else 91000) + (if b0052 then 0 else 91000) + (if b0055 then 0 else 91000) + (if b0056 then 0 else 91000) + (if b0059 then 0 else 91000) + (if b0061 then 0 else 91000) + (if b0062 then 0 else 91000) + (if b0063 then 0 else 91000) + (if b0067 then 0 else 91000) + (if b0068 then 0 else 91000) + (if b0069 then 0 else 91000) + (if b0071 then 0 else 91000) + (if b0137 then 0 else 91000) + (if b0138 then 0 else 91000) + (if b0139 then 0 else 91000) + (if b0140 then 0 else 91000) + (if b0141 then 0 else 91000) + (if b0142 then 0 else 91000) + (if b0144 then 0 else 91000) + (if b0200 then 0 else 91000) + (if b0201 then 0 else 91000) + (if b0202 then 0 else 91000) + (if b0203 then 0 else 91000) + (if b0205 then 0 else 91000) + (if b0206 then 0 else 91000) + (if b0207 then 0 else 91000) + (if b0208 then 0 else 91000) + (if b0209 then 0 else 91000) + (if b0210 then 0 else 91000) + (if b0211 then 0 else 91000) + (if b0212 then 0 else 91000) + (if b0213 then 0 else 91000) + (if b0214 then 0 else 91000) + (if b0215 then 0 else 91000) + (if b0216 then 0 else 91000) + (if b0217 then 0 else 91000) + (if b0218 then 0 else 91000) + (if b0220 then 0 else 91000) + (if b0221 then 0 else 91000) + (if b0222 then 0 else 91000) + (if b0223 then 0 else 91000) + (if b0224 then 0 else 91000) + (if b0225 then 0 else 91000) + (if b0226 then 0 else 91000) + (if b0227 then 0 else 91000) < 441
}
Prover Time taken = 25.587458
Added Horn clause: 57 && 55 && 0 && 0 && 0 => 58
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/linear-algebra/solvers/lu/kernel1.bpl.ice2.bpl
Total learner time was 00:00:00.1263570
Verifying $kernel1: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool) : bool
{
  0 + (if b0000 then 0 else 91000) + (if b0001 then 0 else 91000) + (if b0004 then 0 else 91000) + (if b0006 then 0 else 91000) + (if b0008 then 0 else 91000) + (if b0009 then 0 else 91000) + (if b0010 then 0 else 91000) + (if b0012 then 0 else 91000) + (if b0015 then 0 else 91000) + (if b0017 then 0 else 91000) + (if b0019 then 0 else 91000) + (if b0020 then 0 else 91000) + (if b0021 then 0 else 91000) + (if b0022 then 0 else 91000) + (if b0025 then 0 else 91000) + (if b0026 then 0 else 91000) + (if b0028 then 0 else 91000) + (if b0031 then 0 else 91000) + (if b0033 then 0 else 91000) + (if b0034 then 0 else 91000) + (if b0035 then 0 else 91000) + (if b0038 then 0 else 91000) + (if b0040 then 0 else 91000) + (if b0041 then 0 else 91000) + (if b0042 then 0 else 91000) + (if b0043 then 0 else 91000) + (if b0046 then 0 else 91000) + (if b0048 then 0 else 91000) + (if b0049 then 0 else 91000) + (if b0050 then 0 else 91000) + (if b0051 then 0 else 91000) + (if b0052 then 0 else 91000) + (if b0055 then 0 else 91000) + (if b0056 then 0 else 91000) + (if b0059 then 0 else 91000) + (if b0061 then 0 else 91000) + (if b0062 then 0 else 91000) + (if b0063 then 0 else 91000) + (if b0067 then 0 else 91000) + (if b0068 then 0 else 91000) + (if b0069 then 0 else 91000) + (if b0071 then 0 else 91000) + (if b0137 then 0 else 91000) + (if b0138 then 0 else 91000) + (if b0139 then 0 else 91000) + (if b0140 then 0 else 91000) + (if b0141 then 0 else 91000) + (if b0142 then 0 else 91000) + (if b0144 then 0 else 91000) + (if b0200 then 0 else 91000) + (if b0201 then 0 else 91000) + (if b0202 then 0 else 91000) + (if b0203 then 0 else 91000) + (if b0205 then 0 else 91000) + (if b0206 then 0 else 91000) + (if b0207 then 0 else 91000) + (if b0208 then 0 else 91000) + (if b0209 then 0 else 91000) + (if b0210 then 0 else 91000) + (if b0211 then 0 else 91000) + (if b0212 then 0 else 91000) + (if b0213 then 0 else 91000) + (if b0214 then 0 else 91000) + (if b0215 then 0 else 91000) + (if b0216 then 0 else 91000) + (if b0217 then 0 else 91000) + (if b0218 then 0 else 91000) + (if b0220 then 0 else 91000) + (if b0221 then 0 else 91000) + (if b0222 then 0 else 91000) + (if b0223 then 0 else 91000) + (if b0224 then 0 else 91000) + (if b0225 then 0 else 91000) + (if b0226 then 0 else 91000) + (if b0227 then 0 else 91000) < 441
}
Prover Time taken = 24.799042
Added Horn clause: 59 && 60 && 61 && 0 && 0 && 56 && 58 => 62
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/linear-algebra/solvers/lu/kernel1.bpl.ice2.bpl
Total learner time was 00:00:00.1251200
Verifying $kernel1: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool) : bool
{
  0 + (if b0000 then 0 else 91000) + (if b0001 then 0 else 91000) + (if b0004 then 0 else 91000) + (if b0006 then 0 else 91000) + (if b0008 then 0 else 91000) + (if b0009 then 0 else 91000) + (if b0010 then 0 else 91000) + (if b0012 then 0 else 91000) + (if b0015 then 0 else 91000) + (if b0017 then 0 else 91000) + (if b0019 then 0 else 91000) + (if b0020 then 0 else 91000) + (if b0021 then 0 else 91000) + (if b0022 then 0 else 91000) + (if b0025 then 0 else 91000) + (if b0026 then 0 else 91000) + (if b0028 then 0 else 91000) + (if b0031 then 0 else 91000) + (if b0033 then 0 else 91000) + (if b0034 then 0 else 91000) + (if b0035 then 0 else 91000) + (if b0038 then 0 else 91000) + (if b0040 then 0 else 91000) + (if b0041 then 0 else 91000) + (if b0042 then 0 else 91000) + (if b0043 then 0 else 91000) + (if b0046 then 0 else 91000) + (if b0048 then 0 else 91000) + (if b0049 then 0 else 91000) + (if b0050 then 0 else 91000) + (if b0051 then 0 else 91000) + (if b0052 then 0 else 91000) + (if b0055 then 0 else 91000) + (if b0056 then 0 else 91000) + (if b0059 then 0 else 91000) + (if b0061 then 0 else 91000) + (if b0062 then 0 else 91000) + (if b0063 then 0 else 91000) + (if b0067 then 0 else 91000) + (if b0068 then 0 else 91000) + (if b0069 then 0 else 91000) + (if b0071 then 0 else 91000) + (if b0137 then 0 else 91000) + (if b0138 then 0 else 91000) + (if b0139 then 0 else 91000) + (if b0140 then 0 else 91000) + (if b0141 then 0 else 91000) + (if b0142 then 0 else 91000) + (if b0144 then 0 else 91000) + (if b0200 then 0 else 91000) + (if b0201 then 0 else 91000) + (if b0202 then 0 else 91000) + (if b0203 then 0 else 91000) + (if b0205 then 0 else 91000) + (if b0206 then 0 else 91000) + (if b0207 then 0 else 91000) + (if b0208 then 0 else 91000) + (if b0209 then 0 else 91000) + (if b0210 then 0 else 91000) + (if b0211 then 0 else 91000) + (if b0212 then 0 else 91000) + (if b0213 then 0 else 91000) + (if b0214 then 0 else 91000) + (if b0215 then 0 else 91000) + (if b0216 then 0 else 91000) + (if b0217 then 0 else 91000) + (if b0218 then 0 else 91000) + (if b0220 then 0 else 91000) + (if b0221 then 0 else 91000) + (if b0222 then 0 else 91000) + (if b0223 then 0 else 91000) + (if b0224 then 0 else 91000) + (if b0227 then 0 else 91000) < 441
}
Prover Time taken = 35.005969
Added Horn clause: 63 && 64 && 65 && 0 && 0 && 56 && 58 => 66
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/linear-algebra/solvers/lu/kernel1.bpl.ice2.bpl
Total learner time was 00:00:00.1249840
Verifying $kernel1: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool) : bool
{
  0 + (if b0000 then 0 else 91000) + (if b0001 then 0 else 91000) + (if b0004 then 0 else 91000) + (if b0006 then 0 else 91000) + (if b0008 then 0 else 91000) + (if b0009 then 0 else 91000) + (if b0010 then 0 else 91000) + (if b0012 then 0 else 91000) + (if b0015 then 0 else 91000) + (if b0017 then 0 else 91000) + (if b0019 then 0 else 91000) + (if b0020 then 0 else 91000) + (if b0021 then 0 else 91000) + (if b0022 then 0 else 91000) + (if b0025 then 0 else 91000) + (if b0026 then 0 else 91000) + (if b0028 then 0 else 91000) + (if b0031 then 0 else 91000) + (if b0033 then 0 else 91000) + (if b0034 then 0 else 91000) + (if b0035 then 0 else 91000) + (if b0038 then 0 else 91000) + (if b0040 then 0 else 91000) + (if b0041 then 0 else 91000) + (if b0042 then 0 else 91000) + (if b0043 then 0 else 91000) + (if b0046 then 0 else 91000) + (if b0048 then 0 else 91000) + (if b0049 then 0 else 91000) + (if b0050 then 0 else 91000) + (if b0051 then 0 else 91000) + (if b0055 then 0 else 91000) + (if b0056 then 0 else 91000) + (if b0059 then 0 else 91000) + (if b0061 then 0 else 91000) + (if b0062 then 0 else 91000) + (if b0063 then 0 else 91000) + (if b0067 then 0 else 91000) + (if b0068 then 0 else 91000) + (if b0069 then 0 else 91000) + (if b0071 then 0 else 91000) + (if b0137 then 0 else 91000) + (if b0138 then 0 else 91000) + (if b0139 then 0 else 91000) + (if b0140 then 0 else 91000) + (if b0141 then 0 else 91000) + (if b0142 then 0 else 91000) + (if b0144 then 0 else 91000) + (if b0200 then 0 else 91000) + (if b0201 then 0 else 91000) + (if b0202 then 0 else 91000) + (if b0203 then 0 else 91000) + (if b0205 then 0 else 91000) + (if b0206 then 0 else 91000) + (if b0207 then 0 else 91000) + (if b0208 then 0 else 91000) + (if b0209 then 0 else 91000) + (if b0210 then 0 else 91000) + (if b0211 then 0 else 91000) + (if b0212 then 0 else 91000) + (if b0213 then 0 else 91000) + (if b0214 then 0 else 91000) + (if b0215 then 0 else 91000) + (if b0216 then 0 else 91000) + (if b0217 then 0 else 91000) + (if b0218 then 0 else 91000) + (if b0220 then 0 else 91000) + (if b0221 then 0 else 91000) + (if b0222 then 0 else 91000) + (if b0223 then 0 else 91000) + (if b0224 then 0 else 91000) + (if b0227 then 0 else 91000) < 441
}
Prover Time taken = 32.881769
Added Horn clause: 50 && 55 && 0 && 0 && 0 && 56 && 58 && 67 && 66 => 68
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/linear-algebra/solvers/lu/kernel1.bpl.ice2.bpl
Total learner time was 00:00:00.1297710
Verifying $kernel1: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool) : bool
{
  0 + (if b0000 then 0 else 91000) + (if b0001 then 0 else 91000) + (if b0004 then 0 else 91000) + (if b0006 then 0 else 91000) + (if b0008 then 0 else 91000) + (if b0009 then 0 else 91000) + (if b0010 then 0 else 91000) + (if b0012 then 0 else 91000) + (if b0015 then 0 else 91000) + (if b0017 then 0 else 91000) + (if b0019 then 0 else 91000) + (if b0020 then 0 else 91000) + (if b0021 then 0 else 91000) + (if b0022 then 0 else 91000) + (if b0025 then 0 else 91000) + (if b0026 then 0 else 91000) + (if b0028 then 0 else 91000) + (if b0031 then 0 else 91000) + (if b0033 then 0 else 91000) + (if b0034 then 0 else 91000) + (if b0035 then 0 else 91000) + (if b0038 then 0 else 91000) + (if b0040 then 0 else 91000) + (if b0041 then 0 else 91000) + (if b0042 then 0 else 91000) + (if b0043 then 0 else 91000) + (if b0046 then 0 else 91000) + (if b0048 then 0 else 91000) + (if b0049 then 0 else 91000) + (if b0050 then 0 else 91000) + (if b0051 then 0 else 91000) + (if b0055 then 0 else 91000) + (if b0056 then 0 else 91000) + (if b0059 then 0 else 91000) + (if b0061 then 0 else 91000) + (if b0062 then 0 else 91000) + (if b0063 then 0 else 91000) + (if b0067 then 0 else 91000) + (if b0068 then 0 else 91000) + (if b0069 then 0 else 91000) + (if b0071 then 0 else 91000) + (if b0137 then 0 else 91000) + (if b0138 then 0 else 91000) + (if b0140 then 0 else 91000) + (if b0141 then 0 else 91000) + (if b0142 then 0 else 91000) + (if b0144 then 0 else 91000) + (if b0200 then 0 else 91000) + (if b0201 then 0 else 91000) + (if b0202 then 0 else 91000) + (if b0203 then 0 else 91000) + (if b0205 then 0 else 91000) + (if b0206 then 0 else 91000) + (if b0207 then 0 else 91000) + (if b0208 then 0 else 91000) + (if b0209 then 0 else 91000) + (if b0210 then 0 else 91000) + (if b0211 then 0 else 91000) + (if b0212 then 0 else 91000) + (if b0213 then 0 else 91000) + (if b0214 then 0 else 91000) + (if b0215 then 0 else 91000) + (if b0216 then 0 else 91000) + (if b0217 then 0 else 91000) + (if b0218 then 0 else 91000) + (if b0220 then 0 else 91000) + (if b0221 then 0 else 91000) + (if b0222 then 0 else 91000) + (if b0223 then 0 else 91000) + (if b0224 then 0 else 91000) + (if b0227 then 0 else 91000) < 441
}
Command exited with non-zero status 124
9.72user 6.67system 19:58.62elapsed 1%CPU (0avgtext+0avgdata 78752maxresident)k
600inputs+3416outputs (1major+205469minor)pagefaults 0swaps
FILE:polybench/linear-algebra/solvers/lu/kernel1.bpl.ice2.bpl
#################
Wed May 12 04:50:51 UTC 2021
KEY=awinnow
OUTPUT=/root/Docker/winnow_gpu_timeout.txt
[TRACE] Using prover: /root/Docker/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/root/Docker/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a winnow
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/errorLimit:1
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/linear-algebra/solvers/lu/kernel2.bpl.ice2.bpl
--------------------
Parsing /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/linear-algebra/solvers/lu/kernel2.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /root/Docker/z3/bin/z3
#parameters: 199
Generating VC of $kernel2
Verifying $kernel2: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.273855
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/linear-algebra/solvers/lu/kernel2.bpl.ice2.bpl
Total learner time was 00:00:00.1228970
Verifying $kernel2: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool) : bool
{
  0 + (if b0000 then 0 else 79000) + (if b0001 then 0 else 79000) + (if b0002 then 0 else 79000) + (if b0003 then 0 else 79000) + (if b0004 then 0 else 79000) + (if b0005 then 0 else 79000) + (if b0006 then 0 else 79000) + (if b0007 then 0 else 79000) + (if b0008 then 0 else 79000) + (if b0009 then 0 else 79000) + (if b0010 then 0 else 79000) + (if b0011 then 0 else 79000) + (if b0012 then 0 else 79000) + (if b0013 then 0 else 79000) + (if b0014 then 0 else 79000) + (if b0015 then 0 else 79000) + (if b0016 then 0 else 79000) + (if b0017 then 0 else 79000) + (if b0018 then 0 else 79000) + (if b0019 then 0 else 79000) + (if b0020 then 0 else 79000) + (if b0021 then 0 else 79000) + (if b0022 then 0 else 79000) + (if b0023 then 0 else 79000) + (if b0024 then 0 else 79000) + (if b0025 then 0 else 79000) + (if b0026 then 0 else 79000) + (if b0027 then 0 else 79000) + (if b0028 then 0 else 79000) + (if b0029 then 0 else 79000) + (if b0030 then 0 else 79000) + (if b0031 then 0 else 79000) + (if b0032 then 0 else 79000) + (if b0033 then 0 else 79000) + (if b0034 then 0 else 79000) + (if b0035 then 0 else 79000) + (if b0036 then 0 else 79000) + (if b0037 then 0 else 79000) + (if b0038 then 0 else 79000) + (if b0039 then 0 else 79000) + (if b0040 then 0 else 79000) + (if b0041 then 0 else 79000) + (if b0042 then 0 else 79000) + (if b0043 then 0 else 79000) + (if b0044 then 0 else 79000) + (if b0045 then 0 else 79000) + (if b0046 then 0 else 79000) + (if b0047 then 0 else 79000) + (if b0048 then 0 else 79000) + (if b0049 then 0 else 79000) + (if b0050 then 0 else 79000) + (if b0051 then 0 else 79000) + (if b0052 then 0 else 79000) + (if b0053 then 0 else 79000) + (if b0054 then 0 else 79000) + (if b0055 then 0 else 79000) + (if b0056 then 0 else 79000) + (if b0057 then 0 else 79000) + (if b0058 then 0 else 79000) + (if b0059 then 0 else 79000) + (if b0060 then 0 else 79000) + (if b0061 then 0 else 79000) + (if b0062 then 0 else 79000) + (if b0063 then 0 else 79000) + (if b0064 then 0 else 79000) + (if b0065 then 0 else 79000) + (if b0066 then 0 else 79000) + (if b0067 then 0 else 79000) + (if b0068 then 0 else 79000) + (if b0069 then 0 else 79000) + (if b0070 then 0 else 79000) + (if b0071 then 0 else 79000) + (if b0072 then 0 else 79000) + (if b0073 then 0 else 79000) + (if b0074 then 0 else 79000) + (if b0075 then 0 else 79000) + (if b0076 then 0 else 79000) + (if b0077 then 0 else 79000) + (if b0078 then 0 else 79000) + (if b0079 then 0 else 79000) + (if b0080 then 0 else 79000) + (if b0081 then 0 else 79000) + (if b0082 then 0 else 79000) + (if b0083 then 0 else 79000) + (if b0084 then 0 else 79000) + (if b0085 then 0 else 79000) + (if b0086 then 0 else 79000) + (if b0087 then 0 else 79000) + (if b0088 then 0 else 79000) + (if b0089 then 0 else 79000) + (if b0090 then 0 else 79000) + (if b0091 then 0 else 79000) + (if b0092 then 0 else 79000) + (if b0093 then 0 else 79000) + (if b0094 then 0 else 79000) + (if b0095 then 0 else 79000) + (if b0096 then 0 else 79000) + (if b0097 then 0 else 79000) + (if b0098 then 0 else 79000) + (if b0099 then 0 else 79000) + (if b0100 then 0 else 79000) + (if b0101 then 0 else 79000) + (if b0102 then 0 else 79000) + (if b0103 then 0 else 79000) + (if b0104 then 0 else 79000) + (if b0105 then 0 else 79000) + (if b0106 then 0 else 79000) + (if b0107 then 0 else 79000) + (if b0108 then 0 else 79000) + (if b0109 then 0 else 79000) + (if b0110 then 0 else 79000) + (if b0111 then 0 else 79000) + (if b0112 then 0 else 79000) + (if b0113 then 0 else 79000) + (if b0114 then 0 else 79000) + (if b0115 then 0 else 79000) + (if b0116 then 0 else 79000) + (if b0117 then 0 else 79000) + (if b0118 then 0 else 79000) + (if b0119 then 0 else 79000) + (if b0120 then 0 else 79000) + (if b0121 then 0 else 79000) + (if b0122 then 0 else 79000) + (if b0123 then 0 else 79000) + (if b0124 then 0 else 79000) + (if b0125 then 0 else 79000) + (if b0126 then 0 else 79000) + (if b0127 then 0 else 79000) + (if b0128 then 0 else 79000) + (if b0129 then 0 else 79000) + (if b0130 then 0 else 79000) + (if b0131 then 0 else 79000) + (if b0132 then 0 else 79000) + (if b0133 then 0 else 79000) + (if b0134 then 0 else 79000) + (if b0135 then 0 else 79000) + (if b0136 then 0 else 79000) + (if b0137 then 0 else 79000) + (if b0138 then 0 else 79000) + (if b0139 then 0 else 79000) + (if b0140 then 0 else 79000) + (if b0141 then 0 else 79000) + (if b0142 then 0 else 79000) + (if b0143 then 0 else 79000) + (if b0144 then 0 else 79000) + (if b0145 then 0 else 79000) + (if b0146 then 0 else 79000) + (if b0147 then 0 else 79000) + (if b0148 then 0 else 79000) + (if b0149 then 0 else 79000) + (if b0150 then 0 else 79000) + (if b0151 then 0 else 79000) + (if b0152 then 0 else 79000) + (if b0153 then 0 else 79000) + (if b0154 then 0 else 79000) + (if b0155 then 0 else 79000) + (if b0156 then 0 else 79000) + (if b0157 then 0 else 79000) + (if b0158 then 0 else 79000) + (if b0159 then 0 else 79000) + (if b0160 then 0 else 79000) + (if b0161 then 0 else 79000) + (if b0162 then 0 else 79000) + (if b0163 then 0 else 79000) + (if b0164 then 0 else 79000) + (if b0165 then 0 else 79000) + (if b0166 then 0 else 79000) + (if b0167 then 0 else 79000) + (if b0168 then 0 else 79000) + (if b0169 then 0 else 79000) + (if b0170 then 0 else 79000) + (if b0171 then 0 else 79000) + (if b0172 then 0 else 79000) + (if b0173 then 0 else 79000) + (if b0174 then 0 else 79000) + (if b0175 then 0 else 79000) + (if b0176 then 0 else 79000) + (if b0177 then 0 else 79000) + (if b0178 then 0 else 79000) + (if b0179 then 0 else 79000) + (if b0180 then 0 else 79000) + (if b0181 then 0 else 79000) + (if b0182 then 0 else 79000) + (if b0183 then 0 else 79000) + (if b0184 then 0 else 79000) + (if b0185 then 0 else 79000) + (if b0186 then 0 else 79000) + (if b0187 then 0 else 79000) + (if b0188 then 0 else 79000) + (if b0189 then 0 else 79000) + (if b0190 then 0 else 79000) + (if b0191 then 0 else 79000) + (if b0192 then 0 else 79000) + (if b0193 then 0 else 79000) + (if b0194 then 0 else 79000) + (if b0195 then 0 else 79000) + (if b0196 then 0 else 79000) + (if b0197 then 0 else 79000) + (if b0198 then 0 else 79000) < 441
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,1,1,0,1,0,1,1,0,0,1,1,1,1,1,1,0,0,1,1,0,0,0,1,0,1,0,0,1,1,0,0,0,0,1,0,0,1,0,0,1,1,0,0,0,1,0,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 8.643697
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/linear-algebra/solvers/lu/kernel2.bpl.ice2.bpl
Total learner time was 00:00:00.1186490
Verifying $kernel2: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool) : bool
{
  0 + (if b0000 then 0 else 79000) + (if b0001 then 0 else 79000) + (if b0002 then 0 else 79000) + (if b0003 then 0 else 79000) + (if b0004 then 0 else 79000) + (if b0005 then 0 else 79000) + (if b0006 then 0 else 79000) + (if b0007 then 0 else 79000) + (if b0008 then 0 else 79000) + (if b0009 then 0 else 79000) + (if b0010 then 0 else 79000) + (if b0011 then 0 else 79000) + (if b0012 then 0 else 79000) + (if b0013 then 0 else 79000) + (if b0014 then 0 else 79000) + (if b0015 then 0 else 79000) + (if b0016 then 0 else 79000) + (if b0017 then 0 else 79000) + (if b0018 then 0 else 79000) + (if b0019 then 0 else 79000) + (if b0020 then 0 else 79000) + (if b0021 then 0 else 79000) + (if b0022 then 0 else 79000) + (if b0023 then 0 else 79000) + (if b0024 then 0 else 79000) + (if b0025 then 0 else 79000) + (if b0026 then 0 else 79000) + (if b0027 then 0 else 79000) + (if b0028 then 0 else 79000) + (if b0029 then 0 else 79000) + (if b0030 then 0 else 79000) + (if b0031 then 0 else 79000) + (if b0032 then 0 else 79000) + (if b0033 then 0 else 79000) + (if b0034 then 0 else 79000) + (if b0035 then 0 else 79000) + (if b0036 then 0 else 79000) + (if b0037 then 0 else 79000) + (if b0038 then 0 else 79000) + (if b0039 then 0 else 79000) + (if b0040 then 0 else 79000) + (if b0041 then 0 else 79000) + (if b0042 then 0 else 79000) + (if b0043 then 0 else 79000) + (if b0044 then 0 else 79000) + (if b0045 then 0 else 79000) + (if b0046 then 0 else 79000) + (if b0047 then 0 else 79000) + (if b0048 then 0 else 79000) + (if b0049 then 0 else 79000) + (if b0050 then 0 else 79000) + (if b0051 then 0 else 79000) + (if b0052 then 0 else 79000) + (if b0053 then 0 else 79000) + (if b0054 then 0 else 79000) + (if b0055 then 0 else 79000) + (if b0056 then 0 else 79000) + (if b0057 then 0 else 79000) + (if b0058 then 0 else 79000) + (if b0059 then 0 else 79000) + (if b0060 then 0 else 79000) + (if b0061 then 0 else 79000) + (if b0062 then 0 else 79000) + (if b0063 then 0 else 79000) + (if b0064 then 0 else 79000) + (if b0065 then 0 else 79000) + (if b0066 then 0 else 79000) + (if b0067 then 0 else 79000) + (if b0068 then 0 else 79000) + (if b0069 then 0 else 79000) + (if b0070 then 0 else 79000) + (if b0071 then 0 else 79000) + (if b0072 then 0 else 79000) + (if b0073 then 0 else 79000) + (if b0077 then 0 else 79000) + (if b0078 then 0 else 79000) + (if b0080 then 0 else 79000) + (if b0082 then 0 else 79000) + (if b0083 then 0 else 79000) + (if b0086 then 0 else 79000) + (if b0087 then 0 else 79000) + (if b0088 then 0 else 79000) + (if b0089 then 0 else 79000) + (if b0090 then 0 else 79000) + (if b0091 then 0 else 79000) + (if b0094 then 0 else 79000) + (if b0095 then 0 else 79000) + (if b0099 then 0 else 79000) + (if b0101 then 0 else 79000) + (if b0104 then 0 else 79000) + (if b0105 then 0 else 79000) + (if b0110 then 0 else 79000) + (if b0113 then 0 else 79000) + (if b0116 then 0 else 79000) + (if b0117 then 0 else 79000) + (if b0121 then 0 else 79000) + (if b0123 then 0 else 79000) + (if b0124 then 0 else 79000) + (if b0126 then 0 else 79000) + (if b0127 then 0 else 79000) + (if b0128 then 0 else 79000) + (if b0129 then 0 else 79000) + (if b0130 then 0 else 79000) + (if b0131 then 0 else 79000) + (if b0132 then 0 else 79000) + (if b0133 then 0 else 79000) + (if b0134 then 0 else 79000) + (if b0135 then 0 else 79000) + (if b0136 then 0 else 79000) + (if b0137 then 0 else 79000) + (if b0138 then 0 else 79000) + (if b0139 then 0 else 79000) + (if b0140 then 0 else 79000) + (if b0141 then 0 else 79000) + (if b0142 then 0 else 79000) + (if b0143 then 0 else 79000) + (if b0144 then 0 else 79000) + (if b0145 then 0 else 79000) + (if b0146 then 0 else 79000) + (if b0147 then 0 else 79000) + (if b0148 then 0 else 79000) + (if b0149 then 0 else 79000) + (if b0150 then 0 else 79000) + (if b0151 then 0 else 79000) + (if b0152 then 0 else 79000) + (if b0153 then 0 else 79000) + (if b0154 then 0 else 79000) + (if b0155 then 0 else 79000) + (if b0156 then 0 else 79000) + (if b0157 then 0 else 79000) + (if b0158 then 0 else 79000) + (if b0159 then 0 else 79000) + (if b0160 then 0 else 79000) + (if b0161 then 0 else 79000) + (if b0162 then 0 else 79000) + (if b0163 then 0 else 79000) + (if b0164 then 0 else 79000) + (if b0165 then 0 else 79000) + (if b0166 then 0 else 79000) + (if b0167 then 0 else 79000) + (if b0168 then 0 else 79000) + (if b0169 then 0 else 79000) + (if b0170 then 0 else 79000) + (if b0171 then 0 else 79000) + (if b0172 then 0 else 79000) + (if b0173 then 0 else 79000) + (if b0174 then 0 else 79000) + (if b0175 then 0 else 79000) + (if b0176 then 0 else 79000) + (if b0177 then 0 else 79000) + (if b0178 then 0 else 79000) + (if b0179 then 0 else 79000) + (if b0180 then 0 else 79000) + (if b0181 then 0 else 79000) + (if b0182 then 0 else 79000) + (if b0183 then 0 else 79000) + (if b0184 then 0 else 79000) + (if b0185 then 0 else 79000) + (if b0186 then 0 else 79000) + (if b0187 then 0 else 79000) + (if b0188 then 0 else 79000) + (if b0189 then 0 else 79000) + (if b0190 then 0 else 79000) + (if b0191 then 0 else 79000) + (if b0192 then 0 else 79000) + (if b0193 then 0 else 79000) + (if b0194 then 0 else 79000) + (if b0195 then 0 else 79000) + (if b0196 then 0 else 79000) + (if b0197 then 0 else 79000) + (if b0198 then 0 else 79000) < 441
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,0,0,1,1,0,0,0,1,1,0,1,1,0,1,1,1,1,0,1,1,1,1,1,0,1,1,1,1,0,1,1,1,1,1,1,0,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 12.848024
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/linear-algebra/solvers/lu/kernel2.bpl.ice2.bpl
Total learner time was 00:00:00.1217170
Verifying $kernel2: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool) : bool
{
  0 + (if b0000 then 0 else 79000) + (if b0001 then 0 else 79000) + (if b0002 then 0 else 79000) + (if b0003 then 0 else 79000) + (if b0004 then 0 else 79000) + (if b0005 then 0 else 79000) + (if b0006 then 0 else 79000) + (if b0007 then 0 else 79000) + (if b0008 then 0 else 79000) + (if b0009 then 0 else 79000) + (if b0010 then 0 else 79000) + (if b0011 then 0 else 79000) + (if b0012 then 0 else 79000) + (if b0013 then 0 else 79000) + (if b0014 then 0 else 79000) + (if b0015 then 0 else 79000) + (if b0016 then 0 else 79000) + (if b0017 then 0 else 79000) + (if b0018 then 0 else 79000) + (if b0019 then 0 else 79000) + (if b0020 then 0 else 79000) + (if b0021 then 0 else 79000) + (if b0022 then 0 else 79000) + (if b0023 then 0 else 79000) + (if b0024 then 0 else 79000) + (if b0025 then 0 else 79000) + (if b0026 then 0 else 79000) + (if b0027 then 0 else 79000) + (if b0028 then 0 else 79000) + (if b0029 then 0 else 79000) + (if b0030 then 0 else 79000) + (if b0031 then 0 else 79000) + (if b0032 then 0 else 79000) + (if b0033 then 0 else 79000) + (if b0034 then 0 else 79000) + (if b0035 then 0 else 79000) + (if b0036 then 0 else 79000) + (if b0037 then 0 else 79000) + (if b0038 then 0 else 79000) + (if b0039 then 0 else 79000) + (if b0040 then 0 else 79000) + (if b0041 then 0 else 79000) + (if b0042 then 0 else 79000) + (if b0043 then 0 else 79000) + (if b0044 then 0 else 79000) + (if b0045 then 0 else 79000) + (if b0046 then 0 else 79000) + (if b0047 then 0 else 79000) + (if b0048 then 0 else 79000) + (if b0049 then 0 else 79000) + (if b0050 then 0 else 79000) + (if b0051 then 0 else 79000) + (if b0052 then 0 else 79000) + (if b0053 then 0 else 79000) + (if b0054 then 0 else 79000) + (if b0055 then 0 else 79000) + (if b0056 then 0 else 79000) + (if b0057 then 0 else 79000) + (if b0058 then 0 else 79000) + (if b0059 then 0 else 79000) + (if b0060 then 0 else 79000) + (if b0061 then 0 else 79000) + (if b0062 then 0 else 79000) + (if b0063 then 0 else 79000) + (if b0064 then 0 else 79000) + (if b0065 then 0 else 79000) + (if b0066 then 0 else 79000) + (if b0067 then 0 else 79000) + (if b0068 then 0 else 79000) + (if b0069 then 0 else 79000) + (if b0070 then 0 else 79000) + (if b0071 then 0 else 79000) + (if b0072 then 0 else 79000) + (if b0073 then 0 else 79000) + (if b0077 then 0 else 79000) + (if b0078 then 0 else 79000) + (if b0089 then 0 else 79000) + (if b0090 then 0 else 79000) + (if b0095 then 0 else 79000) + (if b0101 then 0 else 79000) + (if b0104 then 0 else 79000) + (if b0113 then 0 else 79000) + (if b0116 then 0 else 79000) + (if b0123 then 0 else 79000) + (if b0124 then 0 else 79000) + (if b0126 then 0 else 79000) + (if b0127 then 0 else 79000) + (if b0128 then 0 else 79000) + (if b0129 then 0 else 79000) + (if b0130 then 0 else 79000) + (if b0131 then 0 else 79000) + (if b0132 then 0 else 79000) + (if b0133 then 0 else 79000) + (if b0134 then 0 else 79000) + (if b0135 then 0 else 79000) + (if b0136 then 0 else 79000) + (if b0137 then 0 else 79000) + (if b0138 then 0 else 79000) + (if b0139 then 0 else 79000) + (if b0140 then 0 else 79000) + (if b0141 then 0 else 79000) + (if b0142 then 0 else 79000) + (if b0143 then 0 else 79000) + (if b0144 then 0 else 79000) + (if b0145 then 0 else 79000) + (if b0146 then 0 else 79000) + (if b0147 then 0 else 79000) + (if b0148 then 0 else 79000) + (if b0149 then 0 else 79000) + (if b0150 then 0 else 79000) + (if b0151 then 0 else 79000) + (if b0152 then 0 else 79000) + (if b0153 then 0 else 79000) + (if b0154 then 0 else 79000) + (if b0155 then 0 else 79000) + (if b0156 then 0 else 79000) + (if b0157 then 0 else 79000) + (if b0158 then 0 else 79000) + (if b0159 then 0 else 79000) + (if b0160 then 0 else 79000) + (if b0161 then 0 else 79000) + (if b0162 then 0 else 79000) + (if b0163 then 0 else 79000) + (if b0164 then 0 else 79000) + (if b0165 then 0 else 79000) + (if b0166 then 0 else 79000) + (if b0167 then 0 else 79000) + (if b0168 then 0 else 79000) + (if b0169 then 0 else 79000) + (if b0170 then 0 else 79000) + (if b0171 then 0 else 79000) + (if b0172 then 0 else 79000) + (if b0173 then 0 else 79000) + (if b0174 then 0 else 79000) + (if b0175 then 0 else 79000) + (if b0176 then 0 else 79000) + (if b0177 then 0 else 79000) + (if b0178 then 0 else 79000) + (if b0179 then 0 else 79000) + (if b0180 then 0 else 79000) + (if b0181 then 0 else 79000) + (if b0182 then 0 else 79000) + (if b0183 then 0 else 79000) + (if b0184 then 0 else 79000) + (if b0185 then 0 else 79000) + (if b0186 then 0 else 79000) + (if b0187 then 0 else 79000) + (if b0188 then 0 else 79000) + (if b0189 then 0 else 79000) + (if b0190 then 0 else 79000) + (if b0191 then 0 else 79000) + (if b0192 then 0 else 79000) + (if b0193 then 0 else 79000) + (if b0194 then 0 else 79000) + (if b0195 then 0 else 79000) + (if b0196 then 0 else 79000) + (if b0197 then 0 else 79000) + (if b0198 then 0 else 79000) < 441
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,0,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 12.033535
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/linear-algebra/solvers/lu/kernel2.bpl.ice2.bpl
Total learner time was 00:00:00.1205250
Verifying $kernel2: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool) : bool
{
  0 + (if b0000 then 0 else 79000) + (if b0001 then 0 else 79000) + (if b0002 then 0 else 79000) + (if b0003 then 0 else 79000) + (if b0004 then 0 else 79000) + (if b0005 then 0 else 79000) + (if b0006 then 0 else 79000) + (if b0007 then 0 else 79000) + (if b0008 then 0 else 79000) + (if b0009 then 0 else 79000) + (if b0010 then 0 else 79000) + (if b0011 then 0 else 79000) + (if b0012 then 0 else 79000) + (if b0013 then 0 else 79000) + (if b0014 then 0 else 79000) + (if b0015 then 0 else 79000) + (if b0016 then 0 else 79000) + (if b0017 then 0 else 79000) + (if b0018 then 0 else 79000) + (if b0019 then 0 else 79000) + (if b0020 then 0 else 79000) + (if b0021 then 0 else 79000) + (if b0022 then 0 else 79000) + (if b0023 then 0 else 79000) + (if b0024 then 0 else 79000) + (if b0025 then 0 else 79000) + (if b0026 then 0 else 79000) + (if b0027 then 0 else 79000) + (if b0028 then 0 else 79000) + (if b0029 then 0 else 79000) + (if b0030 then 0 else 79000) + (if b0031 then 0 else 79000) + (if b0032 then 0 else 79000) + (if b0033 then 0 else 79000) + (if b0034 then 0 else 79000) + (if b0035 then 0 else 79000) + (if b0036 then 0 else 79000) + (if b0037 then 0 else 79000) + (if b0038 then 0 else 79000) + (if b0039 then 0 else 79000) + (if b0040 then 0 else 79000) + (if b0041 then 0 else 79000) + (if b0042 then 0 else 79000) + (if b0043 then 0 else 79000) + (if b0044 then 0 else 79000) + (if b0045 then 0 else 79000) + (if b0046 then 0 else 79000) + (if b0047 then 0 else 79000) + (if b0048 then 0 else 79000) + (if b0049 then 0 else 79000) + (if b0050 then 0 else 79000) + (if b0051 then 0 else 79000) + (if b0052 then 0 else 79000) + (if b0053 then 0 else 79000) + (if b0054 then 0 else 79000) + (if b0055 then 0 else 79000) + (if b0056 then 0 else 79000) + (if b0057 then 0 else 79000) + (if b0058 then 0 else 79000) + (if b0059 then 0 else 79000) + (if b0060 then 0 else 79000) + (if b0061 then 0 else 79000) + (if b0062 then 0 else 79000) + (if b0063 then 0 else 79000) + (if b0064 then 0 else 79000) + (if b0065 then 0 else 79000) + (if b0066 then 0 else 79000) + (if b0067 then 0 else 79000) + (if b0068 then 0 else 79000) + (if b0069 then 0 else 79000) + (if b0070 then 0 else 79000) + (if b0071 then 0 else 79000) + (if b0072 then 0 else 79000) + (if b0073 then 0 else 79000) + (if b0078 then 0 else 79000) + (if b0101 then 0 else 79000) + (if b0113 then 0 else 79000) + (if b0126 then 0 else 79000) + (if b0127 then 0 else 79000) + (if b0128 then 0 else 79000) + (if b0129 then 0 else 79000) + (if b0130 then 0 else 79000) + (if b0131 then 0 else 79000) + (if b0132 then 0 else 79000) + (if b0133 then 0 else 79000) + (if b0134 then 0 else 79000) + (if b0135 then 0 else 79000) + (if b0136 then 0 else 79000) + (if b0137 then 0 else 79000) + (if b0138 then 0 else 79000) + (if b0139 then 0 else 79000) + (if b0140 then 0 else 79000) + (if b0141 then 0 else 79000) + (if b0142 then 0 else 79000) + (if b0143 then 0 else 79000) + (if b0144 then 0 else 79000) + (if b0145 then 0 else 79000) + (if b0146 then 0 else 79000) + (if b0147 then 0 else 79000) + (if b0148 then 0 else 79000) + (if b0149 then 0 else 79000) + (if b0150 then 0 else 79000) + (if b0151 then 0 else 79000) + (if b0152 then 0 else 79000) + (if b0153 then 0 else 79000) + (if b0154 then 0 else 79000) + (if b0155 then 0 else 79000) + (if b0156 then 0 else 79000) + (if b0157 then 0 else 79000) + (if b0158 then 0 else 79000) + (if b0159 then 0 else 79000) + (if b0160 then 0 else 79000) + (if b0161 then 0 else 79000) + (if b0162 then 0 else 79000) + (if b0163 then 0 else 79000) + (if b0164 then 0 else 79000) + (if b0165 then 0 else 79000) + (if b0166 then 0 else 79000) + (if b0167 then 0 else 79000) + (if b0168 then 0 else 79000) + (if b0169 then 0 else 79000) + (if b0170 then 0 else 79000) + (if b0171 then 0 else 79000) + (if b0172 then 0 else 79000) + (if b0173 then 0 else 79000) + (if b0174 then 0 else 79000) + (if b0175 then 0 else 79000) + (if b0176 then 0 else 79000) + (if b0177 then 0 else 79000) + (if b0178 then 0 else 79000) + (if b0179 then 0 else 79000) + (if b0180 then 0 else 79000) + (if b0181 then 0 else 79000) + (if b0182 then 0 else 79000) + (if b0183 then 0 else 79000) + (if b0184 then 0 else 79000) + (if b0185 then 0 else 79000) + (if b0186 then 0 else 79000) + (if b0187 then 0 else 79000) + (if b0188 then 0 else 79000) + (if b0189 then 0 else 79000) + (if b0190 then 0 else 79000) + (if b0191 then 0 else 79000) + (if b0192 then 0 else 79000) + (if b0193 then 0 else 79000) + (if b0194 then 0 else 79000) + (if b0195 then 0 else 79000) + (if b0196 then 0 else 79000) + (if b0197 then 0 else 79000) + (if b0198 then 0 else 79000) < 441
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 14.352634
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/linear-algebra/solvers/lu/kernel2.bpl.ice2.bpl
Total learner time was 00:00:00.1213540
Verifying $kernel2: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool) : bool
{
  0 + (if b0000 then 0 else 79000) + (if b0001 then 0 else 79000) + (if b0002 then 0 else 79000) + (if b0003 then 0 else 79000) + (if b0004 then 0 else 79000) + (if b0005 then 0 else 79000) + (if b0006 then 0 else 79000) + (if b0007 then 0 else 79000) + (if b0008 then 0 else 79000) + (if b0009 then 0 else 79000) + (if b0010 then 0 else 79000) + (if b0011 then 0 else 79000) + (if b0012 then 0 else 79000) + (if b0013 then 0 else 79000) + (if b0014 then 0 else 79000) + (if b0015 then 0 else 79000) + (if b0016 then 0 else 79000) + (if b0017 then 0 else 79000) + (if b0018 then 0 else 79000) + (if b0019 then 0 else 79000) + (if b0020 then 0 else 79000) + (if b0021 then 0 else 79000) + (if b0022 then 0 else 79000) + (if b0023 then 0 else 79000) + (if b0024 then 0 else 79000) + (if b0025 then 0 else 79000) + (if b0026 then 0 else 79000) + (if b0027 then 0 else 79000) + (if b0028 then 0 else 79000) + (if b0029 then 0 else 79000) + (if b0030 then 0 else 79000) + (if b0031 then 0 else 79000) + (if b0032 then 0 else 79000) + (if b0033 then 0 else 79000) + (if b0034 then 0 else 79000) + (if b0035 then 0 else 79000) + (if b0036 then 0 else 79000) + (if b0037 then 0 else 79000) + (if b0038 then 0 else 79000) + (if b0039 then 0 else 79000) + (if b0040 then 0 else 79000) + (if b0041 then 0 else 79000) + (if b0042 then 0 else 79000) + (if b0043 then 0 else 79000) + (if b0044 then 0 else 79000) + (if b0045 then 0 else 79000) + (if b0046 then 0 else 79000) + (if b0047 then 0 else 79000) + (if b0048 then 0 else 79000) + (if b0049 then 0 else 79000) + (if b0050 then 0 else 79000) + (if b0051 then 0 else 79000) + (if b0052 then 0 else 79000) + (if b0053 then 0 else 79000) + (if b0054 then 0 else 79000) + (if b0055 then 0 else 79000) + (if b0056 then 0 else 79000) + (if b0057 then 0 else 79000) + (if b0058 then 0 else 79000) + (if b0059 then 0 else 79000) + (if b0060 then 0 else 79000) + (if b0061 then 0 else 79000) + (if b0062 then 0 else 79000) + (if b0063 then 0 else 79000) + (if b0064 then 0 else 79000) + (if b0065 then 0 else 79000) + (if b0066 then 0 else 79000) + (if b0067 then 0 else 79000) + (if b0068 then 0 else 79000) + (if b0069 then 0 else 79000) + (if b0070 then 0 else 79000) + (if b0071 then 0 else 79000) + (if b0072 then 0 else 79000) + (if b0078 then 0 else 79000) + (if b0126 then 0 else 79000) + (if b0127 then 0 else 79000) + (if b0128 then 0 else 79000) + (if b0129 then 0 else 79000) + (if b0130 then 0 else 79000) + (if b0131 then 0 else 79000) + (if b0132 then 0 else 79000) + (if b0133 then 0 else 79000) + (if b0134 then 0 else 79000) + (if b0135 then 0 else 79000) + (if b0136 then 0 else 79000) + (if b0137 then 0 else 79000) + (if b0138 then 0 else 79000) + (if b0139 then 0 else 79000) + (if b0140 then 0 else 79000) + (if b0141 then 0 else 79000) + (if b0142 then 0 else 79000) + (if b0143 then 0 else 79000) + (if b0144 then 0 else 79000) + (if b0145 then 0 else 79000) + (if b0146 then 0 else 79000) + (if b0147 then 0 else 79000) + (if b0148 then 0 else 79000) + (if b0149 then 0 else 79000) + (if b0150 then 0 else 79000) + (if b0151 then 0 else 79000) + (if b0152 then 0 else 79000) + (if b0153 then 0 else 79000) + (if b0154 then 0 else 79000) + (if b0155 then 0 else 79000) + (if b0156 then 0 else 79000) + (if b0157 then 0 else 79000) + (if b0158 then 0 else 79000) + (if b0159 then 0 else 79000) + (if b0160 then 0 else 79000) + (if b0161 then 0 else 79000) + (if b0162 then 0 else 79000) + (if b0163 then 0 else 79000) + (if b0164 then 0 else 79000) + (if b0165 then 0 else 79000) + (if b0166 then 0 else 79000) + (if b0167 then 0 else 79000) + (if b0168 then 0 else 79000) + (if b0169 then 0 else 79000) + (if b0170 then 0 else 79000) + (if b0171 then 0 else 79000) + (if b0172 then 0 else 79000) + (if b0173 then 0 else 79000) + (if b0174 then 0 else 79000) + (if b0175 then 0 else 79000) + (if b0176 then 0 else 79000) + (if b0177 then 0 else 79000) + (if b0178 then 0 else 79000) + (if b0179 then 0 else 79000) + (if b0180 then 0 else 79000) + (if b0181 then 0 else 79000) + (if b0182 then 0 else 79000) + (if b0183 then 0 else 79000) + (if b0184 then 0 else 79000) + (if b0185 then 0 else 79000) + (if b0186 then 0 else 79000) + (if b0187 then 0 else 79000) + (if b0188 then 0 else 79000) + (if b0189 then 0 else 79000) + (if b0190 then 0 else 79000) + (if b0191 then 0 else 79000) + (if b0192 then 0 else 79000) + (if b0193 then 0 else 79000) + (if b0194 then 0 else 79000) + (if b0195 then 0 else 79000) + (if b0196 then 0 else 79000) + (if b0197 then 0 else 79000) + (if b0198 then 0 else 79000) < 441
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 11.609054
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/linear-algebra/solvers/lu/kernel2.bpl.ice2.bpl
Total learner time was 00:00:00.1216320
Verifying $kernel2: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool) : bool
{
  0 + (if b0000 then 0 else 79000) + (if b0001 then 0 else 79000) + (if b0002 then 0 else 79000) + (if b0003 then 0 else 79000) + (if b0004 then 0 else 79000) + (if b0005 then 0 else 79000) + (if b0006 then 0 else 79000) + (if b0007 then 0 else 79000) + (if b0008 then 0 else 79000) + (if b0009 then 0 else 79000) + (if b0010 then 0 else 79000) + (if b0011 then 0 else 79000) + (if b0012 then 0 else 79000) + (if b0013 then 0 else 79000) + (if b0014 then 0 else 79000) + (if b0015 then 0 else 79000) + (if b0016 then 0 else 79000) + (if b0017 then 0 else 79000) + (if b0018 then 0 else 79000) + (if b0019 then 0 else 79000) + (if b0020 then 0 else 79000) + (if b0021 then 0 else 79000) + (if b0022 then 0 else 79000) + (if b0023 then 0 else 79000) + (if b0024 then 0 else 79000) + (if b0025 then 0 else 79000) + (if b0026 then 0 else 79000) + (if b0027 then 0 else 79000) + (if b0028 then 0 else 79000) + (if b0029 then 0 else 79000) + (if b0030 then 0 else 79000) + (if b0031 then 0 else 79000) + (if b0032 then 0 else 79000) + (if b0033 then 0 else 79000) + (if b0034 then 0 else 79000) + (if b0035 then 0 else 79000) + (if b0036 then 0 else 79000) + (if b0037 then 0 else 79000) + (if b0038 then 0 else 79000) + (if b0039 then 0 else 79000) + (if b0040 then 0 else 79000) + (if b0041 then 0 else 79000) + (if b0042 then 0 else 79000) + (if b0043 then 0 else 79000) + (if b0044 then 0 else 79000) + (if b0045 then 0 else 79000) + (if b0046 then 0 else 79000) + (if b0047 then 0 else 79000) + (if b0048 then 0 else 79000) + (if b0049 then 0 else 79000) + (if b0050 then 0 else 79000) + (if b0051 then 0 else 79000) + (if b0052 then 0 else 79000) + (if b0053 then 0 else 79000) + (if b0054 then 0 else 79000) + (if b0055 then 0 else 79000) + (if b0056 then 0 else 79000) + (if b0057 then 0 else 79000) + (if b0058 then 0 else 79000) + (if b0059 then 0 else 79000) + (if b0060 then 0 else 79000) + (if b0061 then 0 else 79000) + (if b0062 then 0 else 79000) + (if b0063 then 0 else 79000) + (if b0064 then 0 else 79000) + (if b0065 then 0 else 79000) + (if b0066 then 0 else 79000) + (if b0067 then 0 else 79000) + (if b0068 then 0 else 79000) + (if b0069 then 0 else 79000) + (if b0070 then 0 else 79000) + (if b0071 then 0 else 79000) + (if b0072 then 0 else 79000) + (if b0126 then 0 else 79000) + (if b0127 then 0 else 79000) + (if b0128 then 0 else 79000) + (if b0129 then 0 else 79000) + (if b0130 then 0 else 79000) + (if b0131 then 0 else 79000) + (if b0132 then 0 else 79000) + (if b0133 then 0 else 79000) + (if b0134 then 0 else 79000) + (if b0135 then 0 else 79000) + (if b0136 then 0 else 79000) + (if b0137 then 0 else 79000) + (if b0138 then 0 else 79000) + (if b0139 then 0 else 79000) + (if b0140 then 0 else 79000) + (if b0141 then 0 else 79000) + (if b0142 then 0 else 79000) + (if b0143 then 0 else 79000) + (if b0144 then 0 else 79000) + (if b0145 then 0 else 79000) + (if b0146 then 0 else 79000) + (if b0147 then 0 else 79000) + (if b0148 then 0 else 79000) + (if b0149 then 0 else 79000) + (if b0150 then 0 else 79000) + (if b0151 then 0 else 79000) + (if b0152 then 0 else 79000) + (if b0153 then 0 else 79000) + (if b0154 then 0 else 79000) + (if b0155 then 0 else 79000) + (if b0156 then 0 else 79000) + (if b0157 then 0 else 79000) + (if b0158 then 0 else 79000) + (if b0159 then 0 else 79000) + (if b0160 then 0 else 79000) + (if b0161 then 0 else 79000) + (if b0162 then 0 else 79000) + (if b0163 then 0 else 79000) + (if b0164 then 0 else 79000) + (if b0165 then 0 else 79000) + (if b0166 then 0 else 79000) + (if b0167 then 0 else 79000) + (if b0168 then 0 else 79000) + (if b0169 then 0 else 79000) + (if b0170 then 0 else 79000) + (if b0171 then 0 else 79000) + (if b0172 then 0 else 79000) + (if b0173 then 0 else 79000) + (if b0174 then 0 else 79000) + (if b0175 then 0 else 79000) + (if b0176 then 0 else 79000) + (if b0177 then 0 else 79000) + (if b0178 then 0 else 79000) + (if b0179 then 0 else 79000) + (if b0180 then 0 else 79000) + (if b0181 then 0 else 79000) + (if b0182 then 0 else 79000) + (if b0183 then 0 else 79000) + (if b0184 then 0 else 79000) + (if b0185 then 0 else 79000) + (if b0186 then 0 else 79000) + (if b0187 then 0 else 79000) + (if b0188 then 0 else 79000) + (if b0189 then 0 else 79000) + (if b0190 then 0 else 79000) + (if b0191 then 0 else 79000) + (if b0192 then 0 else 79000) + (if b0193 then 0 else 79000) + (if b0194 then 0 else 79000) + (if b0195 then 0 else 79000) + (if b0196 then 0 else 79000) + (if b0197 then 0 else 79000) + (if b0198 then 0 else 79000) < 441
}
Prover Time taken = 11.185106
Added Horn clause: 6 => 7
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/linear-algebra/solvers/lu/kernel2.bpl.ice2.bpl
Total learner time was 00:00:00.1213080
Verifying $kernel2: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool) : bool
{
  0 + (if b0000 then 0 else 79000) + (if b0001 then 0 else 79000) + (if b0002 then 0 else 79000) + (if b0003 then 0 else 79000) + (if b0004 then 0 else 79000) + (if b0005 then 0 else 79000) + (if b0006 then 0 else 79000) + (if b0007 then 0 else 79000) + (if b0008 then 0 else 79000) + (if b0009 then 0 else 79000) + (if b0010 then 0 else 79000) + (if b0011 then 0 else 79000) + (if b0012 then 0 else 79000) + (if b0013 then 0 else 79000) + (if b0014 then 0 else 79000) + (if b0015 then 0 else 79000) + (if b0016 then 0 else 79000) + (if b0017 then 0 else 79000) + (if b0018 then 0 else 79000) + (if b0019 then 0 else 79000) + (if b0020 then 0 else 79000) + (if b0021 then 0 else 79000) + (if b0022 then 0 else 79000) + (if b0023 then 0 else 79000) + (if b0024 then 0 else 79000) + (if b0025 then 0 else 79000) + (if b0026 then 0 else 79000) + (if b0027 then 0 else 79000) + (if b0028 then 0 else 79000) + (if b0029 then 0 else 79000) + (if b0030 then 0 else 79000) + (if b0031 then 0 else 79000) + (if b0032 then 0 else 79000) + (if b0033 then 0 else 79000) + (if b0034 then 0 else 79000) + (if b0035 then 0 else 79000) + (if b0036 then 0 else 79000) + (if b0037 then 0 else 79000) + (if b0038 then 0 else 79000) + (if b0039 then 0 else 79000) + (if b0040 then 0 else 79000) + (if b0041 then 0 else 79000) + (if b0042 then 0 else 79000) + (if b0043 then 0 else 79000) + (if b0044 then 0 else 79000) + (if b0045 then 0 else 79000) + (if b0046 then 0 else 79000) + (if b0047 then 0 else 79000) + (if b0048 then 0 else 79000) + (if b0049 then 0 else 79000) + (if b0050 then 0 else 79000) + (if b0051 then 0 else 79000) + (if b0052 then 0 else 79000) + (if b0053 then 0 else 79000) + (if b0054 then 0 else 79000) + (if b0055 then 0 else 79000) + (if b0056 then 0 else 79000) + (if b0057 then 0 else 79000) + (if b0058 then 0 else 79000) + (if b0059 then 0 else 79000) + (if b0060 then 0 else 79000) + (if b0061 then 0 else 79000) + (if b0062 then 0 else 79000) + (if b0063 then 0 else 79000) + (if b0064 then 0 else 79000) + (if b0065 then 0 else 79000) + (if b0066 then 0 else 79000) + (if b0067 then 0 else 79000) + (if b0068 then 0 else 79000) + (if b0069 then 0 else 79000) + (if b0070 then 0 else 79000) + (if b0071 then 0 else 79000) + (if b0072 then 0 else 79000) + (if b0126 then 0 else 79000) + (if b0127 then 0 else 79000) + (if b0128 then 0 else 79000) + (if b0129 then 0 else 79000) + (if b0130 then 0 else 79000) + (if b0131 then 0 else 79000) + (if b0132 then 0 else 79000) + (if b0133 then 0 else 79000) + (if b0135 then 0 else 79000) + (if b0136 then 0 else 79000) + (if b0137 then 0 else 79000) + (if b0138 then 0 else 79000) + (if b0139 then 0 else 79000) + (if b0140 then 0 else 79000) + (if b0141 then 0 else 79000) + (if b0142 then 0 else 79000) + (if b0143 then 0 else 79000) + (if b0144 then 0 else 79000) + (if b0145 then 0 else 79000) + (if b0146 then 0 else 79000) + (if b0147 then 0 else 79000) + (if b0148 then 0 else 79000) + (if b0149 then 0 else 79000) + (if b0150 then 0 else 79000) + (if b0151 then 0 else 79000) + (if b0152 then 0 else 79000) + (if b0153 then 0 else 79000) + (if b0154 then 0 else 79000) + (if b0155 then 0 else 79000) + (if b0156 then 0 else 79000) + (if b0157 then 0 else 79000) + (if b0158 then 0 else 79000) + (if b0159 then 0 else 79000) + (if b0160 then 0 else 79000) + (if b0161 then 0 else 79000) + (if b0162 then 0 else 79000) + (if b0163 then 0 else 79000) + (if b0164 then 0 else 79000) + (if b0165 then 0 else 79000) + (if b0166 then 0 else 79000) + (if b0167 then 0 else 79000) + (if b0168 then 0 else 79000) + (if b0169 then 0 else 79000) + (if b0170 then 0 else 79000) + (if b0171 then 0 else 79000) + (if b0172 then 0 else 79000) + (if b0173 then 0 else 79000) + (if b0174 then 0 else 79000) + (if b0175 then 0 else 79000) + (if b0176 then 0 else 79000) + (if b0177 then 0 else 79000) + (if b0178 then 0 else 79000) + (if b0179 then 0 else 79000) + (if b0180 then 0 else 79000) + (if b0181 then 0 else 79000) + (if b0182 then 0 else 79000) + (if b0183 then 0 else 79000) + (if b0184 then 0 else 79000) + (if b0185 then 0 else 79000) + (if b0186 then 0 else 79000) + (if b0187 then 0 else 79000) + (if b0188 then 0 else 79000) + (if b0189 then 0 else 79000) + (if b0190 then 0 else 79000) + (if b0191 then 0 else 79000) + (if b0192 then 0 else 79000) + (if b0193 then 0 else 79000) + (if b0194 then 0 else 79000) + (if b0195 then 0 else 79000) + (if b0196 then 0 else 79000) + (if b0197 then 0 else 79000) + (if b0198 then 0 else 79000) < 441
}
Prover Time taken = 14.510599
Added Horn clause: 8 => 9
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/linear-algebra/solvers/lu/kernel2.bpl.ice2.bpl
Total learner time was 00:00:00.1207630
Verifying $kernel2: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool) : bool
{
  0 + (if b0000 then 0 else 79000) + (if b0001 then 0 else 79000) + (if b0002 then 0 else 79000) + (if b0003 then 0 else 79000) + (if b0004 then 0 else 79000) + (if b0005 then 0 else 79000) + (if b0006 then 0 else 79000) + (if b0007 then 0 else 79000) + (if b0008 then 0 else 79000) + (if b0009 then 0 else 79000) + (if b0010 then 0 else 79000) + (if b0011 then 0 else 79000) + (if b0012 then 0 else 79000) + (if b0013 then 0 else 79000) + (if b0014 then 0 else 79000) + (if b0015 then 0 else 79000) + (if b0016 then 0 else 79000) + (if b0017 then 0 else 79000) + (if b0018 then 0 else 79000) + (if b0019 then 0 else 79000) + (if b0020 then 0 else 79000) + (if b0021 then 0 else 79000) + (if b0022 then 0 else 79000) + (if b0023 then 0 else 79000) + (if b0024 then 0 else 79000) + (if b0025 then 0 else 79000) + (if b0026 then 0 else 79000) + (if b0027 then 0 else 79000) + (if b0028 then 0 else 79000) + (if b0029 then 0 else 79000) + (if b0030 then 0 else 79000) + (if b0031 then 0 else 79000) + (if b0032 then 0 else 79000) + (if b0033 then 0 else 79000) + (if b0034 then 0 else 79000) + (if b0035 then 0 else 79000) + (if b0036 then 0 else 79000) + (if b0037 then 0 else 79000) + (if b0038 then 0 else 79000) + (if b0039 then 0 else 79000) + (if b0040 then 0 else 79000) + (if b0041 then 0 else 79000) + (if b0042 then 0 else 79000) + (if b0043 then 0 else 79000) + (if b0044 then 0 else 79000) + (if b0045 then 0 else 79000) + (if b0046 then 0 else 79000) + (if b0047 then 0 else 79000) + (if b0048 then 0 else 79000) + (if b0049 then 0 else 79000) + (if b0050 then 0 else 79000) + (if b0051 then 0 else 79000) + (if b0052 then 0 else 79000) + (if b0053 then 0 else 79000) + (if b0054 then 0 else 79000) + (if b0055 then 0 else 79000) + (if b0056 then 0 else 79000) + (if b0057 then 0 else 79000) + (if b0058 then 0 else 79000) + (if b0059 then 0 else 79000) + (if b0060 then 0 else 79000) + (if b0061 then 0 else 79000) + (if b0062 then 0 else 79000) + (if b0063 then 0 else 79000) + (if b0064 then 0 else 79000) + (if b0065 then 0 else 79000) + (if b0066 then 0 else 79000) + (if b0067 then 0 else 79000) + (if b0068 then 0 else 79000) + (if b0069 then 0 else 79000) + (if b0070 then 0 else 79000) + (if b0071 then 0 else 79000) + (if b0072 then 0 else 79000) + (if b0126 then 0 else 79000) + (if b0127 then 0 else 79000) + (if b0128 then 0 else 79000) + (if b0129 then 0 else 79000) + (if b0130 then 0 else 79000) + (if b0131 then 0 else 79000) + (if b0132 then 0 else 79000) + (if b0133 then 0 else 79000) + (if b0135 then 0 else 79000) + (if b0136 then 0 else 79000) + (if b0169 then 0 else 79000) + (if b0170 then 0 else 79000) + (if b0171 then 0 else 79000) + (if b0172 then 0 else 79000) + (if b0173 then 0 else 79000) + (if b0174 then 0 else 79000) + (if b0175 then 0 else 79000) + (if b0176 then 0 else 79000) + (if b0177 then 0 else 79000) + (if b0178 then 0 else 79000) + (if b0179 then 0 else 79000) + (if b0180 then 0 else 79000) + (if b0181 then 0 else 79000) + (if b0182 then 0 else 79000) + (if b0183 then 0 else 79000) + (if b0184 then 0 else 79000) + (if b0185 then 0 else 79000) + (if b0186 then 0 else 79000) + (if b0187 then 0 else 79000) + (if b0188 then 0 else 79000) + (if b0189 then 0 else 79000) + (if b0190 then 0 else 79000) + (if b0191 then 0 else 79000) + (if b0192 then 0 else 79000) + (if b0193 then 0 else 79000) + (if b0194 then 0 else 79000) + (if b0195 then 0 else 79000) + (if b0196 then 0 else 79000) + (if b0197 then 0 else 79000) + (if b0198 then 0 else 79000) < 441
}
Prover Time taken = 16.496759
Added Horn clause: 10 => 11
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/linear-algebra/solvers/lu/kernel2.bpl.ice2.bpl
Total learner time was 00:00:00.1214530
Verifying $kernel2: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool) : bool
{
  0 + (if b0000 then 0 else 79000) + (if b0001 then 0 else 79000) + (if b0002 then 0 else 79000) + (if b0003 then 0 else 79000) + (if b0004 then 0 else 79000) + (if b0005 then 0 else 79000) + (if b0006 then 0 else 79000) + (if b0007 then 0 else 79000) + (if b0008 then 0 else 79000) + (if b0009 then 0 else 79000) + (if b0010 then 0 else 79000) + (if b0011 then 0 else 79000) + (if b0012 then 0 else 79000) + (if b0013 then 0 else 79000) + (if b0014 then 0 else 79000) + (if b0015 then 0 else 79000) + (if b0016 then 0 else 79000) + (if b0017 then 0 else 79000) + (if b0018 then 0 else 79000) + (if b0019 then 0 else 79000) + (if b0020 then 0 else 79000) + (if b0021 then 0 else 79000) + (if b0022 then 0 else 79000) + (if b0023 then 0 else 79000) + (if b0024 then 0 else 79000) + (if b0025 then 0 else 79000) + (if b0026 then 0 else 79000) + (if b0027 then 0 else 79000) + (if b0028 then 0 else 79000) + (if b0029 then 0 else 79000) + (if b0030 then 0 else 79000) + (if b0031 then 0 else 79000) + (if b0032 then 0 else 79000) + (if b0033 then 0 else 79000) + (if b0034 then 0 else 79000) + (if b0035 then 0 else 79000) + (if b0036 then 0 else 79000) + (if b0037 then 0 else 79000) + (if b0038 then 0 else 79000) + (if b0039 then 0 else 79000) + (if b0040 then 0 else 79000) + (if b0041 then 0 else 79000) + (if b0042 then 0 else 79000) + (if b0043 then 0 else 79000) + (if b0044 then 0 else 79000) + (if b0045 then 0 else 79000) + (if b0046 then 0 else 79000) + (if b0047 then 0 else 79000) + (if b0048 then 0 else 79000) + (if b0049 then 0 else 79000) + (if b0050 then 0 else 79000) + (if b0051 then 0 else 79000) + (if b0052 then 0 else 79000) + (if b0053 then 0 else 79000) + (if b0054 then 0 else 79000) + (if b0055 then 0 else 79000) + (if b0056 then 0 else 79000) + (if b0057 then 0 else 79000) + (if b0058 then 0 else 79000) + (if b0059 then 0 else 79000) + (if b0060 then 0 else 79000) + (if b0061 then 0 else 79000) + (if b0062 then 0 else 79000) + (if b0063 then 0 else 79000) + (if b0064 then 0 else 79000) + (if b0065 then 0 else 79000) + (if b0066 then 0 else 79000) + (if b0067 then 0 else 79000) + (if b0068 then 0 else 79000) + (if b0069 then 0 else 79000) + (if b0070 then 0 else 79000) + (if b0071 then 0 else 79000) + (if b0072 then 0 else 79000) + (if b0126 then 0 else 79000) + (if b0127 then 0 else 79000) + (if b0128 then 0 else 79000) + (if b0129 then 0 else 79000) + (if b0130 then 0 else 79000) + (if b0131 then 0 else 79000) + (if b0132 then 0 else 79000) + (if b0133 then 0 else 79000) + (if b0135 then 0 else 79000) + (if b0169 then 0 else 79000) + (if b0170 then 0 else 79000) + (if b0171 then 0 else 79000) + (if b0172 then 0 else 79000) + (if b0173 then 0 else 79000) + (if b0174 then 0 else 79000) + (if b0175 then 0 else 79000) + (if b0176 then 0 else 79000) + (if b0177 then 0 else 79000) + (if b0178 then 0 else 79000) + (if b0179 then 0 else 79000) + (if b0180 then 0 else 79000) + (if b0181 then 0 else 79000) + (if b0182 then 0 else 79000) + (if b0183 then 0 else 79000) + (if b0184 then 0 else 79000) + (if b0185 then 0 else 79000) + (if b0186 then 0 else 79000) + (if b0187 then 0 else 79000) + (if b0188 then 0 else 79000) + (if b0189 then 0 else 79000) + (if b0190 then 0 else 79000) + (if b0191 then 0 else 79000) + (if b0192 then 0 else 79000) + (if b0193 then 0 else 79000) + (if b0194 then 0 else 79000) + (if b0195 then 0 else 79000) + (if b0196 then 0 else 79000) + (if b0197 then 0 else 79000) + (if b0198 then 0 else 79000) < 441
}
Prover Time taken = 23.675336
Added Horn clause: 12 && 7 && 0 && 0 && 0 => 13
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/linear-algebra/solvers/lu/kernel2.bpl.ice2.bpl
Total learner time was 00:00:00.1198630
Verifying $kernel2: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool) : bool
{
  0 + (if b0000 then 0 else 79000) + (if b0001 then 0 else 79000) + (if b0002 then 0 else 79000) + (if b0003 then 0 else 79000) + (if b0004 then 0 else 79000) + (if b0005 then 0 else 79000) + (if b0006 then 0 else 79000) + (if b0007 then 0 else 79000) + (if b0008 then 0 else 79000) + (if b0009 then 0 else 79000) + (if b0010 then 0 else 79000) + (if b0011 then 0 else 79000) + (if b0012 then 0 else 79000) + (if b0013 then 0 else 79000) + (if b0014 then 0 else 79000) + (if b0015 then 0 else 79000) + (if b0016 then 0 else 79000) + (if b0017 then 0 else 79000) + (if b0018 then 0 else 79000) + (if b0019 then 0 else 79000) + (if b0020 then 0 else 79000) + (if b0021 then 0 else 79000) + (if b0022 then 0 else 79000) + (if b0023 then 0 else 79000) + (if b0024 then 0 else 79000) + (if b0025 then 0 else 79000) + (if b0026 then 0 else 79000) + (if b0027 then 0 else 79000) + (if b0028 then 0 else 79000) + (if b0029 then 0 else 79000) + (if b0030 then 0 else 79000) + (if b0031 then 0 else 79000) + (if b0032 then 0 else 79000) + (if b0033 then 0 else 79000) + (if b0034 then 0 else 79000) + (if b0035 then 0 else 79000) + (if b0036 then 0 else 79000) + (if b0037 then 0 else 79000) + (if b0038 then 0 else 79000) + (if b0039 then 0 else 79000) + (if b0040 then 0 else 79000) + (if b0041 then 0 else 79000) + (if b0042 then 0 else 79000) + (if b0043 then 0 else 79000) + (if b0044 then 0 else 79000) + (if b0045 then 0 else 79000) + (if b0046 then 0 else 79000) + (if b0047 then 0 else 79000) + (if b0048 then 0 else 79000) + (if b0049 then 0 else 79000) + (if b0050 then 0 else 79000) + (if b0051 then 0 else 79000) + (if b0052 then 0 else 79000) + (if b0053 then 0 else 79000) + (if b0054 then 0 else 79000) + (if b0055 then 0 else 79000) + (if b0056 then 0 else 79000) + (if b0057 then 0 else 79000) + (if b0058 then 0 else 79000) + (if b0060 then 0 else 79000) + (if b0062 then 0 else 79000) + (if b0063 then 0 else 79000) + (if b0064 then 0 else 79000) + (if b0065 then 0 else 79000) + (if b0066 then 0 else 79000) + (if b0067 then 0 else 79000) + (if b0068 then 0 else 79000) + (if b0069 then 0 else 79000) + (if b0070 then 0 else 79000) + (if b0071 then 0 else 79000) + (if b0072 then 0 else 79000) + (if b0126 then 0 else 79000) + (if b0127 then 0 else 79000) + (if b0128 then 0 else 79000) + (if b0129 then 0 else 79000) + (if b0130 then 0 else 79000) + (if b0131 then 0 else 79000) + (if b0132 then 0 else 79000) + (if b0133 then 0 else 79000) + (if b0135 then 0 else 79000) + (if b0169 then 0 else 79000) + (if b0170 then 0 else 79000) + (if b0171 then 0 else 79000) + (if b0172 then 0 else 79000) + (if b0173 then 0 else 79000) + (if b0174 then 0 else 79000) + (if b0175 then 0 else 79000) + (if b0176 then 0 else 79000) + (if b0177 then 0 else 79000) + (if b0178 then 0 else 79000) + (if b0179 then 0 else 79000) + (if b0180 then 0 else 79000) + (if b0181 then 0 else 79000) + (if b0182 then 0 else 79000) + (if b0183 then 0 else 79000) + (if b0184 then 0 else 79000) + (if b0185 then 0 else 79000) + (if b0186 then 0 else 79000) + (if b0187 then 0 else 79000) + (if b0188 then 0 else 79000) + (if b0189 then 0 else 79000) + (if b0190 then 0 else 79000) + (if b0191 then 0 else 79000) + (if b0192 then 0 else 79000) + (if b0193 then 0 else 79000) + (if b0194 then 0 else 79000) + (if b0195 then 0 else 79000) + (if b0196 then 0 else 79000) + (if b0197 then 0 else 79000) + (if b0198 then 0 else 79000) < 441
}
Prover Time taken = 21.434999
Added Horn clause: 14 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 => 15
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/linear-algebra/solvers/lu/kernel2.bpl.ice2.bpl
Total learner time was 00:00:00.1216080
Verifying $kernel2: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool) : bool
{
  0 + (if b0000 then 0 else 79000) + (if b0001 then 0 else 79000) + (if b0002 then 0 else 79000) + (if b0003 then 0 else 79000) + (if b0005 then 0 else 79000) + (if b0007 then 0 else 79000) + (if b0008 then 0 else 79000) + (if b0009 then 0 else 79000) + (if b0010 then 0 else 79000) + (if b0011 then 0 else 79000) + (if b0012 then 0 else 79000) + (if b0013 then 0 else 79000) + (if b0014 then 0 else 79000) + (if b0015 then 0 else 79000) + (if b0016 then 0 else 79000) + (if b0017 then 0 else 79000) + (if b0018 then 0 else 79000) + (if b0019 then 0 else 79000) + (if b0020 then 0 else 79000) + (if b0021 then 0 else 79000) + (if b0022 then 0 else 79000) + (if b0023 then 0 else 79000) + (if b0024 then 0 else 79000) + (if b0025 then 0 else 79000) + (if b0026 then 0 else 79000) + (if b0027 then 0 else 79000) + (if b0028 then 0 else 79000) + (if b0029 then 0 else 79000) + (if b0030 then 0 else 79000) + (if b0031 then 0 else 79000) + (if b0032 then 0 else 79000) + (if b0033 then 0 else 79000) + (if b0034 then 0 else 79000) + (if b0035 then 0 else 79000) + (if b0036 then 0 else 79000) + (if b0037 then 0 else 79000) + (if b0038 then 0 else 79000) + (if b0039 then 0 else 79000) + (if b0040 then 0 else 79000) + (if b0041 then 0 else 79000) + (if b0042 then 0 else 79000) + (if b0043 then 0 else 79000) + (if b0044 then 0 else 79000) + (if b0045 then 0 else 79000) + (if b0046 then 0 else 79000) + (if b0047 then 0 else 79000) + (if b0048 then 0 else 79000) + (if b0049 then 0 else 79000) + (if b0050 then 0 else 79000) + (if b0051 then 0 else 79000) + (if b0052 then 0 else 79000) + (if b0053 then 0 else 79000) + (if b0054 then 0 else 79000) + (if b0055 then 0 else 79000) + (if b0056 then 0 else 79000) + (if b0057 then 0 else 79000) + (if b0058 then 0 else 79000) + (if b0060 then 0 else 79000) + (if b0062 then 0 else 79000) + (if b0063 then 0 else 79000) + (if b0064 then 0 else 79000) + (if b0065 then 0 else 79000) + (if b0066 then 0 else 79000) + (if b0067 then 0 else 79000) + (if b0068 then 0 else 79000) + (if b0069 then 0 else 79000) + (if b0070 then 0 else 79000) + (if b0071 then 0 else 79000) + (if b0072 then 0 else 79000) + (if b0126 then 0 else 79000) + (if b0127 then 0 else 79000) + (if b0128 then 0 else 79000) + (if b0129 then 0 else 79000) + (if b0130 then 0 else 79000) + (if b0131 then 0 else 79000) + (if b0132 then 0 else 79000) + (if b0133 then 0 else 79000) + (if b0135 then 0 else 79000) + (if b0169 then 0 else 79000) + (if b0170 then 0 else 79000) + (if b0171 then 0 else 79000) + (if b0172 then 0 else 79000) + (if b0173 then 0 else 79000) + (if b0174 then 0 else 79000) + (if b0175 then 0 else 79000) + (if b0176 then 0 else 79000) + (if b0177 then 0 else 79000) + (if b0178 then 0 else 79000) + (if b0179 then 0 else 79000) + (if b0180 then 0 else 79000) + (if b0181 then 0 else 79000) + (if b0182 then 0 else 79000) + (if b0183 then 0 else 79000) + (if b0184 then 0 else 79000) + (if b0185 then 0 else 79000) + (if b0186 then 0 else 79000) + (if b0187 then 0 else 79000) + (if b0188 then 0 else 79000) + (if b0189 then 0 else 79000) + (if b0190 then 0 else 79000) + (if b0191 then 0 else 79000) + (if b0192 then 0 else 79000) + (if b0193 then 0 else 79000) + (if b0194 then 0 else 79000) + (if b0195 then 0 else 79000) + (if b0196 then 0 else 79000) + (if b0197 then 0 else 79000) + (if b0198 then 0 else 79000) < 441
}
Prover Time taken = 23.488828
Added Horn clause: 16 => 17
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/linear-algebra/solvers/lu/kernel2.bpl.ice2.bpl
Total learner time was 00:00:00.1245900
Verifying $kernel2: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool) : bool
{
  0 + (if b0000 then 0 else 79000) + (if b0001 then 0 else 79000) + (if b0002 then 0 else 79000) + (if b0003 then 0 else 79000) + (if b0005 then 0 else 79000) + (if b0007 then 0 else 79000) + (if b0008 then 0 else 79000) + (if b0009 then 0 else 79000) + (if b0010 then 0 else 79000) + (if b0012 then 0 else 79000) + (if b0013 then 0 else 79000) + (if b0014 then 0 else 79000) + (if b0015 then 0 else 79000) + (if b0016 then 0 else 79000) + (if b0017 then 0 else 79000) + (if b0018 then 0 else 79000) + (if b0019 then 0 else 79000) + (if b0020 then 0 else 79000) + (if b0021 then 0 else 79000) + (if b0022 then 0 else 79000) + (if b0023 then 0 else 79000) + (if b0024 then 0 else 79000) + (if b0025 then 0 else 79000) + (if b0026 then 0 else 79000) + (if b0027 then 0 else 79000) + (if b0028 then 0 else 79000) + (if b0029 then 0 else 79000) + (if b0030 then 0 else 79000) + (if b0031 then 0 else 79000) + (if b0032 then 0 else 79000) + (if b0033 then 0 else 79000) + (if b0034 then 0 else 79000) + (if b0035 then 0 else 79000) + (if b0036 then 0 else 79000) + (if b0037 then 0 else 79000) + (if b0038 then 0 else 79000) + (if b0039 then 0 else 79000) + (if b0040 then 0 else 79000) + (if b0041 then 0 else 79000) + (if b0042 then 0 else 79000) + (if b0043 then 0 else 79000) + (if b0044 then 0 else 79000) + (if b0045 then 0 else 79000) + (if b0046 then 0 else 79000) + (if b0047 then 0 else 79000) + (if b0048 then 0 else 79000) + (if b0049 then 0 else 79000) + (if b0050 then 0 else 79000) + (if b0051 then 0 else 79000) + (if b0052 then 0 else 79000) + (if b0053 then 0 else 79000) + (if b0054 then 0 else 79000) + (if b0055 then 0 else 79000) + (if b0056 then 0 else 79000) + (if b0057 then 0 else 79000) + (if b0058 then 0 else 79000) + (if b0060 then 0 else 79000) + (if b0062 then 0 else 79000) + (if b0063 then 0 else 79000) + (if b0064 then 0 else 79000) + (if b0065 then 0 else 79000) + (if b0066 then 0 else 79000) + (if b0067 then 0 else 79000) + (if b0068 then 0 else 79000) + (if b0069 then 0 else 79000) + (if b0070 then 0 else 79000) + (if b0071 then 0 else 79000) + (if b0072 then 0 else 79000) + (if b0126 then 0 else 79000) + (if b0127 then 0 else 79000) + (if b0128 then 0 else 79000) + (if b0129 then 0 else 79000) + (if b0130 then 0 else 79000) + (if b0131 then 0 else 79000) + (if b0132 then 0 else 79000) + (if b0133 then 0 else 79000) + (if b0135 then 0 else 79000) + (if b0169 then 0 else 79000) + (if b0170 then 0 else 79000) + (if b0171 then 0 else 79000) + (if b0172 then 0 else 79000) + (if b0173 then 0 else 79000) + (if b0174 then 0 else 79000) + (if b0175 then 0 else 79000) + (if b0176 then 0 else 79000) + (if b0177 then 0 else 79000) + (if b0178 then 0 else 79000) + (if b0179 then 0 else 79000) + (if b0180 then 0 else 79000) + (if b0181 then 0 else 79000) + (if b0182 then 0 else 79000) + (if b0183 then 0 else 79000) + (if b0184 then 0 else 79000) + (if b0185 then 0 else 79000) + (if b0186 then 0 else 79000) + (if b0187 then 0 else 79000) + (if b0188 then 0 else 79000) + (if b0189 then 0 else 79000) + (if b0190 then 0 else 79000) + (if b0191 then 0 else 79000) + (if b0192 then 0 else 79000) + (if b0193 then 0 else 79000) + (if b0194 then 0 else 79000) + (if b0195 then 0 else 79000) + (if b0196 then 0 else 79000) + (if b0197 then 0 else 79000) + (if b0198 then 0 else 79000) < 441
}
Prover Time taken = 16.854282
Added Horn clause: 18 && 7 && 17 => 19
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/linear-algebra/solvers/lu/kernel2.bpl.ice2.bpl
Total learner time was 00:00:00.1243110
Verifying $kernel2: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool) : bool
{
  0 + (if b0000 then 0 else 79000) + (if b0001 then 0 else 79000) + (if b0002 then 0 else 79000) + (if b0003 then 0 else 79000) + (if b0005 then 0 else 79000) + (if b0007 then 0 else 79000) + (if b0008 then 0 else 79000) + (if b0009 then 0 else 79000) + (if b0010 then 0 else 79000) + (if b0012 then 0 else 79000) + (if b0013 then 0 else 79000) + (if b0014 then 0 else 79000) + (if b0015 then 0 else 79000) + (if b0016 then 0 else 79000) + (if b0017 then 0 else 79000) + (if b0018 then 0 else 79000) + (if b0019 then 0 else 79000) + (if b0020 then 0 else 79000) + (if b0021 then 0 else 79000) + (if b0022 then 0 else 79000) + (if b0023 then 0 else 79000) + (if b0024 then 0 else 79000) + (if b0025 then 0 else 79000) + (if b0026 then 0 else 79000) + (if b0027 then 0 else 79000) + (if b0028 then 0 else 79000) + (if b0029 then 0 else 79000) + (if b0030 then 0 else 79000) + (if b0031 then 0 else 79000) + (if b0032 then 0 else 79000) + (if b0033 then 0 else 79000) + (if b0034 then 0 else 79000) + (if b0035 then 0 else 79000) + (if b0036 then 0 else 79000) + (if b0037 then 0 else 79000) + (if b0038 then 0 else 79000) + (if b0039 then 0 else 79000) + (if b0040 then 0 else 79000) + (if b0041 then 0 else 79000) + (if b0042 then 0 else 79000) + (if b0043 then 0 else 79000) + (if b0044 then 0 else 79000) + (if b0045 then 0 else 79000) + (if b0046 then 0 else 79000) + (if b0047 then 0 else 79000) + (if b0048 then 0 else 79000) + (if b0049 then 0 else 79000) + (if b0050 then 0 else 79000) + (if b0051 then 0 else 79000) + (if b0052 then 0 else 79000) + (if b0053 then 0 else 79000) + (if b0054 then 0 else 79000) + (if b0055 then 0 else 79000) + (if b0056 then 0 else 79000) + (if b0057 then 0 else 79000) + (if b0060 then 0 else 79000) + (if b0062 then 0 else 79000) + (if b0063 then 0 else 79000) + (if b0064 then 0 else 79000) + (if b0065 then 0 else 79000) + (if b0066 then 0 else 79000) + (if b0067 then 0 else 79000) + (if b0068 then 0 else 79000) + (if b0069 then 0 else 79000) + (if b0070 then 0 else 79000) + (if b0071 then 0 else 79000) + (if b0072 then 0 else 79000) + (if b0126 then 0 else 79000) + (if b0127 then 0 else 79000) + (if b0128 then 0 else 79000) + (if b0129 then 0 else 79000) + (if b0130 then 0 else 79000) + (if b0131 then 0 else 79000) + (if b0132 then 0 else 79000) + (if b0133 then 0 else 79000) + (if b0135 then 0 else 79000) + (if b0169 then 0 else 79000) + (if b0170 then 0 else 79000) + (if b0171 then 0 else 79000) + (if b0172 then 0 else 79000) + (if b0173 then 0 else 79000) + (if b0174 then 0 else 79000) + (if b0175 then 0 else 79000) + (if b0176 then 0 else 79000) + (if b0177 then 0 else 79000) + (if b0178 then 0 else 79000) + (if b0179 then 0 else 79000) + (if b0180 then 0 else 79000) + (if b0181 then 0 else 79000) + (if b0182 then 0 else 79000) + (if b0183 then 0 else 79000) + (if b0184 then 0 else 79000) + (if b0185 then 0 else 79000) + (if b0186 then 0 else 79000) + (if b0187 then 0 else 79000) + (if b0188 then 0 else 79000) + (if b0189 then 0 else 79000) + (if b0190 then 0 else 79000) + (if b0191 then 0 else 79000) + (if b0192 then 0 else 79000) + (if b0193 then 0 else 79000) + (if b0194 then 0 else 79000) + (if b0195 then 0 else 79000) + (if b0196 then 0 else 79000) + (if b0197 then 0 else 79000) + (if b0198 then 0 else 79000) < 441
}
Prover Time taken = 22.842497
Added Horn clause: 20 && 21 && 0 && 0 && 0 => 22
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/linear-algebra/solvers/lu/kernel2.bpl.ice2.bpl
Total learner time was 00:00:00.1223840
Verifying $kernel2: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool) : bool
{
  0 + (if b0000 then 0 else 79000) + (if b0001 then 0 else 79000) + (if b0002 then 0 else 79000) + (if b0003 then 0 else 79000) + (if b0005 then 0 else 79000) + (if b0007 then 0 else 79000) + (if b0008 then 0 else 79000) + (if b0009 then 0 else 79000) + (if b0010 then 0 else 79000) + (if b0012 then 0 else 79000) + (if b0013 then 0 else 79000) + (if b0014 then 0 else 79000) + (if b0015 then 0 else 79000) + (if b0016 then 0 else 79000) + (if b0017 then 0 else 79000) + (if b0018 then 0 else 79000) + (if b0019 then 0 else 79000) + (if b0020 then 0 else 79000) + (if b0021 then 0 else 79000) + (if b0022 then 0 else 79000) + (if b0023 then 0 else 79000) + (if b0024 then 0 else 79000) + (if b0025 then 0 else 79000) + (if b0026 then 0 else 79000) + (if b0027 then 0 else 79000) + (if b0028 then 0 else 79000) + (if b0029 then 0 else 79000) + (if b0030 then 0 else 79000) + (if b0031 then 0 else 79000) + (if b0032 then 0 else 79000) + (if b0033 then 0 else 79000) + (if b0034 then 0 else 79000) + (if b0035 then 0 else 79000) + (if b0036 then 0 else 79000) + (if b0037 then 0 else 79000) + (if b0038 then 0 else 79000) + (if b0039 then 0 else 79000) + (if b0041 then 0 else 79000) + (if b0042 then 0 else 79000) + (if b0043 then 0 else 79000) + (if b0044 then 0 else 79000) + (if b0045 then 0 else 79000) + (if b0046 then 0 else 79000) + (if b0047 then 0 else 79000) + (if b0048 then 0 else 79000) + (if b0049 then 0 else 79000) + (if b0050 then 0 else 79000) + (if b0051 then 0 else 79000) + (if b0052 then 0 else 79000) + (if b0053 then 0 else 79000) + (if b0054 then 0 else 79000) + (if b0055 then 0 else 79000) + (if b0056 then 0 else 79000) + (if b0057 then 0 else 79000) + (if b0060 then 0 else 79000) + (if b0062 then 0 else 79000) + (if b0063 then 0 else 79000) + (if b0064 then 0 else 79000) + (if b0065 then 0 else 79000) + (if b0066 then 0 else 79000) + (if b0067 then 0 else 79000) + (if b0068 then 0 else 79000) + (if b0069 then 0 else 79000) + (if b0070 then 0 else 79000) + (if b0071 then 0 else 79000) + (if b0072 then 0 else 79000) + (if b0126 then 0 else 79000) + (if b0127 then 0 else 79000) + (if b0128 then 0 else 79000) + (if b0129 then 0 else 79000) + (if b0130 then 0 else 79000) + (if b0131 then 0 else 79000) + (if b0132 then 0 else 79000) + (if b0133 then 0 else 79000) + (if b0135 then 0 else 79000) + (if b0169 then 0 else 79000) + (if b0170 then 0 else 79000) + (if b0171 then 0 else 79000) + (if b0172 then 0 else 79000) + (if b0173 then 0 else 79000) + (if b0174 then 0 else 79000) + (if b0175 then 0 else 79000) + (if b0176 then 0 else 79000) + (if b0177 then 0 else 79000) + (if b0178 then 0 else 79000) + (if b0179 then 0 else 79000) + (if b0180 then 0 else 79000) + (if b0181 then 0 else 79000) + (if b0182 then 0 else 79000) + (if b0183 then 0 else 79000) + (if b0184 then 0 else 79000) + (if b0185 then 0 else 79000) + (if b0186 then 0 else 79000) + (if b0187 then 0 else 79000) + (if b0188 then 0 else 79000) + (if b0189 then 0 else 79000) + (if b0190 then 0 else 79000) + (if b0191 then 0 else 79000) + (if b0192 then 0 else 79000) + (if b0193 then 0 else 79000) + (if b0194 then 0 else 79000) + (if b0195 then 0 else 79000) + (if b0196 then 0 else 79000) + (if b0197 then 0 else 79000) + (if b0198 then 0 else 79000) < 441
}
Prover Time taken = 15.125582
Added Horn clause: 18 && 7 && 17 && 0 && 0 && 0 && 22 => 23
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/linear-algebra/solvers/lu/kernel2.bpl.ice2.bpl
Total learner time was 00:00:00.1218460
Verifying $kernel2: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool) : bool
{
  0 + (if b0000 then 0 else 79000) + (if b0001 then 0 else 79000) + (if b0002 then 0 else 79000) + (if b0003 then 0 else 79000) + (if b0005 then 0 else 79000) + (if b0007 then 0 else 79000) + (if b0008 then 0 else 79000) + (if b0009 then 0 else 79000) + (if b0010 then 0 else 79000) + (if b0012 then 0 else 79000) + (if b0013 then 0 else 79000) + (if b0014 then 0 else 79000) + (if b0015 then 0 else 79000) + (if b0016 then 0 else 79000) + (if b0017 then 0 else 79000) + (if b0018 then 0 else 79000) + (if b0019 then 0 else 79000) + (if b0020 then 0 else 79000) + (if b0021 then 0 else 79000) + (if b0022 then 0 else 79000) + (if b0023 then 0 else 79000) + (if b0024 then 0 else 79000) + (if b0025 then 0 else 79000) + (if b0026 then 0 else 79000) + (if b0027 then 0 else 79000) + (if b0028 then 0 else 79000) + (if b0029 then 0 else 79000) + (if b0030 then 0 else 79000) + (if b0031 then 0 else 79000) + (if b0032 then 0 else 79000) + (if b0033 then 0 else 79000) + (if b0034 then 0 else 79000) + (if b0035 then 0 else 79000) + (if b0036 then 0 else 79000) + (if b0037 then 0 else 79000) + (if b0038 then 0 else 79000) + (if b0039 then 0 else 79000) + (if b0042 then 0 else 79000) + (if b0044 then 0 else 79000) + (if b0045 then 0 else 79000) + (if b0046 then 0 else 79000) + (if b0047 then 0 else 79000) + (if b0048 then 0 else 79000) + (if b0049 then 0 else 79000) + (if b0050 then 0 else 79000) + (if b0051 then 0 else 79000) + (if b0052 then 0 else 79000) + (if b0053 then 0 else 79000) + (if b0054 then 0 else 79000) + (if b0055 then 0 else 79000) + (if b0056 then 0 else 79000) + (if b0057 then 0 else 79000) + (if b0060 then 0 else 79000) + (if b0062 then 0 else 79000) + (if b0063 then 0 else 79000) + (if b0064 then 0 else 79000) + (if b0065 then 0 else 79000) + (if b0066 then 0 else 79000) + (if b0067 then 0 else 79000) + (if b0068 then 0 else 79000) + (if b0069 then 0 else 79000) + (if b0070 then 0 else 79000) + (if b0071 then 0 else 79000) + (if b0072 then 0 else 79000) + (if b0126 then 0 else 79000) + (if b0127 then 0 else 79000) + (if b0128 then 0 else 79000) + (if b0129 then 0 else 79000) + (if b0130 then 0 else 79000) + (if b0131 then 0 else 79000) + (if b0132 then 0 else 79000) + (if b0133 then 0 else 79000) + (if b0135 then 0 else 79000) + (if b0169 then 0 else 79000) + (if b0170 then 0 else 79000) + (if b0171 then 0 else 79000) + (if b0172 then 0 else 79000) + (if b0173 then 0 else 79000) + (if b0174 then 0 else 79000) + (if b0175 then 0 else 79000) + (if b0176 then 0 else 79000) + (if b0177 then 0 else 79000) + (if b0178 then 0 else 79000) + (if b0179 then 0 else 79000) + (if b0180 then 0 else 79000) + (if b0181 then 0 else 79000) + (if b0182 then 0 else 79000) + (if b0183 then 0 else 79000) + (if b0184 then 0 else 79000) + (if b0185 then 0 else 79000) + (if b0186 then 0 else 79000) + (if b0187 then 0 else 79000) + (if b0188 then 0 else 79000) + (if b0189 then 0 else 79000) + (if b0190 then 0 else 79000) + (if b0191 then 0 else 79000) + (if b0192 then 0 else 79000) + (if b0193 then 0 else 79000) + (if b0194 then 0 else 79000) + (if b0195 then 0 else 79000) + (if b0196 then 0 else 79000) + (if b0197 then 0 else 79000) + (if b0198 then 0 else 79000) < 441
}
Prover Time taken = 11.248108
Added Horn clause: 14 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 => 24
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/linear-algebra/solvers/lu/kernel2.bpl.ice2.bpl
Total learner time was 00:00:00.1247070
Verifying $kernel2: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool) : bool
{
  0 + (if b0000 then 0 else 79000) + (if b0001 then 0 else 79000) + (if b0003 then 0 else 79000) + (if b0005 then 0 else 79000) + (if b0007 then 0 else 79000) + (if b0008 then 0 else 79000) + (if b0009 then 0 else 79000) + (if b0010 then 0 else 79000) + (if b0012 then 0 else 79000) + (if b0013 then 0 else 79000) + (if b0014 then 0 else 79000) + (if b0015 then 0 else 79000) + (if b0016 then 0 else 79000) + (if b0017 then 0 else 79000) + (if b0018 then 0 else 79000) + (if b0019 then 0 else 79000) + (if b0020 then 0 else 79000) + (if b0021 then 0 else 79000) + (if b0022 then 0 else 79000) + (if b0023 then 0 else 79000) + (if b0024 then 0 else 79000) + (if b0025 then 0 else 79000) + (if b0026 then 0 else 79000) + (if b0027 then 0 else 79000) + (if b0028 then 0 else 79000) + (if b0029 then 0 else 79000) + (if b0030 then 0 else 79000) + (if b0031 then 0 else 79000) + (if b0032 then 0 else 79000) + (if b0033 then 0 else 79000) + (if b0034 then 0 else 79000) + (if b0035 then 0 else 79000) + (if b0036 then 0 else 79000) + (if b0037 then 0 else 79000) + (if b0038 then 0 else 79000) + (if b0039 then 0 else 79000) + (if b0042 then 0 else 79000) + (if b0044 then 0 else 79000) + (if b0045 then 0 else 79000) + (if b0046 then 0 else 79000) + (if b0047 then 0 else 79000) + (if b0048 then 0 else 79000) + (if b0049 then 0 else 79000) + (if b0050 then 0 else 79000) + (if b0051 then 0 else 79000) + (if b0052 then 0 else 79000) + (if b0053 then 0 else 79000) + (if b0054 then 0 else 79000) + (if b0055 then 0 else 79000) + (if b0056 then 0 else 79000) + (if b0057 then 0 else 79000) + (if b0060 then 0 else 79000) + (if b0062 then 0 else 79000) + (if b0063 then 0 else 79000) + (if b0064 then 0 else 79000) + (if b0065 then 0 else 79000) + (if b0066 then 0 else 79000) + (if b0067 then 0 else 79000) + (if b0068 then 0 else 79000) + (if b0069 then 0 else 79000) + (if b0070 then 0 else 79000) + (if b0072 then 0 else 79000) + (if b0126 then 0 else 79000) + (if b0127 then 0 else 79000) + (if b0128 then 0 else 79000) + (if b0129 then 0 else 79000) + (if b0130 then 0 else 79000) + (if b0131 then 0 else 79000) + (if b0132 then 0 else 79000) + (if b0133 then 0 else 79000) + (if b0135 then 0 else 79000) + (if b0169 then 0 else 79000) + (if b0170 then 0 else 79000) + (if b0171 then 0 else 79000) + (if b0172 then 0 else 79000) + (if b0173 then 0 else 79000) + (if b0174 then 0 else 79000) + (if b0175 then 0 else 79000) + (if b0176 then 0 else 79000) + (if b0177 then 0 else 79000) + (if b0178 then 0 else 79000) + (if b0179 then 0 else 79000) + (if b0180 then 0 else 79000) + (if b0181 then 0 else 79000) + (if b0182 then 0 else 79000) + (if b0183 then 0 else 79000) + (if b0184 then 0 else 79000) + (if b0185 then 0 else 79000) + (if b0186 then 0 else 79000) + (if b0187 then 0 else 79000) + (if b0188 then 0 else 79000) + (if b0189 then 0 else 79000) + (if b0190 then 0 else 79000) + (if b0191 then 0 else 79000) + (if b0192 then 0 else 79000) + (if b0193 then 0 else 79000) + (if b0194 then 0 else 79000) + (if b0195 then 0 else 79000) + (if b0196 then 0 else 79000) + (if b0197 then 0 else 79000) + (if b0198 then 0 else 79000) < 441
}
Prover Time taken = 32.911641
Added Horn clause: 25 && 7 && 0 && 0 && 0 && 0 && 0 => 26
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/linear-algebra/solvers/lu/kernel2.bpl.ice2.bpl
Total learner time was 00:00:00.1256770
Verifying $kernel2: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool) : bool
{
  0 + (if b0000 then 0 else 79000) + (if b0001 then 0 else 79000) + (if b0003 then 0 else 79000) + (if b0005 then 0 else 79000) + (if b0007 then 0 else 79000) + (if b0008 then 0 else 79000) + (if b0009 then 0 else 79000) + (if b0010 then 0 else 79000) + (if b0012 then 0 else 79000) + (if b0013 then 0 else 79000) + (if b0014 then 0 else 79000) + (if b0015 then 0 else 79000) + (if b0016 then 0 else 79000) + (if b0017 then 0 else 79000) + (if b0018 then 0 else 79000) + (if b0019 then 0 else 79000) + (if b0020 then 0 else 79000) + (if b0021 then 0 else 79000) + (if b0022 then 0 else 79000) + (if b0023 then 0 else 79000) + (if b0024 then 0 else 79000) + (if b0026 then 0 else 79000) + (if b0027 then 0 else 79000) + (if b0028 then 0 else 79000) + (if b0029 then 0 else 79000) + (if b0030 then 0 else 79000) + (if b0031 then 0 else 79000) + (if b0032 then 0 else 79000) + (if b0033 then 0 else 79000) + (if b0034 then 0 else 79000) + (if b0035 then 0 else 79000) + (if b0036 then 0 else 79000) + (if b0037 then 0 else 79000) + (if b0038 then 0 else 79000) + (if b0039 then 0 else 79000) + (if b0042 then 0 else 79000) + (if b0044 then 0 else 79000) + (if b0045 then 0 else 79000) + (if b0046 then 0 else 79000) + (if b0047 then 0 else 79000) + (if b0048 then 0 else 79000) + (if b0049 then 0 else 79000) + (if b0050 then 0 else 79000) + (if b0051 then 0 else 79000) + (if b0052 then 0 else 79000) + (if b0053 then 0 else 79000) + (if b0054 then 0 else 79000) + (if b0055 then 0 else 79000) + (if b0056 then 0 else 79000) + (if b0057 then 0 else 79000) + (if b0060 then 0 else 79000) + (if b0062 then 0 else 79000) + (if b0063 then 0 else 79000) + (if b0064 then 0 else 79000) + (if b0065 then 0 else 79000) + (if b0066 then 0 else 79000) + (if b0067 then 0 else 79000) + (if b0068 then 0 else 79000) + (if b0069 then 0 else 79000) + (if b0070 then 0 else 79000) + (if b0072 then 0 else 79000) + (if b0126 then 0 else 79000) + (if b0127 then 0 else 79000) + (if b0128 then 0 else 79000) + (if b0129 then 0 else 79000) + (if b0130 then 0 else 79000) + (if b0131 then 0 else 79000) + (if b0132 then 0 else 79000) + (if b0133 then 0 else 79000) + (if b0135 then 0 else 79000) + (if b0169 then 0 else 79000) + (if b0170 then 0 else 79000) + (if b0171 then 0 else 79000) + (if b0172 then 0 else 79000) + (if b0173 then 0 else 79000) + (if b0174 then 0 else 79000) + (if b0175 then 0 else 79000) + (if b0176 then 0 else 79000) + (if b0177 then 0 else 79000) + (if b0178 then 0 else 79000) + (if b0179 then 0 else 79000) + (if b0180 then 0 else 79000) + (if b0181 then 0 else 79000) + (if b0182 then 0 else 79000) + (if b0183 then 0 else 79000) + (if b0184 then 0 else 79000) + (if b0185 then 0 else 79000) + (if b0186 then 0 else 79000) + (if b0187 then 0 else 79000) + (if b0188 then 0 else 79000) + (if b0189 then 0 else 79000) + (if b0190 then 0 else 79000) + (if b0191 then 0 else 79000) + (if b0192 then 0 else 79000) + (if b0193 then 0 else 79000) + (if b0194 then 0 else 79000) + (if b0195 then 0 else 79000) + (if b0196 then 0 else 79000) + (if b0197 then 0 else 79000) + (if b0198 then 0 else 79000) < 441
}
Prover Time taken = 13.353815
Added Horn clause: 25 && 7 && 17 && 0 && 0 && 0 && 0 && 0 && 0 => 27
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/linear-algebra/solvers/lu/kernel2.bpl.ice2.bpl
Total learner time was 00:00:00.1233420
Verifying $kernel2: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool) : bool
{
  0 + (if b0000 then 0 else 79000) + (if b0001 then 0 else 79000) + (if b0003 then 0 else 79000) + (if b0005 then 0 else 79000) + (if b0007 then 0 else 79000) + (if b0008 then 0 else 79000) + (if b0009 then 0 else 79000) + (if b0010 then 0 else 79000) + (if b0012 then 0 else 79000) + (if b0013 then 0 else 79000) + (if b0014 then 0 else 79000) + (if b0015 then 0 else 79000) + (if b0016 then 0 else 79000) + (if b0017 then 0 else 79000) + (if b0018 then 0 else 79000) + (if b0019 then 0 else 79000) + (if b0020 then 0 else 79000) + (if b0021 then 0 else 79000) + (if b0022 then 0 else 79000) + (if b0023 then 0 else 79000) + (if b0024 then 0 else 79000) + (if b0027 then 0 else 79000) + (if b0029 then 0 else 79000) + (if b0030 then 0 else 79000) + (if b0031 then 0 else 79000) + (if b0032 then 0 else 79000) + (if b0033 then 0 else 79000) + (if b0034 then 0 else 79000) + (if b0035 then 0 else 79000) + (if b0036 then 0 else 79000) + (if b0037 then 0 else 79000) + (if b0038 then 0 else 79000) + (if b0039 then 0 else 79000) + (if b0042 then 0 else 79000) + (if b0044 then 0 else 79000) + (if b0045 then 0 else 79000) + (if b0046 then 0 else 79000) + (if b0047 then 0 else 79000) + (if b0048 then 0 else 79000) + (if b0049 then 0 else 79000) + (if b0050 then 0 else 79000) + (if b0051 then 0 else 79000) + (if b0052 then 0 else 79000) + (if b0053 then 0 else 79000) + (if b0054 then 0 else 79000) + (if b0055 then 0 else 79000) + (if b0056 then 0 else 79000) + (if b0057 then 0 else 79000) + (if b0060 then 0 else 79000) + (if b0062 then 0 else 79000) + (if b0063 then 0 else 79000) + (if b0064 then 0 else 79000) + (if b0065 then 0 else 79000) + (if b0066 then 0 else 79000) + (if b0067 then 0 else 79000) + (if b0068 then 0 else 79000) + (if b0069 then 0 else 79000) + (if b0070 then 0 else 79000) + (if b0072 then 0 else 79000) + (if b0126 then 0 else 79000) + (if b0127 then 0 else 79000) + (if b0128 then 0 else 79000) + (if b0129 then 0 else 79000) + (if b0130 then 0 else 79000) + (if b0131 then 0 else 79000) + (if b0132 then 0 else 79000) + (if b0133 then 0 else 79000) + (if b0135 then 0 else 79000) + (if b0169 then 0 else 79000) + (if b0170 then 0 else 79000) + (if b0171 then 0 else 79000) + (if b0172 then 0 else 79000) + (if b0173 then 0 else 79000) + (if b0174 then 0 else 79000) + (if b0175 then 0 else 79000) + (if b0176 then 0 else 79000) + (if b0177 then 0 else 79000) + (if b0178 then 0 else 79000) + (if b0179 then 0 else 79000) + (if b0180 then 0 else 79000) + (if b0181 then 0 else 79000) + (if b0182 then 0 else 79000) + (if b0183 then 0 else 79000) + (if b0184 then 0 else 79000) + (if b0185 then 0 else 79000) + (if b0186 then 0 else 79000) + (if b0187 then 0 else 79000) + (if b0188 then 0 else 79000) + (if b0189 then 0 else 79000) + (if b0190 then 0 else 79000) + (if b0191 then 0 else 79000) + (if b0192 then 0 else 79000) + (if b0193 then 0 else 79000) + (if b0194 then 0 else 79000) + (if b0195 then 0 else 79000) + (if b0196 then 0 else 79000) + (if b0197 then 0 else 79000) + (if b0198 then 0 else 79000) < 441
}
Prover Time taken = 18.869501
Added Horn clause: 28 && 29 && 0 && 0 && 0 && 0 && 0 && 0 && 27 => 30
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/linear-algebra/solvers/lu/kernel2.bpl.ice2.bpl
Total learner time was 00:00:00.1263850
Verifying $kernel2: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool) : bool
{
  0 + (if b0000 then 0 else 79000) + (if b0001 then 0 else 79000) + (if b0003 then 0 else 79000) + (if b0005 then 0 else 79000) + (if b0007 then 0 else 79000) + (if b0008 then 0 else 79000) + (if b0009 then 0 else 79000) + (if b0010 then 0 else 79000) + (if b0012 then 0 else 79000) + (if b0014 then 0 else 79000) + (if b0016 then 0 else 79000) + (if b0017 then 0 else 79000) + (if b0018 then 0 else 79000) + (if b0019 then 0 else 79000) + (if b0020 then 0 else 79000) + (if b0021 then 0 else 79000) + (if b0022 then 0 else 79000) + (if b0023 then 0 else 79000) + (if b0024 then 0 else 79000) + (if b0027 then 0 else 79000) + (if b0029 then 0 else 79000) + (if b0030 then 0 else 79000) + (if b0031 then 0 else 79000) + (if b0032 then 0 else 79000) + (if b0033 then 0 else 79000) + (if b0034 then 0 else 79000) + (if b0035 then 0 else 79000) + (if b0036 then 0 else 79000) + (if b0037 then 0 else 79000) + (if b0038 then 0 else 79000) + (if b0039 then 0 else 79000) + (if b0042 then 0 else 79000) + (if b0044 then 0 else 79000) + (if b0045 then 0 else 79000) + (if b0046 then 0 else 79000) + (if b0047 then 0 else 79000) + (if b0048 then 0 else 79000) + (if b0049 then 0 else 79000) + (if b0050 then 0 else 79000) + (if b0051 then 0 else 79000) + (if b0052 then 0 else 79000) + (if b0053 then 0 else 79000) + (if b0054 then 0 else 79000) + (if b0055 then 0 else 79000) + (if b0056 then 0 else 79000) + (if b0057 then 0 else 79000) + (if b0060 then 0 else 79000) + (if b0062 then 0 else 79000) + (if b0063 then 0 else 79000) + (if b0064 then 0 else 79000) + (if b0065 then 0 else 79000) + (if b0066 then 0 else 79000) + (if b0067 then 0 else 79000) + (if b0068 then 0 else 79000) + (if b0069 then 0 else 79000) + (if b0070 then 0 else 79000) + (if b0072 then 0 else 79000) + (if b0126 then 0 else 79000) + (if b0127 then 0 else 79000) + (if b0128 then 0 else 79000) + (if b0129 then 0 else 79000) + (if b0130 then 0 else 79000) + (if b0131 then 0 else 79000) + (if b0132 then 0 else 79000) + (if b0133 then 0 else 79000) + (if b0135 then 0 else 79000) + (if b0169 then 0 else 79000) + (if b0170 then 0 else 79000) + (if b0171 then 0 else 79000) + (if b0172 then 0 else 79000) + (if b0173 then 0 else 79000) + (if b0174 then 0 else 79000) + (if b0175 then 0 else 79000) + (if b0176 then 0 else 79000) + (if b0177 then 0 else 79000) + (if b0178 then 0 else 79000) + (if b0179 then 0 else 79000) + (if b0180 then 0 else 79000) + (if b0181 then 0 else 79000) + (if b0182 then 0 else 79000) + (if b0183 then 0 else 79000) + (if b0184 then 0 else 79000) + (if b0185 then 0 else 79000) + (if b0186 then 0 else 79000) + (if b0187 then 0 else 79000) + (if b0188 then 0 else 79000) + (if b0189 then 0 else 79000) + (if b0190 then 0 else 79000) + (if b0191 then 0 else 79000) + (if b0192 then 0 else 79000) + (if b0193 then 0 else 79000) + (if b0194 then 0 else 79000) + (if b0195 then 0 else 79000) + (if b0196 then 0 else 79000) + (if b0197 then 0 else 79000) + (if b0198 then 0 else 79000) < 441
}
Prover Time taken = 37.494923
Added Horn clause: 31 && 32 && 0 && 0 && 0 && 0 && 0 && 0 && 0 => 33
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/linear-algebra/solvers/lu/kernel2.bpl.ice2.bpl
Total learner time was 00:00:00.1234590
Verifying $kernel2: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool) : bool
{
  0 + (if b0000 then 0 else 79000) + (if b0001 then 0 else 79000) + (if b0003 then 0 else 79000) + (if b0005 then 0 else 79000) + (if b0007 then 0 else 79000) + (if b0008 then 0 else 79000) + (if b0009 then 0 else 79000) + (if b0010 then 0 else 79000) + (if b0012 then 0 else 79000) + (if b0014 then 0 else 79000) + (if b0016 then 0 else 79000) + (if b0017 then 0 else 79000) + (if b0018 then 0 else 79000) + (if b0019 then 0 else 79000) + (if b0020 then 0 else 79000) + (if b0021 then 0 else 79000) + (if b0022 then 0 else 79000) + (if b0023 then 0 else 79000) + (if b0024 then 0 else 79000) + (if b0027 then 0 else 79000) + (if b0029 then 0 else 79000) + (if b0030 then 0 else 79000) + (if b0031 then 0 else 79000) + (if b0032 then 0 else 79000) + (if b0033 then 0 else 79000) + (if b0034 then 0 else 79000) + (if b0035 then 0 else 79000) + (if b0036 then 0 else 79000) + (if b0037 then 0 else 79000) + (if b0038 then 0 else 79000) + (if b0039 then 0 else 79000) + (if b0042 then 0 else 79000) + (if b0044 then 0 else 79000) + (if b0045 then 0 else 79000) + (if b0046 then 0 else 79000) + (if b0047 then 0 else 79000) + (if b0048 then 0 else 79000) + (if b0049 then 0 else 79000) + (if b0050 then 0 else 79000) + (if b0051 then 0 else 79000) + (if b0052 then 0 else 79000) + (if b0053 then 0 else 79000) + (if b0054 then 0 else 79000) + (if b0055 then 0 else 79000) + (if b0056 then 0 else 79000) + (if b0057 then 0 else 79000) + (if b0060 then 0 else 79000) + (if b0062 then 0 else 79000) + (if b0063 then 0 else 79000) + (if b0064 then 0 else 79000) + (if b0065 then 0 else 79000) + (if b0066 then 0 else 79000) + (if b0067 then 0 else 79000) + (if b0068 then 0 else 79000) + (if b0069 then 0 else 79000) + (if b0070 then 0 else 79000) + (if b0072 then 0 else 79000) + (if b0126 then 0 else 79000) + (if b0127 then 0 else 79000) + (if b0128 then 0 else 79000) + (if b0129 then 0 else 79000) + (if b0130 then 0 else 79000) + (if b0131 then 0 else 79000) + (if b0132 then 0 else 79000) + (if b0133 then 0 else 79000) + (if b0135 then 0 else 79000) + (if b0169 then 0 else 79000) + (if b0170 then 0 else 79000) + (if b0171 then 0 else 79000) + (if b0172 then 0 else 79000) + (if b0173 then 0 else 79000) + (if b0174 then 0 else 79000) + (if b0176 then 0 else 79000) + (if b0177 then 0 else 79000) + (if b0178 then 0 else 79000) + (if b0179 then 0 else 79000) + (if b0180 then 0 else 79000) + (if b0181 then 0 else 79000) + (if b0182 then 0 else 79000) + (if b0183 then 0 else 79000) + (if b0184 then 0 else 79000) + (if b0185 then 0 else 79000) + (if b0186 then 0 else 79000) + (if b0187 then 0 else 79000) + (if b0188 then 0 else 79000) + (if b0189 then 0 else 79000) + (if b0190 then 0 else 79000) + (if b0191 then 0 else 79000) + (if b0192 then 0 else 79000) + (if b0193 then 0 else 79000) + (if b0194 then 0 else 79000) + (if b0195 then 0 else 79000) + (if b0196 then 0 else 79000) + (if b0197 then 0 else 79000) + (if b0198 then 0 else 79000) < 441
}
Prover Time taken = 20.563203
Added Horn clause: 34 && 35 && 0 && 0 && 0 => 36
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/linear-algebra/solvers/lu/kernel2.bpl.ice2.bpl
Total learner time was 00:00:00.1285210
Verifying $kernel2: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool) : bool
{
  0 + (if b0000 then 0 else 79000) + (if b0001 then 0 else 79000) + (if b0003 then 0 else 79000) + (if b0005 then 0 else 79000) + (if b0007 then 0 else 79000) + (if b0008 then 0 else 79000) + (if b0009 then 0 else 79000) + (if b0010 then 0 else 79000) + (if b0012 then 0 else 79000) + (if b0014 then 0 else 79000) + (if b0016 then 0 else 79000) + (if b0017 then 0 else 79000) + (if b0018 then 0 else 79000) + (if b0019 then 0 else 79000) + (if b0020 then 0 else 79000) + (if b0021 then 0 else 79000) + (if b0022 then 0 else 79000) + (if b0023 then 0 else 79000) + (if b0024 then 0 else 79000) + (if b0027 then 0 else 79000) + (if b0029 then 0 else 79000) + (if b0030 then 0 else 79000) + (if b0031 then 0 else 79000) + (if b0032 then 0 else 79000) + (if b0033 then 0 else 79000) + (if b0034 then 0 else 79000) + (if b0035 then 0 else 79000) + (if b0036 then 0 else 79000) + (if b0037 then 0 else 79000) + (if b0038 then 0 else 79000) + (if b0039 then 0 else 79000) + (if b0042 then 0 else 79000) + (if b0044 then 0 else 79000) + (if b0045 then 0 else 79000) + (if b0046 then 0 else 79000) + (if b0047 then 0 else 79000) + (if b0048 then 0 else 79000) + (if b0049 then 0 else 79000) + (if b0050 then 0 else 79000) + (if b0051 then 0 else 79000) + (if b0052 then 0 else 79000) + (if b0053 then 0 else 79000) + (if b0054 then 0 else 79000) + (if b0055 then 0 else 79000) + (if b0056 then 0 else 79000) + (if b0057 then 0 else 79000) + (if b0060 then 0 else 79000) + (if b0062 then 0 else 79000) + (if b0063 then 0 else 79000) + (if b0064 then 0 else 79000) + (if b0065 then 0 else 79000) + (if b0066 then 0 else 79000) + (if b0067 then 0 else 79000) + (if b0068 then 0 else 79000) + (if b0069 then 0 else 79000) + (if b0070 then 0 else 79000) + (if b0072 then 0 else 79000) + (if b0126 then 0 else 79000) + (if b0127 then 0 else 79000) + (if b0128 then 0 else 79000) + (if b0129 then 0 else 79000) + (if b0130 then 0 else 79000) + (if b0131 then 0 else 79000) + (if b0132 then 0 else 79000) + (if b0133 then 0 else 79000) + (if b0135 then 0 else 79000) + (if b0169 then 0 else 79000) + (if b0170 then 0 else 79000) + (if b0171 then 0 else 79000) + (if b0172 then 0 else 79000) + (if b0173 then 0 else 79000) + (if b0174 then 0 else 79000) + (if b0176 then 0 else 79000) + (if b0177 then 0 else 79000) + (if b0178 then 0 else 79000) + (if b0179 then 0 else 79000) + (if b0180 then 0 else 79000) + (if b0181 then 0 else 79000) + (if b0182 then 0 else 79000) + (if b0183 then 0 else 79000) + (if b0184 then 0 else 79000) + (if b0185 then 0 else 79000) + (if b0186 then 0 else 79000) + (if b0187 then 0 else 79000) + (if b0188 then 0 else 79000) + (if b0189 then 0 else 79000) + (if b0191 then 0 else 79000) + (if b0192 then 0 else 79000) + (if b0193 then 0 else 79000) + (if b0194 then 0 else 79000) + (if b0195 then 0 else 79000) + (if b0196 then 0 else 79000) + (if b0197 then 0 else 79000) + (if b0198 then 0 else 79000) < 441
}
Prover Time taken = 35.274955
Added Horn clause: 25 && 7 && 17 && 0 && 0 && 0 && 0 && 0 && 0 => 37
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/linear-algebra/solvers/lu/kernel2.bpl.ice2.bpl
Total learner time was 00:00:00.1263760
Verifying $kernel2: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool) : bool
{
  0 + (if b0000 then 0 else 79000) + (if b0001 then 0 else 79000) + (if b0003 then 0 else 79000) + (if b0005 then 0 else 79000) + (if b0007 then 0 else 79000) + (if b0008 then 0 else 79000) + (if b0009 then 0 else 79000) + (if b0010 then 0 else 79000) + (if b0012 then 0 else 79000) + (if b0014 then 0 else 79000) + (if b0016 then 0 else 79000) + (if b0017 then 0 else 79000) + (if b0018 then 0 else 79000) + (if b0019 then 0 else 79000) + (if b0020 then 0 else 79000) + (if b0021 then 0 else 79000) + (if b0022 then 0 else 79000) + (if b0023 then 0 else 79000) + (if b0024 then 0 else 79000) + (if b0027 then 0 else 79000) + (if b0029 then 0 else 79000) + (if b0030 then 0 else 79000) + (if b0031 then 0 else 79000) + (if b0032 then 0 else 79000) + (if b0033 then 0 else 79000) + (if b0034 then 0 else 79000) + (if b0035 then 0 else 79000) + (if b0036 then 0 else 79000) + (if b0037 then 0 else 79000) + (if b0038 then 0 else 79000) + (if b0039 then 0 else 79000) + (if b0042 then 0 else 79000) + (if b0044 then 0 else 79000) + (if b0045 then 0 else 79000) + (if b0046 then 0 else 79000) + (if b0047 then 0 else 79000) + (if b0048 then 0 else 79000) + (if b0049 then 0 else 79000) + (if b0050 then 0 else 79000) + (if b0051 then 0 else 79000) + (if b0052 then 0 else 79000) + (if b0053 then 0 else 79000) + (if b0054 then 0 else 79000) + (if b0055 then 0 else 79000) + (if b0056 then 0 else 79000) + (if b0057 then 0 else 79000) + (if b0060 then 0 else 79000) + (if b0062 then 0 else 79000) + (if b0063 then 0 else 79000) + (if b0064 then 0 else 79000) + (if b0065 then 0 else 79000) + (if b0066 then 0 else 79000) + (if b0067 then 0 else 79000) + (if b0068 then 0 else 79000) + (if b0069 then 0 else 79000) + (if b0070 then 0 else 79000) + (if b0072 then 0 else 79000) + (if b0126 then 0 else 79000) + (if b0127 then 0 else 79000) + (if b0128 then 0 else 79000) + (if b0129 then 0 else 79000) + (if b0130 then 0 else 79000) + (if b0131 then 0 else 79000) + (if b0132 then 0 else 79000) + (if b0133 then 0 else 79000) + (if b0135 then 0 else 79000) + (if b0169 then 0 else 79000) + (if b0171 then 0 else 79000) + (if b0172 then 0 else 79000) + (if b0173 then 0 else 79000) + (if b0174 then 0 else 79000) + (if b0176 then 0 else 79000) + (if b0177 then 0 else 79000) + (if b0178 then 0 else 79000) + (if b0179 then 0 else 79000) + (if b0180 then 0 else 79000) + (if b0181 then 0 else 79000) + (if b0182 then 0 else 79000) + (if b0183 then 0 else 79000) + (if b0184 then 0 else 79000) + (if b0185 then 0 else 79000) + (if b0186 then 0 else 79000) + (if b0187 then 0 else 79000) + (if b0188 then 0 else 79000) + (if b0189 then 0 else 79000) + (if b0191 then 0 else 79000) + (if b0192 then 0 else 79000) + (if b0193 then 0 else 79000) + (if b0194 then 0 else 79000) + (if b0195 then 0 else 79000) + (if b0196 then 0 else 79000) + (if b0197 then 0 else 79000) + (if b0198 then 0 else 79000) < 441
}
Prover Time taken = 26.184487
Added Horn clause: 25 && 38 && 0 && 0 && 0 && 0 && 0 => 39
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/linear-algebra/solvers/lu/kernel2.bpl.ice2.bpl
Total learner time was 00:00:00.1226150
Verifying $kernel2: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool) : bool
{
  0 + (if b0000 then 0 else 79000) + (if b0001 then 0 else 79000) + (if b0003 then 0 else 79000) + (if b0005 then 0 else 79000) + (if b0007 then 0 else 79000) + (if b0008 then 0 else 79000) + (if b0009 then 0 else 79000) + (if b0010 then 0 else 79000) + (if b0012 then 0 else 79000) + (if b0014 then 0 else 79000) + (if b0016 then 0 else 79000) + (if b0017 then 0 else 79000) + (if b0018 then 0 else 79000) + (if b0019 then 0 else 79000) + (if b0020 then 0 else 79000) + (if b0021 then 0 else 79000) + (if b0022 then 0 else 79000) + (if b0023 then 0 else 79000) + (if b0024 then 0 else 79000) + (if b0027 then 0 else 79000) + (if b0029 then 0 else 79000) + (if b0030 then 0 else 79000) + (if b0031 then 0 else 79000) + (if b0032 then 0 else 79000) + (if b0033 then 0 else 79000) + (if b0034 then 0 else 79000) + (if b0035 then 0 else 79000) + (if b0037 then 0 else 79000) + (if b0038 then 0 else 79000) + (if b0039 then 0 else 79000) + (if b0042 then 0 else 79000) + (if b0044 then 0 else 79000) + (if b0045 then 0 else 79000) + (if b0046 then 0 else 79000) + (if b0047 then 0 else 79000) + (if b0048 then 0 else 79000) + (if b0049 then 0 else 79000) + (if b0050 then 0 else 79000) + (if b0051 then 0 else 79000) + (if b0052 then 0 else 79000) + (if b0053 then 0 else 79000) + (if b0054 then 0 else 79000) + (if b0055 then 0 else 79000) + (if b0056 then 0 else 79000) + (if b0057 then 0 else 79000) + (if b0060 then 0 else 79000) + (if b0062 then 0 else 79000) + (if b0063 then 0 else 79000) + (if b0064 then 0 else 79000) + (if b0065 then 0 else 79000) + (if b0066 then 0 else 79000) + (if b0067 then 0 else 79000) + (if b0068 then 0 else 79000) + (if b0069 then 0 else 79000) + (if b0070 then 0 else 79000) + (if b0072 then 0 else 79000) + (if b0126 then 0 else 79000) + (if b0127 then 0 else 79000) + (if b0128 then 0 else 79000) + (if b0129 then 0 else 79000) + (if b0130 then 0 else 79000) + (if b0131 then 0 else 79000) + (if b0132 then 0 else 79000) + (if b0133 then 0 else 79000) + (if b0135 then 0 else 79000) + (if b0169 then 0 else 79000) + (if b0171 then 0 else 79000) + (if b0172 then 0 else 79000) + (if b0173 then 0 else 79000) + (if b0174 then 0 else 79000) + (if b0176 then 0 else 79000) + (if b0177 then 0 else 79000) + (if b0178 then 0 else 79000) + (if b0179 then 0 else 79000) + (if b0180 then 0 else 79000) + (if b0181 then 0 else 79000) + (if b0182 then 0 else 79000) + (if b0183 then 0 else 79000) + (if b0184 then 0 else 79000) + (if b0185 then 0 else 79000) + (if b0186 then 0 else 79000) + (if b0187 then 0 else 79000) + (if b0188 then 0 else 79000) + (if b0189 then 0 else 79000) + (if b0191 then 0 else 79000) + (if b0192 then 0 else 79000) + (if b0193 then 0 else 79000) + (if b0194 then 0 else 79000) + (if b0195 then 0 else 79000) + (if b0196 then 0 else 79000) + (if b0197 then 0 else 79000) + (if b0198 then 0 else 79000) < 441
}
Prover Time taken = 18.94707
Added Horn clause: 25 && 38 && 0 && 0 && 0 && 0 && 0 && 0 && 39 => 40
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/linear-algebra/solvers/lu/kernel2.bpl.ice2.bpl
Total learner time was 00:00:00.1241280
Verifying $kernel2: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool) : bool
{
  0 + (if b0000 then 0 else 79000) + (if b0001 then 0 else 79000) + (if b0003 then 0 else 79000) + (if b0005 then 0 else 79000) + (if b0007 then 0 else 79000) + (if b0008 then 0 else 79000) + (if b0009 then 0 else 79000) + (if b0010 then 0 else 79000) + (if b0012 then 0 else 79000) + (if b0014 then 0 else 79000) + (if b0016 then 0 else 79000) + (if b0017 then 0 else 79000) + (if b0018 then 0 else 79000) + (if b0019 then 0 else 79000) + (if b0020 then 0 else 79000) + (if b0021 then 0 else 79000) + (if b0022 then 0 else 79000) + (if b0023 then 0 else 79000) + (if b0024 then 0 else 79000) + (if b0027 then 0 else 79000) + (if b0029 then 0 else 79000) + (if b0030 then 0 else 79000) + (if b0031 then 0 else 79000) + (if b0032 then 0 else 79000) + (if b0033 then 0 else 79000) + (if b0034 then 0 else 79000) + (if b0035 then 0 else 79000) + (if b0037 then 0 else 79000) + (if b0038 then 0 else 79000) + (if b0039 then 0 else 79000) + (if b0042 then 0 else 79000) + (if b0044 then 0 else 79000) + (if b0045 then 0 else 79000) + (if b0046 then 0 else 79000) + (if b0047 then 0 else 79000) + (if b0048 then 0 else 79000) + (if b0049 then 0 else 79000) + (if b0050 then 0 else 79000) + (if b0051 then 0 else 79000) + (if b0052 then 0 else 79000) + (if b0053 then 0 else 79000) + (if b0054 then 0 else 79000) + (if b0055 then 0 else 79000) + (if b0056 then 0 else 79000) + (if b0057 then 0 else 79000) + (if b0060 then 0 else 79000) + (if b0062 then 0 else 79000) + (if b0063 then 0 else 79000) + (if b0064 then 0 else 79000) + (if b0065 then 0 else 79000) + (if b0066 then 0 else 79000) + (if b0067 then 0 else 79000) + (if b0068 then 0 else 79000) + (if b0069 then 0 else 79000) + (if b0070 then 0 else 79000) + (if b0072 then 0 else 79000) + (if b0126 then 0 else 79000) + (if b0128 then 0 else 79000) + (if b0129 then 0 else 79000) + (if b0130 then 0 else 79000) + (if b0131 then 0 else 79000) + (if b0132 then 0 else 79000) + (if b0133 then 0 else 79000) + (if b0135 then 0 else 79000) + (if b0169 then 0 else 79000) + (if b0171 then 0 else 79000) + (if b0172 then 0 else 79000) + (if b0173 then 0 else 79000) + (if b0174 then 0 else 79000) + (if b0176 then 0 else 79000) + (if b0177 then 0 else 79000) + (if b0178 then 0 else 79000) + (if b0179 then 0 else 79000) + (if b0180 then 0 else 79000) + (if b0181 then 0 else 79000) + (if b0182 then 0 else 79000) + (if b0183 then 0 else 79000) + (if b0184 then 0 else 79000) + (if b0185 then 0 else 79000) + (if b0186 then 0 else 79000) + (if b0187 then 0 else 79000) + (if b0188 then 0 else 79000) + (if b0189 then 0 else 79000) + (if b0191 then 0 else 79000) + (if b0192 then 0 else 79000) + (if b0193 then 0 else 79000) + (if b0194 then 0 else 79000) + (if b0195 then 0 else 79000) + (if b0196 then 0 else 79000) + (if b0197 then 0 else 79000) + (if b0198 then 0 else 79000) < 441
}
Prover Time taken = 17.541594
Added Horn clause: 41 => 42
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/linear-algebra/solvers/lu/kernel2.bpl.ice2.bpl
Total learner time was 00:00:00.1250630
Verifying $kernel2: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool) : bool
{
  0 + (if b0000 then 0 else 79000) + (if b0001 then 0 else 79000) + (if b0003 then 0 else 79000) + (if b0005 then 0 else 79000) + (if b0007 then 0 else 79000) + (if b0008 then 0 else 79000) + (if b0009 then 0 else 79000) + (if b0010 then 0 else 79000) + (if b0012 then 0 else 79000) + (if b0014 then 0 else 79000) + (if b0016 then 0 else 79000) + (if b0017 then 0 else 79000) + (if b0018 then 0 else 79000) + (if b0019 then 0 else 79000) + (if b0020 then 0 else 79000) + (if b0022 then 0 else 79000) + (if b0023 then 0 else 79000) + (if b0024 then 0 else 79000) + (if b0027 then 0 else 79000) + (if b0029 then 0 else 79000) + (if b0030 then 0 else 79000) + (if b0031 then 0 else 79000) + (if b0032 then 0 else 79000) + (if b0033 then 0 else 79000) + (if b0034 then 0 else 79000) + (if b0035 then 0 else 79000) + (if b0037 then 0 else 79000) + (if b0038 then 0 else 79000) + (if b0039 then 0 else 79000) + (if b0042 then 0 else 79000) + (if b0044 then 0 else 79000) + (if b0045 then 0 else 79000) + (if b0046 then 0 else 79000) + (if b0047 then 0 else 79000) + (if b0048 then 0 else 79000) + (if b0049 then 0 else 79000) + (if b0050 then 0 else 79000) + (if b0051 then 0 else 79000) + (if b0052 then 0 else 79000) + (if b0053 then 0 else 79000) + (if b0054 then 0 else 79000) + (if b0055 then 0 else 79000) + (if b0056 then 0 else 79000) + (if b0057 then 0 else 79000) + (if b0060 then 0 else 79000) + (if b0062 then 0 else 79000) + (if b0063 then 0 else 79000) + (if b0064 then 0 else 79000) + (if b0065 then 0 else 79000) + (if b0066 then 0 else 79000) + (if b0067 then 0 else 79000) + (if b0068 then 0 else 79000) + (if b0069 then 0 else 79000) + (if b0070 then 0 else 79000) + (if b0072 then 0 else 79000) + (if b0126 then 0 else 79000) + (if b0128 then 0 else 79000) + (if b0129 then 0 else 79000) + (if b0130 then 0 else 79000) + (if b0131 then 0 else 79000) + (if b0132 then 0 else 79000) + (if b0133 then 0 else 79000) + (if b0135 then 0 else 79000) + (if b0169 then 0 else 79000) + (if b0171 then 0 else 79000) + (if b0172 then 0 else 79000) + (if b0173 then 0 else 79000) + (if b0174 then 0 else 79000) + (if b0176 then 0 else 79000) + (if b0177 then 0 else 79000) + (if b0178 then 0 else 79000) + (if b0179 then 0 else 79000) + (if b0180 then 0 else 79000) + (if b0181 then 0 else 79000) + (if b0182 then 0 else 79000) + (if b0183 then 0 else 79000) + (if b0184 then 0 else 79000) + (if b0185 then 0 else 79000) + (if b0186 then 0 else 79000) + (if b0187 then 0 else 79000) + (if b0188 then 0 else 79000) + (if b0189 then 0 else 79000) + (if b0191 then 0 else 79000) + (if b0192 then 0 else 79000) + (if b0193 then 0 else 79000) + (if b0194 then 0 else 79000) + (if b0195 then 0 else 79000) + (if b0196 then 0 else 79000) + (if b0197 then 0 else 79000) + (if b0198 then 0 else 79000) < 441
}
Prover Time taken = 14.879883
Added Horn clause: 43 && 38 && 42 && 0 && 0 && 0 && 0 => 44
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/linear-algebra/solvers/lu/kernel2.bpl.ice2.bpl
Total learner time was 00:00:00.1250580
Verifying $kernel2: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool) : bool
{
  0 + (if b0000 then 0 else 79000) + (if b0001 then 0 else 79000) + (if b0003 then 0 else 79000) + (if b0005 then 0 else 79000) + (if b0007 then 0 else 79000) + (if b0008 then 0 else 79000) + (if b0009 then 0 else 79000) + (if b0010 then 0 else 79000) + (if b0012 then 0 else 79000) + (if b0014 then 0 else 79000) + (if b0016 then 0 else 79000) + (if b0017 then 0 else 79000) + (if b0018 then 0 else 79000) + (if b0019 then 0 else 79000) + (if b0020 then 0 else 79000) + (if b0022 then 0 else 79000) + (if b0023 then 0 else 79000) + (if b0024 then 0 else 79000) + (if b0027 then 0 else 79000) + (if b0029 then 0 else 79000) + (if b0030 then 0 else 79000) + (if b0031 then 0 else 79000) + (if b0032 then 0 else 79000) + (if b0033 then 0 else 79000) + (if b0034 then 0 else 79000) + (if b0038 then 0 else 79000) + (if b0039 then 0 else 79000) + (if b0042 then 0 else 79000) + (if b0044 then 0 else 79000) + (if b0045 then 0 else 79000) + (if b0046 then 0 else 79000) + (if b0047 then 0 else 79000) + (if b0048 then 0 else 79000) + (if b0049 then 0 else 79000) + (if b0050 then 0 else 79000) + (if b0051 then 0 else 79000) + (if b0052 then 0 else 79000) + (if b0053 then 0 else 79000) + (if b0054 then 0 else 79000) + (if b0055 then 0 else 79000) + (if b0056 then 0 else 79000) + (if b0057 then 0 else 79000) + (if b0060 then 0 else 79000) + (if b0062 then 0 else 79000) + (if b0063 then 0 else 79000) + (if b0064 then 0 else 79000) + (if b0065 then 0 else 79000) + (if b0066 then 0 else 79000) + (if b0067 then 0 else 79000) + (if b0068 then 0 else 79000) + (if b0069 then 0 else 79000) + (if b0070 then 0 else 79000) + (if b0072 then 0 else 79000) + (if b0126 then 0 else 79000) + (if b0128 then 0 else 79000) + (if b0129 then 0 else 79000) + (if b0130 then 0 else 79000) + (if b0131 then 0 else 79000) + (if b0132 then 0 else 79000) + (if b0133 then 0 else 79000) + (if b0135 then 0 else 79000) + (if b0169 then 0 else 79000) + (if b0171 then 0 else 79000) + (if b0172 then 0 else 79000) + (if b0173 then 0 else 79000) + (if b0174 then 0 else 79000) + (if b0176 then 0 else 79000) + (if b0177 then 0 else 79000) + (if b0178 then 0 else 79000) + (if b0179 then 0 else 79000) + (if b0180 then 0 else 79000) + (if b0181 then 0 else 79000) + (if b0182 then 0 else 79000) + (if b0183 then 0 else 79000) + (if b0184 then 0 else 79000) + (if b0185 then 0 else 79000) + (if b0186 then 0 else 79000) + (if b0187 then 0 else 79000) + (if b0188 then 0 else 79000) + (if b0189 then 0 else 79000) + (if b0191 then 0 else 79000) + (if b0192 then 0 else 79000) + (if b0193 then 0 else 79000) + (if b0194 then 0 else 79000) + (if b0195 then 0 else 79000) + (if b0196 then 0 else 79000) + (if b0197 then 0 else 79000) + (if b0198 then 0 else 79000) < 441
}
Prover Time taken = 43.143595
Added Horn clause: 45 && 35 && 0 && 0 && 0 => 46
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/linear-algebra/solvers/lu/kernel2.bpl.ice2.bpl
Total learner time was 00:00:00.1226690
Verifying $kernel2: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool) : bool
{
  0 + (if b0000 then 0 else 79000) + (if b0001 then 0 else 79000) + (if b0003 then 0 else 79000) + (if b0005 then 0 else 79000) + (if b0007 then 0 else 79000) + (if b0008 then 0 else 79000) + (if b0009 then 0 else 79000) + (if b0010 then 0 else 79000) + (if b0012 then 0 else 79000) + (if b0014 then 0 else 79000) + (if b0016 then 0 else 79000) + (if b0017 then 0 else 79000) + (if b0018 then 0 else 79000) + (if b0019 then 0 else 79000) + (if b0020 then 0 else 79000) + (if b0022 then 0 else 79000) + (if b0023 then 0 else 79000) + (if b0024 then 0 else 79000) + (if b0027 then 0 else 79000) + (if b0029 then 0 else 79000) + (if b0030 then 0 else 79000) + (if b0031 then 0 else 79000) + (if b0032 then 0 else 79000) + (if b0033 then 0 else 79000) + (if b0034 then 0 else 79000) + (if b0038 then 0 else 79000) + (if b0039 then 0 else 79000) + (if b0042 then 0 else 79000) + (if b0044 then 0 else 79000) + (if b0045 then 0 else 79000) + (if b0046 then 0 else 79000) + (if b0047 then 0 else 79000) + (if b0048 then 0 else 79000) + (if b0049 then 0 else 79000) + (if b0050 then 0 else 79000) + (if b0052 then 0 else 79000) + (if b0053 then 0 else 79000) + (if b0054 then 0 else 79000) + (if b0055 then 0 else 79000) + (if b0056 then 0 else 79000) + (if b0057 then 0 else 79000) + (if b0060 then 0 else 79000) + (if b0062 then 0 else 79000) + (if b0063 then 0 else 79000) + (if b0064 then 0 else 79000) + (if b0065 then 0 else 79000) + (if b0066 then 0 else 79000) + (if b0067 then 0 else 79000) + (if b0068 then 0 else 79000) + (if b0069 then 0 else 79000) + (if b0070 then 0 else 79000) + (if b0072 then 0 else 79000) + (if b0126 then 0 else 79000) + (if b0128 then 0 else 79000) + (if b0129 then 0 else 79000) + (if b0130 then 0 else 79000) + (if b0131 then 0 else 79000) + (if b0132 then 0 else 79000) + (if b0133 then 0 else 79000) + (if b0135 then 0 else 79000) + (if b0169 then 0 else 79000) + (if b0171 then 0 else 79000) + (if b0172 then 0 else 79000) + (if b0173 then 0 else 79000) + (if b0174 then 0 else 79000) + (if b0176 then 0 else 79000) + (if b0177 then 0 else 79000) + (if b0178 then 0 else 79000) + (if b0179 then 0 else 79000) + (if b0180 then 0 else 79000) + (if b0181 then 0 else 79000) + (if b0182 then 0 else 79000) + (if b0183 then 0 else 79000) + (if b0184 then 0 else 79000) + (if b0185 then 0 else 79000) + (if b0186 then 0 else 79000) + (if b0187 then 0 else 79000) + (if b0188 then 0 else 79000) + (if b0189 then 0 else 79000) + (if b0191 then 0 else 79000) + (if b0192 then 0 else 79000) + (if b0193 then 0 else 79000) + (if b0194 then 0 else 79000) + (if b0195 then 0 else 79000) + (if b0196 then 0 else 79000) + (if b0197 then 0 else 79000) + (if b0198 then 0 else 79000) < 441
}
Prover Time taken = 54.693435
Added Horn clause: 47 && 35 && 0 && 0 && 0 && 0 && 46 => 48
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/linear-algebra/solvers/lu/kernel2.bpl.ice2.bpl
Total learner time was 00:00:00.1252790
Verifying $kernel2: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool) : bool
{
  0 + (if b0000 then 0 else 79000) + (if b0001 then 0 else 79000) + (if b0003 then 0 else 79000) + (if b0005 then 0 else 79000) + (if b0007 then 0 else 79000) + (if b0008 then 0 else 79000) + (if b0009 then 0 else 79000) + (if b0010 then 0 else 79000) + (if b0012 then 0 else 79000) + (if b0014 then 0 else 79000) + (if b0016 then 0 else 79000) + (if b0017 then 0 else 79000) + (if b0018 then 0 else 79000) + (if b0019 then 0 else 79000) + (if b0020 then 0 else 79000) + (if b0022 then 0 else 79000) + (if b0023 then 0 else 79000) + (if b0024 then 0 else 79000) + (if b0027 then 0 else 79000) + (if b0029 then 0 else 79000) + (if b0030 then 0 else 79000) + (if b0031 then 0 else 79000) + (if b0032 then 0 else 79000) + (if b0034 then 0 else 79000) + (if b0038 then 0 else 79000) + (if b0039 then 0 else 79000) + (if b0042 then 0 else 79000) + (if b0044 then 0 else 79000) + (if b0045 then 0 else 79000) + (if b0046 then 0 else 79000) + (if b0047 then 0 else 79000) + (if b0048 then 0 else 79000) + (if b0049 then 0 else 79000) + (if b0050 then 0 else 79000) + (if b0052 then 0 else 79000) + (if b0053 then 0 else 79000) + (if b0054 then 0 else 79000) + (if b0055 then 0 else 79000) + (if b0056 then 0 else 79000) + (if b0057 then 0 else 79000) + (if b0060 then 0 else 79000) + (if b0062 then 0 else 79000) + (if b0063 then 0 else 79000) + (if b0064 then 0 else 79000) + (if b0065 then 0 else 79000) + (if b0066 then 0 else 79000) + (if b0067 then 0 else 79000) + (if b0068 then 0 else 79000) + (if b0069 then 0 else 79000) + (if b0070 then 0 else 79000) + (if b0072 then 0 else 79000) + (if b0126 then 0 else 79000) + (if b0128 then 0 else 79000) + (if b0129 then 0 else 79000) + (if b0130 then 0 else 79000) + (if b0131 then 0 else 79000) + (if b0132 then 0 else 79000) + (if b0133 then 0 else 79000) + (if b0135 then 0 else 79000) + (if b0169 then 0 else 79000) + (if b0171 then 0 else 79000) + (if b0172 then 0 else 79000) + (if b0173 then 0 else 79000) + (if b0174 then 0 else 79000) + (if b0176 then 0 else 79000) + (if b0177 then 0 else 79000) + (if b0178 then 0 else 79000) + (if b0179 then 0 else 79000) + (if b0180 then 0 else 79000) + (if b0181 then 0 else 79000) + (if b0182 then 0 else 79000) + (if b0183 then 0 else 79000) + (if b0184 then 0 else 79000) + (if b0185 then 0 else 79000) + (if b0186 then 0 else 79000) + (if b0187 then 0 else 79000) + (if b0188 then 0 else 79000) + (if b0189 then 0 else 79000) + (if b0191 then 0 else 79000) + (if b0192 then 0 else 79000) + (if b0193 then 0 else 79000) + (if b0194 then 0 else 79000) + (if b0195 then 0 else 79000) + (if b0196 then 0 else 79000) + (if b0197 then 0 else 79000) + (if b0198 then 0 else 79000) < 441
}
Prover Time taken = 30.459815
Added Horn clause: 25 && 37 && 17 && 0 && 0 && 0 && 0 && 0 && 0 => 49
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/linear-algebra/solvers/lu/kernel2.bpl.ice2.bpl
Total learner time was 00:00:00.1260430
Verifying $kernel2: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool) : bool
{
  0 + (if b0000 then 0 else 79000) + (if b0001 then 0 else 79000) + (if b0003 then 0 else 79000) + (if b0005 then 0 else 79000) + (if b0007 then 0 else 79000) + (if b0008 then 0 else 79000) + (if b0009 then 0 else 79000) + (if b0010 then 0 else 79000) + (if b0012 then 0 else 79000) + (if b0014 then 0 else 79000) + (if b0016 then 0 else 79000) + (if b0017 then 0 else 79000) + (if b0018 then 0 else 79000) + (if b0019 then 0 else 79000) + (if b0020 then 0 else 79000) + (if b0022 then 0 else 79000) + (if b0023 then 0 else 79000) + (if b0024 then 0 else 79000) + (if b0027 then 0 else 79000) + (if b0029 then 0 else 79000) + (if b0030 then 0 else 79000) + (if b0031 then 0 else 79000) + (if b0032 then 0 else 79000) + (if b0034 then 0 else 79000) + (if b0038 then 0 else 79000) + (if b0039 then 0 else 79000) + (if b0042 then 0 else 79000) + (if b0044 then 0 else 79000) + (if b0045 then 0 else 79000) + (if b0046 then 0 else 79000) + (if b0047 then 0 else 79000) + (if b0048 then 0 else 79000) + (if b0049 then 0 else 79000) + (if b0050 then 0 else 79000) + (if b0052 then 0 else 79000) + (if b0053 then 0 else 79000) + (if b0054 then 0 else 79000) + (if b0055 then 0 else 79000) + (if b0056 then 0 else 79000) + (if b0057 then 0 else 79000) + (if b0060 then 0 else 79000) + (if b0062 then 0 else 79000) + (if b0063 then 0 else 79000) + (if b0064 then 0 else 79000) + (if b0065 then 0 else 79000) + (if b0066 then 0 else 79000) + (if b0067 then 0 else 79000) + (if b0068 then 0 else 79000) + (if b0069 then 0 else 79000) + (if b0070 then 0 else 79000) + (if b0072 then 0 else 79000) + (if b0126 then 0 else 79000) + (if b0128 then 0 else 79000) + (if b0129 then 0 else 79000) + (if b0130 then 0 else 79000) + (if b0131 then 0 else 79000) + (if b0132 then 0 else 79000) + (if b0133 then 0 else 79000) + (if b0135 then 0 else 79000) + (if b0171 then 0 else 79000) + (if b0172 then 0 else 79000) + (if b0173 then 0 else 79000) + (if b0174 then 0 else 79000) + (if b0176 then 0 else 79000) + (if b0177 then 0 else 79000) + (if b0178 then 0 else 79000) + (if b0179 then 0 else 79000) + (if b0180 then 0 else 79000) + (if b0181 then 0 else 79000) + (if b0182 then 0 else 79000) + (if b0183 then 0 else 79000) + (if b0184 then 0 else 79000) + (if b0185 then 0 else 79000) + (if b0186 then 0 else 79000) + (if b0187 then 0 else 79000) + (if b0188 then 0 else 79000) + (if b0189 then 0 else 79000) + (if b0191 then 0 else 79000) + (if b0192 then 0 else 79000) + (if b0193 then 0 else 79000) + (if b0194 then 0 else 79000) + (if b0195 then 0 else 79000) + (if b0196 then 0 else 79000) + (if b0197 then 0 else 79000) + (if b0198 then 0 else 79000) < 441
}
Prover Time taken = 12.778316
Added Horn clause: 50 && 51 && 0 => 52
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/linear-algebra/solvers/lu/kernel2.bpl.ice2.bpl
Total learner time was 00:00:00.1274360
Verifying $kernel2: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool) : bool
{
  0 + (if b0000 then 0 else 79000) + (if b0001 then 0 else 79000) + (if b0003 then 0 else 79000) + (if b0005 then 0 else 79000) + (if b0007 then 0 else 79000) + (if b0008 then 0 else 79000) + (if b0009 then 0 else 79000) + (if b0010 then 0 else 79000) + (if b0012 then 0 else 79000) + (if b0014 then 0 else 79000) + (if b0016 then 0 else 79000) + (if b0017 then 0 else 79000) + (if b0018 then 0 else 79000) + (if b0019 then 0 else 79000) + (if b0020 then 0 else 79000) + (if b0022 then 0 else 79000) + (if b0023 then 0 else 79000) + (if b0024 then 0 else 79000) + (if b0027 then 0 else 79000) + (if b0029 then 0 else 79000) + (if b0030 then 0 else 79000) + (if b0031 then 0 else 79000) + (if b0032 then 0 else 79000) + (if b0034 then 0 else 79000) + (if b0038 then 0 else 79000) + (if b0039 then 0 else 79000) + (if b0042 then 0 else 79000) + (if b0044 then 0 else 79000) + (if b0045 then 0 else 79000) + (if b0046 then 0 else 79000) + (if b0047 then 0 else 79000) + (if b0048 then 0 else 79000) + (if b0049 then 0 else 79000) + (if b0050 then 0 else 79000) + (if b0052 then 0 else 79000) + (if b0053 then 0 else 79000) + (if b0054 then 0 else 79000) + (if b0055 then 0 else 79000) + (if b0056 then 0 else 79000) + (if b0057 then 0 else 79000) + (if b0060 then 0 else 79000) + (if b0062 then 0 else 79000) + (if b0063 then 0 else 79000) + (if b0064 then 0 else 79000) + (if b0065 then 0 else 79000) + (if b0067 then 0 else 79000) + (if b0068 then 0 else 79000) + (if b0069 then 0 else 79000) + (if b0070 then 0 else 79000) + (if b0072 then 0 else 79000) + (if b0126 then 0 else 79000) + (if b0128 then 0 else 79000) + (if b0129 then 0 else 79000) + (if b0130 then 0 else 79000) + (if b0131 then 0 else 79000) + (if b0132 then 0 else 79000) + (if b0133 then 0 else 79000) + (if b0135 then 0 else 79000) + (if b0171 then 0 else 79000) + (if b0172 then 0 else 79000) + (if b0173 then 0 else 79000) + (if b0174 then 0 else 79000) + (if b0176 then 0 else 79000) + (if b0177 then 0 else 79000) + (if b0178 then 0 else 79000) + (if b0179 then 0 else 79000) + (if b0180 then 0 else 79000) + (if b0181 then 0 else 79000) + (if b0182 then 0 else 79000) + (if b0183 then 0 else 79000) + (if b0184 then 0 else 79000) + (if b0185 then 0 else 79000) + (if b0186 then 0 else 79000) + (if b0187 then 0 else 79000) + (if b0188 then 0 else 79000) + (if b0189 then 0 else 79000) + (if b0191 then 0 else 79000) + (if b0192 then 0 else 79000) + (if b0193 then 0 else 79000) + (if b0194 then 0 else 79000) + (if b0195 then 0 else 79000) + (if b0196 then 0 else 79000) + (if b0197 then 0 else 79000) + (if b0198 then 0 else 79000) < 441
}
Prover Time taken = 9.530829
Added Horn clause: 25 && 51 && 0 && 0 && 52 => 53
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/linear-algebra/solvers/lu/kernel2.bpl.ice2.bpl
Total learner time was 00:00:00.1238760
Verifying $kernel2: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool) : bool
{
  0 + (if b0000 then 0 else 79000) + (if b0001 then 0 else 79000) + (if b0003 then 0 else 79000) + (if b0005 then 0 else 79000) + (if b0007 then 0 else 79000) + (if b0008 then 0 else 79000) + (if b0009 then 0 else 79000) + (if b0010 then 0 else 79000) + (if b0012 then 0 else 79000) + (if b0014 then 0 else 79000) + (if b0016 then 0 else 79000) + (if b0017 then 0 else 79000) + (if b0018 then 0 else 79000) + (if b0019 then 0 else 79000) + (if b0020 then 0 else 79000) + (if b0022 then 0 else 79000) + (if b0023 then 0 else 79000) + (if b0024 then 0 else 79000) + (if b0027 then 0 else 79000) + (if b0029 then 0 else 79000) + (if b0030 then 0 else 79000) + (if b0031 then 0 else 79000) + (if b0032 then 0 else 79000) + (if b0034 then 0 else 79000) + (if b0038 then 0 else 79000) + (if b0039 then 0 else 79000) + (if b0042 then 0 else 79000) + (if b0044 then 0 else 79000) + (if b0045 then 0 else 79000) + (if b0046 then 0 else 79000) + (if b0047 then 0 else 79000) + (if b0049 then 0 else 79000) + (if b0050 then 0 else 79000) + (if b0052 then 0 else 79000) + (if b0053 then 0 else 79000) + (if b0054 then 0 else 79000) + (if b0055 then 0 else 79000) + (if b0056 then 0 else 79000) + (if b0057 then 0 else 79000) + (if b0060 then 0 else 79000) + (if b0062 then 0 else 79000) + (if b0063 then 0 else 79000) + (if b0064 then 0 else 79000) + (if b0065 then 0 else 79000) + (if b0067 then 0 else 79000) + (if b0068 then 0 else 79000) + (if b0069 then 0 else 79000) + (if b0070 then 0 else 79000) + (if b0072 then 0 else 79000) + (if b0126 then 0 else 79000) + (if b0128 then 0 else 79000) + (if b0129 then 0 else 79000) + (if b0130 then 0 else 79000) + (if b0131 then 0 else 79000) + (if b0132 then 0 else 79000) + (if b0133 then 0 else 79000) + (if b0135 then 0 else 79000) + (if b0171 then 0 else 79000) + (if b0172 then 0 else 79000) + (if b0173 then 0 else 79000) + (if b0174 then 0 else 79000) + (if b0176 then 0 else 79000) + (if b0177 then 0 else 79000) + (if b0178 then 0 else 79000) + (if b0179 then 0 else 79000) + (if b0180 then 0 else 79000) + (if b0181 then 0 else 79000) + (if b0182 then 0 else 79000) + (if b0183 then 0 else 79000) + (if b0184 then 0 else 79000) + (if b0185 then 0 else 79000) + (if b0186 then 0 else 79000) + (if b0187 then 0 else 79000) + (if b0188 then 0 else 79000) + (if b0189 then 0 else 79000) + (if b0191 then 0 else 79000) + (if b0192 then 0 else 79000) + (if b0193 then 0 else 79000) + (if b0194 then 0 else 79000) + (if b0195 then 0 else 79000) + (if b0196 then 0 else 79000) + (if b0197 then 0 else 79000) + (if b0198 then 0 else 79000) < 441
}
Prover Time taken = 34.533252
Added Horn clause: 25 && 54 && 0 && 0 && 52 && 0 && 53 && 0 && 0 => 55
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/linear-algebra/solvers/lu/kernel2.bpl.ice2.bpl
Total learner time was 00:00:00.1236740
Verifying $kernel2: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool) : bool
{
  0 + (if b0000 then 0 else 79000) + (if b0001 then 0 else 79000) + (if b0003 then 0 else 79000) + (if b0005 then 0 else 79000) + (if b0007 then 0 else 79000) + (if b0008 then 0 else 79000) + (if b0009 then 0 else 79000) + (if b0010 then 0 else 79000) + (if b0012 then 0 else 79000) + (if b0014 then 0 else 79000) + (if b0016 then 0 else 79000) + (if b0017 then 0 else 79000) + (if b0018 then 0 else 79000) + (if b0019 then 0 else 79000) + (if b0020 then 0 else 79000) + (if b0022 then 0 else 79000) + (if b0023 then 0 else 79000) + (if b0024 then 0 else 79000) + (if b0027 then 0 else 79000) + (if b0029 then 0 else 79000) + (if b0030 then 0 else 79000) + (if b0031 then 0 else 79000) + (if b0032 then 0 else 79000) + (if b0034 then 0 else 79000) + (if b0038 then 0 else 79000) + (if b0039 then 0 else 79000) + (if b0042 then 0 else 79000) + (if b0044 then 0 else 79000) + (if b0045 then 0 else 79000) + (if b0046 then 0 else 79000) + (if b0047 then 0 else 79000) + (if b0049 then 0 else 79000) + (if b0050 then 0 else 79000) + (if b0052 then 0 else 79000) + (if b0053 then 0 else 79000) + (if b0054 then 0 else 79000) + (if b0055 then 0 else 79000) + (if b0056 then 0 else 79000) + (if b0057 then 0 else 79000) + (if b0060 then 0 else 79000) + (if b0062 then 0 else 79000) + (if b0063 then 0 else 79000) + (if b0064 then 0 else 79000) + (if b0065 then 0 else 79000) + (if b0067 then 0 else 79000) + (if b0068 then 0 else 79000) + (if b0069 then 0 else 79000) + (if b0070 then 0 else 79000) + (if b0072 then 0 else 79000) + (if b0128 then 0 else 79000) + (if b0129 then 0 else 79000) + (if b0130 then 0 else 79000) + (if b0131 then 0 else 79000) + (if b0132 then 0 else 79000) + (if b0133 then 0 else 79000) + (if b0135 then 0 else 79000) + (if b0171 then 0 else 79000) + (if b0172 then 0 else 79000) + (if b0173 then 0 else 79000) + (if b0174 then 0 else 79000) + (if b0176 then 0 else 79000) + (if b0177 then 0 else 79000) + (if b0178 then 0 else 79000) + (if b0179 then 0 else 79000) + (if b0180 then 0 else 79000) + (if b0181 then 0 else 79000) + (if b0182 then 0 else 79000) + (if b0183 then 0 else 79000) + (if b0184 then 0 else 79000) + (if b0185 then 0 else 79000) + (if b0186 then 0 else 79000) + (if b0187 then 0 else 79000) + (if b0188 then 0 else 79000) + (if b0189 then 0 else 79000) + (if b0191 then 0 else 79000) + (if b0192 then 0 else 79000) + (if b0193 then 0 else 79000) + (if b0194 then 0 else 79000) + (if b0195 then 0 else 79000) + (if b0196 then 0 else 79000) + (if b0197 then 0 else 79000) + (if b0198 then 0 else 79000) < 441
}
Prover Time taken = 5.443387
Added Horn clause: 56 => 57
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/linear-algebra/solvers/lu/kernel2.bpl.ice2.bpl
Total learner time was 00:00:00.1298030
Verifying $kernel2: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool) : bool
{
  0 + (if b0000 then 0 else 79000) + (if b0001 then 0 else 79000) + (if b0003 then 0 else 79000) + (if b0005 then 0 else 79000) + (if b0007 then 0 else 79000) + (if b0008 then 0 else 79000) + (if b0009 then 0 else 79000) + (if b0010 then 0 else 79000) + (if b0012 then 0 else 79000) + (if b0014 then 0 else 79000) + (if b0016 then 0 else 79000) + (if b0017 then 0 else 79000) + (if b0018 then 0 else 79000) + (if b0019 then 0 else 79000) + (if b0022 then 0 else 79000) + (if b0023 then 0 else 79000) + (if b0024 then 0 else 79000) + (if b0027 then 0 else 79000) + (if b0029 then 0 else 79000) + (if b0030 then 0 else 79000) + (if b0031 then 0 else 79000) + (if b0032 then 0 else 79000) + (if b0034 then 0 else 79000) + (if b0038 then 0 else 79000) + (if b0039 then 0 else 79000) + (if b0042 then 0 else 79000) + (if b0044 then 0 else 79000) + (if b0045 then 0 else 79000) + (if b0046 then 0 else 79000) + (if b0047 then 0 else 79000) + (if b0049 then 0 else 79000) + (if b0050 then 0 else 79000) + (if b0052 then 0 else 79000) + (if b0053 then 0 else 79000) + (if b0054 then 0 else 79000) + (if b0055 then 0 else 79000) + (if b0056 then 0 else 79000) + (if b0057 then 0 else 79000) + (if b0060 then 0 else 79000) + (if b0062 then 0 else 79000) + (if b0063 then 0 else 79000) + (if b0064 then 0 else 79000) + (if b0065 then 0 else 79000) + (if b0067 then 0 else 79000) + (if b0068 then 0 else 79000) + (if b0069 then 0 else 79000) + (if b0070 then 0 else 79000) + (if b0072 then 0 else 79000) + (if b0128 then 0 else 79000) + (if b0129 then 0 else 79000) + (if b0130 then 0 else 79000) + (if b0131 then 0 else 79000) + (if b0132 then 0 else 79000) + (if b0133 then 0 else 79000) + (if b0135 then 0 else 79000) + (if b0171 then 0 else 79000) + (if b0172 then 0 else 79000) + (if b0173 then 0 else 79000) + (if b0174 then 0 else 79000) + (if b0176 then 0 else 79000) + (if b0177 then 0 else 79000) + (if b0178 then 0 else 79000) + (if b0179 then 0 else 79000) + (if b0180 then 0 else 79000) + (if b0181 then 0 else 79000) + (if b0182 then 0 else 79000) + (if b0183 then 0 else 79000) + (if b0184 then 0 else 79000) + (if b0185 then 0 else 79000) + (if b0186 then 0 else 79000) + (if b0187 then 0 else 79000) + (if b0188 then 0 else 79000) + (if b0189 then 0 else 79000) + (if b0191 then 0 else 79000) + (if b0192 then 0 else 79000) + (if b0193 then 0 else 79000) + (if b0194 then 0 else 79000) + (if b0195 then 0 else 79000) + (if b0196 then 0 else 79000) + (if b0197 then 0 else 79000) + (if b0198 then 0 else 79000) < 441
}
Prover Time taken = 15.293231
Added Horn clause: 58 && 51 && 59 => 60
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/linear-algebra/solvers/lu/kernel2.bpl.ice2.bpl
Total learner time was 00:00:00.1239530
Verifying $kernel2: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool) : bool
{
  0 + (if b0000 then 0 else 79000) + (if b0001 then 0 else 79000) + (if b0003 then 0 else 79000) + (if b0005 then 0 else 79000) + (if b0007 then 0 else 79000) + (if b0008 then 0 else 79000) + (if b0009 then 0 else 79000) + (if b0010 then 0 else 79000) + (if b0012 then 0 else 79000) + (if b0014 then 0 else 79000) + (if b0016 then 0 else 79000) + (if b0017 then 0 else 79000) + (if b0018 then 0 else 79000) + (if b0019 then 0 else 79000) + (if b0022 then 0 else 79000) + (if b0023 then 0 else 79000) + (if b0024 then 0 else 79000) + (if b0027 then 0 else 79000) + (if b0029 then 0 else 79000) + (if b0030 then 0 else 79000) + (if b0031 then 0 else 79000) + (if b0032 then 0 else 79000) + (if b0034 then 0 else 79000) + (if b0038 then 0 else 79000) + (if b0039 then 0 else 79000) + (if b0042 then 0 else 79000) + (if b0044 then 0 else 79000) + (if b0045 then 0 else 79000) + (if b0046 then 0 else 79000) + (if b0047 then 0 else 79000) + (if b0049 then 0 else 79000) + (if b0050 then 0 else 79000) + (if b0052 then 0 else 79000) + (if b0053 then 0 else 79000) + (if b0054 then 0 else 79000) + (if b0055 then 0 else 79000) + (if b0056 then 0 else 79000) + (if b0057 then 0 else 79000) + (if b0060 then 0 else 79000) + (if b0062 then 0 else 79000) + (if b0063 then 0 else 79000) + (if b0064 then 0 else 79000) + (if b0068 then 0 else 79000) + (if b0069 then 0 else 79000) + (if b0070 then 0 else 79000) + (if b0072 then 0 else 79000) + (if b0128 then 0 else 79000) + (if b0129 then 0 else 79000) + (if b0130 then 0 else 79000) + (if b0131 then 0 else 79000) + (if b0132 then 0 else 79000) + (if b0133 then 0 else 79000) + (if b0135 then 0 else 79000) + (if b0171 then 0 else 79000) + (if b0172 then 0 else 79000) + (if b0173 then 0 else 79000) + (if b0174 then 0 else 79000) + (if b0176 then 0 else 79000) + (if b0177 then 0 else 79000) + (if b0178 then 0 else 79000) + (if b0179 then 0 else 79000) + (if b0180 then 0 else 79000) + (if b0181 then 0 else 79000) + (if b0182 then 0 else 79000) + (if b0183 then 0 else 79000) + (if b0184 then 0 else 79000) + (if b0185 then 0 else 79000) + (if b0186 then 0 else 79000) + (if b0187 then 0 else 79000) + (if b0188 then 0 else 79000) + (if b0189 then 0 else 79000) + (if b0191 then 0 else 79000) + (if b0192 then 0 else 79000) + (if b0193 then 0 else 79000) + (if b0194 then 0 else 79000) + (if b0195 then 0 else 79000) + (if b0196 then 0 else 79000) + (if b0197 then 0 else 79000) + (if b0198 then 0 else 79000) < 441
}
Prover Time taken = 42.872081
Added Horn clause: 18 && 35 && 0 && 0 && 0 && 36 && 46 => 61
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/linear-algebra/solvers/lu/kernel2.bpl.ice2.bpl
Total learner time was 00:00:00.1268000
Verifying $kernel2: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool) : bool
{
  0 + (if b0000 then 0 else 79000) + (if b0001 then 0 else 79000) + (if b0003 then 0 else 79000) + (if b0005 then 0 else 79000) + (if b0007 then 0 else 79000) + (if b0008 then 0 else 79000) + (if b0009 then 0 else 79000) + (if b0010 then 0 else 79000) + (if b0012 then 0 else 79000) + (if b0014 then 0 else 79000) + (if b0016 then 0 else 79000) + (if b0017 then 0 else 79000) + (if b0018 then 0 else 79000) + (if b0019 then 0 else 79000) + (if b0022 then 0 else 79000) + (if b0023 then 0 else 79000) + (if b0024 then 0 else 79000) + (if b0027 then 0 else 79000) + (if b0029 then 0 else 79000) + (if b0030 then 0 else 79000) + (if b0031 then 0 else 79000) + (if b0032 then 0 else 79000) + (if b0034 then 0 else 79000) + (if b0038 then 0 else 79000) + (if b0039 then 0 else 79000) + (if b0042 then 0 else 79000) + (if b0044 then 0 else 79000) + (if b0045 then 0 else 79000) + (if b0046 then 0 else 79000) + (if b0047 then 0 else 79000) + (if b0049 then 0 else 79000) + (if b0050 then 0 else 79000) + (if b0052 then 0 else 79000) + (if b0053 then 0 else 79000) + (if b0054 then 0 else 79000) + (if b0055 then 0 else 79000) + (if b0056 then 0 else 79000) + (if b0057 then 0 else 79000) + (if b0060 then 0 else 79000) + (if b0062 then 0 else 79000) + (if b0063 then 0 else 79000) + (if b0064 then 0 else 79000) + (if b0068 then 0 else 79000) + (if b0069 then 0 else 79000) + (if b0070 then 0 else 79000) + (if b0072 then 0 else 79000) + (if b0128 then 0 else 79000) + (if b0129 then 0 else 79000) + (if b0130 then 0 else 79000) + (if b0131 then 0 else 79000) + (if b0132 then 0 else 79000) + (if b0133 then 0 else 79000) + (if b0135 then 0 else 79000) + (if b0171 then 0 else 79000) + (if b0172 then 0 else 79000) + (if b0173 then 0 else 79000) + (if b0174 then 0 else 79000) + (if b0176 then 0 else 79000) + (if b0177 then 0 else 79000) + (if b0178 then 0 else 79000) + (if b0179 then 0 else 79000) + (if b0180 then 0 else 79000) + (if b0181 then 0 else 79000) + (if b0182 then 0 else 79000) + (if b0183 then 0 else 79000) + (if b0184 then 0 else 79000) + (if b0185 then 0 else 79000) + (if b0186 then 0 else 79000) + (if b0187 then 0 else 79000) + (if b0188 then 0 else 79000) + (if b0189 then 0 else 79000) + (if b0191 then 0 else 79000) + (if b0192 then 0 else 79000) + (if b0193 then 0 else 79000) + (if b0194 then 0 else 79000) + (if b0195 then 0 else 79000) + (if b0198 then 0 else 79000) < 441
}
Prover Time taken = 21.892945
Added Horn clause: 56 && 54 && 57 && 0 && 62 => 63
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/linear-algebra/solvers/lu/kernel2.bpl.ice2.bpl
Total learner time was 00:00:00.1259890
Verifying $kernel2: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool) : bool
{
  0 + (if b0000 then 0 else 79000) + (if b0001 then 0 else 79000) + (if b0003 then 0 else 79000) + (if b0005 then 0 else 79000) + (if b0007 then 0 else 79000) + (if b0008 then 0 else 79000) + (if b0009 then 0 else 79000) + (if b0010 then 0 else 79000) + (if b0012 then 0 else 79000) + (if b0014 then 0 else 79000) + (if b0016 then 0 else 79000) + (if b0017 then 0 else 79000) + (if b0018 then 0 else 79000) + (if b0019 then 0 else 79000) + (if b0022 then 0 else 79000) + (if b0023 then 0 else 79000) + (if b0024 then 0 else 79000) + (if b0027 then 0 else 79000) + (if b0029 then 0 else 79000) + (if b0030 then 0 else 79000) + (if b0031 then 0 else 79000) + (if b0032 then 0 else 79000) + (if b0034 then 0 else 79000) + (if b0038 then 0 else 79000) + (if b0039 then 0 else 79000) + (if b0042 then 0 else 79000) + (if b0044 then 0 else 79000) + (if b0045 then 0 else 79000) + (if b0046 then 0 else 79000) + (if b0050 then 0 else 79000) + (if b0052 then 0 else 79000) + (if b0053 then 0 else 79000) + (if b0054 then 0 else 79000) + (if b0055 then 0 else 79000) + (if b0056 then 0 else 79000) + (if b0057 then 0 else 79000) + (if b0060 then 0 else 79000) + (if b0062 then 0 else 79000) + (if b0063 then 0 else 79000) + (if b0064 then 0 else 79000) + (if b0068 then 0 else 79000) + (if b0069 then 0 else 79000) + (if b0070 then 0 else 79000) + (if b0072 then 0 else 79000) + (if b0128 then 0 else 79000) + (if b0129 then 0 else 79000) + (if b0130 then 0 else 79000) + (if b0131 then 0 else 79000) + (if b0132 then 0 else 79000) + (if b0133 then 0 else 79000) + (if b0135 then 0 else 79000) + (if b0171 then 0 else 79000) + (if b0172 then 0 else 79000) + (if b0173 then 0 else 79000) + (if b0174 then 0 else 79000) + (if b0176 then 0 else 79000) + (if b0177 then 0 else 79000) + (if b0178 then 0 else 79000) + (if b0179 then 0 else 79000) + (if b0180 then 0 else 79000) + (if b0181 then 0 else 79000) + (if b0182 then 0 else 79000) + (if b0183 then 0 else 79000) + (if b0184 then 0 else 79000) + (if b0185 then 0 else 79000) + (if b0186 then 0 else 79000) + (if b0187 then 0 else 79000) + (if b0188 then 0 else 79000) + (if b0189 then 0 else 79000) + (if b0191 then 0 else 79000) + (if b0192 then 0 else 79000) + (if b0193 then 0 else 79000) + (if b0194 then 0 else 79000) + (if b0195 then 0 else 79000) + (if b0198 then 0 else 79000) < 441
}
Prover Time taken = 27.167396
Added Horn clause: 64 && 35 && 0 && 0 && 0 && 36 && 46 && 61 && 48 => 65
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/linear-algebra/solvers/lu/kernel2.bpl.ice2.bpl
Total learner time was 00:00:00.1251560
Verifying $kernel2: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool) : bool
{
  0 + (if b0000 then 0 else 79000) + (if b0001 then 0 else 79000) + (if b0003 then 0 else 79000) + (if b0005 then 0 else 79000) + (if b0007 then 0 else 79000) + (if b0008 then 0 else 79000) + (if b0009 then 0 else 79000) + (if b0010 then 0 else 79000) + (if b0012 then 0 else 79000) + (if b0014 then 0 else 79000) + (if b0016 then 0 else 79000) + (if b0017 then 0 else 79000) + (if b0018 then 0 else 79000) + (if b0019 then 0 else 79000) + (if b0022 then 0 else 79000) + (if b0023 then 0 else 79000) + (if b0024 then 0 else 79000) + (if b0027 then 0 else 79000) + (if b0029 then 0 else 79000) + (if b0030 then 0 else 79000) + (if b0031 then 0 else 79000) + (if b0032 then 0 else 79000) + (if b0034 then 0 else 79000) + (if b0038 then 0 else 79000) + (if b0039 then 0 else 79000) + (if b0042 then 0 else 79000) + (if b0044 then 0 else 79000) + (if b0045 then 0 else 79000) + (if b0046 then 0 else 79000) + (if b0050 then 0 else 79000) + (if b0052 then 0 else 79000) + (if b0053 then 0 else 79000) + (if b0054 then 0 else 79000) + (if b0055 then 0 else 79000) + (if b0056 then 0 else 79000) + (if b0057 then 0 else 79000) + (if b0060 then 0 else 79000) + (if b0062 then 0 else 79000) + (if b0063 then 0 else 79000) + (if b0064 then 0 else 79000) + (if b0068 then 0 else 79000) + (if b0069 then 0 else 79000) + (if b0070 then 0 else 79000) + (if b0072 then 0 else 79000) + (if b0128 then 0 else 79000) + (if b0129 then 0 else 79000) + (if b0131 then 0 else 79000) + (if b0132 then 0 else 79000) + (if b0133 then 0 else 79000) + (if b0135 then 0 else 79000) + (if b0171 then 0 else 79000) + (if b0172 then 0 else 79000) + (if b0173 then 0 else 79000) + (if b0174 then 0 else 79000) + (if b0176 then 0 else 79000) + (if b0177 then 0 else 79000) + (if b0178 then 0 else 79000) + (if b0179 then 0 else 79000) + (if b0180 then 0 else 79000) + (if b0181 then 0 else 79000) + (if b0182 then 0 else 79000) + (if b0183 then 0 else 79000) + (if b0184 then 0 else 79000) + (if b0185 then 0 else 79000) + (if b0186 then 0 else 79000) + (if b0187 then 0 else 79000) + (if b0188 then 0 else 79000) + (if b0189 then 0 else 79000) + (if b0191 then 0 else 79000) + (if b0192 then 0 else 79000) + (if b0193 then 0 else 79000) + (if b0194 then 0 else 79000) + (if b0195 then 0 else 79000) + (if b0198 then 0 else 79000) < 441
}
Prover Time taken = 20.153134
Added Horn clause: 66 => 67
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/linear-algebra/solvers/lu/kernel2.bpl.ice2.bpl
Total learner time was 00:00:00.1261230
Verifying $kernel2: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool) : bool
{
  0 + (if b0000 then 0 else 79000) + (if b0001 then 0 else 79000) + (if b0003 then 0 else 79000) + (if b0005 then 0 else 79000) + (if b0007 then 0 else 79000) + (if b0008 then 0 else 79000) + (if b0009 then 0 else 79000) + (if b0010 then 0 else 79000) + (if b0012 then 0 else 79000) + (if b0014 then 0 else 79000) + (if b0016 then 0 else 79000) + (if b0017 then 0 else 79000) + (if b0018 then 0 else 79000) + (if b0022 then 0 else 79000) + (if b0023 then 0 else 79000) + (if b0024 then 0 else 79000) + (if b0027 then 0 else 79000) + (if b0029 then 0 else 79000) + (if b0030 then 0 else 79000) + (if b0031 then 0 else 79000) + (if b0032 then 0 else 79000) + (if b0034 then 0 else 79000) + (if b0038 then 0 else 79000) + (if b0039 then 0 else 79000) + (if b0042 then 0 else 79000) + (if b0044 then 0 else 79000) + (if b0045 then 0 else 79000) + (if b0046 then 0 else 79000) + (if b0050 then 0 else 79000) + (if b0052 then 0 else 79000) + (if b0053 then 0 else 79000) + (if b0054 then 0 else 79000) + (if b0055 then 0 else 79000) + (if b0056 then 0 else 79000) + (if b0057 then 0 else 79000) + (if b0060 then 0 else 79000) + (if b0062 then 0 else 79000) + (if b0063 then 0 else 79000) + (if b0064 then 0 else 79000) + (if b0068 then 0 else 79000) + (if b0069 then 0 else 79000) + (if b0070 then 0 else 79000) + (if b0072 then 0 else 79000) + (if b0128 then 0 else 79000) + (if b0129 then 0 else 79000) + (if b0131 then 0 else 79000) + (if b0132 then 0 else 79000) + (if b0133 then 0 else 79000) + (if b0135 then 0 else 79000) + (if b0171 then 0 else 79000) + (if b0172 then 0 else 79000) + (if b0173 then 0 else 79000) + (if b0174 then 0 else 79000) + (if b0176 then 0 else 79000) + (if b0177 then 0 else 79000) + (if b0178 then 0 else 79000) + (if b0179 then 0 else 79000) + (if b0180 then 0 else 79000) + (if b0181 then 0 else 79000) + (if b0182 then 0 else 79000) + (if b0183 then 0 else 79000) + (if b0184 then 0 else 79000) + (if b0185 then 0 else 79000) + (if b0186 then 0 else 79000) + (if b0187 then 0 else 79000) + (if b0188 then 0 else 79000) + (if b0189 then 0 else 79000) + (if b0191 then 0 else 79000) + (if b0192 then 0 else 79000) + (if b0193 then 0 else 79000) + (if b0194 then 0 else 79000) + (if b0195 then 0 else 79000) + (if b0198 then 0 else 79000) < 441
}
Prover Time taken = 12.802113
Added Horn clause: 66 && 35 && 67 && 0 && 0 => 68
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/linear-algebra/solvers/lu/kernel2.bpl.ice2.bpl
Total learner time was 00:00:00.1303920
Verifying $kernel2: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool) : bool
{
  0 + (if b0000 then 0 else 79000) + (if b0001 then 0 else 79000) + (if b0003 then 0 else 79000) + (if b0005 then 0 else 79000) + (if b0007 then 0 else 79000) + (if b0008 then 0 else 79000) + (if b0009 then 0 else 79000) + (if b0010 then 0 else 79000) + (if b0012 then 0 else 79000) + (if b0014 then 0 else 79000) + (if b0016 then 0 else 79000) + (if b0017 then 0 else 79000) + (if b0018 then 0 else 79000) + (if b0022 then 0 else 79000) + (if b0023 then 0 else 79000) + (if b0024 then 0 else 79000) + (if b0027 then 0 else 79000) + (if b0029 then 0 else 79000) + (if b0030 then 0 else 79000) + (if b0031 then 0 else 79000) + (if b0032 then 0 else 79000) + (if b0034 then 0 else 79000) + (if b0038 then 0 else 79000) + (if b0039 then 0 else 79000) + (if b0042 then 0 else 79000) + (if b0044 then 0 else 79000) + (if b0045 then 0 else 79000) + (if b0046 then 0 else 79000) + (if b0053 then 0 else 79000) + (if b0054 then 0 else 79000) + (if b0055 then 0 else 79000) + (if b0056 then 0 else 79000) + (if b0057 then 0 else 79000) + (if b0060 then 0 else 79000) + (if b0062 then 0 else 79000) + (if b0063 then 0 else 79000) + (if b0064 then 0 else 79000) + (if b0068 then 0 else 79000) + (if b0069 then 0 else 79000) + (if b0070 then 0 else 79000) + (if b0072 then 0 else 79000) + (if b0128 then 0 else 79000) + (if b0129 then 0 else 79000) + (if b0131 then 0 else 79000) + (if b0132 then 0 else 79000) + (if b0133 then 0 else 79000) + (if b0135 then 0 else 79000) + (if b0171 then 0 else 79000) + (if b0172 then 0 else 79000) + (if b0173 then 0 else 79000) + (if b0174 then 0 else 79000) + (if b0176 then 0 else 79000) + (if b0177 then 0 else 79000) + (if b0178 then 0 else 79000) + (if b0179 then 0 else 79000) + (if b0180 then 0 else 79000) + (if b0181 then 0 else 79000) + (if b0182 then 0 else 79000) + (if b0183 then 0 else 79000) + (if b0184 then 0 else 79000) + (if b0185 then 0 else 79000) + (if b0186 then 0 else 79000) + (if b0187 then 0 else 79000) + (if b0188 then 0 else 79000) + (if b0189 then 0 else 79000) + (if b0191 then 0 else 79000) + (if b0192 then 0 else 79000) + (if b0193 then 0 else 79000) + (if b0194 then 0 else 79000) + (if b0195 then 0 else 79000) + (if b0198 then 0 else 79000) < 441
}
Prover Time taken = 21.542571
Added Horn clause: 66 && 35 && 67 && 0 && 0 && 36 && 68 => 69
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/linear-algebra/solvers/lu/kernel2.bpl.ice2.bpl
Total learner time was 00:00:00.1244420
Verifying $kernel2: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool) : bool
{
  0 + (if b0000 then 0 else 79000) + (if b0001 then 0 else 79000) + (if b0003 then 0 else 79000) + (if b0005 then 0 else 79000) + (if b0007 then 0 else 79000) + (if b0008 then 0 else 79000) + (if b0009 then 0 else 79000) + (if b0010 then 0 else 79000) + (if b0012 then 0 else 79000) + (if b0014 then 0 else 79000) + (if b0016 then 0 else 79000) + (if b0017 then 0 else 79000) + (if b0018 then 0 else 79000) + (if b0022 then 0 else 79000) + (if b0023 then 0 else 79000) + (if b0024 then 0 else 79000) + (if b0027 then 0 else 79000) + (if b0029 then 0 else 79000) + (if b0030 then 0 else 79000) + (if b0031 then 0 else 79000) + (if b0038 then 0 else 79000) + (if b0039 then 0 else 79000) + (if b0042 then 0 else 79000) + (if b0044 then 0 else 79000) + (if b0045 then 0 else 79000) + (if b0046 then 0 else 79000) + (if b0053 then 0 else 79000) + (if b0054 then 0 else 79000) + (if b0055 then 0 else 79000) + (if b0056 then 0 else 79000) + (if b0057 then 0 else 79000) + (if b0060 then 0 else 79000) + (if b0062 then 0 else 79000) + (if b0063 then 0 else 79000) + (if b0064 then 0 else 79000) + (if b0068 then 0 else 79000) + (if b0069 then 0 else 79000) + (if b0070 then 0 else 79000) + (if b0072 then 0 else 79000) + (if b0128 then 0 else 79000) + (if b0129 then 0 else 79000) + (if b0131 then 0 else 79000) + (if b0132 then 0 else 79000) + (if b0133 then 0 else 79000) + (if b0135 then 0 else 79000) + (if b0171 then 0 else 79000) + (if b0172 then 0 else 79000) + (if b0173 then 0 else 79000) + (if b0174 then 0 else 79000) + (if b0176 then 0 else 79000) + (if b0177 then 0 else 79000) + (if b0178 then 0 else 79000) + (if b0179 then 0 else 79000) + (if b0180 then 0 else 79000) + (if b0181 then 0 else 79000) + (if b0182 then 0 else 79000) + (if b0183 then 0 else 79000) + (if b0184 then 0 else 79000) + (if b0185 then 0 else 79000) + (if b0186 then 0 else 79000) + (if b0187 then 0 else 79000) + (if b0188 then 0 else 79000) + (if b0189 then 0 else 79000) + (if b0191 then 0 else 79000) + (if b0192 then 0 else 79000) + (if b0193 then 0 else 79000) + (if b0194 then 0 else 79000) + (if b0195 then 0 else 79000) + (if b0198 then 0 else 79000) < 441
}
Command exited with non-zero status 124
10.11user 6.99system 19:58.62elapsed 1%CPU (0avgtext+0avgdata 81284maxresident)k
352inputs+3328outputs (1major+225950minor)pagefaults 0swaps
FILE:polybench/linear-algebra/solvers/lu/kernel2.bpl.ice2.bpl
#################
Wed May 12 05:10:50 UTC 2021
KEY=awinnow
OUTPUT=/root/Docker/winnow_gpu_timeout.txt
[TRACE] Using prover: /root/Docker/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/root/Docker/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a winnow
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/errorLimit:1
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/medley/nussinov/kernel2.bpl.ice2.bpl
--------------------
Parsing /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/medley/nussinov/kernel2.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /root/Docker/z3/bin/z3
#parameters: 165
Generating VC of $kernel2
Verifying $kernel2: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.373847
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/medley/nussinov/kernel2.bpl.ice2.bpl
Total learner time was 00:00:00.1187720
Verifying $kernel2: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool) : bool
{
  0 + (if b0000 then 0 else 66000) + (if b0001 then 0 else 66000) + (if b0002 then 0 else 66000) + (if b0003 then 0 else 66000) + (if b0004 then 0 else 66000) + (if b0005 then 0 else 66000) + (if b0006 then 0 else 66000) + (if b0007 then 0 else 66000) + (if b0008 then 0 else 66000) + (if b0009 then 0 else 66000) + (if b0010 then 0 else 66000) + (if b0011 then 0 else 66000) + (if b0012 then 0 else 66000) + (if b0013 then 0 else 66000) + (if b0014 then 0 else 66000) + (if b0015 then 0 else 66000) + (if b0016 then 0 else 66000) + (if b0017 then 0 else 66000) + (if b0018 then 0 else 66000) + (if b0019 then 0 else 66000) + (if b0020 then 0 else 66000) + (if b0021 then 0 else 66000) + (if b0022 then 0 else 66000) + (if b0023 then 0 else 66000) + (if b0024 then 0 else 66000) + (if b0025 then 0 else 66000) + (if b0026 then 0 else 66000) + (if b0027 then 0 else 66000) + (if b0028 then 0 else 66000) + (if b0029 then 0 else 66000) + (if b0030 then 0 else 66000) + (if b0031 then 0 else 66000) + (if b0032 then 0 else 66000) + (if b0033 then 0 else 66000) + (if b0034 then 0 else 66000) + (if b0035 then 0 else 66000) + (if b0036 then 0 else 66000) + (if b0037 then 0 else 66000) + (if b0038 then 0 else 66000) + (if b0039 then 0 else 66000) + (if b0040 then 0 else 66000) + (if b0041 then 0 else 66000) + (if b0042 then 0 else 66000) + (if b0043 then 0 else 66000) + (if b0044 then 0 else 66000) + (if b0045 then 0 else 66000) + (if b0046 then 0 else 66000) + (if b0047 then 0 else 66000) + (if b0048 then 0 else 66000) + (if b0049 then 0 else 66000) + (if b0050 then 0 else 66000) + (if b0051 then 0 else 66000) + (if b0052 then 0 else 66000) + (if b0053 then 0 else 66000) + (if b0054 then 0 else 66000) + (if b0055 then 0 else 66000) + (if b0056 then 0 else 66000) + (if b0057 then 0 else 66000) + (if b0058 then 0 else 66000) + (if b0059 then 0 else 66000) + (if b0060 then 0 else 66000) + (if b0061 then 0 else 66000) + (if b0062 then 0 else 66000) + (if b0063 then 0 else 66000) + (if b0064 then 0 else 66000) + (if b0065 then 0 else 66000) + (if b0066 then 0 else 66000) + (if b0067 then 0 else 66000) + (if b0068 then 0 else 66000) + (if b0069 then 0 else 66000) + (if b0070 then 0 else 66000) + (if b0071 then 0 else 66000) + (if b0072 then 0 else 66000) + (if b0073 then 0 else 66000) + (if b0074 then 0 else 66000) + (if b0075 then 0 else 66000) + (if b0076 then 0 else 66000) + (if b0077 then 0 else 66000) + (if b0078 then 0 else 66000) + (if b0079 then 0 else 66000) + (if b0080 then 0 else 66000) + (if b0081 then 0 else 66000) + (if b0082 then 0 else 66000) + (if b0083 then 0 else 66000) + (if b0084 then 0 else 66000) + (if b0085 then 0 else 66000) + (if b0086 then 0 else 66000) + (if b0087 then 0 else 66000) + (if b0088 then 0 else 66000) + (if b0089 then 0 else 66000) + (if b0090 then 0 else 66000) + (if b0091 then 0 else 66000) + (if b0092 then 0 else 66000) + (if b0093 then 0 else 66000) + (if b0094 then 0 else 66000) + (if b0095 then 0 else 66000) + (if b0096 then 0 else 66000) + (if b0097 then 0 else 66000) + (if b0098 then 0 else 66000) + (if b0099 then 0 else 66000) + (if b0100 then 0 else 66000) + (if b0101 then 0 else 66000) + (if b0102 then 0 else 66000) + (if b0103 then 0 else 66000) + (if b0104 then 0 else 66000) + (if b0105 then 0 else 66000) + (if b0106 then 0 else 66000) + (if b0107 then 0 else 66000) + (if b0108 then 0 else 66000) + (if b0109 then 0 else 66000) + (if b0110 then 0 else 66000) + (if b0111 then 0 else 66000) + (if b0112 then 0 else 66000) + (if b0113 then 0 else 66000) + (if b0114 then 0 else 66000) + (if b0115 then 0 else 66000) + (if b0116 then 0 else 66000) + (if b0117 then 0 else 66000) + (if b0118 then 0 else 66000) + (if b0119 then 0 else 66000) + (if b0120 then 0 else 66000) + (if b0121 then 0 else 66000) + (if b0122 then 0 else 66000) + (if b0123 then 0 else 66000) + (if b0124 then 0 else 66000) + (if b0125 then 0 else 66000) + (if b0126 then 0 else 66000) + (if b0127 then 0 else 66000) + (if b0128 then 0 else 66000) + (if b0129 then 0 else 66000) + (if b0130 then 0 else 66000) + (if b0131 then 0 else 66000) + (if b0132 then 0 else 66000) + (if b0133 then 0 else 66000) + (if b0134 then 0 else 66000) + (if b0135 then 0 else 66000) + (if b0136 then 0 else 66000) + (if b0137 then 0 else 66000) + (if b0138 then 0 else 66000) + (if b0139 then 0 else 66000) + (if b0140 then 0 else 66000) + (if b0141 then 0 else 66000) + (if b0142 then 0 else 66000) + (if b0143 then 0 else 66000) + (if b0144 then 0 else 66000) + (if b0145 then 0 else 66000) + (if b0146 then 0 else 66000) + (if b0147 then 0 else 66000) + (if b0148 then 0 else 66000) + (if b0149 then 0 else 66000) + (if b0150 then 0 else 66000) + (if b0151 then 0 else 66000) + (if b0152 then 0 else 66000) + (if b0153 then 0 else 66000) + (if b0154 then 0 else 66000) + (if b0155 then 0 else 66000) + (if b0156 then 0 else 66000) + (if b0157 then 0 else 66000) + (if b0158 then 0 else 66000) + (if b0159 then 0 else 66000) + (if b0160 then 0 else 66000) + (if b0161 then 0 else 66000) + (if b0162 then 0 else 66000) + (if b0163 then 0 else 66000) + (if b0164 then 0 else 66000) < 441
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,1,1,0,1,0,0,0,0,1,0,0,0,0,0,1,1,0,1,0,0,1,0,0,1,0,0,0,1,1,1,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 5.363378
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/medley/nussinov/kernel2.bpl.ice2.bpl
Total learner time was 00:00:00.1259040
Verifying $kernel2: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool) : bool
{
  0 + (if b0000 then 0 else 66000) + (if b0001 then 0 else 66000) + (if b0002 then 0 else 66000) + (if b0003 then 0 else 66000) + (if b0004 then 0 else 66000) + (if b0005 then 0 else 66000) + (if b0006 then 0 else 66000) + (if b0007 then 0 else 66000) + (if b0008 then 0 else 66000) + (if b0009 then 0 else 66000) + (if b0010 then 0 else 66000) + (if b0011 then 0 else 66000) + (if b0012 then 0 else 66000) + (if b0013 then 0 else 66000) + (if b0014 then 0 else 66000) + (if b0015 then 0 else 66000) + (if b0016 then 0 else 66000) + (if b0017 then 0 else 66000) + (if b0018 then 0 else 66000) + (if b0019 then 0 else 66000) + (if b0020 then 0 else 66000) + (if b0021 then 0 else 66000) + (if b0022 then 0 else 66000) + (if b0023 then 0 else 66000) + (if b0024 then 0 else 66000) + (if b0025 then 0 else 66000) + (if b0026 then 0 else 66000) + (if b0027 then 0 else 66000) + (if b0028 then 0 else 66000) + (if b0029 then 0 else 66000) + (if b0030 then 0 else 66000) + (if b0031 then 0 else 66000) + (if b0032 then 0 else 66000) + (if b0033 then 0 else 66000) + (if b0034 then 0 else 66000) + (if b0035 then 0 else 66000) + (if b0036 then 0 else 66000) + (if b0037 then 0 else 66000) + (if b0038 then 0 else 66000) + (if b0039 then 0 else 66000) + (if b0040 then 0 else 66000) + (if b0041 then 0 else 66000) + (if b0042 then 0 else 66000) + (if b0043 then 0 else 66000) + (if b0044 then 0 else 66000) + (if b0045 then 0 else 66000) + (if b0046 then 0 else 66000) + (if b0047 then 0 else 66000) + (if b0048 then 0 else 66000) + (if b0049 then 0 else 66000) + (if b0050 then 0 else 66000) + (if b0051 then 0 else 66000) + (if b0052 then 0 else 66000) + (if b0053 then 0 else 66000) + (if b0054 then 0 else 66000) + (if b0055 then 0 else 66000) + (if b0056 then 0 else 66000) + (if b0057 then 0 else 66000) + (if b0062 then 0 else 66000) + (if b0063 then 0 else 66000) + (if b0065 then 0 else 66000) + (if b0070 then 0 else 66000) + (if b0076 then 0 else 66000) + (if b0077 then 0 else 66000) + (if b0079 then 0 else 66000) + (if b0082 then 0 else 66000) + (if b0085 then 0 else 66000) + (if b0089 then 0 else 66000) + (if b0090 then 0 else 66000) + (if b0091 then 0 else 66000) + (if b0097 then 0 else 66000) + (if b0102 then 0 else 66000) + (if b0105 then 0 else 66000) + (if b0106 then 0 else 66000) + (if b0107 then 0 else 66000) + (if b0108 then 0 else 66000) + (if b0109 then 0 else 66000) + (if b0110 then 0 else 66000) + (if b0111 then 0 else 66000) + (if b0112 then 0 else 66000) + (if b0113 then 0 else 66000) + (if b0114 then 0 else 66000) + (if b0115 then 0 else 66000) + (if b0116 then 0 else 66000) + (if b0117 then 0 else 66000) + (if b0118 then 0 else 66000) + (if b0119 then 0 else 66000) + (if b0120 then 0 else 66000) + (if b0121 then 0 else 66000) + (if b0122 then 0 else 66000) + (if b0123 then 0 else 66000) + (if b0124 then 0 else 66000) + (if b0125 then 0 else 66000) + (if b0126 then 0 else 66000) + (if b0127 then 0 else 66000) + (if b0128 then 0 else 66000) + (if b0129 then 0 else 66000) + (if b0130 then 0 else 66000) + (if b0131 then 0 else 66000) + (if b0132 then 0 else 66000) + (if b0133 then 0 else 66000) + (if b0134 then 0 else 66000) + (if b0135 then 0 else 66000) + (if b0136 then 0 else 66000) + (if b0137 then 0 else 66000) + (if b0138 then 0 else 66000) + (if b0139 then 0 else 66000) + (if b0140 then 0 else 66000) + (if b0141 then 0 else 66000) + (if b0142 then 0 else 66000) + (if b0143 then 0 else 66000) + (if b0144 then 0 else 66000) + (if b0145 then 0 else 66000) + (if b0146 then 0 else 66000) + (if b0147 then 0 else 66000) + (if b0148 then 0 else 66000) + (if b0149 then 0 else 66000) + (if b0150 then 0 else 66000) + (if b0151 then 0 else 66000) + (if b0152 then 0 else 66000) + (if b0153 then 0 else 66000) + (if b0154 then 0 else 66000) + (if b0155 then 0 else 66000) + (if b0156 then 0 else 66000) + (if b0157 then 0 else 66000) + (if b0158 then 0 else 66000) + (if b0159 then 0 else 66000) + (if b0160 then 0 else 66000) + (if b0161 then 0 else 66000) + (if b0162 then 0 else 66000) + (if b0163 then 0 else 66000) + (if b0164 then 0 else 66000) < 441
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,0,1,1,1,0,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 4.339346
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/medley/nussinov/kernel2.bpl.ice2.bpl
Total learner time was 00:00:00.1219550
Verifying $kernel2: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool) : bool
{
  0 + (if b0000 then 0 else 66000) + (if b0001 then 0 else 66000) + (if b0002 then 0 else 66000) + (if b0003 then 0 else 66000) + (if b0004 then 0 else 66000) + (if b0005 then 0 else 66000) + (if b0006 then 0 else 66000) + (if b0007 then 0 else 66000) + (if b0008 then 0 else 66000) + (if b0009 then 0 else 66000) + (if b0010 then 0 else 66000) + (if b0011 then 0 else 66000) + (if b0012 then 0 else 66000) + (if b0013 then 0 else 66000) + (if b0014 then 0 else 66000) + (if b0015 then 0 else 66000) + (if b0016 then 0 else 66000) + (if b0017 then 0 else 66000) + (if b0018 then 0 else 66000) + (if b0019 then 0 else 66000) + (if b0020 then 0 else 66000) + (if b0021 then 0 else 66000) + (if b0022 then 0 else 66000) + (if b0023 then 0 else 66000) + (if b0024 then 0 else 66000) + (if b0025 then 0 else 66000) + (if b0026 then 0 else 66000) + (if b0027 then 0 else 66000) + (if b0028 then 0 else 66000) + (if b0029 then 0 else 66000) + (if b0030 then 0 else 66000) + (if b0031 then 0 else 66000) + (if b0032 then 0 else 66000) + (if b0033 then 0 else 66000) + (if b0034 then 0 else 66000) + (if b0035 then 0 else 66000) + (if b0036 then 0 else 66000) + (if b0037 then 0 else 66000) + (if b0038 then 0 else 66000) + (if b0039 then 0 else 66000) + (if b0040 then 0 else 66000) + (if b0041 then 0 else 66000) + (if b0042 then 0 else 66000) + (if b0043 then 0 else 66000) + (if b0044 then 0 else 66000) + (if b0045 then 0 else 66000) + (if b0046 then 0 else 66000) + (if b0047 then 0 else 66000) + (if b0048 then 0 else 66000) + (if b0049 then 0 else 66000) + (if b0050 then 0 else 66000) + (if b0051 then 0 else 66000) + (if b0052 then 0 else 66000) + (if b0053 then 0 else 66000) + (if b0054 then 0 else 66000) + (if b0055 then 0 else 66000) + (if b0056 then 0 else 66000) + (if b0062 then 0 else 66000) + (if b0063 then 0 else 66000) + (if b0065 then 0 else 66000) + (if b0070 then 0 else 66000) + (if b0076 then 0 else 66000) + (if b0077 then 0 else 66000) + (if b0079 then 0 else 66000) + (if b0090 then 0 else 66000) + (if b0091 then 0 else 66000) + (if b0102 then 0 else 66000) + (if b0105 then 0 else 66000) + (if b0106 then 0 else 66000) + (if b0107 then 0 else 66000) + (if b0108 then 0 else 66000) + (if b0109 then 0 else 66000) + (if b0110 then 0 else 66000) + (if b0111 then 0 else 66000) + (if b0112 then 0 else 66000) + (if b0113 then 0 else 66000) + (if b0114 then 0 else 66000) + (if b0115 then 0 else 66000) + (if b0116 then 0 else 66000) + (if b0117 then 0 else 66000) + (if b0118 then 0 else 66000) + (if b0119 then 0 else 66000) + (if b0120 then 0 else 66000) + (if b0121 then 0 else 66000) + (if b0122 then 0 else 66000) + (if b0123 then 0 else 66000) + (if b0124 then 0 else 66000) + (if b0125 then 0 else 66000) + (if b0126 then 0 else 66000) + (if b0127 then 0 else 66000) + (if b0128 then 0 else 66000) + (if b0129 then 0 else 66000) + (if b0130 then 0 else 66000) + (if b0131 then 0 else 66000) + (if b0132 then 0 else 66000) + (if b0133 then 0 else 66000) + (if b0134 then 0 else 66000) + (if b0135 then 0 else 66000) + (if b0136 then 0 else 66000) + (if b0137 then 0 else 66000) + (if b0138 then 0 else 66000) + (if b0139 then 0 else 66000) + (if b0140 then 0 else 66000) + (if b0141 then 0 else 66000) + (if b0142 then 0 else 66000) + (if b0143 then 0 else 66000) + (if b0144 then 0 else 66000) + (if b0145 then 0 else 66000) + (if b0146 then 0 else 66000) + (if b0147 then 0 else 66000) + (if b0148 then 0 else 66000) + (if b0149 then 0 else 66000) + (if b0150 then 0 else 66000) + (if b0151 then 0 else 66000) + (if b0152 then 0 else 66000) + (if b0153 then 0 else 66000) + (if b0154 then 0 else 66000) + (if b0155 then 0 else 66000) + (if b0156 then 0 else 66000) + (if b0157 then 0 else 66000) + (if b0158 then 0 else 66000) + (if b0159 then 0 else 66000) + (if b0160 then 0 else 66000) + (if b0161 then 0 else 66000) + (if b0162 then 0 else 66000) + (if b0163 then 0 else 66000) + (if b0164 then 0 else 66000) < 441
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,0,1,1,1,1,1,0,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 5.93962
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/medley/nussinov/kernel2.bpl.ice2.bpl
Total learner time was 00:00:00.1249910
Verifying $kernel2: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool) : bool
{
  0 + (if b0000 then 0 else 66000) + (if b0001 then 0 else 66000) + (if b0002 then 0 else 66000) + (if b0003 then 0 else 66000) + (if b0004 then 0 else 66000) + (if b0005 then 0 else 66000) + (if b0006 then 0 else 66000) + (if b0007 then 0 else 66000) + (if b0008 then 0 else 66000) + (if b0009 then 0 else 66000) + (if b0010 then 0 else 66000) + (if b0011 then 0 else 66000) + (if b0012 then 0 else 66000) + (if b0013 then 0 else 66000) + (if b0014 then 0 else 66000) + (if b0015 then 0 else 66000) + (if b0016 then 0 else 66000) + (if b0017 then 0 else 66000) + (if b0018 then 0 else 66000) + (if b0019 then 0 else 66000) + (if b0020 then 0 else 66000) + (if b0021 then 0 else 66000) + (if b0022 then 0 else 66000) + (if b0023 then 0 else 66000) + (if b0024 then 0 else 66000) + (if b0025 then 0 else 66000) + (if b0026 then 0 else 66000) + (if b0027 then 0 else 66000) + (if b0028 then 0 else 66000) + (if b0029 then 0 else 66000) + (if b0030 then 0 else 66000) + (if b0031 then 0 else 66000) + (if b0032 then 0 else 66000) + (if b0033 then 0 else 66000) + (if b0034 then 0 else 66000) + (if b0035 then 0 else 66000) + (if b0036 then 0 else 66000) + (if b0037 then 0 else 66000) + (if b0038 then 0 else 66000) + (if b0039 then 0 else 66000) + (if b0040 then 0 else 66000) + (if b0041 then 0 else 66000) + (if b0042 then 0 else 66000) + (if b0043 then 0 else 66000) + (if b0044 then 0 else 66000) + (if b0045 then 0 else 66000) + (if b0046 then 0 else 66000) + (if b0047 then 0 else 66000) + (if b0048 then 0 else 66000) + (if b0049 then 0 else 66000) + (if b0050 then 0 else 66000) + (if b0051 then 0 else 66000) + (if b0052 then 0 else 66000) + (if b0053 then 0 else 66000) + (if b0054 then 0 else 66000) + (if b0055 then 0 else 66000) + (if b0056 then 0 else 66000) + (if b0062 then 0 else 66000) + (if b0065 then 0 else 66000) + (if b0090 then 0 else 66000) + (if b0091 then 0 else 66000) + (if b0105 then 0 else 66000) + (if b0106 then 0 else 66000) + (if b0107 then 0 else 66000) + (if b0108 then 0 else 66000) + (if b0109 then 0 else 66000) + (if b0110 then 0 else 66000) + (if b0111 then 0 else 66000) + (if b0112 then 0 else 66000) + (if b0113 then 0 else 66000) + (if b0114 then 0 else 66000) + (if b0115 then 0 else 66000) + (if b0116 then 0 else 66000) + (if b0117 then 0 else 66000) + (if b0118 then 0 else 66000) + (if b0119 then 0 else 66000) + (if b0120 then 0 else 66000) + (if b0121 then 0 else 66000) + (if b0122 then 0 else 66000) + (if b0123 then 0 else 66000) + (if b0124 then 0 else 66000) + (if b0125 then 0 else 66000) + (if b0126 then 0 else 66000) + (if b0127 then 0 else 66000) + (if b0128 then 0 else 66000) + (if b0129 then 0 else 66000) + (if b0130 then 0 else 66000) + (if b0131 then 0 else 66000) + (if b0132 then 0 else 66000) + (if b0133 then 0 else 66000) + (if b0134 then 0 else 66000) + (if b0135 then 0 else 66000) + (if b0136 then 0 else 66000) + (if b0137 then 0 else 66000) + (if b0138 then 0 else 66000) + (if b0139 then 0 else 66000) + (if b0140 then 0 else 66000) + (if b0141 then 0 else 66000) + (if b0142 then 0 else 66000) + (if b0143 then 0 else 66000) + (if b0144 then 0 else 66000) + (if b0145 then 0 else 66000) + (if b0146 then 0 else 66000) + (if b0147 then 0 else 66000) + (if b0148 then 0 else 66000) + (if b0149 then 0 else 66000) + (if b0150 then 0 else 66000) + (if b0151 then 0 else 66000) + (if b0152 then 0 else 66000) + (if b0153 then 0 else 66000) + (if b0154 then 0 else 66000) + (if b0155 then 0 else 66000) + (if b0156 then 0 else 66000) + (if b0157 then 0 else 66000) + (if b0158 then 0 else 66000) + (if b0159 then 0 else 66000) + (if b0160 then 0 else 66000) + (if b0161 then 0 else 66000) + (if b0162 then 0 else 66000) + (if b0163 then 0 else 66000) + (if b0164 then 0 else 66000) < 441
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 7.001031
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/medley/nussinov/kernel2.bpl.ice2.bpl
Total learner time was 00:00:00.1204180
Verifying $kernel2: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool) : bool
{
  0 + (if b0000 then 0 else 66000) + (if b0001 then 0 else 66000) + (if b0002 then 0 else 66000) + (if b0003 then 0 else 66000) + (if b0004 then 0 else 66000) + (if b0005 then 0 else 66000) + (if b0006 then 0 else 66000) + (if b0007 then 0 else 66000) + (if b0008 then 0 else 66000) + (if b0009 then 0 else 66000) + (if b0010 then 0 else 66000) + (if b0011 then 0 else 66000) + (if b0012 then 0 else 66000) + (if b0013 then 0 else 66000) + (if b0014 then 0 else 66000) + (if b0015 then 0 else 66000) + (if b0016 then 0 else 66000) + (if b0017 then 0 else 66000) + (if b0018 then 0 else 66000) + (if b0019 then 0 else 66000) + (if b0020 then 0 else 66000) + (if b0021 then 0 else 66000) + (if b0022 then 0 else 66000) + (if b0023 then 0 else 66000) + (if b0024 then 0 else 66000) + (if b0025 then 0 else 66000) + (if b0026 then 0 else 66000) + (if b0027 then 0 else 66000) + (if b0028 then 0 else 66000) + (if b0029 then 0 else 66000) + (if b0030 then 0 else 66000) + (if b0031 then 0 else 66000) + (if b0032 then 0 else 66000) + (if b0033 then 0 else 66000) + (if b0034 then 0 else 66000) + (if b0035 then 0 else 66000) + (if b0036 then 0 else 66000) + (if b0037 then 0 else 66000) + (if b0038 then 0 else 66000) + (if b0039 then 0 else 66000) + (if b0040 then 0 else 66000) + (if b0041 then 0 else 66000) + (if b0042 then 0 else 66000) + (if b0043 then 0 else 66000) + (if b0044 then 0 else 66000) + (if b0045 then 0 else 66000) + (if b0046 then 0 else 66000) + (if b0047 then 0 else 66000) + (if b0048 then 0 else 66000) + (if b0049 then 0 else 66000) + (if b0050 then 0 else 66000) + (if b0051 then 0 else 66000) + (if b0052 then 0 else 66000) + (if b0053 then 0 else 66000) + (if b0054 then 0 else 66000) + (if b0055 then 0 else 66000) + (if b0056 then 0 else 66000) + (if b0065 then 0 else 66000) + (if b0105 then 0 else 66000) + (if b0106 then 0 else 66000) + (if b0107 then 0 else 66000) + (if b0108 then 0 else 66000) + (if b0109 then 0 else 66000) + (if b0110 then 0 else 66000) + (if b0111 then 0 else 66000) + (if b0112 then 0 else 66000) + (if b0113 then 0 else 66000) + (if b0114 then 0 else 66000) + (if b0115 then 0 else 66000) + (if b0116 then 0 else 66000) + (if b0117 then 0 else 66000) + (if b0118 then 0 else 66000) + (if b0119 then 0 else 66000) + (if b0120 then 0 else 66000) + (if b0121 then 0 else 66000) + (if b0122 then 0 else 66000) + (if b0123 then 0 else 66000) + (if b0124 then 0 else 66000) + (if b0125 then 0 else 66000) + (if b0126 then 0 else 66000) + (if b0127 then 0 else 66000) + (if b0128 then 0 else 66000) + (if b0129 then 0 else 66000) + (if b0130 then 0 else 66000) + (if b0131 then 0 else 66000) + (if b0132 then 0 else 66000) + (if b0133 then 0 else 66000) + (if b0134 then 0 else 66000) + (if b0135 then 0 else 66000) + (if b0136 then 0 else 66000) + (if b0137 then 0 else 66000) + (if b0138 then 0 else 66000) + (if b0139 then 0 else 66000) + (if b0140 then 0 else 66000) + (if b0141 then 0 else 66000) + (if b0142 then 0 else 66000) + (if b0143 then 0 else 66000) + (if b0144 then 0 else 66000) + (if b0145 then 0 else 66000) + (if b0146 then 0 else 66000) + (if b0147 then 0 else 66000) + (if b0148 then 0 else 66000) + (if b0149 then 0 else 66000) + (if b0150 then 0 else 66000) + (if b0151 then 0 else 66000) + (if b0152 then 0 else 66000) + (if b0153 then 0 else 66000) + (if b0154 then 0 else 66000) + (if b0155 then 0 else 66000) + (if b0156 then 0 else 66000) + (if b0157 then 0 else 66000) + (if b0158 then 0 else 66000) + (if b0159 then 0 else 66000) + (if b0160 then 0 else 66000) + (if b0161 then 0 else 66000) + (if b0162 then 0 else 66000) + (if b0163 then 0 else 66000) + (if b0164 then 0 else 66000) < 441
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 5.037362
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/medley/nussinov/kernel2.bpl.ice2.bpl
Total learner time was 00:00:00.1246810
Verifying $kernel2: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool) : bool
{
  0 + (if b0000 then 0 else 66000) + (if b0001 then 0 else 66000) + (if b0002 then 0 else 66000) + (if b0003 then 0 else 66000) + (if b0004 then 0 else 66000) + (if b0005 then 0 else 66000) + (if b0006 then 0 else 66000) + (if b0007 then 0 else 66000) + (if b0008 then 0 else 66000) + (if b0009 then 0 else 66000) + (if b0010 then 0 else 66000) + (if b0011 then 0 else 66000) + (if b0012 then 0 else 66000) + (if b0013 then 0 else 66000) + (if b0014 then 0 else 66000) + (if b0015 then 0 else 66000) + (if b0016 then 0 else 66000) + (if b0017 then 0 else 66000) + (if b0018 then 0 else 66000) + (if b0019 then 0 else 66000) + (if b0020 then 0 else 66000) + (if b0021 then 0 else 66000) + (if b0022 then 0 else 66000) + (if b0023 then 0 else 66000) + (if b0024 then 0 else 66000) + (if b0025 then 0 else 66000) + (if b0026 then 0 else 66000) + (if b0027 then 0 else 66000) + (if b0028 then 0 else 66000) + (if b0029 then 0 else 66000) + (if b0030 then 0 else 66000) + (if b0031 then 0 else 66000) + (if b0032 then 0 else 66000) + (if b0033 then 0 else 66000) + (if b0034 then 0 else 66000) + (if b0035 then 0 else 66000) + (if b0036 then 0 else 66000) + (if b0037 then 0 else 66000) + (if b0038 then 0 else 66000) + (if b0039 then 0 else 66000) + (if b0040 then 0 else 66000) + (if b0041 then 0 else 66000) + (if b0042 then 0 else 66000) + (if b0043 then 0 else 66000) + (if b0044 then 0 else 66000) + (if b0045 then 0 else 66000) + (if b0046 then 0 else 66000) + (if b0047 then 0 else 66000) + (if b0048 then 0 else 66000) + (if b0049 then 0 else 66000) + (if b0050 then 0 else 66000) + (if b0051 then 0 else 66000) + (if b0052 then 0 else 66000) + (if b0053 then 0 else 66000) + (if b0054 then 0 else 66000) + (if b0055 then 0 else 66000) + (if b0056 then 0 else 66000) + (if b0105 then 0 else 66000) + (if b0106 then 0 else 66000) + (if b0107 then 0 else 66000) + (if b0108 then 0 else 66000) + (if b0109 then 0 else 66000) + (if b0110 then 0 else 66000) + (if b0111 then 0 else 66000) + (if b0112 then 0 else 66000) + (if b0113 then 0 else 66000) + (if b0114 then 0 else 66000) + (if b0115 then 0 else 66000) + (if b0116 then 0 else 66000) + (if b0117 then 0 else 66000) + (if b0118 then 0 else 66000) + (if b0119 then 0 else 66000) + (if b0120 then 0 else 66000) + (if b0121 then 0 else 66000) + (if b0122 then 0 else 66000) + (if b0123 then 0 else 66000) + (if b0124 then 0 else 66000) + (if b0125 then 0 else 66000) + (if b0126 then 0 else 66000) + (if b0127 then 0 else 66000) + (if b0128 then 0 else 66000) + (if b0129 then 0 else 66000) + (if b0130 then 0 else 66000) + (if b0131 then 0 else 66000) + (if b0132 then 0 else 66000) + (if b0133 then 0 else 66000) + (if b0134 then 0 else 66000) + (if b0135 then 0 else 66000) + (if b0136 then 0 else 66000) + (if b0137 then 0 else 66000) + (if b0138 then 0 else 66000) + (if b0139 then 0 else 66000) + (if b0140 then 0 else 66000) + (if b0141 then 0 else 66000) + (if b0142 then 0 else 66000) + (if b0143 then 0 else 66000) + (if b0144 then 0 else 66000) + (if b0145 then 0 else 66000) + (if b0146 then 0 else 66000) + (if b0147 then 0 else 66000) + (if b0148 then 0 else 66000) + (if b0149 then 0 else 66000) + (if b0150 then 0 else 66000) + (if b0151 then 0 else 66000) + (if b0152 then 0 else 66000) + (if b0153 then 0 else 66000) + (if b0154 then 0 else 66000) + (if b0155 then 0 else 66000) + (if b0156 then 0 else 66000) + (if b0157 then 0 else 66000) + (if b0158 then 0 else 66000) + (if b0159 then 0 else 66000) + (if b0160 then 0 else 66000) + (if b0161 then 0 else 66000) + (if b0162 then 0 else 66000) + (if b0163 then 0 else 66000) + (if b0164 then 0 else 66000) < 441
}
Prover Time taken = 7.131273
Added Horn clause: 6 => 7
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/medley/nussinov/kernel2.bpl.ice2.bpl
Total learner time was 00:00:00.1208220
Verifying $kernel2: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool) : bool
{
  0 + (if b0000 then 0 else 66000) + (if b0001 then 0 else 66000) + (if b0002 then 0 else 66000) + (if b0003 then 0 else 66000) + (if b0004 then 0 else 66000) + (if b0005 then 0 else 66000) + (if b0006 then 0 else 66000) + (if b0007 then 0 else 66000) + (if b0008 then 0 else 66000) + (if b0009 then 0 else 66000) + (if b0010 then 0 else 66000) + (if b0011 then 0 else 66000) + (if b0012 then 0 else 66000) + (if b0013 then 0 else 66000) + (if b0014 then 0 else 66000) + (if b0015 then 0 else 66000) + (if b0016 then 0 else 66000) + (if b0017 then 0 else 66000) + (if b0018 then 0 else 66000) + (if b0019 then 0 else 66000) + (if b0020 then 0 else 66000) + (if b0021 then 0 else 66000) + (if b0022 then 0 else 66000) + (if b0023 then 0 else 66000) + (if b0024 then 0 else 66000) + (if b0025 then 0 else 66000) + (if b0026 then 0 else 66000) + (if b0027 then 0 else 66000) + (if b0028 then 0 else 66000) + (if b0029 then 0 else 66000) + (if b0030 then 0 else 66000) + (if b0031 then 0 else 66000) + (if b0032 then 0 else 66000) + (if b0033 then 0 else 66000) + (if b0034 then 0 else 66000) + (if b0035 then 0 else 66000) + (if b0036 then 0 else 66000) + (if b0037 then 0 else 66000) + (if b0038 then 0 else 66000) + (if b0039 then 0 else 66000) + (if b0040 then 0 else 66000) + (if b0041 then 0 else 66000) + (if b0042 then 0 else 66000) + (if b0043 then 0 else 66000) + (if b0044 then 0 else 66000) + (if b0045 then 0 else 66000) + (if b0046 then 0 else 66000) + (if b0047 then 0 else 66000) + (if b0048 then 0 else 66000) + (if b0049 then 0 else 66000) + (if b0050 then 0 else 66000) + (if b0051 then 0 else 66000) + (if b0052 then 0 else 66000) + (if b0053 then 0 else 66000) + (if b0054 then 0 else 66000) + (if b0055 then 0 else 66000) + (if b0056 then 0 else 66000) + (if b0105 then 0 else 66000) + (if b0106 then 0 else 66000) + (if b0107 then 0 else 66000) + (if b0108 then 0 else 66000) + (if b0109 then 0 else 66000) + (if b0110 then 0 else 66000) + (if b0111 then 0 else 66000) + (if b0112 then 0 else 66000) + (if b0113 then 0 else 66000) + (if b0114 then 0 else 66000) + (if b0151 then 0 else 66000) + (if b0152 then 0 else 66000) + (if b0153 then 0 else 66000) + (if b0154 then 0 else 66000) + (if b0155 then 0 else 66000) + (if b0156 then 0 else 66000) + (if b0157 then 0 else 66000) + (if b0158 then 0 else 66000) + (if b0159 then 0 else 66000) + (if b0160 then 0 else 66000) + (if b0161 then 0 else 66000) + (if b0162 then 0 else 66000) + (if b0163 then 0 else 66000) + (if b0164 then 0 else 66000) < 441
}
Prover Time taken = 9.456653
Added Horn clause: 8 => 9
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/medley/nussinov/kernel2.bpl.ice2.bpl
Total learner time was 00:00:00.1212460
Verifying $kernel2: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool) : bool
{
  0 + (if b0000 then 0 else 66000) + (if b0001 then 0 else 66000) + (if b0002 then 0 else 66000) + (if b0003 then 0 else 66000) + (if b0004 then 0 else 66000) + (if b0005 then 0 else 66000) + (if b0006 then 0 else 66000) + (if b0007 then 0 else 66000) + (if b0008 then 0 else 66000) + (if b0009 then 0 else 66000) + (if b0010 then 0 else 66000) + (if b0011 then 0 else 66000) + (if b0012 then 0 else 66000) + (if b0013 then 0 else 66000) + (if b0014 then 0 else 66000) + (if b0015 then 0 else 66000) + (if b0016 then 0 else 66000) + (if b0017 then 0 else 66000) + (if b0018 then 0 else 66000) + (if b0019 then 0 else 66000) + (if b0020 then 0 else 66000) + (if b0021 then 0 else 66000) + (if b0022 then 0 else 66000) + (if b0023 then 0 else 66000) + (if b0024 then 0 else 66000) + (if b0025 then 0 else 66000) + (if b0026 then 0 else 66000) + (if b0027 then 0 else 66000) + (if b0028 then 0 else 66000) + (if b0029 then 0 else 66000) + (if b0030 then 0 else 66000) + (if b0031 then 0 else 66000) + (if b0032 then 0 else 66000) + (if b0033 then 0 else 66000) + (if b0034 then 0 else 66000) + (if b0035 then 0 else 66000) + (if b0036 then 0 else 66000) + (if b0037 then 0 else 66000) + (if b0038 then 0 else 66000) + (if b0039 then 0 else 66000) + (if b0040 then 0 else 66000) + (if b0041 then 0 else 66000) + (if b0042 then 0 else 66000) + (if b0043 then 0 else 66000) + (if b0044 then 0 else 66000) + (if b0045 then 0 else 66000) + (if b0046 then 0 else 66000) + (if b0047 then 0 else 66000) + (if b0048 then 0 else 66000) + (if b0049 then 0 else 66000) + (if b0050 then 0 else 66000) + (if b0051 then 0 else 66000) + (if b0052 then 0 else 66000) + (if b0053 then 0 else 66000) + (if b0054 then 0 else 66000) + (if b0055 then 0 else 66000) + (if b0056 then 0 else 66000) + (if b0105 then 0 else 66000) + (if b0106 then 0 else 66000) + (if b0107 then 0 else 66000) + (if b0108 then 0 else 66000) + (if b0109 then 0 else 66000) + (if b0110 then 0 else 66000) + (if b0111 then 0 else 66000) + (if b0113 then 0 else 66000) + (if b0114 then 0 else 66000) + (if b0151 then 0 else 66000) + (if b0152 then 0 else 66000) + (if b0153 then 0 else 66000) + (if b0154 then 0 else 66000) + (if b0155 then 0 else 66000) + (if b0156 then 0 else 66000) + (if b0157 then 0 else 66000) + (if b0158 then 0 else 66000) + (if b0159 then 0 else 66000) + (if b0160 then 0 else 66000) + (if b0161 then 0 else 66000) + (if b0162 then 0 else 66000) + (if b0163 then 0 else 66000) + (if b0164 then 0 else 66000) < 441
}
Prover Time taken = 9.263715
Added Horn clause: 10 => 11
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/medley/nussinov/kernel2.bpl.ice2.bpl
Total learner time was 00:00:00.1213870
Verifying $kernel2: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool) : bool
{
  0 + (if b0000 then 0 else 66000) + (if b0001 then 0 else 66000) + (if b0002 then 0 else 66000) + (if b0003 then 0 else 66000) + (if b0004 then 0 else 66000) + (if b0005 then 0 else 66000) + (if b0006 then 0 else 66000) + (if b0007 then 0 else 66000) + (if b0008 then 0 else 66000) + (if b0009 then 0 else 66000) + (if b0011 then 0 else 66000) + (if b0014 then 0 else 66000) + (if b0015 then 0 else 66000) + (if b0016 then 0 else 66000) + (if b0017 then 0 else 66000) + (if b0018 then 0 else 66000) + (if b0019 then 0 else 66000) + (if b0020 then 0 else 66000) + (if b0021 then 0 else 66000) + (if b0022 then 0 else 66000) + (if b0023 then 0 else 66000) + (if b0024 then 0 else 66000) + (if b0025 then 0 else 66000) + (if b0026 then 0 else 66000) + (if b0027 then 0 else 66000) + (if b0028 then 0 else 66000) + (if b0029 then 0 else 66000) + (if b0030 then 0 else 66000) + (if b0031 then 0 else 66000) + (if b0032 then 0 else 66000) + (if b0033 then 0 else 66000) + (if b0034 then 0 else 66000) + (if b0035 then 0 else 66000) + (if b0036 then 0 else 66000) + (if b0037 then 0 else 66000) + (if b0038 then 0 else 66000) + (if b0039 then 0 else 66000) + (if b0040 then 0 else 66000) + (if b0041 then 0 else 66000) + (if b0042 then 0 else 66000) + (if b0043 then 0 else 66000) + (if b0044 then 0 else 66000) + (if b0045 then 0 else 66000) + (if b0046 then 0 else 66000) + (if b0047 then 0 else 66000) + (if b0048 then 0 else 66000) + (if b0049 then 0 else 66000) + (if b0050 then 0 else 66000) + (if b0051 then 0 else 66000) + (if b0052 then 0 else 66000) + (if b0053 then 0 else 66000) + (if b0054 then 0 else 66000) + (if b0055 then 0 else 66000) + (if b0056 then 0 else 66000) + (if b0105 then 0 else 66000) + (if b0106 then 0 else 66000) + (if b0107 then 0 else 66000) + (if b0108 then 0 else 66000) + (if b0109 then 0 else 66000) + (if b0110 then 0 else 66000) + (if b0111 then 0 else 66000) + (if b0113 then 0 else 66000) + (if b0114 then 0 else 66000) + (if b0151 then 0 else 66000) + (if b0152 then 0 else 66000) + (if b0153 then 0 else 66000) + (if b0154 then 0 else 66000) + (if b0155 then 0 else 66000) + (if b0156 then 0 else 66000) + (if b0157 then 0 else 66000) + (if b0158 then 0 else 66000) + (if b0159 then 0 else 66000) + (if b0160 then 0 else 66000) + (if b0161 then 0 else 66000) + (if b0162 then 0 else 66000) + (if b0163 then 0 else 66000) + (if b0164 then 0 else 66000) < 441
}
Prover Time taken = 9.443944
Added Horn clause: 12 && 13 && 0 => 14
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/medley/nussinov/kernel2.bpl.ice2.bpl
Total learner time was 00:00:00.1228830
Verifying $kernel2: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool) : bool
{
  0 + (if b0000 then 0 else 66000) + (if b0001 then 0 else 66000) + (if b0002 then 0 else 66000) + (if b0003 then 0 else 66000) + (if b0004 then 0 else 66000) + (if b0005 then 0 else 66000) + (if b0006 then 0 else 66000) + (if b0007 then 0 else 66000) + (if b0008 then 0 else 66000) + (if b0009 then 0 else 66000) + (if b0011 then 0 else 66000) + (if b0014 then 0 else 66000) + (if b0015 then 0 else 66000) + (if b0016 then 0 else 66000) + (if b0017 then 0 else 66000) + (if b0018 then 0 else 66000) + (if b0019 then 0 else 66000) + (if b0020 then 0 else 66000) + (if b0021 then 0 else 66000) + (if b0022 then 0 else 66000) + (if b0023 then 0 else 66000) + (if b0024 then 0 else 66000) + (if b0025 then 0 else 66000) + (if b0026 then 0 else 66000) + (if b0027 then 0 else 66000) + (if b0028 then 0 else 66000) + (if b0029 then 0 else 66000) + (if b0030 then 0 else 66000) + (if b0031 then 0 else 66000) + (if b0032 then 0 else 66000) + (if b0033 then 0 else 66000) + (if b0034 then 0 else 66000) + (if b0035 then 0 else 66000) + (if b0036 then 0 else 66000) + (if b0037 then 0 else 66000) + (if b0038 then 0 else 66000) + (if b0039 then 0 else 66000) + (if b0040 then 0 else 66000) + (if b0041 then 0 else 66000) + (if b0042 then 0 else 66000) + (if b0043 then 0 else 66000) + (if b0044 then 0 else 66000) + (if b0045 then 0 else 66000) + (if b0046 then 0 else 66000) + (if b0047 then 0 else 66000) + (if b0048 then 0 else 66000) + (if b0049 then 0 else 66000) + (if b0052 then 0 else 66000) + (if b0053 then 0 else 66000) + (if b0054 then 0 else 66000) + (if b0055 then 0 else 66000) + (if b0056 then 0 else 66000) + (if b0105 then 0 else 66000) + (if b0106 then 0 else 66000) + (if b0107 then 0 else 66000) + (if b0108 then 0 else 66000) + (if b0109 then 0 else 66000) + (if b0110 then 0 else 66000) + (if b0111 then 0 else 66000) + (if b0113 then 0 else 66000) + (if b0114 then 0 else 66000) + (if b0151 then 0 else 66000) + (if b0152 then 0 else 66000) + (if b0153 then 0 else 66000) + (if b0154 then 0 else 66000) + (if b0155 then 0 else 66000) + (if b0156 then 0 else 66000) + (if b0157 then 0 else 66000) + (if b0158 then 0 else 66000) + (if b0159 then 0 else 66000) + (if b0160 then 0 else 66000) + (if b0161 then 0 else 66000) + (if b0162 then 0 else 66000) + (if b0163 then 0 else 66000) + (if b0164 then 0 else 66000) < 441
}
Prover Time taken = 9.978725
Added Horn clause: 15 && 9 && 11 => 16
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/medley/nussinov/kernel2.bpl.ice2.bpl
Total learner time was 00:00:00.1224620
Verifying $kernel2: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool) : bool
{
  0 + (if b0000 then 0 else 66000) + (if b0001 then 0 else 66000) + (if b0002 then 0 else 66000) + (if b0003 then 0 else 66000) + (if b0004 then 0 else 66000) + (if b0005 then 0 else 66000) + (if b0006 then 0 else 66000) + (if b0007 then 0 else 66000) + (if b0008 then 0 else 66000) + (if b0009 then 0 else 66000) + (if b0011 then 0 else 66000) + (if b0014 then 0 else 66000) + (if b0015 then 0 else 66000) + (if b0016 then 0 else 66000) + (if b0017 then 0 else 66000) + (if b0018 then 0 else 66000) + (if b0019 then 0 else 66000) + (if b0020 then 0 else 66000) + (if b0021 then 0 else 66000) + (if b0022 then 0 else 66000) + (if b0023 then 0 else 66000) + (if b0024 then 0 else 66000) + (if b0025 then 0 else 66000) + (if b0026 then 0 else 66000) + (if b0027 then 0 else 66000) + (if b0028 then 0 else 66000) + (if b0029 then 0 else 66000) + (if b0030 then 0 else 66000) + (if b0031 then 0 else 66000) + (if b0032 then 0 else 66000) + (if b0033 then 0 else 66000) + (if b0034 then 0 else 66000) + (if b0035 then 0 else 66000) + (if b0036 then 0 else 66000) + (if b0037 then 0 else 66000) + (if b0038 then 0 else 66000) + (if b0039 then 0 else 66000) + (if b0041 then 0 else 66000) + (if b0042 then 0 else 66000) + (if b0043 then 0 else 66000) + (if b0044 then 0 else 66000) + (if b0045 then 0 else 66000) + (if b0046 then 0 else 66000) + (if b0047 then 0 else 66000) + (if b0048 then 0 else 66000) + (if b0049 then 0 else 66000) + (if b0052 then 0 else 66000) + (if b0053 then 0 else 66000) + (if b0054 then 0 else 66000) + (if b0055 then 0 else 66000) + (if b0056 then 0 else 66000) + (if b0105 then 0 else 66000) + (if b0106 then 0 else 66000) + (if b0107 then 0 else 66000) + (if b0108 then 0 else 66000) + (if b0109 then 0 else 66000) + (if b0110 then 0 else 66000) + (if b0111 then 0 else 66000) + (if b0113 then 0 else 66000) + (if b0114 then 0 else 66000) + (if b0151 then 0 else 66000) + (if b0152 then 0 else 66000) + (if b0153 then 0 else 66000) + (if b0154 then 0 else 66000) + (if b0155 then 0 else 66000) + (if b0156 then 0 else 66000) + (if b0157 then 0 else 66000) + (if b0158 then 0 else 66000) + (if b0159 then 0 else 66000) + (if b0160 then 0 else 66000) + (if b0161 then 0 else 66000) + (if b0162 then 0 else 66000) + (if b0163 then 0 else 66000) + (if b0164 then 0 else 66000) < 441
}
Prover Time taken = 8.667812
Added Horn clause: 17 && 9 && 18 => 19
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/medley/nussinov/kernel2.bpl.ice2.bpl
Total learner time was 00:00:00.1220130
Verifying $kernel2: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool) : bool
{
  0 + (if b0000 then 0 else 66000) + (if b0001 then 0 else 66000) + (if b0002 then 0 else 66000) + (if b0003 then 0 else 66000) + (if b0004 then 0 else 66000) + (if b0005 then 0 else 66000) + (if b0006 then 0 else 66000) + (if b0007 then 0 else 66000) + (if b0008 then 0 else 66000) + (if b0009 then 0 else 66000) + (if b0011 then 0 else 66000) + (if b0014 then 0 else 66000) + (if b0015 then 0 else 66000) + (if b0016 then 0 else 66000) + (if b0017 then 0 else 66000) + (if b0018 then 0 else 66000) + (if b0019 then 0 else 66000) + (if b0020 then 0 else 66000) + (if b0021 then 0 else 66000) + (if b0022 then 0 else 66000) + (if b0023 then 0 else 66000) + (if b0024 then 0 else 66000) + (if b0025 then 0 else 66000) + (if b0026 then 0 else 66000) + (if b0027 then 0 else 66000) + (if b0028 then 0 else 66000) + (if b0029 then 0 else 66000) + (if b0030 then 0 else 66000) + (if b0031 then 0 else 66000) + (if b0032 then 0 else 66000) + (if b0033 then 0 else 66000) + (if b0034 then 0 else 66000) + (if b0035 then 0 else 66000) + (if b0036 then 0 else 66000) + (if b0037 then 0 else 66000) + (if b0038 then 0 else 66000) + (if b0039 then 0 else 66000) + (if b0041 then 0 else 66000) + (if b0043 then 0 else 66000) + (if b0044 then 0 else 66000) + (if b0045 then 0 else 66000) + (if b0046 then 0 else 66000) + (if b0047 then 0 else 66000) + (if b0048 then 0 else 66000) + (if b0049 then 0 else 66000) + (if b0052 then 0 else 66000) + (if b0053 then 0 else 66000) + (if b0054 then 0 else 66000) + (if b0055 then 0 else 66000) + (if b0056 then 0 else 66000) + (if b0105 then 0 else 66000) + (if b0106 then 0 else 66000) + (if b0107 then 0 else 66000) + (if b0108 then 0 else 66000) + (if b0109 then 0 else 66000) + (if b0110 then 0 else 66000) + (if b0111 then 0 else 66000) + (if b0113 then 0 else 66000) + (if b0114 then 0 else 66000) + (if b0151 then 0 else 66000) + (if b0152 then 0 else 66000) + (if b0153 then 0 else 66000) + (if b0154 then 0 else 66000) + (if b0155 then 0 else 66000) + (if b0156 then 0 else 66000) + (if b0157 then 0 else 66000) + (if b0158 then 0 else 66000) + (if b0159 then 0 else 66000) + (if b0160 then 0 else 66000) + (if b0161 then 0 else 66000) + (if b0162 then 0 else 66000) + (if b0163 then 0 else 66000) + (if b0164 then 0 else 66000) < 441
}
Prover Time taken = 18.287767
Added Horn clause: 20 && 0 && 0 && 0 && 0 && 0 && 0 => 21
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/medley/nussinov/kernel2.bpl.ice2.bpl
Total learner time was 00:00:00.1252040
Verifying $kernel2: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool) : bool
{
  0 + (if b0000 then 0 else 66000) + (if b0001 then 0 else 66000) + (if b0003 then 0 else 66000) + (if b0005 then 0 else 66000) + (if b0007 then 0 else 66000) + (if b0008 then 0 else 66000) + (if b0009 then 0 else 66000) + (if b0011 then 0 else 66000) + (if b0014 then 0 else 66000) + (if b0015 then 0 else 66000) + (if b0016 then 0 else 66000) + (if b0017 then 0 else 66000) + (if b0018 then 0 else 66000) + (if b0019 then 0 else 66000) + (if b0020 then 0 else 66000) + (if b0021 then 0 else 66000) + (if b0022 then 0 else 66000) + (if b0023 then 0 else 66000) + (if b0024 then 0 else 66000) + (if b0025 then 0 else 66000) + (if b0026 then 0 else 66000) + (if b0027 then 0 else 66000) + (if b0028 then 0 else 66000) + (if b0029 then 0 else 66000) + (if b0030 then 0 else 66000) + (if b0031 then 0 else 66000) + (if b0032 then 0 else 66000) + (if b0033 then 0 else 66000) + (if b0034 then 0 else 66000) + (if b0035 then 0 else 66000) + (if b0036 then 0 else 66000) + (if b0037 then 0 else 66000) + (if b0038 then 0 else 66000) + (if b0039 then 0 else 66000) + (if b0041 then 0 else 66000) + (if b0043 then 0 else 66000) + (if b0044 then 0 else 66000) + (if b0045 then 0 else 66000) + (if b0046 then 0 else 66000) + (if b0047 then 0 else 66000) + (if b0048 then 0 else 66000) + (if b0049 then 0 else 66000) + (if b0052 then 0 else 66000) + (if b0053 then 0 else 66000) + (if b0054 then 0 else 66000) + (if b0056 then 0 else 66000) + (if b0105 then 0 else 66000) + (if b0106 then 0 else 66000) + (if b0107 then 0 else 66000) + (if b0108 then 0 else 66000) + (if b0109 then 0 else 66000) + (if b0110 then 0 else 66000) + (if b0111 then 0 else 66000) + (if b0113 then 0 else 66000) + (if b0114 then 0 else 66000) + (if b0151 then 0 else 66000) + (if b0152 then 0 else 66000) + (if b0153 then 0 else 66000) + (if b0154 then 0 else 66000) + (if b0155 then 0 else 66000) + (if b0156 then 0 else 66000) + (if b0157 then 0 else 66000) + (if b0158 then 0 else 66000) + (if b0159 then 0 else 66000) + (if b0160 then 0 else 66000) + (if b0161 then 0 else 66000) + (if b0162 then 0 else 66000) + (if b0163 then 0 else 66000) + (if b0164 then 0 else 66000) < 441
}
Prover Time taken = 10.796415
Added Horn clause: 22 && 23 && 18 && 0 && 0 => 24
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/medley/nussinov/kernel2.bpl.ice2.bpl
Total learner time was 00:00:00.1211560
Verifying $kernel2: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool) : bool
{
  0 + (if b0000 then 0 else 66000) + (if b0001 then 0 else 66000) + (if b0003 then 0 else 66000) + (if b0005 then 0 else 66000) + (if b0007 then 0 else 66000) + (if b0008 then 0 else 66000) + (if b0009 then 0 else 66000) + (if b0011 then 0 else 66000) + (if b0014 then 0 else 66000) + (if b0015 then 0 else 66000) + (if b0016 then 0 else 66000) + (if b0017 then 0 else 66000) + (if b0018 then 0 else 66000) + (if b0019 then 0 else 66000) + (if b0020 then 0 else 66000) + (if b0021 then 0 else 66000) + (if b0022 then 0 else 66000) + (if b0023 then 0 else 66000) + (if b0024 then 0 else 66000) + (if b0025 then 0 else 66000) + (if b0026 then 0 else 66000) + (if b0027 then 0 else 66000) + (if b0028 then 0 else 66000) + (if b0029 then 0 else 66000) + (if b0030 then 0 else 66000) + (if b0031 then 0 else 66000) + (if b0032 then 0 else 66000) + (if b0033 then 0 else 66000) + (if b0034 then 0 else 66000) + (if b0035 then 0 else 66000) + (if b0036 then 0 else 66000) + (if b0037 then 0 else 66000) + (if b0038 then 0 else 66000) + (if b0039 then 0 else 66000) + (if b0041 then 0 else 66000) + (if b0044 then 0 else 66000) + (if b0046 then 0 else 66000) + (if b0047 then 0 else 66000) + (if b0048 then 0 else 66000) + (if b0049 then 0 else 66000) + (if b0052 then 0 else 66000) + (if b0053 then 0 else 66000) + (if b0054 then 0 else 66000) + (if b0056 then 0 else 66000) + (if b0105 then 0 else 66000) + (if b0106 then 0 else 66000) + (if b0107 then 0 else 66000) + (if b0108 then 0 else 66000) + (if b0109 then 0 else 66000) + (if b0110 then 0 else 66000) + (if b0111 then 0 else 66000) + (if b0113 then 0 else 66000) + (if b0114 then 0 else 66000) + (if b0151 then 0 else 66000) + (if b0152 then 0 else 66000) + (if b0153 then 0 else 66000) + (if b0154 then 0 else 66000) + (if b0155 then 0 else 66000) + (if b0156 then 0 else 66000) + (if b0157 then 0 else 66000) + (if b0158 then 0 else 66000) + (if b0159 then 0 else 66000) + (if b0160 then 0 else 66000) + (if b0161 then 0 else 66000) + (if b0162 then 0 else 66000) + (if b0163 then 0 else 66000) + (if b0164 then 0 else 66000) < 441
}
Prover Time taken = 10.578535
Added Horn clause: 22 && 13 && 0 && 0 && 14 => 25
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/medley/nussinov/kernel2.bpl.ice2.bpl
Total learner time was 00:00:00.1211200
Verifying $kernel2: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool) : bool
{
  0 + (if b0000 then 0 else 66000) + (if b0001 then 0 else 66000) + (if b0003 then 0 else 66000) + (if b0005 then 0 else 66000) + (if b0007 then 0 else 66000) + (if b0008 then 0 else 66000) + (if b0009 then 0 else 66000) + (if b0011 then 0 else 66000) + (if b0014 then 0 else 66000) + (if b0015 then 0 else 66000) + (if b0016 then 0 else 66000) + (if b0017 then 0 else 66000) + (if b0018 then 0 else 66000) + (if b0019 then 0 else 66000) + (if b0020 then 0 else 66000) + (if b0021 then 0 else 66000) + (if b0022 then 0 else 66000) + (if b0023 then 0 else 66000) + (if b0024 then 0 else 66000) + (if b0025 then 0 else 66000) + (if b0026 then 0 else 66000) + (if b0027 then 0 else 66000) + (if b0028 then 0 else 66000) + (if b0029 then 0 else 66000) + (if b0030 then 0 else 66000) + (if b0031 then 0 else 66000) + (if b0032 then 0 else 66000) + (if b0033 then 0 else 66000) + (if b0034 then 0 else 66000) + (if b0035 then 0 else 66000) + (if b0036 then 0 else 66000) + (if b0038 then 0 else 66000) + (if b0039 then 0 else 66000) + (if b0041 then 0 else 66000) + (if b0044 then 0 else 66000) + (if b0046 then 0 else 66000) + (if b0047 then 0 else 66000) + (if b0048 then 0 else 66000) + (if b0049 then 0 else 66000) + (if b0052 then 0 else 66000) + (if b0053 then 0 else 66000) + (if b0054 then 0 else 66000) + (if b0056 then 0 else 66000) + (if b0105 then 0 else 66000) + (if b0106 then 0 else 66000) + (if b0107 then 0 else 66000) + (if b0108 then 0 else 66000) + (if b0109 then 0 else 66000) + (if b0110 then 0 else 66000) + (if b0111 then 0 else 66000) + (if b0113 then 0 else 66000) + (if b0114 then 0 else 66000) + (if b0151 then 0 else 66000) + (if b0152 then 0 else 66000) + (if b0153 then 0 else 66000) + (if b0154 then 0 else 66000) + (if b0155 then 0 else 66000) + (if b0156 then 0 else 66000) + (if b0157 then 0 else 66000) + (if b0158 then 0 else 66000) + (if b0159 then 0 else 66000) + (if b0160 then 0 else 66000) + (if b0161 then 0 else 66000) + (if b0162 then 0 else 66000) + (if b0163 then 0 else 66000) + (if b0164 then 0 else 66000) < 441
}
Prover Time taken = 7.676024
Added Horn clause: 22 && 9 && 18 && 0 && 26 => 27
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/medley/nussinov/kernel2.bpl.ice2.bpl
Total learner time was 00:00:00.1221260
Verifying $kernel2: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool) : bool
{
  0 + (if b0000 then 0 else 66000) + (if b0001 then 0 else 66000) + (if b0003 then 0 else 66000) + (if b0005 then 0 else 66000) + (if b0007 then 0 else 66000) + (if b0008 then 0 else 66000) + (if b0009 then 0 else 66000) + (if b0011 then 0 else 66000) + (if b0014 then 0 else 66000) + (if b0015 then 0 else 66000) + (if b0016 then 0 else 66000) + (if b0017 then 0 else 66000) + (if b0018 then 0 else 66000) + (if b0019 then 0 else 66000) + (if b0020 then 0 else 66000) + (if b0021 then 0 else 66000) + (if b0022 then 0 else 66000) + (if b0023 then 0 else 66000) + (if b0024 then 0 else 66000) + (if b0026 then 0 else 66000) + (if b0027 then 0 else 66000) + (if b0028 then 0 else 66000) + (if b0029 then 0 else 66000) + (if b0030 then 0 else 66000) + (if b0031 then 0 else 66000) + (if b0032 then 0 else 66000) + (if b0033 then 0 else 66000) + (if b0034 then 0 else 66000) + (if b0035 then 0 else 66000) + (if b0036 then 0 else 66000) + (if b0038 then 0 else 66000) + (if b0039 then 0 else 66000) + (if b0041 then 0 else 66000) + (if b0044 then 0 else 66000) + (if b0046 then 0 else 66000) + (if b0047 then 0 else 66000) + (if b0048 then 0 else 66000) + (if b0049 then 0 else 66000) + (if b0052 then 0 else 66000) + (if b0053 then 0 else 66000) + (if b0054 then 0 else 66000) + (if b0056 then 0 else 66000) + (if b0105 then 0 else 66000) + (if b0106 then 0 else 66000) + (if b0107 then 0 else 66000) + (if b0108 then 0 else 66000) + (if b0109 then 0 else 66000) + (if b0110 then 0 else 66000) + (if b0111 then 0 else 66000) + (if b0113 then 0 else 66000) + (if b0114 then 0 else 66000) + (if b0151 then 0 else 66000) + (if b0152 then 0 else 66000) + (if b0153 then 0 else 66000) + (if b0154 then 0 else 66000) + (if b0155 then 0 else 66000) + (if b0156 then 0 else 66000) + (if b0157 then 0 else 66000) + (if b0158 then 0 else 66000) + (if b0159 then 0 else 66000) + (if b0160 then 0 else 66000) + (if b0161 then 0 else 66000) + (if b0162 then 0 else 66000) + (if b0163 then 0 else 66000) + (if b0164 then 0 else 66000) < 441
}
Prover Time taken = 6.10007
Added Horn clause: 28 && 29 && 0 && 0 && 0 && 0 && 0 => 30
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/medley/nussinov/kernel2.bpl.ice2.bpl
Total learner time was 00:00:00.1221760
Verifying $kernel2: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool) : bool
{
  0 + (if b0000 then 0 else 66000) + (if b0001 then 0 else 66000) + (if b0003 then 0 else 66000) + (if b0005 then 0 else 66000) + (if b0007 then 0 else 66000) + (if b0008 then 0 else 66000) + (if b0009 then 0 else 66000) + (if b0011 then 0 else 66000) + (if b0014 then 0 else 66000) + (if b0016 then 0 else 66000) + (if b0018 then 0 else 66000) + (if b0019 then 0 else 66000) + (if b0020 then 0 else 66000) + (if b0021 then 0 else 66000) + (if b0022 then 0 else 66000) + (if b0023 then 0 else 66000) + (if b0024 then 0 else 66000) + (if b0026 then 0 else 66000) + (if b0027 then 0 else 66000) + (if b0028 then 0 else 66000) + (if b0029 then 0 else 66000) + (if b0030 then 0 else 66000) + (if b0031 then 0 else 66000) + (if b0032 then 0 else 66000) + (if b0033 then 0 else 66000) + (if b0034 then 0 else 66000) + (if b0035 then 0 else 66000) + (if b0036 then 0 else 66000) + (if b0038 then 0 else 66000) + (if b0039 then 0 else 66000) + (if b0041 then 0 else 66000) + (if b0044 then 0 else 66000) + (if b0046 then 0 else 66000) + (if b0047 then 0 else 66000) + (if b0048 then 0 else 66000) + (if b0049 then 0 else 66000) + (if b0052 then 0 else 66000) + (if b0053 then 0 else 66000) + (if b0054 then 0 else 66000) + (if b0056 then 0 else 66000) + (if b0105 then 0 else 66000) + (if b0106 then 0 else 66000) + (if b0107 then 0 else 66000) + (if b0108 then 0 else 66000) + (if b0109 then 0 else 66000) + (if b0110 then 0 else 66000) + (if b0111 then 0 else 66000) + (if b0113 then 0 else 66000) + (if b0114 then 0 else 66000) + (if b0151 then 0 else 66000) + (if b0152 then 0 else 66000) + (if b0153 then 0 else 66000) + (if b0154 then 0 else 66000) + (if b0155 then 0 else 66000) + (if b0156 then 0 else 66000) + (if b0157 then 0 else 66000) + (if b0158 then 0 else 66000) + (if b0159 then 0 else 66000) + (if b0160 then 0 else 66000) + (if b0161 then 0 else 66000) + (if b0162 then 0 else 66000) + (if b0163 then 0 else 66000) + (if b0164 then 0 else 66000) < 441
}
Prover Time taken = 4.933242
Added Horn clause: 22 && 0 && 0 && 0 && 0 && 0 && 0 => 31
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/medley/nussinov/kernel2.bpl.ice2.bpl
Total learner time was 00:00:00.1230190
Verifying $kernel2: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool) : bool
{
  0 + (if b0000 then 0 else 66000) + (if b0001 then 0 else 66000) + (if b0003 then 0 else 66000) + (if b0005 then 0 else 66000) + (if b0007 then 0 else 66000) + (if b0008 then 0 else 66000) + (if b0009 then 0 else 66000) + (if b0011 then 0 else 66000) + (if b0014 then 0 else 66000) + (if b0016 then 0 else 66000) + (if b0018 then 0 else 66000) + (if b0019 then 0 else 66000) + (if b0020 then 0 else 66000) + (if b0021 then 0 else 66000) + (if b0022 then 0 else 66000) + (if b0023 then 0 else 66000) + (if b0024 then 0 else 66000) + (if b0026 then 0 else 66000) + (if b0027 then 0 else 66000) + (if b0028 then 0 else 66000) + (if b0029 then 0 else 66000) + (if b0030 then 0 else 66000) + (if b0031 then 0 else 66000) + (if b0032 then 0 else 66000) + (if b0033 then 0 else 66000) + (if b0034 then 0 else 66000) + (if b0035 then 0 else 66000) + (if b0036 then 0 else 66000) + (if b0038 then 0 else 66000) + (if b0039 then 0 else 66000) + (if b0041 then 0 else 66000) + (if b0044 then 0 else 66000) + (if b0046 then 0 else 66000) + (if b0047 then 0 else 66000) + (if b0048 then 0 else 66000) + (if b0049 then 0 else 66000) + (if b0052 then 0 else 66000) + (if b0053 then 0 else 66000) + (if b0054 then 0 else 66000) + (if b0056 then 0 else 66000) + (if b0105 then 0 else 66000) + (if b0107 then 0 else 66000) + (if b0108 then 0 else 66000) + (if b0109 then 0 else 66000) + (if b0110 then 0 else 66000) + (if b0111 then 0 else 66000) + (if b0113 then 0 else 66000) + (if b0114 then 0 else 66000) + (if b0151 then 0 else 66000) + (if b0152 then 0 else 66000) + (if b0153 then 0 else 66000) + (if b0154 then 0 else 66000) + (if b0155 then 0 else 66000) + (if b0156 then 0 else 66000) + (if b0157 then 0 else 66000) + (if b0158 then 0 else 66000) + (if b0159 then 0 else 66000) + (if b0160 then 0 else 66000) + (if b0161 then 0 else 66000) + (if b0162 then 0 else 66000) + (if b0163 then 0 else 66000) + (if b0164 then 0 else 66000) < 441
}
Prover Time taken = 29.242384
Added Horn clause: 22 && 13 && 0 && 0 && 32 => 33
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/medley/nussinov/kernel2.bpl.ice2.bpl
Total learner time was 00:00:00.1213650
Verifying $kernel2: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool) : bool
{
  0 + (if b0000 then 0 else 66000) + (if b0001 then 0 else 66000) + (if b0003 then 0 else 66000) + (if b0005 then 0 else 66000) + (if b0007 then 0 else 66000) + (if b0008 then 0 else 66000) + (if b0009 then 0 else 66000) + (if b0011 then 0 else 66000) + (if b0014 then 0 else 66000) + (if b0016 then 0 else 66000) + (if b0018 then 0 else 66000) + (if b0019 then 0 else 66000) + (if b0020 then 0 else 66000) + (if b0021 then 0 else 66000) + (if b0022 then 0 else 66000) + (if b0023 then 0 else 66000) + (if b0024 then 0 else 66000) + (if b0026 then 0 else 66000) + (if b0027 then 0 else 66000) + (if b0028 then 0 else 66000) + (if b0029 then 0 else 66000) + (if b0030 then 0 else 66000) + (if b0031 then 0 else 66000) + (if b0032 then 0 else 66000) + (if b0033 then 0 else 66000) + (if b0034 then 0 else 66000) + (if b0035 then 0 else 66000) + (if b0036 then 0 else 66000) + (if b0039 then 0 else 66000) + (if b0041 then 0 else 66000) + (if b0044 then 0 else 66000) + (if b0046 then 0 else 66000) + (if b0047 then 0 else 66000) + (if b0048 then 0 else 66000) + (if b0049 then 0 else 66000) + (if b0052 then 0 else 66000) + (if b0053 then 0 else 66000) + (if b0054 then 0 else 66000) + (if b0056 then 0 else 66000) + (if b0105 then 0 else 66000) + (if b0107 then 0 else 66000) + (if b0108 then 0 else 66000) + (if b0109 then 0 else 66000) + (if b0110 then 0 else 66000) + (if b0111 then 0 else 66000) + (if b0113 then 0 else 66000) + (if b0114 then 0 else 66000) + (if b0151 then 0 else 66000) + (if b0152 then 0 else 66000) + (if b0153 then 0 else 66000) + (if b0154 then 0 else 66000) + (if b0155 then 0 else 66000) + (if b0156 then 0 else 66000) + (if b0157 then 0 else 66000) + (if b0158 then 0 else 66000) + (if b0159 then 0 else 66000) + (if b0160 then 0 else 66000) + (if b0161 then 0 else 66000) + (if b0162 then 0 else 66000) + (if b0163 then 0 else 66000) + (if b0164 then 0 else 66000) < 441
}
Prover Time taken = 27.992682
Added Horn clause: 22 && 13 && 0 && 0 && 32 => 34
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/medley/nussinov/kernel2.bpl.ice2.bpl
Total learner time was 00:00:00.1219070
Verifying $kernel2: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool) : bool
{
  0 + (if b0000 then 0 else 66000) + (if b0001 then 0 else 66000) + (if b0003 then 0 else 66000) + (if b0005 then 0 else 66000) + (if b0007 then 0 else 66000) + (if b0008 then 0 else 66000) + (if b0009 then 0 else 66000) + (if b0011 then 0 else 66000) + (if b0014 then 0 else 66000) + (if b0016 then 0 else 66000) + (if b0018 then 0 else 66000) + (if b0019 then 0 else 66000) + (if b0020 then 0 else 66000) + (if b0021 then 0 else 66000) + (if b0022 then 0 else 66000) + (if b0023 then 0 else 66000) + (if b0024 then 0 else 66000) + (if b0026 then 0 else 66000) + (if b0027 then 0 else 66000) + (if b0028 then 0 else 66000) + (if b0029 then 0 else 66000) + (if b0030 then 0 else 66000) + (if b0031 then 0 else 66000) + (if b0032 then 0 else 66000) + (if b0033 then 0 else 66000) + (if b0034 then 0 else 66000) + (if b0035 then 0 else 66000) + (if b0036 then 0 else 66000) + (if b0041 then 0 else 66000) + (if b0044 then 0 else 66000) + (if b0046 then 0 else 66000) + (if b0047 then 0 else 66000) + (if b0048 then 0 else 66000) + (if b0049 then 0 else 66000) + (if b0052 then 0 else 66000) + (if b0053 then 0 else 66000) + (if b0054 then 0 else 66000) + (if b0056 then 0 else 66000) + (if b0105 then 0 else 66000) + (if b0107 then 0 else 66000) + (if b0108 then 0 else 66000) + (if b0109 then 0 else 66000) + (if b0110 then 0 else 66000) + (if b0111 then 0 else 66000) + (if b0113 then 0 else 66000) + (if b0114 then 0 else 66000) + (if b0151 then 0 else 66000) + (if b0152 then 0 else 66000) + (if b0153 then 0 else 66000) + (if b0154 then 0 else 66000) + (if b0155 then 0 else 66000) + (if b0156 then 0 else 66000) + (if b0157 then 0 else 66000) + (if b0158 then 0 else 66000) + (if b0159 then 0 else 66000) + (if b0160 then 0 else 66000) + (if b0161 then 0 else 66000) + (if b0162 then 0 else 66000) + (if b0163 then 0 else 66000) + (if b0164 then 0 else 66000) < 441
}
Prover Time taken = 19.285221
Added Horn clause: 22 && 13 && 0 && 0 && 14 && 0 && 33 => 35
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/medley/nussinov/kernel2.bpl.ice2.bpl
Total learner time was 00:00:00.1229790
Verifying $kernel2: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool) : bool
{
  0 + (if b0000 then 0 else 66000) + (if b0001 then 0 else 66000) + (if b0003 then 0 else 66000) + (if b0005 then 0 else 66000) + (if b0007 then 0 else 66000) + (if b0008 then 0 else 66000) + (if b0009 then 0 else 66000) + (if b0011 then 0 else 66000) + (if b0014 then 0 else 66000) + (if b0016 then 0 else 66000) + (if b0018 then 0 else 66000) + (if b0019 then 0 else 66000) + (if b0020 then 0 else 66000) + (if b0021 then 0 else 66000) + (if b0022 then 0 else 66000) + (if b0023 then 0 else 66000) + (if b0024 then 0 else 66000) + (if b0026 then 0 else 66000) + (if b0027 then 0 else 66000) + (if b0028 then 0 else 66000) + (if b0029 then 0 else 66000) + (if b0030 then 0 else 66000) + (if b0031 then 0 else 66000) + (if b0032 then 0 else 66000) + (if b0033 then 0 else 66000) + (if b0034 then 0 else 66000) + (if b0035 then 0 else 66000) + (if b0036 then 0 else 66000) + (if b0041 then 0 else 66000) + (if b0044 then 0 else 66000) + (if b0046 then 0 else 66000) + (if b0047 then 0 else 66000) + (if b0048 then 0 else 66000) + (if b0049 then 0 else 66000) + (if b0052 then 0 else 66000) + (if b0053 then 0 else 66000) + (if b0054 then 0 else 66000) + (if b0056 then 0 else 66000) + (if b0107 then 0 else 66000) + (if b0108 then 0 else 66000) + (if b0109 then 0 else 66000) + (if b0110 then 0 else 66000) + (if b0111 then 0 else 66000) + (if b0113 then 0 else 66000) + (if b0114 then 0 else 66000) + (if b0151 then 0 else 66000) + (if b0152 then 0 else 66000) + (if b0153 then 0 else 66000) + (if b0154 then 0 else 66000) + (if b0155 then 0 else 66000) + (if b0156 then 0 else 66000) + (if b0157 then 0 else 66000) + (if b0158 then 0 else 66000) + (if b0159 then 0 else 66000) + (if b0160 then 0 else 66000) + (if b0161 then 0 else 66000) + (if b0162 then 0 else 66000) + (if b0163 then 0 else 66000) + (if b0164 then 0 else 66000) < 441
}
Prover Time taken = 4.718014
Added Horn clause: 36 => 37
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/medley/nussinov/kernel2.bpl.ice2.bpl
Total learner time was 00:00:00.1221630
Verifying $kernel2: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool) : bool
{
  0 + (if b0000 then 0 else 66000) + (if b0001 then 0 else 66000) + (if b0003 then 0 else 66000) + (if b0005 then 0 else 66000) + (if b0007 then 0 else 66000) + (if b0008 then 0 else 66000) + (if b0009 then 0 else 66000) + (if b0011 then 0 else 66000) + (if b0014 then 0 else 66000) + (if b0016 then 0 else 66000) + (if b0018 then 0 else 66000) + (if b0019 then 0 else 66000) + (if b0020 then 0 else 66000) + (if b0021 then 0 else 66000) + (if b0023 then 0 else 66000) + (if b0024 then 0 else 66000) + (if b0026 then 0 else 66000) + (if b0027 then 0 else 66000) + (if b0028 then 0 else 66000) + (if b0029 then 0 else 66000) + (if b0030 then 0 else 66000) + (if b0031 then 0 else 66000) + (if b0032 then 0 else 66000) + (if b0033 then 0 else 66000) + (if b0034 then 0 else 66000) + (if b0035 then 0 else 66000) + (if b0036 then 0 else 66000) + (if b0041 then 0 else 66000) + (if b0044 then 0 else 66000) + (if b0046 then 0 else 66000) + (if b0047 then 0 else 66000) + (if b0048 then 0 else 66000) + (if b0049 then 0 else 66000) + (if b0052 then 0 else 66000) + (if b0053 then 0 else 66000) + (if b0054 then 0 else 66000) + (if b0056 then 0 else 66000) + (if b0107 then 0 else 66000) + (if b0108 then 0 else 66000) + (if b0109 then 0 else 66000) + (if b0110 then 0 else 66000) + (if b0111 then 0 else 66000) + (if b0113 then 0 else 66000) + (if b0114 then 0 else 66000) + (if b0151 then 0 else 66000) + (if b0152 then 0 else 66000) + (if b0153 then 0 else 66000) + (if b0154 then 0 else 66000) + (if b0155 then 0 else 66000) + (if b0156 then 0 else 66000) + (if b0157 then 0 else 66000) + (if b0158 then 0 else 66000) + (if b0159 then 0 else 66000) + (if b0160 then 0 else 66000) + (if b0161 then 0 else 66000) + (if b0162 then 0 else 66000) + (if b0163 then 0 else 66000) + (if b0164 then 0 else 66000) < 441
}
Prover Time taken = 8.358212
Added Horn clause: 36 && 13 && 37 => 38
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/medley/nussinov/kernel2.bpl.ice2.bpl
Total learner time was 00:00:00.1232730
Verifying $kernel2: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool) : bool
{
  0 + (if b0000 then 0 else 66000) + (if b0001 then 0 else 66000) + (if b0003 then 0 else 66000) + (if b0005 then 0 else 66000) + (if b0007 then 0 else 66000) + (if b0008 then 0 else 66000) + (if b0009 then 0 else 66000) + (if b0011 then 0 else 66000) + (if b0014 then 0 else 66000) + (if b0016 then 0 else 66000) + (if b0018 then 0 else 66000) + (if b0019 then 0 else 66000) + (if b0020 then 0 else 66000) + (if b0021 then 0 else 66000) + (if b0023 then 0 else 66000) + (if b0024 then 0 else 66000) + (if b0026 then 0 else 66000) + (if b0027 then 0 else 66000) + (if b0028 then 0 else 66000) + (if b0029 then 0 else 66000) + (if b0030 then 0 else 66000) + (if b0031 then 0 else 66000) + (if b0032 then 0 else 66000) + (if b0033 then 0 else 66000) + (if b0034 then 0 else 66000) + (if b0035 then 0 else 66000) + (if b0036 then 0 else 66000) + (if b0041 then 0 else 66000) + (if b0044 then 0 else 66000) + (if b0046 then 0 else 66000) + (if b0047 then 0 else 66000) + (if b0048 then 0 else 66000) + (if b0052 then 0 else 66000) + (if b0053 then 0 else 66000) + (if b0054 then 0 else 66000) + (if b0056 then 0 else 66000) + (if b0107 then 0 else 66000) + (if b0108 then 0 else 66000) + (if b0109 then 0 else 66000) + (if b0110 then 0 else 66000) + (if b0111 then 0 else 66000) + (if b0113 then 0 else 66000) + (if b0114 then 0 else 66000) + (if b0151 then 0 else 66000) + (if b0152 then 0 else 66000) + (if b0153 then 0 else 66000) + (if b0154 then 0 else 66000) + (if b0155 then 0 else 66000) + (if b0156 then 0 else 66000) + (if b0157 then 0 else 66000) + (if b0158 then 0 else 66000) + (if b0159 then 0 else 66000) + (if b0160 then 0 else 66000) + (if b0161 then 0 else 66000) + (if b0162 then 0 else 66000) + (if b0163 then 0 else 66000) + (if b0164 then 0 else 66000) < 441
}
Prover Time taken = 13.812507
Added Horn clause: 36 && 13 && 37 && 0 && 39 => 40
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/medley/nussinov/kernel2.bpl.ice2.bpl
Total learner time was 00:00:00.1352230
Verifying $kernel2: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool) : bool
{
  0 + (if b0000 then 0 else 66000) + (if b0001 then 0 else 66000) + (if b0003 then 0 else 66000) + (if b0005 then 0 else 66000) + (if b0007 then 0 else 66000) + (if b0008 then 0 else 66000) + (if b0009 then 0 else 66000) + (if b0011 then 0 else 66000) + (if b0014 then 0 else 66000) + (if b0016 then 0 else 66000) + (if b0018 then 0 else 66000) + (if b0019 then 0 else 66000) + (if b0020 then 0 else 66000) + (if b0021 then 0 else 66000) + (if b0023 then 0 else 66000) + (if b0024 then 0 else 66000) + (if b0026 then 0 else 66000) + (if b0027 then 0 else 66000) + (if b0028 then 0 else 66000) + (if b0029 then 0 else 66000) + (if b0030 then 0 else 66000) + (if b0031 then 0 else 66000) + (if b0032 then 0 else 66000) + (if b0033 then 0 else 66000) + (if b0034 then 0 else 66000) + (if b0035 then 0 else 66000) + (if b0041 then 0 else 66000) + (if b0044 then 0 else 66000) + (if b0046 then 0 else 66000) + (if b0047 then 0 else 66000) + (if b0048 then 0 else 66000) + (if b0052 then 0 else 66000) + (if b0053 then 0 else 66000) + (if b0054 then 0 else 66000) + (if b0056 then 0 else 66000) + (if b0107 then 0 else 66000) + (if b0108 then 0 else 66000) + (if b0109 then 0 else 66000) + (if b0110 then 0 else 66000) + (if b0111 then 0 else 66000) + (if b0113 then 0 else 66000) + (if b0114 then 0 else 66000) + (if b0151 then 0 else 66000) + (if b0152 then 0 else 66000) + (if b0153 then 0 else 66000) + (if b0154 then 0 else 66000) + (if b0155 then 0 else 66000) + (if b0156 then 0 else 66000) + (if b0157 then 0 else 66000) + (if b0158 then 0 else 66000) + (if b0159 then 0 else 66000) + (if b0160 then 0 else 66000) + (if b0161 then 0 else 66000) + (if b0162 then 0 else 66000) + (if b0163 then 0 else 66000) + (if b0164 then 0 else 66000) < 441
}
Prover Time taken = 32.717419
Added Horn clause: 22 && 9 && 18 && 0 && 0 && 0 && 27 => 41
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/medley/nussinov/kernel2.bpl.ice2.bpl
Total learner time was 00:00:00.1259880
Verifying $kernel2: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool) : bool
{
  0 + (if b0000 then 0 else 66000) + (if b0001 then 0 else 66000) + (if b0003 then 0 else 66000) + (if b0005 then 0 else 66000) + (if b0007 then 0 else 66000) + (if b0008 then 0 else 66000) + (if b0009 then 0 else 66000) + (if b0011 then 0 else 66000) + (if b0014 then 0 else 66000) + (if b0016 then 0 else 66000) + (if b0018 then 0 else 66000) + (if b0019 then 0 else 66000) + (if b0020 then 0 else 66000) + (if b0021 then 0 else 66000) + (if b0023 then 0 else 66000) + (if b0024 then 0 else 66000) + (if b0027 then 0 else 66000) + (if b0029 then 0 else 66000) + (if b0030 then 0 else 66000) + (if b0031 then 0 else 66000) + (if b0032 then 0 else 66000) + (if b0033 then 0 else 66000) + (if b0034 then 0 else 66000) + (if b0035 then 0 else 66000) + (if b0041 then 0 else 66000) + (if b0044 then 0 else 66000) + (if b0046 then 0 else 66000) + (if b0047 then 0 else 66000) + (if b0048 then 0 else 66000) + (if b0052 then 0 else 66000) + (if b0053 then 0 else 66000) + (if b0054 then 0 else 66000) + (if b0056 then 0 else 66000) + (if b0107 then 0 else 66000) + (if b0108 then 0 else 66000) + (if b0109 then 0 else 66000) + (if b0110 then 0 else 66000) + (if b0111 then 0 else 66000) + (if b0113 then 0 else 66000) + (if b0114 then 0 else 66000) + (if b0151 then 0 else 66000) + (if b0152 then 0 else 66000) + (if b0153 then 0 else 66000) + (if b0154 then 0 else 66000) + (if b0155 then 0 else 66000) + (if b0156 then 0 else 66000) + (if b0157 then 0 else 66000) + (if b0158 then 0 else 66000) + (if b0159 then 0 else 66000) + (if b0160 then 0 else 66000) + (if b0161 then 0 else 66000) + (if b0162 then 0 else 66000) + (if b0163 then 0 else 66000) + (if b0164 then 0 else 66000) < 441
}
Prover Time taken = 79.257586
Added Horn clause: 42 => 43
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/medley/nussinov/kernel2.bpl.ice2.bpl
Total learner time was 00:00:00.1223910
Verifying $kernel2: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool) : bool
{
  0 + (if b0000 then 0 else 66000) + (if b0001 then 0 else 66000) + (if b0003 then 0 else 66000) + (if b0005 then 0 else 66000) + (if b0007 then 0 else 66000) + (if b0008 then 0 else 66000) + (if b0009 then 0 else 66000) + (if b0011 then 0 else 66000) + (if b0014 then 0 else 66000) + (if b0016 then 0 else 66000) + (if b0018 then 0 else 66000) + (if b0019 then 0 else 66000) + (if b0020 then 0 else 66000) + (if b0021 then 0 else 66000) + (if b0023 then 0 else 66000) + (if b0024 then 0 else 66000) + (if b0027 then 0 else 66000) + (if b0029 then 0 else 66000) + (if b0030 then 0 else 66000) + (if b0031 then 0 else 66000) + (if b0032 then 0 else 66000) + (if b0033 then 0 else 66000) + (if b0034 then 0 else 66000) + (if b0035 then 0 else 66000) + (if b0041 then 0 else 66000) + (if b0044 then 0 else 66000) + (if b0046 then 0 else 66000) + (if b0047 then 0 else 66000) + (if b0048 then 0 else 66000) + (if b0052 then 0 else 66000) + (if b0053 then 0 else 66000) + (if b0054 then 0 else 66000) + (if b0056 then 0 else 66000) + (if b0107 then 0 else 66000) + (if b0108 then 0 else 66000) + (if b0109 then 0 else 66000) + (if b0110 then 0 else 66000) + (if b0111 then 0 else 66000) + (if b0113 then 0 else 66000) + (if b0151 then 0 else 66000) + (if b0152 then 0 else 66000) + (if b0153 then 0 else 66000) + (if b0154 then 0 else 66000) + (if b0155 then 0 else 66000) + (if b0156 then 0 else 66000) + (if b0157 then 0 else 66000) + (if b0158 then 0 else 66000) + (if b0159 then 0 else 66000) + (if b0160 then 0 else 66000) + (if b0161 then 0 else 66000) + (if b0162 then 0 else 66000) + (if b0163 then 0 else 66000) + (if b0164 then 0 else 66000) < 441
}
Command exited with non-zero status 124
6.26user 5.00system 19:58.62elapsed 0%CPU (0avgtext+0avgdata 76716maxresident)k
352inputs+1800outputs (1major+121399minor)pagefaults 0swaps
FILE:polybench/medley/nussinov/kernel2.bpl.ice2.bpl
#################
Wed May 12 05:30:48 UTC 2021
KEY=awinnow
OUTPUT=/root/Docker/winnow_gpu_timeout.txt
[TRACE] Using prover: /root/Docker/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/root/Docker/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a winnow
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/errorLimit:1
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/stencils/seidel-2d/kernel0.bpl.ice2.bpl
--------------------
Parsing /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/stencils/seidel-2d/kernel0.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /root/Docker/z3/bin/z3
#parameters: 52
Generating VC of $kernel0
Verifying $kernel0: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.32431
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/stencils/seidel-2d/kernel0.bpl.ice2.bpl
Total learner time was 00:00:00.1202350
Verifying $kernel0: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool) : bool
{
  0 + (if b0000 then 0 else 20000) + (if b0001 then 0 else 20000) + (if b0002 then 0 else 20000) + (if b0003 then 0 else 20000) + (if b0004 then 0 else 20000) + (if b0005 then 0 else 20000) + (if b0006 then 0 else 20000) + (if b0007 then 0 else 20000) + (if b0008 then 0 else 20000) + (if b0009 then 0 else 20000) + (if b0010 then 0 else 20000) + (if b0011 then 0 else 20000) + (if b0012 then 0 else 20000) + (if b0013 then 0 else 20000) + (if b0014 then 0 else 20000) + (if b0015 then 0 else 20000) + (if b0016 then 0 else 20000) + (if b0017 then 0 else 20000) + (if b0018 then 0 else 20000) + (if b0019 then 0 else 20000) + (if b0020 then 0 else 20000) + (if b0021 then 0 else 20000) + (if b0022 then 0 else 20000) + (if b0023 then 0 else 20000) + (if b0024 then 0 else 20000) + (if b0025 then 0 else 20000) + (if b0026 then 0 else 20000) + (if b0027 then 0 else 20000) + (if b0028 then 0 else 20000) + (if b0029 then 0 else 20000) + (if b0030 then 0 else 20000) + (if b0031 then 0 else 20000) + (if b0032 then 0 else 20000) + (if b0033 then 0 else 20000) + (if b0034 then 0 else 20000) + (if b0035 then 0 else 20000) + (if b0036 then 0 else 20000) + (if b0037 then 0 else 20000) + (if b0038 then 0 else 20000) + (if b0039 then 0 else 20000) + (if b0040 then 0 else 20000) + (if b0041 then 0 else 20000) + (if b0042 then 0 else 20000) + (if b0043 then 0 else 20000) + (if b0044 then 0 else 20000) + (if b0045 then 0 else 20000) + (if b0046 then 0 else 20000) + (if b0047 then 0 else 20000) + (if b0048 then 0 else 20000) + (if b0049 then 0 else 20000) + (if b0050 then 0 else 20000) + (if b0051 then 0 else 20000) < 441
}
Added: my_inv:1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 10.918512
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/stencils/seidel-2d/kernel0.bpl.ice2.bpl
Total learner time was 00:00:00.1197040
Verifying $kernel0: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool) : bool
{
  0 + (if b0000 then 0 else 20000) + (if b0001 then 0 else 20000) + (if b0003 then 0 else 20000) + (if b0004 then 0 else 20000) + (if b0005 then 0 else 20000) + (if b0006 then 0 else 20000) + (if b0007 then 0 else 20000) + (if b0008 then 0 else 20000) + (if b0009 then 0 else 20000) + (if b0010 then 0 else 20000) + (if b0011 then 0 else 20000) + (if b0012 then 0 else 20000) + (if b0013 then 0 else 20000) + (if b0014 then 0 else 20000) + (if b0015 then 0 else 20000) + (if b0016 then 0 else 20000) + (if b0017 then 0 else 20000) + (if b0018 then 0 else 20000) + (if b0019 then 0 else 20000) + (if b0020 then 0 else 20000) + (if b0021 then 0 else 20000) + (if b0022 then 0 else 20000) + (if b0023 then 0 else 20000) + (if b0024 then 0 else 20000) + (if b0025 then 0 else 20000) + (if b0026 then 0 else 20000) + (if b0027 then 0 else 20000) + (if b0028 then 0 else 20000) + (if b0029 then 0 else 20000) + (if b0030 then 0 else 20000) + (if b0031 then 0 else 20000) + (if b0032 then 0 else 20000) + (if b0033 then 0 else 20000) + (if b0034 then 0 else 20000) + (if b0035 then 0 else 20000) + (if b0036 then 0 else 20000) + (if b0037 then 0 else 20000) + (if b0038 then 0 else 20000) + (if b0039 then 0 else 20000) + (if b0040 then 0 else 20000) + (if b0041 then 0 else 20000) + (if b0042 then 0 else 20000) + (if b0043 then 0 else 20000) + (if b0044 then 0 else 20000) + (if b0045 then 0 else 20000) + (if b0046 then 0 else 20000) + (if b0047 then 0 else 20000) + (if b0048 then 0 else 20000) + (if b0049 then 0 else 20000) + (if b0050 then 0 else 20000) + (if b0051 then 0 else 20000) < 441
}
Prover Time taken = 24.225348
Added Horn clause: 0 => 2
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/stencils/seidel-2d/kernel0.bpl.ice2.bpl
Total learner time was 00:00:00.1201410
Verifying $kernel0: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool) : bool
{
  0 + (if b0000 then 0 else 20000) + (if b0001 then 0 else 20000) + (if b0003 then 0 else 20000) + (if b0004 then 0 else 20000) + (if b0005 then 0 else 20000) + (if b0006 then 0 else 20000) + (if b0007 then 0 else 20000) + (if b0008 then 0 else 20000) + (if b0009 then 0 else 20000) + (if b0010 then 0 else 20000) + (if b0011 then 0 else 20000) + (if b0012 then 0 else 20000) + (if b0013 then 0 else 20000) + (if b0014 then 0 else 20000) + (if b0015 then 0 else 20000) + (if b0016 then 0 else 20000) + (if b0017 then 0 else 20000) + (if b0020 then 0 else 20000) + (if b0021 then 0 else 20000) + (if b0022 then 0 else 20000) + (if b0023 then 0 else 20000) + (if b0024 then 0 else 20000) + (if b0025 then 0 else 20000) + (if b0026 then 0 else 20000) + (if b0027 then 0 else 20000) + (if b0028 then 0 else 20000) + (if b0029 then 0 else 20000) + (if b0030 then 0 else 20000) + (if b0031 then 0 else 20000) + (if b0032 then 0 else 20000) + (if b0033 then 0 else 20000) + (if b0034 then 0 else 20000) + (if b0035 then 0 else 20000) + (if b0036 then 0 else 20000) + (if b0037 then 0 else 20000) + (if b0038 then 0 else 20000) + (if b0039 then 0 else 20000) + (if b0040 then 0 else 20000) + (if b0041 then 0 else 20000) + (if b0042 then 0 else 20000) + (if b0043 then 0 else 20000) + (if b0044 then 0 else 20000) + (if b0045 then 0 else 20000) + (if b0046 then 0 else 20000) + (if b0047 then 0 else 20000) + (if b0048 then 0 else 20000) + (if b0049 then 0 else 20000) + (if b0050 then 0 else 20000) + (if b0051 then 0 else 20000) < 441
}
Prover Time taken = 18.534023
Added Horn clause: 0 => 3
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/stencils/seidel-2d/kernel0.bpl.ice2.bpl
Total learner time was 00:00:00.1192390
Verifying $kernel0: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool) : bool
{
  0 + (if b0000 then 0 else 20000) + (if b0001 then 0 else 20000) + (if b0003 then 0 else 20000) + (if b0004 then 0 else 20000) + (if b0005 then 0 else 20000) + (if b0006 then 0 else 20000) + (if b0007 then 0 else 20000) + (if b0008 then 0 else 20000) + (if b0010 then 0 else 20000) + (if b0011 then 0 else 20000) + (if b0012 then 0 else 20000) + (if b0013 then 0 else 20000) + (if b0014 then 0 else 20000) + (if b0015 then 0 else 20000) + (if b0016 then 0 else 20000) + (if b0017 then 0 else 20000) + (if b0020 then 0 else 20000) + (if b0021 then 0 else 20000) + (if b0022 then 0 else 20000) + (if b0023 then 0 else 20000) + (if b0024 then 0 else 20000) + (if b0025 then 0 else 20000) + (if b0026 then 0 else 20000) + (if b0027 then 0 else 20000) + (if b0028 then 0 else 20000) + (if b0029 then 0 else 20000) + (if b0030 then 0 else 20000) + (if b0031 then 0 else 20000) + (if b0032 then 0 else 20000) + (if b0033 then 0 else 20000) + (if b0034 then 0 else 20000) + (if b0035 then 0 else 20000) + (if b0036 then 0 else 20000) + (if b0037 then 0 else 20000) + (if b0038 then 0 else 20000) + (if b0039 then 0 else 20000) + (if b0040 then 0 else 20000) + (if b0041 then 0 else 20000) + (if b0042 then 0 else 20000) + (if b0043 then 0 else 20000) + (if b0044 then 0 else 20000) + (if b0045 then 0 else 20000) + (if b0046 then 0 else 20000) + (if b0047 then 0 else 20000) + (if b0048 then 0 else 20000) + (if b0049 then 0 else 20000) + (if b0050 then 0 else 20000) + (if b0051 then 0 else 20000) < 441
}
Prover Time taken = 25.386951
Added Horn clause: 1 && 0 && 0 && 0 && 0 => 4
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/stencils/seidel-2d/kernel0.bpl.ice2.bpl
Total learner time was 00:00:00.1200440
Verifying $kernel0: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool) : bool
{
  0 + (if b0000 then 0 else 20000) + (if b0001 then 0 else 20000) + (if b0004 then 0 else 20000) + (if b0006 then 0 else 20000) + (if b0007 then 0 else 20000) + (if b0008 then 0 else 20000) + (if b0010 then 0 else 20000) + (if b0011 then 0 else 20000) + (if b0012 then 0 else 20000) + (if b0013 then 0 else 20000) + (if b0014 then 0 else 20000) + (if b0015 then 0 else 20000) + (if b0016 then 0 else 20000) + (if b0017 then 0 else 20000) + (if b0020 then 0 else 20000) + (if b0021 then 0 else 20000) + (if b0022 then 0 else 20000) + (if b0023 then 0 else 20000) + (if b0024 then 0 else 20000) + (if b0025 then 0 else 20000) + (if b0026 then 0 else 20000) + (if b0027 then 0 else 20000) + (if b0028 then 0 else 20000) + (if b0029 then 0 else 20000) + (if b0030 then 0 else 20000) + (if b0031 then 0 else 20000) + (if b0032 then 0 else 20000) + (if b0033 then 0 else 20000) + (if b0034 then 0 else 20000) + (if b0035 then 0 else 20000) + (if b0036 then 0 else 20000) + (if b0037 then 0 else 20000) + (if b0038 then 0 else 20000) + (if b0039 then 0 else 20000) + (if b0040 then 0 else 20000) + (if b0041 then 0 else 20000) + (if b0042 then 0 else 20000) + (if b0043 then 0 else 20000) + (if b0044 then 0 else 20000) + (if b0045 then 0 else 20000) + (if b0046 then 0 else 20000) + (if b0047 then 0 else 20000) + (if b0048 then 0 else 20000) + (if b0049 then 0 else 20000) + (if b0050 then 0 else 20000) + (if b0051 then 0 else 20000) < 441
}
Prover Time taken = 44.277094
Added Horn clause: 4 => 5
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/stencils/seidel-2d/kernel0.bpl.ice2.bpl
Total learner time was 00:00:00.1203160
Verifying $kernel0: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool) : bool
{
  0 + (if b0000 then 0 else 20000) + (if b0001 then 0 else 20000) + (if b0004 then 0 else 20000) + (if b0006 then 0 else 20000) + (if b0007 then 0 else 20000) + (if b0008 then 0 else 20000) + (if b0010 then 0 else 20000) + (if b0011 then 0 else 20000) + (if b0012 then 0 else 20000) + (if b0013 then 0 else 20000) + (if b0014 then 0 else 20000) + (if b0015 then 0 else 20000) + (if b0016 then 0 else 20000) + (if b0017 then 0 else 20000) + (if b0020 then 0 else 20000) + (if b0023 then 0 else 20000) + (if b0024 then 0 else 20000) + (if b0025 then 0 else 20000) + (if b0026 then 0 else 20000) + (if b0027 then 0 else 20000) + (if b0028 then 0 else 20000) + (if b0029 then 0 else 20000) + (if b0030 then 0 else 20000) + (if b0031 then 0 else 20000) + (if b0032 then 0 else 20000) + (if b0033 then 0 else 20000) + (if b0034 then 0 else 20000) + (if b0035 then 0 else 20000) + (if b0036 then 0 else 20000) + (if b0037 then 0 else 20000) + (if b0038 then 0 else 20000) + (if b0039 then 0 else 20000) + (if b0040 then 0 else 20000) + (if b0041 then 0 else 20000) + (if b0042 then 0 else 20000) + (if b0043 then 0 else 20000) + (if b0044 then 0 else 20000) + (if b0045 then 0 else 20000) + (if b0046 then 0 else 20000) + (if b0047 then 0 else 20000) + (if b0048 then 0 else 20000) + (if b0049 then 0 else 20000) + (if b0050 then 0 else 20000) + (if b0051 then 0 else 20000) < 441
}
Prover Time taken = 23.324257
Added Horn clause: 0 => 6
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/stencils/seidel-2d/kernel0.bpl.ice2.bpl
Total learner time was 00:00:00.1254390
Verifying $kernel0: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool) : bool
{
  0 + (if b0000 then 0 else 20000) + (if b0001 then 0 else 20000) + (if b0004 then 0 else 20000) + (if b0006 then 0 else 20000) + (if b0007 then 0 else 20000) + (if b0008 then 0 else 20000) + (if b0010 then 0 else 20000) + (if b0012 then 0 else 20000) + (if b0013 then 0 else 20000) + (if b0014 then 0 else 20000) + (if b0015 then 0 else 20000) + (if b0016 then 0 else 20000) + (if b0017 then 0 else 20000) + (if b0020 then 0 else 20000) + (if b0023 then 0 else 20000) + (if b0024 then 0 else 20000) + (if b0025 then 0 else 20000) + (if b0026 then 0 else 20000) + (if b0027 then 0 else 20000) + (if b0028 then 0 else 20000) + (if b0029 then 0 else 20000) + (if b0030 then 0 else 20000) + (if b0031 then 0 else 20000) + (if b0032 then 0 else 20000) + (if b0033 then 0 else 20000) + (if b0034 then 0 else 20000) + (if b0035 then 0 else 20000) + (if b0036 then 0 else 20000) + (if b0037 then 0 else 20000) + (if b0038 then 0 else 20000) + (if b0039 then 0 else 20000) + (if b0040 then 0 else 20000) + (if b0041 then 0 else 20000) + (if b0042 then 0 else 20000) + (if b0043 then 0 else 20000) + (if b0044 then 0 else 20000) + (if b0045 then 0 else 20000) + (if b0046 then 0 else 20000) + (if b0047 then 0 else 20000) + (if b0048 then 0 else 20000) + (if b0049 then 0 else 20000) + (if b0050 then 0 else 20000) + (if b0051 then 0 else 20000) < 441
}
Prover Time taken = 54.24837
Added Horn clause: 7 && 0 && 2 => 8
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/stencils/seidel-2d/kernel0.bpl.ice2.bpl
Total learner time was 00:00:00.1188980
Verifying $kernel0: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool) : bool
{
  0 + (if b0000 then 0 else 20000) + (if b0001 then 0 else 20000) + (if b0004 then 0 else 20000) + (if b0006 then 0 else 20000) + (if b0007 then 0 else 20000) + (if b0008 then 0 else 20000) + (if b0010 then 0 else 20000) + (if b0012 then 0 else 20000) + (if b0013 then 0 else 20000) + (if b0014 then 0 else 20000) + (if b0015 then 0 else 20000) + (if b0016 then 0 else 20000) + (if b0017 then 0 else 20000) + (if b0020 then 0 else 20000) + (if b0023 then 0 else 20000) + (if b0024 then 0 else 20000) + (if b0025 then 0 else 20000) + (if b0026 then 0 else 20000) + (if b0027 then 0 else 20000) + (if b0028 then 0 else 20000) + (if b0029 then 0 else 20000) + (if b0030 then 0 else 20000) + (if b0031 then 0 else 20000) + (if b0032 then 0 else 20000) + (if b0033 then 0 else 20000) + (if b0036 then 0 else 20000) + (if b0038 then 0 else 20000) + (if b0039 then 0 else 20000) + (if b0040 then 0 else 20000) + (if b0041 then 0 else 20000) + (if b0042 then 0 else 20000) + (if b0043 then 0 else 20000) + (if b0044 then 0 else 20000) + (if b0045 then 0 else 20000) + (if b0046 then 0 else 20000) + (if b0047 then 0 else 20000) + (if b0048 then 0 else 20000) + (if b0049 then 0 else 20000) + (if b0050 then 0 else 20000) + (if b0051 then 0 else 20000) < 441
}
Prover Time taken = 24.8102
Added Horn clause: 4 => 9
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/stencils/seidel-2d/kernel0.bpl.ice2.bpl
Total learner time was 00:00:00.1192600
Verifying $kernel0: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool) : bool
{
  0 + (if b0000 then 0 else 20000) + (if b0001 then 0 else 20000) + (if b0004 then 0 else 20000) + (if b0006 then 0 else 20000) + (if b0007 then 0 else 20000) + (if b0008 then 0 else 20000) + (if b0010 then 0 else 20000) + (if b0012 then 0 else 20000) + (if b0013 then 0 else 20000) + (if b0014 then 0 else 20000) + (if b0015 then 0 else 20000) + (if b0016 then 0 else 20000) + (if b0017 then 0 else 20000) + (if b0020 then 0 else 20000) + (if b0024 then 0 else 20000) + (if b0025 then 0 else 20000) + (if b0026 then 0 else 20000) + (if b0027 then 0 else 20000) + (if b0028 then 0 else 20000) + (if b0029 then 0 else 20000) + (if b0030 then 0 else 20000) + (if b0031 then 0 else 20000) + (if b0032 then 0 else 20000) + (if b0033 then 0 else 20000) + (if b0036 then 0 else 20000) + (if b0038 then 0 else 20000) + (if b0039 then 0 else 20000) + (if b0040 then 0 else 20000) + (if b0041 then 0 else 20000) + (if b0042 then 0 else 20000) + (if b0043 then 0 else 20000) + (if b0044 then 0 else 20000) + (if b0045 then 0 else 20000) + (if b0046 then 0 else 20000) + (if b0047 then 0 else 20000) + (if b0048 then 0 else 20000) + (if b0049 then 0 else 20000) + (if b0050 then 0 else 20000) + (if b0051 then 0 else 20000) < 441
}
Prover Time taken = 46.54601
Added Horn clause: 0 && 0 && 10 => 11
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/stencils/seidel-2d/kernel0.bpl.ice2.bpl
Total learner time was 00:00:00.1192930
Verifying $kernel0: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool) : bool
{
  0 + (if b0000 then 0 else 20000) + (if b0001 then 0 else 20000) + (if b0004 then 0 else 20000) + (if b0006 then 0 else 20000) + (if b0007 then 0 else 20000) + (if b0008 then 0 else 20000) + (if b0010 then 0 else 20000) + (if b0012 then 0 else 20000) + (if b0013 then 0 else 20000) + (if b0014 then 0 else 20000) + (if b0015 then 0 else 20000) + (if b0016 then 0 else 20000) + (if b0017 then 0 else 20000) + (if b0020 then 0 else 20000) + (if b0024 then 0 else 20000) + (if b0026 then 0 else 20000) + (if b0028 then 0 else 20000) + (if b0029 then 0 else 20000) + (if b0030 then 0 else 20000) + (if b0031 then 0 else 20000) + (if b0032 then 0 else 20000) + (if b0033 then 0 else 20000) + (if b0036 then 0 else 20000) + (if b0038 then 0 else 20000) + (if b0039 then 0 else 20000) + (if b0040 then 0 else 20000) + (if b0041 then 0 else 20000) + (if b0042 then 0 else 20000) + (if b0043 then 0 else 20000) + (if b0044 then 0 else 20000) + (if b0045 then 0 else 20000) + (if b0046 then 0 else 20000) + (if b0047 then 0 else 20000) + (if b0048 then 0 else 20000) + (if b0049 then 0 else 20000) + (if b0050 then 0 else 20000) + (if b0051 then 0 else 20000) < 441
}
Prover Time taken = 35.717599
Added Horn clause: 4 && 0 && 12 => 13
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/stencils/seidel-2d/kernel0.bpl.ice2.bpl
Total learner time was 00:00:00.1235140
Verifying $kernel0: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool) : bool
{
  0 + (if b0000 then 0 else 20000) + (if b0001 then 0 else 20000) + (if b0004 then 0 else 20000) + (if b0006 then 0 else 20000) + (if b0007 then 0 else 20000) + (if b0008 then 0 else 20000) + (if b0010 then 0 else 20000) + (if b0012 then 0 else 20000) + (if b0013 then 0 else 20000) + (if b0014 then 0 else 20000) + (if b0015 then 0 else 20000) + (if b0016 then 0 else 20000) + (if b0017 then 0 else 20000) + (if b0020 then 0 else 20000) + (if b0024 then 0 else 20000) + (if b0026 then 0 else 20000) + (if b0028 then 0 else 20000) + (if b0029 then 0 else 20000) + (if b0030 then 0 else 20000) + (if b0031 then 0 else 20000) + (if b0032 then 0 else 20000) + (if b0033 then 0 else 20000) + (if b0036 then 0 else 20000) + (if b0040 then 0 else 20000) + (if b0042 then 0 else 20000) + (if b0043 then 0 else 20000) + (if b0044 then 0 else 20000) + (if b0045 then 0 else 20000) + (if b0046 then 0 else 20000) + (if b0047 then 0 else 20000) + (if b0048 then 0 else 20000) + (if b0049 then 0 else 20000) + (if b0050 then 0 else 20000) + (if b0051 then 0 else 20000) < 441
}
Prover Time taken = 29.225421
Added Horn clause: 0 && 0 && 0 && 0 && 0 => 14
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/stencils/seidel-2d/kernel0.bpl.ice2.bpl
Total learner time was 00:00:00.1216280
Verifying $kernel0: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool) : bool
{
  0 + (if b0000 then 0 else 20000) + (if b0001 then 0 else 20000) + (if b0004 then 0 else 20000) + (if b0006 then 0 else 20000) + (if b0007 then 0 else 20000) + (if b0008 then 0 else 20000) + (if b0010 then 0 else 20000) + (if b0013 then 0 else 20000) + (if b0015 then 0 else 20000) + (if b0016 then 0 else 20000) + (if b0017 then 0 else 20000) + (if b0020 then 0 else 20000) + (if b0024 then 0 else 20000) + (if b0026 then 0 else 20000) + (if b0028 then 0 else 20000) + (if b0029 then 0 else 20000) + (if b0030 then 0 else 20000) + (if b0031 then 0 else 20000) + (if b0032 then 0 else 20000) + (if b0033 then 0 else 20000) + (if b0036 then 0 else 20000) + (if b0040 then 0 else 20000) + (if b0042 then 0 else 20000) + (if b0043 then 0 else 20000) + (if b0044 then 0 else 20000) + (if b0045 then 0 else 20000) + (if b0046 then 0 else 20000) + (if b0047 then 0 else 20000) + (if b0048 then 0 else 20000) + (if b0049 then 0 else 20000) + (if b0050 then 0 else 20000) + (if b0051 then 0 else 20000) < 441
}
Prover Time taken = 35.007725
Added Horn clause: 1 => 15
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/stencils/seidel-2d/kernel0.bpl.ice2.bpl
Total learner time was 00:00:00.1206210
Verifying $kernel0: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool) : bool
{
  0 + (if b0000 then 0 else 20000) + (if b0001 then 0 else 20000) + (if b0004 then 0 else 20000) + (if b0006 then 0 else 20000) + (if b0007 then 0 else 20000) + (if b0008 then 0 else 20000) + (if b0010 then 0 else 20000) + (if b0013 then 0 else 20000) + (if b0015 then 0 else 20000) + (if b0016 then 0 else 20000) + (if b0017 then 0 else 20000) + (if b0024 then 0 else 20000) + (if b0026 then 0 else 20000) + (if b0028 then 0 else 20000) + (if b0029 then 0 else 20000) + (if b0030 then 0 else 20000) + (if b0031 then 0 else 20000) + (if b0032 then 0 else 20000) + (if b0033 then 0 else 20000) + (if b0036 then 0 else 20000) + (if b0040 then 0 else 20000) + (if b0042 then 0 else 20000) + (if b0043 then 0 else 20000) + (if b0044 then 0 else 20000) + (if b0045 then 0 else 20000) + (if b0046 then 0 else 20000) + (if b0047 then 0 else 20000) + (if b0048 then 0 else 20000) + (if b0049 then 0 else 20000) + (if b0050 then 0 else 20000) + (if b0051 then 0 else 20000) < 441
}
Prover Time taken = 35.994022
Added Horn clause: 7 && 0 && 16 => 17
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/stencils/seidel-2d/kernel0.bpl.ice2.bpl
Total learner time was 00:00:00.1216580
Verifying $kernel0: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool) : bool
{
  0 + (if b0000 then 0 else 20000) + (if b0001 then 0 else 20000) + (if b0004 then 0 else 20000) + (if b0006 then 0 else 20000) + (if b0007 then 0 else 20000) + (if b0008 then 0 else 20000) + (if b0010 then 0 else 20000) + (if b0013 then 0 else 20000) + (if b0015 then 0 else 20000) + (if b0016 then 0 else 20000) + (if b0017 then 0 else 20000) + (if b0024 then 0 else 20000) + (if b0026 then 0 else 20000) + (if b0028 then 0 else 20000) + (if b0029 then 0 else 20000) + (if b0030 then 0 else 20000) + (if b0031 then 0 else 20000) + (if b0032 then 0 else 20000) + (if b0033 then 0 else 20000) + (if b0042 then 0 else 20000) + (if b0043 then 0 else 20000) + (if b0044 then 0 else 20000) + (if b0045 then 0 else 20000) + (if b0046 then 0 else 20000) + (if b0047 then 0 else 20000) + (if b0048 then 0 else 20000) + (if b0049 then 0 else 20000) + (if b0050 then 0 else 20000) + (if b0051 then 0 else 20000) < 441
}
Prover Time taken = 65.198808
Added Horn clause: 0 && 0 && 0 && 0 && 11 => 18
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/polybench/stencils/seidel-2d/kernel0.bpl.ice2.bpl
Total learner time was 00:00:00.1226380
Verifying $kernel0: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool) : bool
{
  0 + (if b0000 then 0 else 20000) + (if b0001 then 0 else 20000) + (if b0004 then 0 else 20000) + (if b0006 then 0 else 20000) + (if b0007 then 0 else 20000) + (if b0008 then 0 else 20000) + (if b0010 then 0 else 20000) + (if b0013 then 0 else 20000) + (if b0015 then 0 else 20000) + (if b0016 then 0 else 20000) + (if b0017 then 0 else 20000) + (if b0024 then 0 else 20000) + (if b0026 then 0 else 20000) + (if b0029 then 0 else 20000) + (if b0031 then 0 else 20000) + (if b0032 then 0 else 20000) + (if b0033 then 0 else 20000) + (if b0042 then 0 else 20000) + (if b0043 then 0 else 20000) + (if b0044 then 0 else 20000) + (if b0045 then 0 else 20000) + (if b0046 then 0 else 20000) + (if b0047 then 0 else 20000) + (if b0048 then 0 else 20000) + (if b0049 then 0 else 20000) + (if b0050 then 0 else 20000) + (if b0051 then 0 else 20000) < 441
}
Command exited with non-zero status 124
4.21user 3.81system 19:58.62elapsed 0%CPU (0avgtext+0avgdata 75040maxresident)k
448inputs+680outputs (1major+66348minor)pagefaults 0swaps
FILE:polybench/stencils/seidel-2d/kernel0.bpl.ice2.bpl
#################
Wed May 12 05:50:47 UTC 2021
KEY=awinnow
OUTPUT=/root/Docker/winnow_gpu_timeout.txt
[TRACE] Using prover: /root/Docker/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/root/Docker/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a winnow
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/errorLimit:1
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/rodinia_2.4/b+tree/findK/_kernel.bpl.ice2.bpl
--------------------
Parsing /root/Docker/benchmarks/BenchmarksCompiled/awinnow/rodinia_2.4/b+tree/findK/_kernel.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /root/Docker/z3/bin/z3
#parameters: 13
Generating VC of $findK
Verifying $findK: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.170254
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/rodinia_2.4/b+tree/findK/_kernel.bpl.ice2.bpl
Total learner time was 00:00:00.1182660
Verifying $findK: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool) : bool
{
  0 + (if b0000 then 0 else 5000) + (if b0001 then 0 else 5000) + (if b0002 then 0 else 5000) + (if b0003 then 0 else 5000) + (if b0004 then 0 else 5000) + (if b0005 then 0 else 5000) + (if b0006 then 0 else 5000) + (if b0007 then 0 else 5000) + (if b0008 then 0 else 5000) + (if b0009 then 0 else 5000) + (if b0010 then 0 else 5000) + (if b0011 then 0 else 5000) + (if b0012 then 0 else 5000) < 441
}
Prover Time taken = 0.185232
Added Horn clause: 0 => 1
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/rodinia_2.4/b+tree/findK/_kernel.bpl.ice2.bpl
Total learner time was 00:00:00.1204960
Verifying $findK: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool) : bool
{
  0 + (if b0000 then 0 else 5000) + (if b0002 then 0 else 5000) + (if b0004 then 0 else 5000) + (if b0005 then 0 else 5000) + (if b0006 then 0 else 5000) + (if b0007 then 0 else 5000) + (if b0008 then 0 else 5000) + (if b0009 then 0 else 5000) + (if b0010 then 0 else 5000) + (if b0011 then 0 else 5000) + (if b0012 then 0 else 5000) < 441
}
Overwrote: my_inv:1,0,1,0,1,1,1,1,1,1,1,1,1: negative
Prover Time taken = 0.14046
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/rodinia_2.4/b+tree/findK/_kernel.bpl.ice2.bpl
[0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1] -> 0 Predicated Label: 1 True Label 0 not consistent!
sorcar: sorcar.cpp:229: int main(int, char* const*): Assertion `sorcar::is_consistent(X, datapoints, horn_constraints)' failed.
The learner seems to have run into an error!

Unhandled Exception:
Microsoft.Boogie.Houdini.MLHoudiniInternalError: The learner seems to have run into an error!
  at Microsoft.Boogie.Houdini.MLHoudini.learn (System.Collections.Generic.HashSet`1[System.String]& funcsChanged) [0x000e7] in <3034164c407e4adc8ab666e7c26ee7b8>:0 
  at Microsoft.Boogie.Houdini.MLHoudini.LearnInv (System.Collections.Generic.Dictionary`2[TKey,TValue] impl2Priority) [0x00782] in <3034164c407e4adc8ab666e7c26ee7b8>:0 
  at Microsoft.Boogie.Houdini.MLHoudini.ComputeSummaries () [0x0019c] in <3034164c407e4adc8ab666e7c26ee7b8>:0 
  at Microsoft.Boogie.ExecutionEngine.RunMLHoudini (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, Microsoft.Boogie.ErrorReporterDelegate er, System.String filename) [0x00055] in <392c81a181e742f795ac4613c6efd8ce>:0 
  at Microsoft.Boogie.ExecutionEngine.RunHoudini (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, Microsoft.Boogie.ErrorReporterDelegate er, System.String filename) [0x00021] in <392c81a181e742f795ac4613c6efd8ce>:0 
  at Microsoft.Boogie.ExecutionEngine.InferAndVerify (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, System.String filename, Microsoft.Boogie.ErrorReporterDelegate er, System.String requestId) [0x00136] in <392c81a181e742f795ac4613c6efd8ce>:0 
  at Microsoft.Boogie.ExecutionEngine.ProcessFiles (System.Collections.Generic.List`1[T] fileNames, System.Boolean lookForSnapshots) [0x002bd] in <392c81a181e742f795ac4613c6efd8ce>:0 
  at Microsoft.Boogie.OnlyBoogie.Main (System.String[] args) [0x0029f] in <581a14d47152481e860a87838c548766>:0 
[ERROR] FATAL UNHANDLED EXCEPTION: Microsoft.Boogie.Houdini.MLHoudiniInternalError: The learner seems to have run into an error!
  at Microsoft.Boogie.Houdini.MLHoudini.learn (System.Collections.Generic.HashSet`1[System.String]& funcsChanged) [0x000e7] in <3034164c407e4adc8ab666e7c26ee7b8>:0 
  at Microsoft.Boogie.Houdini.MLHoudini.LearnInv (System.Collections.Generic.Dictionary`2[TKey,TValue] impl2Priority) [0x00782] in <3034164c407e4adc8ab666e7c26ee7b8>:0 
  at Microsoft.Boogie.Houdini.MLHoudini.ComputeSummaries () [0x0019c] in <3034164c407e4adc8ab666e7c26ee7b8>:0 
  at Microsoft.Boogie.ExecutionEngine.RunMLHoudini (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, Microsoft.Boogie.ErrorReporterDelegate er, System.String filename) [0x00055] in <392c81a181e742f795ac4613c6efd8ce>:0 
  at Microsoft.Boogie.ExecutionEngine.RunHoudini (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, Microsoft.Boogie.ErrorReporterDelegate er, System.String filename) [0x00021] in <392c81a181e742f795ac4613c6efd8ce>:0 
  at Microsoft.Boogie.ExecutionEngine.InferAndVerify (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, System.String filename, Microsoft.Boogie.ErrorReporterDelegate er, System.String requestId) [0x00136] in <392c81a181e742f795ac4613c6efd8ce>:0 
  at Microsoft.Boogie.ExecutionEngine.ProcessFiles (System.Collections.Generic.List`1[T] fileNames, System.Boolean lookForSnapshots) [0x002bd] in <392c81a181e742f795ac4613c6efd8ce>:0 
  at Microsoft.Boogie.OnlyBoogie.Main (System.String[] args) [0x0029f] in <581a14d47152481e860a87838c548766>:0 
Command exited with non-zero status 1
0.84user 1.21system 0:02.31elapsed 88%CPU (0avgtext+0avgdata 45660maxresident)k
136inputs+104outputs (1major+14473minor)pagefaults 0swaps
FILE:rodinia_2.4/b+tree/findK/_kernel.bpl.ice2.bpl
#################
Wed May 12 05:50:49 UTC 2021
KEY=awinnow
OUTPUT=/root/Docker/winnow_gpu_timeout.txt
[TRACE] Using prover: /root/Docker/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/root/Docker/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a winnow
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/errorLimit:1
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/rodinia_2.4/b+tree/findRangeK/_kernel.bpl.ice2.bpl
--------------------
Parsing /root/Docker/benchmarks/BenchmarksCompiled/awinnow/rodinia_2.4/b+tree/findRangeK/_kernel.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /root/Docker/z3/bin/z3
#parameters: 21
Generating VC of $findRangeK
Verifying $findRangeK: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.172051
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/rodinia_2.4/b+tree/findRangeK/_kernel.bpl.ice2.bpl
Total learner time was 00:00:00.1190000
Verifying $findRangeK: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool) : bool
{
  0 + (if b0000 then 0 else 8000) + (if b0001 then 0 else 8000) + (if b0002 then 0 else 8000) + (if b0003 then 0 else 8000) + (if b0004 then 0 else 8000) + (if b0005 then 0 else 8000) + (if b0006 then 0 else 8000) + (if b0007 then 0 else 8000) + (if b0008 then 0 else 8000) + (if b0009 then 0 else 8000) + (if b0010 then 0 else 8000) + (if b0011 then 0 else 8000) + (if b0012 then 0 else 8000) + (if b0013 then 0 else 8000) + (if b0014 then 0 else 8000) + (if b0015 then 0 else 8000) + (if b0016 then 0 else 8000) + (if b0017 then 0 else 8000) + (if b0018 then 0 else 8000) + (if b0019 then 0 else 8000) + (if b0020 then 0 else 8000) < 441
}
Overwrote: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: negative
Prover Time taken = 0.604447
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/rodinia_2.4/b+tree/findRangeK/_kernel.bpl.ice2.bpl
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1] -> 0 Predicated Label: 1 True Label 0 not consistent!
sorcar: sorcar.cpp:229: int main(int, char* const*): Assertion `sorcar::is_consistent(X, datapoints, horn_constraints)' failed.
The learner seems to have run into an error!

Unhandled Exception:
Microsoft.Boogie.Houdini.MLHoudiniInternalError: The learner seems to have run into an error!
  at Microsoft.Boogie.Houdini.MLHoudini.learn (System.Collections.Generic.HashSet`1[System.String]& funcsChanged) [0x000e7] in <3034164c407e4adc8ab666e7c26ee7b8>:0 
  at Microsoft.Boogie.Houdini.MLHoudini.LearnInv (System.Collections.Generic.Dictionary`2[TKey,TValue] impl2Priority) [0x00782] in <3034164c407e4adc8ab666e7c26ee7b8>:0 
  at Microsoft.Boogie.Houdini.MLHoudini.ComputeSummaries () [0x0019c] in <3034164c407e4adc8ab666e7c26ee7b8>:0 
  at Microsoft.Boogie.ExecutionEngine.RunMLHoudini (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, Microsoft.Boogie.ErrorReporterDelegate er, System.String filename) [0x00055] in <392c81a181e742f795ac4613c6efd8ce>:0 
  at Microsoft.Boogie.ExecutionEngine.RunHoudini (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, Microsoft.Boogie.ErrorReporterDelegate er, System.String filename) [0x00021] in <392c81a181e742f795ac4613c6efd8ce>:0 
  at Microsoft.Boogie.ExecutionEngine.InferAndVerify (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, System.String filename, Microsoft.Boogie.ErrorReporterDelegate er, System.String requestId) [0x00136] in <392c81a181e742f795ac4613c6efd8ce>:0 
  at Microsoft.Boogie.ExecutionEngine.ProcessFiles (System.Collections.Generic.List`1[T] fileNames, System.Boolean lookForSnapshots) [0x002bd] in <392c81a181e742f795ac4613c6efd8ce>:0 
  at Microsoft.Boogie.OnlyBoogie.Main (System.String[] args) [0x0029f] in <581a14d47152481e860a87838c548766>:0 
[ERROR] FATAL UNHANDLED EXCEPTION: Microsoft.Boogie.Houdini.MLHoudiniInternalError: The learner seems to have run into an error!
  at Microsoft.Boogie.Houdini.MLHoudini.learn (System.Collections.Generic.HashSet`1[System.String]& funcsChanged) [0x000e7] in <3034164c407e4adc8ab666e7c26ee7b8>:0 
  at Microsoft.Boogie.Houdini.MLHoudini.LearnInv (System.Collections.Generic.Dictionary`2[TKey,TValue] impl2Priority) [0x00782] in <3034164c407e4adc8ab666e7c26ee7b8>:0 
  at Microsoft.Boogie.Houdini.MLHoudini.ComputeSummaries () [0x0019c] in <3034164c407e4adc8ab666e7c26ee7b8>:0 
  at Microsoft.Boogie.ExecutionEngine.RunMLHoudini (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, Microsoft.Boogie.ErrorReporterDelegate er, System.String filename) [0x00055] in <392c81a181e742f795ac4613c6efd8ce>:0 
  at Microsoft.Boogie.ExecutionEngine.RunHoudini (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, Microsoft.Boogie.ErrorReporterDelegate er, System.String filename) [0x00021] in <392c81a181e742f795ac4613c6efd8ce>:0 
  at Microsoft.Boogie.ExecutionEngine.InferAndVerify (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, System.String filename, Microsoft.Boogie.ErrorReporterDelegate er, System.String requestId) [0x00136] in <392c81a181e742f795ac4613c6efd8ce>:0 
  at Microsoft.Boogie.ExecutionEngine.ProcessFiles (System.Collections.Generic.List`1[T] fileNames, System.Boolean lookForSnapshots) [0x002bd] in <392c81a181e742f795ac4613c6efd8ce>:0 
  at Microsoft.Boogie.OnlyBoogie.Main (System.String[] args) [0x0029f] in <581a14d47152481e860a87838c548766>:0 
Command exited with non-zero status 1
0.82user 1.11system 0:02.49elapsed 77%CPU (0avgtext+0avgdata 50176maxresident)k
192inputs+56outputs (1major+15202minor)pagefaults 0swaps
FILE:rodinia_2.4/b+tree/findRangeK/_kernel.bpl.ice2.bpl
#################
Wed May 12 05:50:52 UTC 2021
KEY=awinnow
OUTPUT=/root/Docker/winnow_gpu_timeout.txt
[TRACE] Using prover: /root/Docker/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/root/Docker/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a winnow
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/errorLimit:1
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/rodinia_2.4/lavaMD/_kernel.bpl.ice2.bpl
--------------------
Parsing /root/Docker/benchmarks/BenchmarksCompiled/awinnow/rodinia_2.4/lavaMD/_kernel.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /root/Docker/z3/bin/z3
#parameters: 180
Generating VC of $kernel_gpu_opencl
Verifying $kernel_gpu_opencl: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.182981
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/rodinia_2.4/lavaMD/_kernel.bpl.ice2.bpl
Total learner time was 00:00:00.1254060
Verifying $kernel_gpu_opencl: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool) : bool
{
  0 + (if b0000 then 0 else 72000) + (if b0001 then 0 else 72000) + (if b0002 then 0 else 72000) + (if b0003 then 0 else 72000) + (if b0004 then 0 else 72000) + (if b0005 then 0 else 72000) + (if b0006 then 0 else 72000) + (if b0007 then 0 else 72000) + (if b0008 then 0 else 72000) + (if b0009 then 0 else 72000) + (if b0010 then 0 else 72000) + (if b0011 then 0 else 72000) + (if b0012 then 0 else 72000) + (if b0013 then 0 else 72000) + (if b0014 then 0 else 72000) + (if b0015 then 0 else 72000) + (if b0016 then 0 else 72000) + (if b0017 then 0 else 72000) + (if b0018 then 0 else 72000) + (if b0019 then 0 else 72000) + (if b0020 then 0 else 72000) + (if b0021 then 0 else 72000) + (if b0022 then 0 else 72000) + (if b0023 then 0 else 72000) + (if b0024 then 0 else 72000) + (if b0025 then 0 else 72000) + (if b0026 then 0 else 72000) + (if b0027 then 0 else 72000) + (if b0028 then 0 else 72000) + (if b0029 then 0 else 72000) + (if b0030 then 0 else 72000) + (if b0031 then 0 else 72000) + (if b0032 then 0 else 72000) + (if b0033 then 0 else 72000) + (if b0034 then 0 else 72000) + (if b0035 then 0 else 72000) + (if b0036 then 0 else 72000) + (if b0037 then 0 else 72000) + (if b0038 then 0 else 72000) + (if b0039 then 0 else 72000) + (if b0040 then 0 else 72000) + (if b0041 then 0 else 72000) + (if b0042 then 0 else 72000) + (if b0043 then 0 else 72000) + (if b0044 then 0 else 72000) + (if b0045 then 0 else 72000) + (if b0046 then 0 else 72000) + (if b0047 then 0 else 72000) + (if b0048 then 0 else 72000) + (if b0049 then 0 else 72000) + (if b0050 then 0 else 72000) + (if b0051 then 0 else 72000) + (if b0052 then 0 else 72000) + (if b0053 then 0 else 72000) + (if b0054 then 0 else 72000) + (if b0055 then 0 else 72000) + (if b0056 then 0 else 72000) + (if b0057 then 0 else 72000) + (if b0058 then 0 else 72000) + (if b0059 then 0 else 72000) + (if b0060 then 0 else 72000) + (if b0061 then 0 else 72000) + (if b0062 then 0 else 72000) + (if b0063 then 0 else 72000) + (if b0064 then 0 else 72000) + (if b0065 then 0 else 72000) + (if b0066 then 0 else 72000) + (if b0067 then 0 else 72000) + (if b0068 then 0 else 72000) + (if b0069 then 0 else 72000) + (if b0070 then 0 else 72000) + (if b0071 then 0 else 72000) + (if b0072 then 0 else 72000) + (if b0073 then 0 else 72000) + (if b0074 then 0 else 72000) + (if b0075 then 0 else 72000) + (if b0076 then 0 else 72000) + (if b0077 then 0 else 72000) + (if b0078 then 0 else 72000) + (if b0079 then 0 else 72000) + (if b0080 then 0 else 72000) + (if b0081 then 0 else 72000) + (if b0082 then 0 else 72000) + (if b0083 then 0 else 72000) + (if b0084 then 0 else 72000) + (if b0085 then 0 else 72000) + (if b0086 then 0 else 72000) + (if b0087 then 0 else 72000) + (if b0088 then 0 else 72000) + (if b0089 then 0 else 72000) + (if b0090 then 0 else 72000) + (if b0091 then 0 else 72000) + (if b0092 then 0 else 72000) + (if b0093 then 0 else 72000) + (if b0094 then 0 else 72000) + (if b0095 then 0 else 72000) + (if b0096 then 0 else 72000) + (if b0097 then 0 else 72000) + (if b0098 then 0 else 72000) + (if b0099 then 0 else 72000) + (if b0100 then 0 else 72000) + (if b0101 then 0 else 72000) + (if b0102 then 0 else 72000) + (if b0103 then 0 else 72000) + (if b0104 then 0 else 72000) + (if b0105 then 0 else 72000) + (if b0106 then 0 else 72000) + (if b0107 then 0 else 72000) + (if b0108 then 0 else 72000) + (if b0109 then 0 else 72000) + (if b0110 then 0 else 72000) + (if b0111 then 0 else 72000) + (if b0112 then 0 else 72000) + (if b0113 then 0 else 72000) + (if b0114 then 0 else 72000) + (if b0115 then 0 else 72000) + (if b0116 then 0 else 72000) + (if b0117 then 0 else 72000) + (if b0118 then 0 else 72000) + (if b0119 then 0 else 72000) + (if b0120 then 0 else 72000) + (if b0121 then 0 else 72000) + (if b0122 then 0 else 72000) + (if b0123 then 0 else 72000) + (if b0124 then 0 else 72000) + (if b0125 then 0 else 72000) + (if b0126 then 0 else 72000) + (if b0127 then 0 else 72000) + (if b0128 then 0 else 72000) + (if b0129 then 0 else 72000) + (if b0130 then 0 else 72000) + (if b0131 then 0 else 72000) + (if b0132 then 0 else 72000) + (if b0133 then 0 else 72000) + (if b0134 then 0 else 72000) + (if b0135 then 0 else 72000) + (if b0136 then 0 else 72000) + (if b0137 then 0 else 72000) + (if b0138 then 0 else 72000) + (if b0139 then 0 else 72000) + (if b0140 then 0 else 72000) + (if b0141 then 0 else 72000) + (if b0142 then 0 else 72000) + (if b0143 then 0 else 72000) + (if b0144 then 0 else 72000) + (if b0145 then 0 else 72000) + (if b0146 then 0 else 72000) + (if b0147 then 0 else 72000) + (if b0148 then 0 else 72000) + (if b0149 then 0 else 72000) + (if b0150 then 0 else 72000) + (if b0151 then 0 else 72000) + (if b0152 then 0 else 72000) + (if b0153 then 0 else 72000) + (if b0154 then 0 else 72000) + (if b0155 then 0 else 72000) + (if b0156 then 0 else 72000) + (if b0157 then 0 else 72000) + (if b0158 then 0 else 72000) + (if b0159 then 0 else 72000) + (if b0160 then 0 else 72000) + (if b0161 then 0 else 72000) + (if b0162 then 0 else 72000) + (if b0163 then 0 else 72000) + (if b0164 then 0 else 72000) + (if b0165 then 0 else 72000) + (if b0166 then 0 else 72000) + (if b0167 then 0 else 72000) + (if b0168 then 0 else 72000) + (if b0169 then 0 else 72000) + (if b0170 then 0 else 72000) + (if b0171 then 0 else 72000) + (if b0172 then 0 else 72000) + (if b0173 then 0 else 72000) + (if b0174 then 0 else 72000) + (if b0175 then 0 else 72000) + (if b0176 then 0 else 72000) + (if b0177 then 0 else 72000) + (if b0178 then 0 else 72000) + (if b0179 then 0 else 72000) < 441
}
Prover Time taken = 12.06531
Added Horn clause: 0 && 0 => 1
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/rodinia_2.4/lavaMD/_kernel.bpl.ice2.bpl
Total learner time was 00:00:00.1209900
Verifying $kernel_gpu_opencl: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool) : bool
{
  0 + (if b0000 then 0 else 72000) + (if b0001 then 0 else 72000) + (if b0002 then 0 else 72000) + (if b0003 then 0 else 72000) + (if b0004 then 0 else 72000) + (if b0005 then 0 else 72000) + (if b0006 then 0 else 72000) + (if b0007 then 0 else 72000) + (if b0008 then 0 else 72000) + (if b0009 then 0 else 72000) + (if b0010 then 0 else 72000) + (if b0011 then 0 else 72000) + (if b0012 then 0 else 72000) + (if b0013 then 0 else 72000) + (if b0014 then 0 else 72000) + (if b0015 then 0 else 72000) + (if b0016 then 0 else 72000) + (if b0017 then 0 else 72000) + (if b0018 then 0 else 72000) + (if b0019 then 0 else 72000) + (if b0020 then 0 else 72000) + (if b0021 then 0 else 72000) + (if b0022 then 0 else 72000) + (if b0023 then 0 else 72000) + (if b0024 then 0 else 72000) + (if b0025 then 0 else 72000) + (if b0026 then 0 else 72000) + (if b0027 then 0 else 72000) + (if b0028 then 0 else 72000) + (if b0029 then 0 else 72000) + (if b0030 then 0 else 72000) + (if b0031 then 0 else 72000) + (if b0032 then 0 else 72000) + (if b0033 then 0 else 72000) + (if b0034 then 0 else 72000) + (if b0035 then 0 else 72000) + (if b0036 then 0 else 72000) + (if b0037 then 0 else 72000) + (if b0038 then 0 else 72000) + (if b0039 then 0 else 72000) + (if b0040 then 0 else 72000) + (if b0041 then 0 else 72000) + (if b0042 then 0 else 72000) + (if b0043 then 0 else 72000) + (if b0044 then 0 else 72000) + (if b0045 then 0 else 72000) + (if b0046 then 0 else 72000) + (if b0047 then 0 else 72000) + (if b0048 then 0 else 72000) + (if b0049 then 0 else 72000) + (if b0050 then 0 else 72000) + (if b0051 then 0 else 72000) + (if b0052 then 0 else 72000) + (if b0053 then 0 else 72000) + (if b0054 then 0 else 72000) + (if b0055 then 0 else 72000) + (if b0056 then 0 else 72000) + (if b0057 then 0 else 72000) + (if b0058 then 0 else 72000) + (if b0059 then 0 else 72000) + (if b0060 then 0 else 72000) + (if b0061 then 0 else 72000) + (if b0062 then 0 else 72000) + (if b0063 then 0 else 72000) + (if b0064 then 0 else 72000) + (if b0065 then 0 else 72000) + (if b0066 then 0 else 72000) + (if b0067 then 0 else 72000) + (if b0068 then 0 else 72000) + (if b0069 then 0 else 72000) + (if b0070 then 0 else 72000) + (if b0071 then 0 else 72000) + (if b0072 then 0 else 72000) + (if b0073 then 0 else 72000) + (if b0074 then 0 else 72000) + (if b0075 then 0 else 72000) + (if b0076 then 0 else 72000) + (if b0077 then 0 else 72000) + (if b0078 then 0 else 72000) + (if b0079 then 0 else 72000) + (if b0080 then 0 else 72000) + (if b0081 then 0 else 72000) + (if b0082 then 0 else 72000) + (if b0083 then 0 else 72000) + (if b0084 then 0 else 72000) + (if b0085 then 0 else 72000) + (if b0086 then 0 else 72000) + (if b0087 then 0 else 72000) + (if b0088 then 0 else 72000) + (if b0089 then 0 else 72000) + (if b0090 then 0 else 72000) + (if b0091 then 0 else 72000) + (if b0092 then 0 else 72000) + (if b0093 then 0 else 72000) + (if b0094 then 0 else 72000) + (if b0095 then 0 else 72000) + (if b0096 then 0 else 72000) + (if b0097 then 0 else 72000) + (if b0098 then 0 else 72000) + (if b0099 then 0 else 72000) + (if b0100 then 0 else 72000) + (if b0101 then 0 else 72000) + (if b0102 then 0 else 72000) + (if b0103 then 0 else 72000) + (if b0104 then 0 else 72000) + (if b0105 then 0 else 72000) + (if b0106 then 0 else 72000) + (if b0107 then 0 else 72000) + (if b0108 then 0 else 72000) + (if b0109 then 0 else 72000) + (if b0110 then 0 else 72000) + (if b0111 then 0 else 72000) + (if b0112 then 0 else 72000) + (if b0113 then 0 else 72000) + (if b0114 then 0 else 72000) + (if b0115 then 0 else 72000) + (if b0116 then 0 else 72000) + (if b0117 then 0 else 72000) + (if b0118 then 0 else 72000) + (if b0119 then 0 else 72000) + (if b0120 then 0 else 72000) + (if b0121 then 0 else 72000) + (if b0123 then 0 else 72000) + (if b0124 then 0 else 72000) + (if b0125 then 0 else 72000) + (if b0126 then 0 else 72000) + (if b0127 then 0 else 72000) + (if b0128 then 0 else 72000) + (if b0129 then 0 else 72000) + (if b0130 then 0 else 72000) + (if b0131 then 0 else 72000) + (if b0132 then 0 else 72000) + (if b0133 then 0 else 72000) + (if b0134 then 0 else 72000) + (if b0135 then 0 else 72000) + (if b0136 then 0 else 72000) + (if b0137 then 0 else 72000) + (if b0138 then 0 else 72000) + (if b0139 then 0 else 72000) + (if b0140 then 0 else 72000) + (if b0141 then 0 else 72000) + (if b0142 then 0 else 72000) + (if b0143 then 0 else 72000) + (if b0144 then 0 else 72000) + (if b0145 then 0 else 72000) + (if b0146 then 0 else 72000) + (if b0147 then 0 else 72000) + (if b0148 then 0 else 72000) + (if b0149 then 0 else 72000) + (if b0150 then 0 else 72000) + (if b0151 then 0 else 72000) + (if b0152 then 0 else 72000) + (if b0153 then 0 else 72000) + (if b0154 then 0 else 72000) + (if b0155 then 0 else 72000) + (if b0156 then 0 else 72000) + (if b0157 then 0 else 72000) + (if b0158 then 0 else 72000) + (if b0159 then 0 else 72000) + (if b0160 then 0 else 72000) + (if b0161 then 0 else 72000) + (if b0162 then 0 else 72000) + (if b0163 then 0 else 72000) + (if b0164 then 0 else 72000) + (if b0165 then 0 else 72000) + (if b0166 then 0 else 72000) + (if b0167 then 0 else 72000) + (if b0168 then 0 else 72000) + (if b0169 then 0 else 72000) + (if b0170 then 0 else 72000) + (if b0171 then 0 else 72000) + (if b0172 then 0 else 72000) + (if b0173 then 0 else 72000) + (if b0174 then 0 else 72000) + (if b0175 then 0 else 72000) + (if b0176 then 0 else 72000) + (if b0177 then 0 else 72000) + (if b0178 then 0 else 72000) + (if b0179 then 0 else 72000) < 441
}
Prover Time taken = 15.369934
Added Horn clause: 0 && 0 => 2
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/rodinia_2.4/lavaMD/_kernel.bpl.ice2.bpl
Total learner time was 00:00:00.1200230
Verifying $kernel_gpu_opencl: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool) : bool
{
  0 + (if b0000 then 0 else 72000) + (if b0001 then 0 else 72000) + (if b0002 then 0 else 72000) + (if b0003 then 0 else 72000) + (if b0004 then 0 else 72000) + (if b0005 then 0 else 72000) + (if b0006 then 0 else 72000) + (if b0007 then 0 else 72000) + (if b0008 then 0 else 72000) + (if b0009 then 0 else 72000) + (if b0010 then 0 else 72000) + (if b0011 then 0 else 72000) + (if b0012 then 0 else 72000) + (if b0013 then 0 else 72000) + (if b0014 then 0 else 72000) + (if b0015 then 0 else 72000) + (if b0016 then 0 else 72000) + (if b0017 then 0 else 72000) + (if b0018 then 0 else 72000) + (if b0019 then 0 else 72000) + (if b0020 then 0 else 72000) + (if b0021 then 0 else 72000) + (if b0022 then 0 else 72000) + (if b0023 then 0 else 72000) + (if b0024 then 0 else 72000) + (if b0025 then 0 else 72000) + (if b0026 then 0 else 72000) + (if b0027 then 0 else 72000) + (if b0028 then 0 else 72000) + (if b0029 then 0 else 72000) + (if b0030 then 0 else 72000) + (if b0031 then 0 else 72000) + (if b0032 then 0 else 72000) + (if b0033 then 0 else 72000) + (if b0034 then 0 else 72000) + (if b0035 then 0 else 72000) + (if b0036 then 0 else 72000) + (if b0037 then 0 else 72000) + (if b0038 then 0 else 72000) + (if b0039 then 0 else 72000) + (if b0040 then 0 else 72000) + (if b0041 then 0 else 72000) + (if b0042 then 0 else 72000) + (if b0043 then 0 else 72000) + (if b0044 then 0 else 72000) + (if b0045 then 0 else 72000) + (if b0046 then 0 else 72000) + (if b0047 then 0 else 72000) + (if b0048 then 0 else 72000) + (if b0049 then 0 else 72000) + (if b0050 then 0 else 72000) + (if b0051 then 0 else 72000) + (if b0052 then 0 else 72000) + (if b0053 then 0 else 72000) + (if b0054 then 0 else 72000) + (if b0055 then 0 else 72000) + (if b0056 then 0 else 72000) + (if b0057 then 0 else 72000) + (if b0058 then 0 else 72000) + (if b0059 then 0 else 72000) + (if b0060 then 0 else 72000) + (if b0061 then 0 else 72000) + (if b0062 then 0 else 72000) + (if b0063 then 0 else 72000) + (if b0064 then 0 else 72000) + (if b0065 then 0 else 72000) + (if b0066 then 0 else 72000) + (if b0067 then 0 else 72000) + (if b0068 then 0 else 72000) + (if b0069 then 0 else 72000) + (if b0070 then 0 else 72000) + (if b0071 then 0 else 72000) + (if b0072 then 0 else 72000) + (if b0073 then 0 else 72000) + (if b0074 then 0 else 72000) + (if b0075 then 0 else 72000) + (if b0076 then 0 else 72000) + (if b0077 then 0 else 72000) + (if b0078 then 0 else 72000) + (if b0080 then 0 else 72000) + (if b0081 then 0 else 72000) + (if b0082 then 0 else 72000) + (if b0083 then 0 else 72000) + (if b0084 then 0 else 72000) + (if b0085 then 0 else 72000) + (if b0086 then 0 else 72000) + (if b0087 then 0 else 72000) + (if b0088 then 0 else 72000) + (if b0089 then 0 else 72000) + (if b0090 then 0 else 72000) + (if b0091 then 0 else 72000) + (if b0092 then 0 else 72000) + (if b0093 then 0 else 72000) + (if b0094 then 0 else 72000) + (if b0095 then 0 else 72000) + (if b0096 then 0 else 72000) + (if b0097 then 0 else 72000) + (if b0098 then 0 else 72000) + (if b0099 then 0 else 72000) + (if b0100 then 0 else 72000) + (if b0101 then 0 else 72000) + (if b0102 then 0 else 72000) + (if b0103 then 0 else 72000) + (if b0104 then 0 else 72000) + (if b0105 then 0 else 72000) + (if b0106 then 0 else 72000) + (if b0107 then 0 else 72000) + (if b0108 then 0 else 72000) + (if b0109 then 0 else 72000) + (if b0110 then 0 else 72000) + (if b0111 then 0 else 72000) + (if b0112 then 0 else 72000) + (if b0113 then 0 else 72000) + (if b0114 then 0 else 72000) + (if b0115 then 0 else 72000) + (if b0116 then 0 else 72000) + (if b0117 then 0 else 72000) + (if b0118 then 0 else 72000) + (if b0119 then 0 else 72000) + (if b0120 then 0 else 72000) + (if b0121 then 0 else 72000) + (if b0123 then 0 else 72000) + (if b0124 then 0 else 72000) + (if b0125 then 0 else 72000) + (if b0126 then 0 else 72000) + (if b0127 then 0 else 72000) + (if b0128 then 0 else 72000) + (if b0129 then 0 else 72000) + (if b0130 then 0 else 72000) + (if b0131 then 0 else 72000) + (if b0132 then 0 else 72000) + (if b0133 then 0 else 72000) + (if b0134 then 0 else 72000) + (if b0135 then 0 else 72000) + (if b0136 then 0 else 72000) + (if b0137 then 0 else 72000) + (if b0138 then 0 else 72000) + (if b0139 then 0 else 72000) + (if b0140 then 0 else 72000) + (if b0141 then 0 else 72000) + (if b0142 then 0 else 72000) + (if b0143 then 0 else 72000) + (if b0144 then 0 else 72000) + (if b0145 then 0 else 72000) + (if b0146 then 0 else 72000) + (if b0147 then 0 else 72000) + (if b0148 then 0 else 72000) + (if b0149 then 0 else 72000) + (if b0150 then 0 else 72000) + (if b0151 then 0 else 72000) + (if b0152 then 0 else 72000) + (if b0153 then 0 else 72000) + (if b0154 then 0 else 72000) + (if b0155 then 0 else 72000) + (if b0156 then 0 else 72000) + (if b0157 then 0 else 72000) + (if b0158 then 0 else 72000) + (if b0159 then 0 else 72000) + (if b0160 then 0 else 72000) + (if b0161 then 0 else 72000) + (if b0162 then 0 else 72000) + (if b0163 then 0 else 72000) + (if b0164 then 0 else 72000) + (if b0165 then 0 else 72000) + (if b0166 then 0 else 72000) + (if b0167 then 0 else 72000) + (if b0168 then 0 else 72000) + (if b0169 then 0 else 72000) + (if b0170 then 0 else 72000) + (if b0171 then 0 else 72000) + (if b0172 then 0 else 72000) + (if b0173 then 0 else 72000) + (if b0174 then 0 else 72000) + (if b0175 then 0 else 72000) + (if b0176 then 0 else 72000) + (if b0177 then 0 else 72000) + (if b0178 then 0 else 72000) + (if b0179 then 0 else 72000) < 441
}
Prover Time taken = 19.155616
Added Horn clause: 0 && 0 => 3
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/rodinia_2.4/lavaMD/_kernel.bpl.ice2.bpl
Total learner time was 00:00:00.1213460
Verifying $kernel_gpu_opencl: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool) : bool
{
  0 + (if b0000 then 0 else 72000) + (if b0001 then 0 else 72000) + (if b0002 then 0 else 72000) + (if b0003 then 0 else 72000) + (if b0004 then 0 else 72000) + (if b0005 then 0 else 72000) + (if b0006 then 0 else 72000) + (if b0007 then 0 else 72000) + (if b0008 then 0 else 72000) + (if b0009 then 0 else 72000) + (if b0011 then 0 else 72000) + (if b0012 then 0 else 72000) + (if b0013 then 0 else 72000) + (if b0014 then 0 else 72000) + (if b0015 then 0 else 72000) + (if b0016 then 0 else 72000) + (if b0017 then 0 else 72000) + (if b0018 then 0 else 72000) + (if b0019 then 0 else 72000) + (if b0020 then 0 else 72000) + (if b0021 then 0 else 72000) + (if b0022 then 0 else 72000) + (if b0023 then 0 else 72000) + (if b0024 then 0 else 72000) + (if b0025 then 0 else 72000) + (if b0026 then 0 else 72000) + (if b0027 then 0 else 72000) + (if b0028 then 0 else 72000) + (if b0029 then 0 else 72000) + (if b0030 then 0 else 72000) + (if b0031 then 0 else 72000) + (if b0032 then 0 else 72000) + (if b0033 then 0 else 72000) + (if b0034 then 0 else 72000) + (if b0035 then 0 else 72000) + (if b0036 then 0 else 72000) + (if b0037 then 0 else 72000) + (if b0038 then 0 else 72000) + (if b0039 then 0 else 72000) + (if b0040 then 0 else 72000) + (if b0041 then 0 else 72000) + (if b0042 then 0 else 72000) + (if b0043 then 0 else 72000) + (if b0044 then 0 else 72000) + (if b0045 then 0 else 72000) + (if b0046 then 0 else 72000) + (if b0047 then 0 else 72000) + (if b0048 then 0 else 72000) + (if b0049 then 0 else 72000) + (if b0050 then 0 else 72000) + (if b0051 then 0 else 72000) + (if b0052 then 0 else 72000) + (if b0053 then 0 else 72000) + (if b0054 then 0 else 72000) + (if b0055 then 0 else 72000) + (if b0056 then 0 else 72000) + (if b0057 then 0 else 72000) + (if b0058 then 0 else 72000) + (if b0059 then 0 else 72000) + (if b0060 then 0 else 72000) + (if b0061 then 0 else 72000) + (if b0062 then 0 else 72000) + (if b0063 then 0 else 72000) + (if b0064 then 0 else 72000) + (if b0065 then 0 else 72000) + (if b0066 then 0 else 72000) + (if b0067 then 0 else 72000) + (if b0068 then 0 else 72000) + (if b0069 then 0 else 72000) + (if b0070 then 0 else 72000) + (if b0071 then 0 else 72000) + (if b0072 then 0 else 72000) + (if b0073 then 0 else 72000) + (if b0074 then 0 else 72000) + (if b0075 then 0 else 72000) + (if b0076 then 0 else 72000) + (if b0077 then 0 else 72000) + (if b0078 then 0 else 72000) + (if b0080 then 0 else 72000) + (if b0081 then 0 else 72000) + (if b0082 then 0 else 72000) + (if b0083 then 0 else 72000) + (if b0084 then 0 else 72000) + (if b0085 then 0 else 72000) + (if b0086 then 0 else 72000) + (if b0087 then 0 else 72000) + (if b0088 then 0 else 72000) + (if b0089 then 0 else 72000) + (if b0090 then 0 else 72000) + (if b0091 then 0 else 72000) + (if b0092 then 0 else 72000) + (if b0093 then 0 else 72000) + (if b0094 then 0 else 72000) + (if b0095 then 0 else 72000) + (if b0096 then 0 else 72000) + (if b0097 then 0 else 72000) + (if b0098 then 0 else 72000) + (if b0099 then 0 else 72000) + (if b0100 then 0 else 72000) + (if b0101 then 0 else 72000) + (if b0102 then 0 else 72000) + (if b0103 then 0 else 72000) + (if b0104 then 0 else 72000) + (if b0105 then 0 else 72000) + (if b0106 then 0 else 72000) + (if b0107 then 0 else 72000) + (if b0108 then 0 else 72000) + (if b0109 then 0 else 72000) + (if b0110 then 0 else 72000) + (if b0111 then 0 else 72000) + (if b0112 then 0 else 72000) + (if b0113 then 0 else 72000) + (if b0114 then 0 else 72000) + (if b0115 then 0 else 72000) + (if b0116 then 0 else 72000) + (if b0117 then 0 else 72000) + (if b0118 then 0 else 72000) + (if b0119 then 0 else 72000) + (if b0120 then 0 else 72000) + (if b0121 then 0 else 72000) + (if b0123 then 0 else 72000) + (if b0124 then 0 else 72000) + (if b0125 then 0 else 72000) + (if b0126 then 0 else 72000) + (if b0127 then 0 else 72000) + (if b0128 then 0 else 72000) + (if b0129 then 0 else 72000) + (if b0130 then 0 else 72000) + (if b0131 then 0 else 72000) + (if b0132 then 0 else 72000) + (if b0133 then 0 else 72000) + (if b0134 then 0 else 72000) + (if b0135 then 0 else 72000) + (if b0136 then 0 else 72000) + (if b0137 then 0 else 72000) + (if b0138 then 0 else 72000) + (if b0139 then 0 else 72000) + (if b0140 then 0 else 72000) + (if b0141 then 0 else 72000) + (if b0142 then 0 else 72000) + (if b0143 then 0 else 72000) + (if b0144 then 0 else 72000) + (if b0145 then 0 else 72000) + (if b0146 then 0 else 72000) + (if b0147 then 0 else 72000) + (if b0148 then 0 else 72000) + (if b0149 then 0 else 72000) + (if b0150 then 0 else 72000) + (if b0151 then 0 else 72000) + (if b0152 then 0 else 72000) + (if b0153 then 0 else 72000) + (if b0154 then 0 else 72000) + (if b0155 then 0 else 72000) + (if b0156 then 0 else 72000) + (if b0157 then 0 else 72000) + (if b0158 then 0 else 72000) + (if b0159 then 0 else 72000) + (if b0160 then 0 else 72000) + (if b0161 then 0 else 72000) + (if b0162 then 0 else 72000) + (if b0163 then 0 else 72000) + (if b0164 then 0 else 72000) + (if b0165 then 0 else 72000) + (if b0166 then 0 else 72000) + (if b0167 then 0 else 72000) + (if b0168 then 0 else 72000) + (if b0169 then 0 else 72000) + (if b0170 then 0 else 72000) + (if b0171 then 0 else 72000) + (if b0172 then 0 else 72000) + (if b0173 then 0 else 72000) + (if b0174 then 0 else 72000) + (if b0175 then 0 else 72000) + (if b0176 then 0 else 72000) + (if b0177 then 0 else 72000) + (if b0178 then 0 else 72000) + (if b0179 then 0 else 72000) < 441
}
Prover Time taken = 15.824668
Added Horn clause: 0 && 0 => 4
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/rodinia_2.4/lavaMD/_kernel.bpl.ice2.bpl
Total learner time was 00:00:00.1204450
Verifying $kernel_gpu_opencl: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool) : bool
{
  0 + (if b0000 then 0 else 72000) + (if b0001 then 0 else 72000) + (if b0003 then 0 else 72000) + (if b0005 then 0 else 72000) + (if b0006 then 0 else 72000) + (if b0007 then 0 else 72000) + (if b0008 then 0 else 72000) + (if b0009 then 0 else 72000) + (if b0011 then 0 else 72000) + (if b0012 then 0 else 72000) + (if b0013 then 0 else 72000) + (if b0014 then 0 else 72000) + (if b0015 then 0 else 72000) + (if b0016 then 0 else 72000) + (if b0017 then 0 else 72000) + (if b0018 then 0 else 72000) + (if b0019 then 0 else 72000) + (if b0020 then 0 else 72000) + (if b0021 then 0 else 72000) + (if b0022 then 0 else 72000) + (if b0023 then 0 else 72000) + (if b0024 then 0 else 72000) + (if b0025 then 0 else 72000) + (if b0026 then 0 else 72000) + (if b0027 then 0 else 72000) + (if b0028 then 0 else 72000) + (if b0029 then 0 else 72000) + (if b0030 then 0 else 72000) + (if b0031 then 0 else 72000) + (if b0032 then 0 else 72000) + (if b0033 then 0 else 72000) + (if b0034 then 0 else 72000) + (if b0035 then 0 else 72000) + (if b0036 then 0 else 72000) + (if b0037 then 0 else 72000) + (if b0038 then 0 else 72000) + (if b0039 then 0 else 72000) + (if b0040 then 0 else 72000) + (if b0041 then 0 else 72000) + (if b0042 then 0 else 72000) + (if b0043 then 0 else 72000) + (if b0044 then 0 else 72000) + (if b0045 then 0 else 72000) + (if b0046 then 0 else 72000) + (if b0047 then 0 else 72000) + (if b0048 then 0 else 72000) + (if b0049 then 0 else 72000) + (if b0050 then 0 else 72000) + (if b0051 then 0 else 72000) + (if b0052 then 0 else 72000) + (if b0053 then 0 else 72000) + (if b0054 then 0 else 72000) + (if b0055 then 0 else 72000) + (if b0056 then 0 else 72000) + (if b0057 then 0 else 72000) + (if b0058 then 0 else 72000) + (if b0059 then 0 else 72000) + (if b0060 then 0 else 72000) + (if b0061 then 0 else 72000) + (if b0062 then 0 else 72000) + (if b0063 then 0 else 72000) + (if b0064 then 0 else 72000) + (if b0065 then 0 else 72000) + (if b0066 then 0 else 72000) + (if b0067 then 0 else 72000) + (if b0068 then 0 else 72000) + (if b0069 then 0 else 72000) + (if b0070 then 0 else 72000) + (if b0071 then 0 else 72000) + (if b0072 then 0 else 72000) + (if b0073 then 0 else 72000) + (if b0074 then 0 else 72000) + (if b0075 then 0 else 72000) + (if b0076 then 0 else 72000) + (if b0077 then 0 else 72000) + (if b0078 then 0 else 72000) + (if b0080 then 0 else 72000) + (if b0081 then 0 else 72000) + (if b0082 then 0 else 72000) + (if b0083 then 0 else 72000) + (if b0084 then 0 else 72000) + (if b0085 then 0 else 72000) + (if b0086 then 0 else 72000) + (if b0087 then 0 else 72000) + (if b0088 then 0 else 72000) + (if b0089 then 0 else 72000) + (if b0090 then 0 else 72000) + (if b0091 then 0 else 72000) + (if b0092 then 0 else 72000) + (if b0093 then 0 else 72000) + (if b0094 then 0 else 72000) + (if b0095 then 0 else 72000) + (if b0096 then 0 else 72000) + (if b0097 then 0 else 72000) + (if b0098 then 0 else 72000) + (if b0099 then 0 else 72000) + (if b0100 then 0 else 72000) + (if b0101 then 0 else 72000) + (if b0102 then 0 else 72000) + (if b0103 then 0 else 72000) + (if b0104 then 0 else 72000) + (if b0105 then 0 else 72000) + (if b0106 then 0 else 72000) + (if b0107 then 0 else 72000) + (if b0108 then 0 else 72000) + (if b0109 then 0 else 72000) + (if b0110 then 0 else 72000) + (if b0111 then 0 else 72000) + (if b0112 then 0 else 72000) + (if b0113 then 0 else 72000) + (if b0114 then 0 else 72000) + (if b0115 then 0 else 72000) + (if b0116 then 0 else 72000) + (if b0117 then 0 else 72000) + (if b0118 then 0 else 72000) + (if b0119 then 0 else 72000) + (if b0120 then 0 else 72000) + (if b0121 then 0 else 72000) + (if b0123 then 0 else 72000) + (if b0124 then 0 else 72000) + (if b0125 then 0 else 72000) + (if b0126 then 0 else 72000) + (if b0127 then 0 else 72000) + (if b0128 then 0 else 72000) + (if b0129 then 0 else 72000) + (if b0130 then 0 else 72000) + (if b0131 then 0 else 72000) + (if b0132 then 0 else 72000) + (if b0133 then 0 else 72000) + (if b0134 then 0 else 72000) + (if b0135 then 0 else 72000) + (if b0136 then 0 else 72000) + (if b0137 then 0 else 72000) + (if b0138 then 0 else 72000) + (if b0139 then 0 else 72000) + (if b0140 then 0 else 72000) + (if b0141 then 0 else 72000) + (if b0142 then 0 else 72000) + (if b0143 then 0 else 72000) + (if b0144 then 0 else 72000) + (if b0145 then 0 else 72000) + (if b0146 then 0 else 72000) + (if b0147 then 0 else 72000) + (if b0148 then 0 else 72000) + (if b0149 then 0 else 72000) + (if b0150 then 0 else 72000) + (if b0151 then 0 else 72000) + (if b0152 then 0 else 72000) + (if b0153 then 0 else 72000) + (if b0154 then 0 else 72000) + (if b0155 then 0 else 72000) + (if b0156 then 0 else 72000) + (if b0157 then 0 else 72000) + (if b0158 then 0 else 72000) + (if b0159 then 0 else 72000) + (if b0160 then 0 else 72000) + (if b0161 then 0 else 72000) + (if b0162 then 0 else 72000) + (if b0163 then 0 else 72000) + (if b0164 then 0 else 72000) + (if b0165 then 0 else 72000) + (if b0166 then 0 else 72000) + (if b0167 then 0 else 72000) + (if b0168 then 0 else 72000) + (if b0169 then 0 else 72000) + (if b0170 then 0 else 72000) + (if b0171 then 0 else 72000) + (if b0172 then 0 else 72000) + (if b0173 then 0 else 72000) + (if b0174 then 0 else 72000) + (if b0175 then 0 else 72000) + (if b0176 then 0 else 72000) + (if b0177 then 0 else 72000) + (if b0178 then 0 else 72000) + (if b0179 then 0 else 72000) < 441
}
Prover Time taken = 7.477849
Added Horn clause: 0 && 0 => 5
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/rodinia_2.4/lavaMD/_kernel.bpl.ice2.bpl
Total learner time was 00:00:00.1202340
Verifying $kernel_gpu_opencl: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool) : bool
{
  0 + (if b0000 then 0 else 72000) + (if b0001 then 0 else 72000) + (if b0003 then 0 else 72000) + (if b0005 then 0 else 72000) + (if b0006 then 0 else 72000) + (if b0007 then 0 else 72000) + (if b0008 then 0 else 72000) + (if b0009 then 0 else 72000) + (if b0011 then 0 else 72000) + (if b0012 then 0 else 72000) + (if b0013 then 0 else 72000) + (if b0014 then 0 else 72000) + (if b0015 then 0 else 72000) + (if b0016 then 0 else 72000) + (if b0017 then 0 else 72000) + (if b0018 then 0 else 72000) + (if b0019 then 0 else 72000) + (if b0020 then 0 else 72000) + (if b0021 then 0 else 72000) + (if b0022 then 0 else 72000) + (if b0023 then 0 else 72000) + (if b0024 then 0 else 72000) + (if b0025 then 0 else 72000) + (if b0026 then 0 else 72000) + (if b0027 then 0 else 72000) + (if b0028 then 0 else 72000) + (if b0029 then 0 else 72000) + (if b0030 then 0 else 72000) + (if b0031 then 0 else 72000) + (if b0032 then 0 else 72000) + (if b0033 then 0 else 72000) + (if b0034 then 0 else 72000) + (if b0035 then 0 else 72000) + (if b0036 then 0 else 72000) + (if b0037 then 0 else 72000) + (if b0038 then 0 else 72000) + (if b0039 then 0 else 72000) + (if b0040 then 0 else 72000) + (if b0041 then 0 else 72000) + (if b0042 then 0 else 72000) + (if b0043 then 0 else 72000) + (if b0044 then 0 else 72000) + (if b0045 then 0 else 72000) + (if b0046 then 0 else 72000) + (if b0047 then 0 else 72000) + (if b0048 then 0 else 72000) + (if b0049 then 0 else 72000) + (if b0050 then 0 else 72000) + (if b0051 then 0 else 72000) + (if b0052 then 0 else 72000) + (if b0053 then 0 else 72000) + (if b0054 then 0 else 72000) + (if b0055 then 0 else 72000) + (if b0056 then 0 else 72000) + (if b0057 then 0 else 72000) + (if b0058 then 0 else 72000) + (if b0059 then 0 else 72000) + (if b0060 then 0 else 72000) + (if b0061 then 0 else 72000) + (if b0062 then 0 else 72000) + (if b0063 then 0 else 72000) + (if b0064 then 0 else 72000) + (if b0065 then 0 else 72000) + (if b0066 then 0 else 72000) + (if b0067 then 0 else 72000) + (if b0068 then 0 else 72000) + (if b0069 then 0 else 72000) + (if b0070 then 0 else 72000) + (if b0071 then 0 else 72000) + (if b0072 then 0 else 72000) + (if b0073 then 0 else 72000) + (if b0074 then 0 else 72000) + (if b0075 then 0 else 72000) + (if b0076 then 0 else 72000) + (if b0077 then 0 else 72000) + (if b0078 then 0 else 72000) + (if b0080 then 0 else 72000) + (if b0081 then 0 else 72000) + (if b0092 then 0 else 72000) + (if b0096 then 0 else 72000) + (if b0100 then 0 else 72000) + (if b0144 then 0 else 72000) + (if b0145 then 0 else 72000) + (if b0146 then 0 else 72000) + (if b0147 then 0 else 72000) + (if b0148 then 0 else 72000) + (if b0149 then 0 else 72000) + (if b0150 then 0 else 72000) + (if b0151 then 0 else 72000) + (if b0152 then 0 else 72000) + (if b0153 then 0 else 72000) + (if b0154 then 0 else 72000) + (if b0155 then 0 else 72000) + (if b0156 then 0 else 72000) + (if b0157 then 0 else 72000) + (if b0158 then 0 else 72000) + (if b0159 then 0 else 72000) + (if b0160 then 0 else 72000) + (if b0161 then 0 else 72000) + (if b0162 then 0 else 72000) + (if b0163 then 0 else 72000) + (if b0164 then 0 else 72000) + (if b0165 then 0 else 72000) + (if b0166 then 0 else 72000) + (if b0167 then 0 else 72000) + (if b0168 then 0 else 72000) + (if b0169 then 0 else 72000) + (if b0170 then 0 else 72000) + (if b0171 then 0 else 72000) + (if b0172 then 0 else 72000) + (if b0173 then 0 else 72000) + (if b0174 then 0 else 72000) + (if b0175 then 0 else 72000) + (if b0176 then 0 else 72000) + (if b0177 then 0 else 72000) + (if b0178 then 0 else 72000) + (if b0179 then 0 else 72000) < 441
}
Prover Time taken = 8.61304
Added Horn clause: 0 && 0 => 6
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/rodinia_2.4/lavaMD/_kernel.bpl.ice2.bpl
Total learner time was 00:00:00.1201070
Verifying $kernel_gpu_opencl: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool) : bool
{
  0 + (if b0000 then 0 else 72000) + (if b0001 then 0 else 72000) + (if b0003 then 0 else 72000) + (if b0005 then 0 else 72000) + (if b0006 then 0 else 72000) + (if b0007 then 0 else 72000) + (if b0008 then 0 else 72000) + (if b0009 then 0 else 72000) + (if b0011 then 0 else 72000) + (if b0012 then 0 else 72000) + (if b0013 then 0 else 72000) + (if b0014 then 0 else 72000) + (if b0015 then 0 else 72000) + (if b0016 then 0 else 72000) + (if b0017 then 0 else 72000) + (if b0018 then 0 else 72000) + (if b0019 then 0 else 72000) + (if b0020 then 0 else 72000) + (if b0021 then 0 else 72000) + (if b0022 then 0 else 72000) + (if b0023 then 0 else 72000) + (if b0024 then 0 else 72000) + (if b0025 then 0 else 72000) + (if b0026 then 0 else 72000) + (if b0027 then 0 else 72000) + (if b0028 then 0 else 72000) + (if b0029 then 0 else 72000) + (if b0030 then 0 else 72000) + (if b0031 then 0 else 72000) + (if b0032 then 0 else 72000) + (if b0033 then 0 else 72000) + (if b0034 then 0 else 72000) + (if b0035 then 0 else 72000) + (if b0036 then 0 else 72000) + (if b0037 then 0 else 72000) + (if b0038 then 0 else 72000) + (if b0039 then 0 else 72000) + (if b0040 then 0 else 72000) + (if b0041 then 0 else 72000) + (if b0042 then 0 else 72000) + (if b0043 then 0 else 72000) + (if b0044 then 0 else 72000) + (if b0045 then 0 else 72000) + (if b0046 then 0 else 72000) + (if b0047 then 0 else 72000) + (if b0048 then 0 else 72000) + (if b0049 then 0 else 72000) + (if b0050 then 0 else 72000) + (if b0051 then 0 else 72000) + (if b0052 then 0 else 72000) + (if b0053 then 0 else 72000) + (if b0054 then 0 else 72000) + (if b0055 then 0 else 72000) + (if b0056 then 0 else 72000) + (if b0057 then 0 else 72000) + (if b0058 then 0 else 72000) + (if b0059 then 0 else 72000) + (if b0060 then 0 else 72000) + (if b0061 then 0 else 72000) + (if b0062 then 0 else 72000) + (if b0063 then 0 else 72000) + (if b0064 then 0 else 72000) + (if b0065 then 0 else 72000) + (if b0066 then 0 else 72000) + (if b0067 then 0 else 72000) + (if b0068 then 0 else 72000) + (if b0069 then 0 else 72000) + (if b0070 then 0 else 72000) + (if b0071 then 0 else 72000) + (if b0072 then 0 else 72000) + (if b0073 then 0 else 72000) + (if b0074 then 0 else 72000) + (if b0075 then 0 else 72000) + (if b0076 then 0 else 72000) + (if b0077 then 0 else 72000) + (if b0078 then 0 else 72000) + (if b0080 then 0 else 72000) + (if b0081 then 0 else 72000) + (if b0144 then 0 else 72000) + (if b0145 then 0 else 72000) + (if b0146 then 0 else 72000) + (if b0147 then 0 else 72000) + (if b0148 then 0 else 72000) + (if b0149 then 0 else 72000) + (if b0150 then 0 else 72000) + (if b0151 then 0 else 72000) + (if b0152 then 0 else 72000) + (if b0153 then 0 else 72000) + (if b0154 then 0 else 72000) + (if b0155 then 0 else 72000) + (if b0156 then 0 else 72000) + (if b0157 then 0 else 72000) + (if b0158 then 0 else 72000) + (if b0159 then 0 else 72000) + (if b0160 then 0 else 72000) + (if b0161 then 0 else 72000) + (if b0162 then 0 else 72000) + (if b0163 then 0 else 72000) + (if b0164 then 0 else 72000) + (if b0165 then 0 else 72000) + (if b0166 then 0 else 72000) + (if b0167 then 0 else 72000) + (if b0168 then 0 else 72000) + (if b0169 then 0 else 72000) + (if b0170 then 0 else 72000) + (if b0171 then 0 else 72000) + (if b0172 then 0 else 72000) + (if b0173 then 0 else 72000) + (if b0174 then 0 else 72000) + (if b0175 then 0 else 72000) + (if b0176 then 0 else 72000) + (if b0177 then 0 else 72000) + (if b0178 then 0 else 72000) + (if b0179 then 0 else 72000) < 441
}
Prover Time taken = 21.347181
Added Horn clause: 0 && 0 && 2 && 3 && 0 && 0 => 7
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/rodinia_2.4/lavaMD/_kernel.bpl.ice2.bpl
Total learner time was 00:00:00.1219460
Verifying $kernel_gpu_opencl: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool) : bool
{
  0 + (if b0000 then 0 else 72000) + (if b0001 then 0 else 72000) + (if b0003 then 0 else 72000) + (if b0005 then 0 else 72000) + (if b0006 then 0 else 72000) + (if b0007 then 0 else 72000) + (if b0008 then 0 else 72000) + (if b0009 then 0 else 72000) + (if b0011 then 0 else 72000) + (if b0012 then 0 else 72000) + (if b0013 then 0 else 72000) + (if b0014 then 0 else 72000) + (if b0015 then 0 else 72000) + (if b0016 then 0 else 72000) + (if b0017 then 0 else 72000) + (if b0018 then 0 else 72000) + (if b0019 then 0 else 72000) + (if b0020 then 0 else 72000) + (if b0021 then 0 else 72000) + (if b0022 then 0 else 72000) + (if b0023 then 0 else 72000) + (if b0024 then 0 else 72000) + (if b0025 then 0 else 72000) + (if b0026 then 0 else 72000) + (if b0028 then 0 else 72000) + (if b0030 then 0 else 72000) + (if b0031 then 0 else 72000) + (if b0032 then 0 else 72000) + (if b0033 then 0 else 72000) + (if b0034 then 0 else 72000) + (if b0035 then 0 else 72000) + (if b0036 then 0 else 72000) + (if b0037 then 0 else 72000) + (if b0038 then 0 else 72000) + (if b0039 then 0 else 72000) + (if b0040 then 0 else 72000) + (if b0041 then 0 else 72000) + (if b0042 then 0 else 72000) + (if b0043 then 0 else 72000) + (if b0044 then 0 else 72000) + (if b0045 then 0 else 72000) + (if b0046 then 0 else 72000) + (if b0047 then 0 else 72000) + (if b0048 then 0 else 72000) + (if b0049 then 0 else 72000) + (if b0050 then 0 else 72000) + (if b0051 then 0 else 72000) + (if b0052 then 0 else 72000) + (if b0053 then 0 else 72000) + (if b0054 then 0 else 72000) + (if b0055 then 0 else 72000) + (if b0056 then 0 else 72000) + (if b0057 then 0 else 72000) + (if b0058 then 0 else 72000) + (if b0059 then 0 else 72000) + (if b0060 then 0 else 72000) + (if b0061 then 0 else 72000) + (if b0062 then 0 else 72000) + (if b0063 then 0 else 72000) + (if b0064 then 0 else 72000) + (if b0065 then 0 else 72000) + (if b0066 then 0 else 72000) + (if b0067 then 0 else 72000) + (if b0068 then 0 else 72000) + (if b0069 then 0 else 72000) + (if b0070 then 0 else 72000) + (if b0071 then 0 else 72000) + (if b0072 then 0 else 72000) + (if b0073 then 0 else 72000) + (if b0074 then 0 else 72000) + (if b0075 then 0 else 72000) + (if b0076 then 0 else 72000) + (if b0077 then 0 else 72000) + (if b0078 then 0 else 72000) + (if b0080 then 0 else 72000) + (if b0081 then 0 else 72000) + (if b0144 then 0 else 72000) + (if b0145 then 0 else 72000) + (if b0146 then 0 else 72000) + (if b0147 then 0 else 72000) + (if b0148 then 0 else 72000) + (if b0149 then 0 else 72000) + (if b0150 then 0 else 72000) + (if b0151 then 0 else 72000) + (if b0152 then 0 else 72000) + (if b0153 then 0 else 72000) + (if b0154 then 0 else 72000) + (if b0155 then 0 else 72000) + (if b0156 then 0 else 72000) + (if b0157 then 0 else 72000) + (if b0158 then 0 else 72000) + (if b0159 then 0 else 72000) + (if b0160 then 0 else 72000) + (if b0161 then 0 else 72000) + (if b0162 then 0 else 72000) + (if b0163 then 0 else 72000) + (if b0164 then 0 else 72000) + (if b0165 then 0 else 72000) + (if b0166 then 0 else 72000) + (if b0167 then 0 else 72000) + (if b0168 then 0 else 72000) + (if b0169 then 0 else 72000) + (if b0170 then 0 else 72000) + (if b0171 then 0 else 72000) + (if b0172 then 0 else 72000) + (if b0173 then 0 else 72000) + (if b0174 then 0 else 72000) + (if b0175 then 0 else 72000) + (if b0176 then 0 else 72000) + (if b0177 then 0 else 72000) + (if b0178 then 0 else 72000) + (if b0179 then 0 else 72000) < 441
}
Prover Time taken = 10.262574
Added Horn clause: 0 && 0 && 2 && 3 && 0 && 0 && 0 && 0 => 8
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/rodinia_2.4/lavaMD/_kernel.bpl.ice2.bpl
Total learner time was 00:00:00.1214290
Verifying $kernel_gpu_opencl: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool) : bool
{
  0 + (if b0000 then 0 else 72000) + (if b0001 then 0 else 72000) + (if b0003 then 0 else 72000) + (if b0005 then 0 else 72000) + (if b0006 then 0 else 72000) + (if b0007 then 0 else 72000) + (if b0008 then 0 else 72000) + (if b0009 then 0 else 72000) + (if b0011 then 0 else 72000) + (if b0012 then 0 else 72000) + (if b0013 then 0 else 72000) + (if b0014 then 0 else 72000) + (if b0015 then 0 else 72000) + (if b0016 then 0 else 72000) + (if b0017 then 0 else 72000) + (if b0018 then 0 else 72000) + (if b0019 then 0 else 72000) + (if b0020 then 0 else 72000) + (if b0021 then 0 else 72000) + (if b0022 then 0 else 72000) + (if b0023 then 0 else 72000) + (if b0024 then 0 else 72000) + (if b0025 then 0 else 72000) + (if b0026 then 0 else 72000) + (if b0028 then 0 else 72000) + (if b0030 then 0 else 72000) + (if b0031 then 0 else 72000) + (if b0032 then 0 else 72000) + (if b0033 then 0 else 72000) + (if b0034 then 0 else 72000) + (if b0035 then 0 else 72000) + (if b0036 then 0 else 72000) + (if b0037 then 0 else 72000) + (if b0038 then 0 else 72000) + (if b0039 then 0 else 72000) + (if b0040 then 0 else 72000) + (if b0041 then 0 else 72000) + (if b0042 then 0 else 72000) + (if b0043 then 0 else 72000) + (if b0044 then 0 else 72000) + (if b0045 then 0 else 72000) + (if b0046 then 0 else 72000) + (if b0047 then 0 else 72000) + (if b0048 then 0 else 72000) + (if b0049 then 0 else 72000) + (if b0050 then 0 else 72000) + (if b0051 then 0 else 72000) + (if b0052 then 0 else 72000) + (if b0053 then 0 else 72000) + (if b0054 then 0 else 72000) + (if b0055 then 0 else 72000) + (if b0056 then 0 else 72000) + (if b0057 then 0 else 72000) + (if b0058 then 0 else 72000) + (if b0059 then 0 else 72000) + (if b0060 then 0 else 72000) + (if b0061 then 0 else 72000) + (if b0062 then 0 else 72000) + (if b0063 then 0 else 72000) + (if b0064 then 0 else 72000) + (if b0065 then 0 else 72000) + (if b0066 then 0 else 72000) + (if b0067 then 0 else 72000) + (if b0068 then 0 else 72000) + (if b0069 then 0 else 72000) + (if b0070 then 0 else 72000) + (if b0071 then 0 else 72000) + (if b0072 then 0 else 72000) + (if b0074 then 0 else 72000) + (if b0075 then 0 else 72000) + (if b0077 then 0 else 72000) + (if b0078 then 0 else 72000) + (if b0080 then 0 else 72000) + (if b0081 then 0 else 72000) + (if b0144 then 0 else 72000) + (if b0145 then 0 else 72000) + (if b0146 then 0 else 72000) + (if b0147 then 0 else 72000) + (if b0148 then 0 else 72000) + (if b0149 then 0 else 72000) + (if b0150 then 0 else 72000) + (if b0151 then 0 else 72000) + (if b0152 then 0 else 72000) + (if b0153 then 0 else 72000) + (if b0154 then 0 else 72000) + (if b0155 then 0 else 72000) + (if b0156 then 0 else 72000) + (if b0157 then 0 else 72000) + (if b0158 then 0 else 72000) + (if b0159 then 0 else 72000) + (if b0160 then 0 else 72000) + (if b0161 then 0 else 72000) + (if b0162 then 0 else 72000) + (if b0163 then 0 else 72000) + (if b0164 then 0 else 72000) + (if b0165 then 0 else 72000) + (if b0166 then 0 else 72000) + (if b0167 then 0 else 72000) + (if b0168 then 0 else 72000) + (if b0169 then 0 else 72000) + (if b0170 then 0 else 72000) + (if b0171 then 0 else 72000) + (if b0172 then 0 else 72000) + (if b0173 then 0 else 72000) + (if b0174 then 0 else 72000) + (if b0175 then 0 else 72000) + (if b0176 then 0 else 72000) + (if b0177 then 0 else 72000) + (if b0178 then 0 else 72000) + (if b0179 then 0 else 72000) < 441
}
Prover Time taken = 10.235693
Added Horn clause: 0 && 0 && 9 && 0 && 0 && 0 && 0 && 0 && 0 && 0 => 10
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/rodinia_2.4/lavaMD/_kernel.bpl.ice2.bpl
Total learner time was 00:00:00.1214650
Verifying $kernel_gpu_opencl: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool) : bool
{
  0 + (if b0000 then 0 else 72000) + (if b0001 then 0 else 72000) + (if b0003 then 0 else 72000) + (if b0005 then 0 else 72000) + (if b0006 then 0 else 72000) + (if b0007 then 0 else 72000) + (if b0008 then 0 else 72000) + (if b0009 then 0 else 72000) + (if b0011 then 0 else 72000) + (if b0013 then 0 else 72000) + (if b0015 then 0 else 72000) + (if b0016 then 0 else 72000) + (if b0017 then 0 else 72000) + (if b0018 then 0 else 72000) + (if b0019 then 0 else 72000) + (if b0020 then 0 else 72000) + (if b0021 then 0 else 72000) + (if b0022 then 0 else 72000) + (if b0023 then 0 else 72000) + (if b0024 then 0 else 72000) + (if b0025 then 0 else 72000) + (if b0026 then 0 else 72000) + (if b0028 then 0 else 72000) + (if b0030 then 0 else 72000) + (if b0031 then 0 else 72000) + (if b0032 then 0 else 72000) + (if b0033 then 0 else 72000) + (if b0034 then 0 else 72000) + (if b0035 then 0 else 72000) + (if b0036 then 0 else 72000) + (if b0037 then 0 else 72000) + (if b0038 then 0 else 72000) + (if b0039 then 0 else 72000) + (if b0040 then 0 else 72000) + (if b0041 then 0 else 72000) + (if b0042 then 0 else 72000) + (if b0043 then 0 else 72000) + (if b0044 then 0 else 72000) + (if b0045 then 0 else 72000) + (if b0046 then 0 else 72000) + (if b0047 then 0 else 72000) + (if b0048 then 0 else 72000) + (if b0049 then 0 else 72000) + (if b0050 then 0 else 72000) + (if b0051 then 0 else 72000) + (if b0052 then 0 else 72000) + (if b0053 then 0 else 72000) + (if b0054 then 0 else 72000) + (if b0055 then 0 else 72000) + (if b0056 then 0 else 72000) + (if b0057 then 0 else 72000) + (if b0058 then 0 else 72000) + (if b0059 then 0 else 72000) + (if b0060 then 0 else 72000) + (if b0061 then 0 else 72000) + (if b0062 then 0 else 72000) + (if b0063 then 0 else 72000) + (if b0064 then 0 else 72000) + (if b0065 then 0 else 72000) + (if b0066 then 0 else 72000) + (if b0067 then 0 else 72000) + (if b0068 then 0 else 72000) + (if b0069 then 0 else 72000) + (if b0070 then 0 else 72000) + (if b0071 then 0 else 72000) + (if b0072 then 0 else 72000) + (if b0074 then 0 else 72000) + (if b0075 then 0 else 72000) + (if b0077 then 0 else 72000) + (if b0078 then 0 else 72000) + (if b0080 then 0 else 72000) + (if b0081 then 0 else 72000) + (if b0144 then 0 else 72000) + (if b0145 then 0 else 72000) + (if b0146 then 0 else 72000) + (if b0147 then 0 else 72000) + (if b0148 then 0 else 72000) + (if b0149 then 0 else 72000) + (if b0150 then 0 else 72000) + (if b0151 then 0 else 72000) + (if b0152 then 0 else 72000) + (if b0153 then 0 else 72000) + (if b0154 then 0 else 72000) + (if b0155 then 0 else 72000) + (if b0156 then 0 else 72000) + (if b0157 then 0 else 72000) + (if b0158 then 0 else 72000) + (if b0159 then 0 else 72000) + (if b0160 then 0 else 72000) + (if b0161 then 0 else 72000) + (if b0162 then 0 else 72000) + (if b0163 then 0 else 72000) + (if b0164 then 0 else 72000) + (if b0165 then 0 else 72000) + (if b0166 then 0 else 72000) + (if b0167 then 0 else 72000) + (if b0168 then 0 else 72000) + (if b0169 then 0 else 72000) + (if b0170 then 0 else 72000) + (if b0171 then 0 else 72000) + (if b0172 then 0 else 72000) + (if b0173 then 0 else 72000) + (if b0174 then 0 else 72000) + (if b0175 then 0 else 72000) + (if b0176 then 0 else 72000) + (if b0177 then 0 else 72000) + (if b0178 then 0 else 72000) + (if b0179 then 0 else 72000) < 441
}
Prover Time taken = 9.7521
Added Horn clause: 0 && 0 && 2 && 10 && 0 && 0 && 0 && 0 && 0 && 0 => 11
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/rodinia_2.4/lavaMD/_kernel.bpl.ice2.bpl
Total learner time was 00:00:00.1226860
Verifying $kernel_gpu_opencl: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool) : bool
{
  0 + (if b0000 then 0 else 72000) + (if b0001 then 0 else 72000) + (if b0003 then 0 else 72000) + (if b0005 then 0 else 72000) + (if b0006 then 0 else 72000) + (if b0007 then 0 else 72000) + (if b0008 then 0 else 72000) + (if b0009 then 0 else 72000) + (if b0011 then 0 else 72000) + (if b0013 then 0 else 72000) + (if b0015 then 0 else 72000) + (if b0016 then 0 else 72000) + (if b0017 then 0 else 72000) + (if b0018 then 0 else 72000) + (if b0019 then 0 else 72000) + (if b0020 then 0 else 72000) + (if b0021 then 0 else 72000) + (if b0022 then 0 else 72000) + (if b0023 then 0 else 72000) + (if b0024 then 0 else 72000) + (if b0025 then 0 else 72000) + (if b0026 then 0 else 72000) + (if b0028 then 0 else 72000) + (if b0030 then 0 else 72000) + (if b0031 then 0 else 72000) + (if b0032 then 0 else 72000) + (if b0033 then 0 else 72000) + (if b0034 then 0 else 72000) + (if b0035 then 0 else 72000) + (if b0036 then 0 else 72000) + (if b0037 then 0 else 72000) + (if b0038 then 0 else 72000) + (if b0039 then 0 else 72000) + (if b0040 then 0 else 72000) + (if b0041 then 0 else 72000) + (if b0042 then 0 else 72000) + (if b0043 then 0 else 72000) + (if b0044 then 0 else 72000) + (if b0045 then 0 else 72000) + (if b0046 then 0 else 72000) + (if b0047 then 0 else 72000) + (if b0048 then 0 else 72000) + (if b0049 then 0 else 72000) + (if b0050 then 0 else 72000) + (if b0051 then 0 else 72000) + (if b0052 then 0 else 72000) + (if b0053 then 0 else 72000) + (if b0054 then 0 else 72000) + (if b0055 then 0 else 72000) + (if b0057 then 0 else 72000) + (if b0059 then 0 else 72000) + (if b0060 then 0 else 72000) + (if b0061 then 0 else 72000) + (if b0062 then 0 else 72000) + (if b0063 then 0 else 72000) + (if b0064 then 0 else 72000) + (if b0065 then 0 else 72000) + (if b0066 then 0 else 72000) + (if b0067 then 0 else 72000) + (if b0068 then 0 else 72000) + (if b0069 then 0 else 72000) + (if b0070 then 0 else 72000) + (if b0071 then 0 else 72000) + (if b0072 then 0 else 72000) + (if b0074 then 0 else 72000) + (if b0075 then 0 else 72000) + (if b0077 then 0 else 72000) + (if b0078 then 0 else 72000) + (if b0080 then 0 else 72000) + (if b0081 then 0 else 72000) + (if b0144 then 0 else 72000) + (if b0145 then 0 else 72000) + (if b0146 then 0 else 72000) + (if b0147 then 0 else 72000) + (if b0148 then 0 else 72000) + (if b0149 then 0 else 72000) + (if b0150 then 0 else 72000) + (if b0151 then 0 else 72000) + (if b0152 then 0 else 72000) + (if b0153 then 0 else 72000) + (if b0154 then 0 else 72000) + (if b0155 then 0 else 72000) + (if b0156 then 0 else 72000) + (if b0157 then 0 else 72000) + (if b0158 then 0 else 72000) + (if b0159 then 0 else 72000) + (if b0160 then 0 else 72000) + (if b0161 then 0 else 72000) + (if b0162 then 0 else 72000) + (if b0163 then 0 else 72000) + (if b0164 then 0 else 72000) + (if b0165 then 0 else 72000) + (if b0166 then 0 else 72000) + (if b0167 then 0 else 72000) + (if b0168 then 0 else 72000) + (if b0169 then 0 else 72000) + (if b0170 then 0 else 72000) + (if b0171 then 0 else 72000) + (if b0172 then 0 else 72000) + (if b0173 then 0 else 72000) + (if b0174 then 0 else 72000) + (if b0175 then 0 else 72000) + (if b0176 then 0 else 72000) + (if b0177 then 0 else 72000) + (if b0178 then 0 else 72000) + (if b0179 then 0 else 72000) < 441
}
Prover Time taken = 9.278677
Added Horn clause: 0 && 0 && 2 && 10 && 0 && 0 && 0 && 0 && 0 && 12 => 13
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/rodinia_2.4/lavaMD/_kernel.bpl.ice2.bpl
Total learner time was 00:00:00.1204050
Verifying $kernel_gpu_opencl: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool) : bool
{
  0 + (if b0000 then 0 else 72000) + (if b0001 then 0 else 72000) + (if b0003 then 0 else 72000) + (if b0005 then 0 else 72000) + (if b0006 then 0 else 72000) + (if b0007 then 0 else 72000) + (if b0008 then 0 else 72000) + (if b0009 then 0 else 72000) + (if b0011 then 0 else 72000) + (if b0013 then 0 else 72000) + (if b0015 then 0 else 72000) + (if b0016 then 0 else 72000) + (if b0017 then 0 else 72000) + (if b0018 then 0 else 72000) + (if b0019 then 0 else 72000) + (if b0020 then 0 else 72000) + (if b0021 then 0 else 72000) + (if b0022 then 0 else 72000) + (if b0023 then 0 else 72000) + (if b0024 then 0 else 72000) + (if b0025 then 0 else 72000) + (if b0026 then 0 else 72000) + (if b0028 then 0 else 72000) + (if b0030 then 0 else 72000) + (if b0031 then 0 else 72000) + (if b0032 then 0 else 72000) + (if b0033 then 0 else 72000) + (if b0034 then 0 else 72000) + (if b0035 then 0 else 72000) + (if b0036 then 0 else 72000) + (if b0037 then 0 else 72000) + (if b0038 then 0 else 72000) + (if b0039 then 0 else 72000) + (if b0040 then 0 else 72000) + (if b0041 then 0 else 72000) + (if b0042 then 0 else 72000) + (if b0043 then 0 else 72000) + (if b0044 then 0 else 72000) + (if b0045 then 0 else 72000) + (if b0046 then 0 else 72000) + (if b0047 then 0 else 72000) + (if b0048 then 0 else 72000) + (if b0049 then 0 else 72000) + (if b0050 then 0 else 72000) + (if b0051 then 0 else 72000) + (if b0052 then 0 else 72000) + (if b0053 then 0 else 72000) + (if b0054 then 0 else 72000) + (if b0055 then 0 else 72000) + (if b0057 then 0 else 72000) + (if b0059 then 0 else 72000) + (if b0060 then 0 else 72000) + (if b0061 then 0 else 72000) + (if b0062 then 0 else 72000) + (if b0063 then 0 else 72000) + (if b0064 then 0 else 72000) + (if b0065 then 0 else 72000) + (if b0066 then 0 else 72000) + (if b0067 then 0 else 72000) + (if b0068 then 0 else 72000) + (if b0069 then 0 else 72000) + (if b0070 then 0 else 72000) + (if b0071 then 0 else 72000) + (if b0072 then 0 else 72000) + (if b0074 then 0 else 72000) + (if b0075 then 0 else 72000) + (if b0077 then 0 else 72000) + (if b0078 then 0 else 72000) + (if b0080 then 0 else 72000) + (if b0081 then 0 else 72000) + (if b0144 then 0 else 72000) + (if b0146 then 0 else 72000) + (if b0147 then 0 else 72000) + (if b0148 then 0 else 72000) + (if b0149 then 0 else 72000) + (if b0150 then 0 else 72000) + (if b0151 then 0 else 72000) + (if b0152 then 0 else 72000) + (if b0153 then 0 else 72000) + (if b0154 then 0 else 72000) + (if b0155 then 0 else 72000) + (if b0156 then 0 else 72000) + (if b0157 then 0 else 72000) + (if b0158 then 0 else 72000) + (if b0159 then 0 else 72000) + (if b0160 then 0 else 72000) + (if b0161 then 0 else 72000) + (if b0162 then 0 else 72000) + (if b0163 then 0 else 72000) + (if b0164 then 0 else 72000) + (if b0165 then 0 else 72000) + (if b0166 then 0 else 72000) + (if b0167 then 0 else 72000) + (if b0168 then 0 else 72000) + (if b0169 then 0 else 72000) + (if b0170 then 0 else 72000) + (if b0171 then 0 else 72000) + (if b0172 then 0 else 72000) + (if b0173 then 0 else 72000) + (if b0174 then 0 else 72000) + (if b0175 then 0 else 72000) + (if b0176 then 0 else 72000) + (if b0177 then 0 else 72000) + (if b0178 then 0 else 72000) + (if b0179 then 0 else 72000) < 441
}
Prover Time taken = 6.940453
Added Horn clause: 0 && 0 && 14 && 0 && 0 && 0 => 15
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/rodinia_2.4/lavaMD/_kernel.bpl.ice2.bpl
Total learner time was 00:00:00.1219200
Verifying $kernel_gpu_opencl: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool) : bool
{
  0 + (if b0000 then 0 else 72000) + (if b0001 then 0 else 72000) + (if b0003 then 0 else 72000) + (if b0005 then 0 else 72000) + (if b0006 then 0 else 72000) + (if b0007 then 0 else 72000) + (if b0008 then 0 else 72000) + (if b0009 then 0 else 72000) + (if b0011 then 0 else 72000) + (if b0013 then 0 else 72000) + (if b0015 then 0 else 72000) + (if b0016 then 0 else 72000) + (if b0017 then 0 else 72000) + (if b0018 then 0 else 72000) + (if b0019 then 0 else 72000) + (if b0020 then 0 else 72000) + (if b0021 then 0 else 72000) + (if b0022 then 0 else 72000) + (if b0023 then 0 else 72000) + (if b0024 then 0 else 72000) + (if b0025 then 0 else 72000) + (if b0026 then 0 else 72000) + (if b0028 then 0 else 72000) + (if b0030 then 0 else 72000) + (if b0031 then 0 else 72000) + (if b0032 then 0 else 72000) + (if b0033 then 0 else 72000) + (if b0034 then 0 else 72000) + (if b0035 then 0 else 72000) + (if b0036 then 0 else 72000) + (if b0037 then 0 else 72000) + (if b0038 then 0 else 72000) + (if b0039 then 0 else 72000) + (if b0040 then 0 else 72000) + (if b0041 then 0 else 72000) + (if b0042 then 0 else 72000) + (if b0043 then 0 else 72000) + (if b0044 then 0 else 72000) + (if b0045 then 0 else 72000) + (if b0046 then 0 else 72000) + (if b0047 then 0 else 72000) + (if b0048 then 0 else 72000) + (if b0049 then 0 else 72000) + (if b0050 then 0 else 72000) + (if b0051 then 0 else 72000) + (if b0052 then 0 else 72000) + (if b0053 then 0 else 72000) + (if b0055 then 0 else 72000) + (if b0057 then 0 else 72000) + (if b0059 then 0 else 72000) + (if b0060 then 0 else 72000) + (if b0061 then 0 else 72000) + (if b0062 then 0 else 72000) + (if b0063 then 0 else 72000) + (if b0064 then 0 else 72000) + (if b0065 then 0 else 72000) + (if b0066 then 0 else 72000) + (if b0067 then 0 else 72000) + (if b0068 then 0 else 72000) + (if b0069 then 0 else 72000) + (if b0070 then 0 else 72000) + (if b0071 then 0 else 72000) + (if b0072 then 0 else 72000) + (if b0074 then 0 else 72000) + (if b0075 then 0 else 72000) + (if b0077 then 0 else 72000) + (if b0078 then 0 else 72000) + (if b0080 then 0 else 72000) + (if b0081 then 0 else 72000) + (if b0144 then 0 else 72000) + (if b0146 then 0 else 72000) + (if b0147 then 0 else 72000) + (if b0148 then 0 else 72000) + (if b0149 then 0 else 72000) + (if b0150 then 0 else 72000) + (if b0151 then 0 else 72000) + (if b0152 then 0 else 72000) + (if b0153 then 0 else 72000) + (if b0154 then 0 else 72000) + (if b0155 then 0 else 72000) + (if b0156 then 0 else 72000) + (if b0157 then 0 else 72000) + (if b0158 then 0 else 72000) + (if b0159 then 0 else 72000) + (if b0160 then 0 else 72000) + (if b0161 then 0 else 72000) + (if b0162 then 0 else 72000) + (if b0163 then 0 else 72000) + (if b0164 then 0 else 72000) + (if b0165 then 0 else 72000) + (if b0166 then 0 else 72000) + (if b0167 then 0 else 72000) + (if b0168 then 0 else 72000) + (if b0169 then 0 else 72000) + (if b0170 then 0 else 72000) + (if b0171 then 0 else 72000) + (if b0172 then 0 else 72000) + (if b0173 then 0 else 72000) + (if b0174 then 0 else 72000) + (if b0175 then 0 else 72000) + (if b0176 then 0 else 72000) + (if b0177 then 0 else 72000) + (if b0178 then 0 else 72000) + (if b0179 then 0 else 72000) < 441
}
Prover Time taken = 9.260928
Added Horn clause: 0 && 0 && 14 && 0 && 0 && 0 && 0 && 15 => 16
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/rodinia_2.4/lavaMD/_kernel.bpl.ice2.bpl
Total learner time was 00:00:00.1228460
Verifying $kernel_gpu_opencl: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool) : bool
{
  0 + (if b0000 then 0 else 72000) + (if b0001 then 0 else 72000) + (if b0003 then 0 else 72000) + (if b0005 then 0 else 72000) + (if b0006 then 0 else 72000) + (if b0007 then 0 else 72000) + (if b0008 then 0 else 72000) + (if b0009 then 0 else 72000) + (if b0011 then 0 else 72000) + (if b0013 then 0 else 72000) + (if b0015 then 0 else 72000) + (if b0016 then 0 else 72000) + (if b0017 then 0 else 72000) + (if b0018 then 0 else 72000) + (if b0019 then 0 else 72000) + (if b0020 then 0 else 72000) + (if b0021 then 0 else 72000) + (if b0022 then 0 else 72000) + (if b0023 then 0 else 72000) + (if b0024 then 0 else 72000) + (if b0025 then 0 else 72000) + (if b0026 then 0 else 72000) + (if b0028 then 0 else 72000) + (if b0030 then 0 else 72000) + (if b0031 then 0 else 72000) + (if b0032 then 0 else 72000) + (if b0033 then 0 else 72000) + (if b0034 then 0 else 72000) + (if b0035 then 0 else 72000) + (if b0036 then 0 else 72000) + (if b0037 then 0 else 72000) + (if b0038 then 0 else 72000) + (if b0039 then 0 else 72000) + (if b0040 then 0 else 72000) + (if b0041 then 0 else 72000) + (if b0042 then 0 else 72000) + (if b0043 then 0 else 72000) + (if b0044 then 0 else 72000) + (if b0045 then 0 else 72000) + (if b0046 then 0 else 72000) + (if b0047 then 0 else 72000) + (if b0048 then 0 else 72000) + (if b0049 then 0 else 72000) + (if b0050 then 0 else 72000) + (if b0051 then 0 else 72000) + (if b0052 then 0 else 72000) + (if b0053 then 0 else 72000) + (if b0055 then 0 else 72000) + (if b0057 then 0 else 72000) + (if b0059 then 0 else 72000) + (if b0060 then 0 else 72000) + (if b0061 then 0 else 72000) + (if b0062 then 0 else 72000) + (if b0063 then 0 else 72000) + (if b0064 then 0 else 72000) + (if b0065 then 0 else 72000) + (if b0066 then 0 else 72000) + (if b0067 then 0 else 72000) + (if b0068 then 0 else 72000) + (if b0069 then 0 else 72000) + (if b0070 then 0 else 72000) + (if b0071 then 0 else 72000) + (if b0072 then 0 else 72000) + (if b0074 then 0 else 72000) + (if b0077 then 0 else 72000) + (if b0078 then 0 else 72000) + (if b0080 then 0 else 72000) + (if b0081 then 0 else 72000) + (if b0144 then 0 else 72000) + (if b0146 then 0 else 72000) + (if b0147 then 0 else 72000) + (if b0148 then 0 else 72000) + (if b0149 then 0 else 72000) + (if b0150 then 0 else 72000) + (if b0151 then 0 else 72000) + (if b0152 then 0 else 72000) + (if b0153 then 0 else 72000) + (if b0154 then 0 else 72000) + (if b0155 then 0 else 72000) + (if b0156 then 0 else 72000) + (if b0157 then 0 else 72000) + (if b0158 then 0 else 72000) + (if b0159 then 0 else 72000) + (if b0160 then 0 else 72000) + (if b0161 then 0 else 72000) + (if b0162 then 0 else 72000) + (if b0163 then 0 else 72000) + (if b0164 then 0 else 72000) + (if b0165 then 0 else 72000) + (if b0166 then 0 else 72000) + (if b0167 then 0 else 72000) + (if b0168 then 0 else 72000) + (if b0169 then 0 else 72000) + (if b0170 then 0 else 72000) + (if b0171 then 0 else 72000) + (if b0172 then 0 else 72000) + (if b0173 then 0 else 72000) + (if b0174 then 0 else 72000) + (if b0175 then 0 else 72000) + (if b0176 then 0 else 72000) + (if b0177 then 0 else 72000) + (if b0178 then 0 else 72000) + (if b0179 then 0 else 72000) < 441
}
Prover Time taken = 7.456752
Added Horn clause: 0 && 0 && 2 && 10 && 0 && 0 && 0 && 0 && 0 && 17 => 18
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/rodinia_2.4/lavaMD/_kernel.bpl.ice2.bpl
Total learner time was 00:00:00.1240240
Verifying $kernel_gpu_opencl: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool) : bool
{
  0 + (if b0000 then 0 else 72000) + (if b0001 then 0 else 72000) + (if b0003 then 0 else 72000) + (if b0005 then 0 else 72000) + (if b0006 then 0 else 72000) + (if b0007 then 0 else 72000) + (if b0008 then 0 else 72000) + (if b0009 then 0 else 72000) + (if b0011 then 0 else 72000) + (if b0013 then 0 else 72000) + (if b0015 then 0 else 72000) + (if b0016 then 0 else 72000) + (if b0017 then 0 else 72000) + (if b0018 then 0 else 72000) + (if b0019 then 0 else 72000) + (if b0020 then 0 else 72000) + (if b0021 then 0 else 72000) + (if b0022 then 0 else 72000) + (if b0023 then 0 else 72000) + (if b0024 then 0 else 72000) + (if b0025 then 0 else 72000) + (if b0026 then 0 else 72000) + (if b0028 then 0 else 72000) + (if b0030 then 0 else 72000) + (if b0031 then 0 else 72000) + (if b0032 then 0 else 72000) + (if b0033 then 0 else 72000) + (if b0034 then 0 else 72000) + (if b0035 then 0 else 72000) + (if b0036 then 0 else 72000) + (if b0037 then 0 else 72000) + (if b0038 then 0 else 72000) + (if b0039 then 0 else 72000) + (if b0040 then 0 else 72000) + (if b0041 then 0 else 72000) + (if b0042 then 0 else 72000) + (if b0043 then 0 else 72000) + (if b0044 then 0 else 72000) + (if b0045 then 0 else 72000) + (if b0046 then 0 else 72000) + (if b0047 then 0 else 72000) + (if b0048 then 0 else 72000) + (if b0049 then 0 else 72000) + (if b0050 then 0 else 72000) + (if b0051 then 0 else 72000) + (if b0052 then 0 else 72000) + (if b0053 then 0 else 72000) + (if b0055 then 0 else 72000) + (if b0057 then 0 else 72000) + (if b0059 then 0 else 72000) + (if b0060 then 0 else 72000) + (if b0061 then 0 else 72000) + (if b0062 then 0 else 72000) + (if b0063 then 0 else 72000) + (if b0064 then 0 else 72000) + (if b0065 then 0 else 72000) + (if b0066 then 0 else 72000) + (if b0067 then 0 else 72000) + (if b0068 then 0 else 72000) + (if b0069 then 0 else 72000) + (if b0070 then 0 else 72000) + (if b0071 then 0 else 72000) + (if b0072 then 0 else 72000) + (if b0074 then 0 else 72000) + (if b0077 then 0 else 72000) + (if b0078 then 0 else 72000) + (if b0080 then 0 else 72000) + (if b0081 then 0 else 72000) + (if b0146 then 0 else 72000) + (if b0147 then 0 else 72000) + (if b0148 then 0 else 72000) + (if b0149 then 0 else 72000) + (if b0150 then 0 else 72000) + (if b0151 then 0 else 72000) + (if b0152 then 0 else 72000) + (if b0153 then 0 else 72000) + (if b0154 then 0 else 72000) + (if b0155 then 0 else 72000) + (if b0156 then 0 else 72000) + (if b0157 then 0 else 72000) + (if b0158 then 0 else 72000) + (if b0159 then 0 else 72000) + (if b0160 then 0 else 72000) + (if b0161 then 0 else 72000) + (if b0162 then 0 else 72000) + (if b0163 then 0 else 72000) + (if b0164 then 0 else 72000) + (if b0165 then 0 else 72000) + (if b0166 then 0 else 72000) + (if b0167 then 0 else 72000) + (if b0168 then 0 else 72000) + (if b0169 then 0 else 72000) + (if b0170 then 0 else 72000) + (if b0171 then 0 else 72000) + (if b0172 then 0 else 72000) + (if b0173 then 0 else 72000) + (if b0174 then 0 else 72000) + (if b0175 then 0 else 72000) + (if b0176 then 0 else 72000) + (if b0177 then 0 else 72000) + (if b0178 then 0 else 72000) + (if b0179 then 0 else 72000) < 441
}
Prover Time taken = 7.539632
Added Horn clause: 0 && 0 && 19 && 0 && 0 && 0 => 20
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/rodinia_2.4/lavaMD/_kernel.bpl.ice2.bpl
Total learner time was 00:00:00.1264840
Verifying $kernel_gpu_opencl: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool) : bool
{
  0 + (if b0000 then 0 else 72000) + (if b0001 then 0 else 72000) + (if b0003 then 0 else 72000) + (if b0005 then 0 else 72000) + (if b0006 then 0 else 72000) + (if b0007 then 0 else 72000) + (if b0008 then 0 else 72000) + (if b0009 then 0 else 72000) + (if b0011 then 0 else 72000) + (if b0013 then 0 else 72000) + (if b0015 then 0 else 72000) + (if b0016 then 0 else 72000) + (if b0017 then 0 else 72000) + (if b0018 then 0 else 72000) + (if b0019 then 0 else 72000) + (if b0020 then 0 else 72000) + (if b0021 then 0 else 72000) + (if b0022 then 0 else 72000) + (if b0023 then 0 else 72000) + (if b0024 then 0 else 72000) + (if b0025 then 0 else 72000) + (if b0026 then 0 else 72000) + (if b0028 then 0 else 72000) + (if b0030 then 0 else 72000) + (if b0031 then 0 else 72000) + (if b0032 then 0 else 72000) + (if b0033 then 0 else 72000) + (if b0034 then 0 else 72000) + (if b0035 then 0 else 72000) + (if b0036 then 0 else 72000) + (if b0037 then 0 else 72000) + (if b0038 then 0 else 72000) + (if b0039 then 0 else 72000) + (if b0040 then 0 else 72000) + (if b0041 then 0 else 72000) + (if b0042 then 0 else 72000) + (if b0043 then 0 else 72000) + (if b0044 then 0 else 72000) + (if b0045 then 0 else 72000) + (if b0046 then 0 else 72000) + (if b0047 then 0 else 72000) + (if b0048 then 0 else 72000) + (if b0049 then 0 else 72000) + (if b0050 then 0 else 72000) + (if b0051 then 0 else 72000) + (if b0053 then 0 else 72000) + (if b0055 then 0 else 72000) + (if b0057 then 0 else 72000) + (if b0059 then 0 else 72000) + (if b0060 then 0 else 72000) + (if b0061 then 0 else 72000) + (if b0062 then 0 else 72000) + (if b0063 then 0 else 72000) + (if b0064 then 0 else 72000) + (if b0065 then 0 else 72000) + (if b0066 then 0 else 72000) + (if b0067 then 0 else 72000) + (if b0068 then 0 else 72000) + (if b0069 then 0 else 72000) + (if b0070 then 0 else 72000) + (if b0071 then 0 else 72000) + (if b0072 then 0 else 72000) + (if b0074 then 0 else 72000) + (if b0077 then 0 else 72000) + (if b0078 then 0 else 72000) + (if b0080 then 0 else 72000) + (if b0081 then 0 else 72000) + (if b0146 then 0 else 72000) + (if b0147 then 0 else 72000) + (if b0148 then 0 else 72000) + (if b0149 then 0 else 72000) + (if b0150 then 0 else 72000) + (if b0151 then 0 else 72000) + (if b0152 then 0 else 72000) + (if b0153 then 0 else 72000) + (if b0154 then 0 else 72000) + (if b0155 then 0 else 72000) + (if b0156 then 0 else 72000) + (if b0157 then 0 else 72000) + (if b0158 then 0 else 72000) + (if b0159 then 0 else 72000) + (if b0160 then 0 else 72000) + (if b0161 then 0 else 72000) + (if b0162 then 0 else 72000) + (if b0163 then 0 else 72000) + (if b0164 then 0 else 72000) + (if b0165 then 0 else 72000) + (if b0166 then 0 else 72000) + (if b0167 then 0 else 72000) + (if b0168 then 0 else 72000) + (if b0169 then 0 else 72000) + (if b0170 then 0 else 72000) + (if b0171 then 0 else 72000) + (if b0172 then 0 else 72000) + (if b0173 then 0 else 72000) + (if b0174 then 0 else 72000) + (if b0175 then 0 else 72000) + (if b0176 then 0 else 72000) + (if b0177 then 0 else 72000) + (if b0178 then 0 else 72000) + (if b0179 then 0 else 72000) < 441
}
Prover Time taken = 7.864787
Added Horn clause: 0 && 0 && 21 && 0 && 0 && 0 && 0 && 22 => 23
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/rodinia_2.4/lavaMD/_kernel.bpl.ice2.bpl
Total learner time was 00:00:00.1221180
Verifying $kernel_gpu_opencl: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool) : bool
{
  0 + (if b0000 then 0 else 72000) + (if b0001 then 0 else 72000) + (if b0003 then 0 else 72000) + (if b0005 then 0 else 72000) + (if b0006 then 0 else 72000) + (if b0007 then 0 else 72000) + (if b0008 then 0 else 72000) + (if b0009 then 0 else 72000) + (if b0011 then 0 else 72000) + (if b0013 then 0 else 72000) + (if b0015 then 0 else 72000) + (if b0016 then 0 else 72000) + (if b0017 then 0 else 72000) + (if b0018 then 0 else 72000) + (if b0019 then 0 else 72000) + (if b0020 then 0 else 72000) + (if b0021 then 0 else 72000) + (if b0022 then 0 else 72000) + (if b0023 then 0 else 72000) + (if b0024 then 0 else 72000) + (if b0025 then 0 else 72000) + (if b0026 then 0 else 72000) + (if b0028 then 0 else 72000) + (if b0030 then 0 else 72000) + (if b0031 then 0 else 72000) + (if b0032 then 0 else 72000) + (if b0033 then 0 else 72000) + (if b0034 then 0 else 72000) + (if b0035 then 0 else 72000) + (if b0036 then 0 else 72000) + (if b0037 then 0 else 72000) + (if b0038 then 0 else 72000) + (if b0039 then 0 else 72000) + (if b0040 then 0 else 72000) + (if b0041 then 0 else 72000) + (if b0042 then 0 else 72000) + (if b0043 then 0 else 72000) + (if b0044 then 0 else 72000) + (if b0045 then 0 else 72000) + (if b0046 then 0 else 72000) + (if b0047 then 0 else 72000) + (if b0048 then 0 else 72000) + (if b0049 then 0 else 72000) + (if b0050 then 0 else 72000) + (if b0051 then 0 else 72000) + (if b0053 then 0 else 72000) + (if b0055 then 0 else 72000) + (if b0057 then 0 else 72000) + (if b0059 then 0 else 72000) + (if b0060 then 0 else 72000) + (if b0061 then 0 else 72000) + (if b0062 then 0 else 72000) + (if b0063 then 0 else 72000) + (if b0064 then 0 else 72000) + (if b0065 then 0 else 72000) + (if b0066 then 0 else 72000) + (if b0067 then 0 else 72000) + (if b0068 then 0 else 72000) + (if b0069 then 0 else 72000) + (if b0070 then 0 else 72000) + (if b0071 then 0 else 72000) + (if b0074 then 0 else 72000) + (if b0077 then 0 else 72000) + (if b0078 then 0 else 72000) + (if b0080 then 0 else 72000) + (if b0081 then 0 else 72000) + (if b0146 then 0 else 72000) + (if b0147 then 0 else 72000) + (if b0148 then 0 else 72000) + (if b0149 then 0 else 72000) + (if b0150 then 0 else 72000) + (if b0151 then 0 else 72000) + (if b0152 then 0 else 72000) + (if b0153 then 0 else 72000) + (if b0154 then 0 else 72000) + (if b0155 then 0 else 72000) + (if b0156 then 0 else 72000) + (if b0157 then 0 else 72000) + (if b0158 then 0 else 72000) + (if b0159 then 0 else 72000) + (if b0160 then 0 else 72000) + (if b0161 then 0 else 72000) + (if b0162 then 0 else 72000) + (if b0163 then 0 else 72000) + (if b0164 then 0 else 72000) + (if b0165 then 0 else 72000) + (if b0166 then 0 else 72000) + (if b0167 then 0 else 72000) + (if b0168 then 0 else 72000) + (if b0169 then 0 else 72000) + (if b0170 then 0 else 72000) + (if b0171 then 0 else 72000) + (if b0172 then 0 else 72000) + (if b0173 then 0 else 72000) + (if b0174 then 0 else 72000) + (if b0175 then 0 else 72000) + (if b0176 then 0 else 72000) + (if b0177 then 0 else 72000) + (if b0178 then 0 else 72000) + (if b0179 then 0 else 72000) < 441
}
Prover Time taken = 7.903547
Added Horn clause: 0 && 0 && 2 && 3 && 0 && 0 && 0 && 0 && 0 && 0 => 24
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/rodinia_2.4/lavaMD/_kernel.bpl.ice2.bpl
Total learner time was 00:00:00.1235290
Verifying $kernel_gpu_opencl: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool) : bool
{
  0 + (if b0000 then 0 else 72000) + (if b0001 then 0 else 72000) + (if b0003 then 0 else 72000) + (if b0005 then 0 else 72000) + (if b0006 then 0 else 72000) + (if b0007 then 0 else 72000) + (if b0008 then 0 else 72000) + (if b0009 then 0 else 72000) + (if b0011 then 0 else 72000) + (if b0013 then 0 else 72000) + (if b0015 then 0 else 72000) + (if b0016 then 0 else 72000) + (if b0017 then 0 else 72000) + (if b0018 then 0 else 72000) + (if b0019 then 0 else 72000) + (if b0020 then 0 else 72000) + (if b0021 then 0 else 72000) + (if b0022 then 0 else 72000) + (if b0023 then 0 else 72000) + (if b0024 then 0 else 72000) + (if b0025 then 0 else 72000) + (if b0026 then 0 else 72000) + (if b0028 then 0 else 72000) + (if b0030 then 0 else 72000) + (if b0031 then 0 else 72000) + (if b0032 then 0 else 72000) + (if b0033 then 0 else 72000) + (if b0034 then 0 else 72000) + (if b0035 then 0 else 72000) + (if b0036 then 0 else 72000) + (if b0037 then 0 else 72000) + (if b0038 then 0 else 72000) + (if b0040 then 0 else 72000) + (if b0042 then 0 else 72000) + (if b0043 then 0 else 72000) + (if b0044 then 0 else 72000) + (if b0045 then 0 else 72000) + (if b0046 then 0 else 72000) + (if b0047 then 0 else 72000) + (if b0048 then 0 else 72000) + (if b0049 then 0 else 72000) + (if b0050 then 0 else 72000) + (if b0051 then 0 else 72000) + (if b0053 then 0 else 72000) + (if b0055 then 0 else 72000) + (if b0057 then 0 else 72000) + (if b0059 then 0 else 72000) + (if b0060 then 0 else 72000) + (if b0061 then 0 else 72000) + (if b0062 then 0 else 72000) + (if b0063 then 0 else 72000) + (if b0064 then 0 else 72000) + (if b0065 then 0 else 72000) + (if b0066 then 0 else 72000) + (if b0067 then 0 else 72000) + (if b0068 then 0 else 72000) + (if b0069 then 0 else 72000) + (if b0070 then 0 else 72000) + (if b0071 then 0 else 72000) + (if b0074 then 0 else 72000) + (if b0077 then 0 else 72000) + (if b0078 then 0 else 72000) + (if b0080 then 0 else 72000) + (if b0081 then 0 else 72000) + (if b0146 then 0 else 72000) + (if b0147 then 0 else 72000) + (if b0148 then 0 else 72000) + (if b0149 then 0 else 72000) + (if b0150 then 0 else 72000) + (if b0151 then 0 else 72000) + (if b0152 then 0 else 72000) + (if b0153 then 0 else 72000) + (if b0154 then 0 else 72000) + (if b0155 then 0 else 72000) + (if b0156 then 0 else 72000) + (if b0157 then 0 else 72000) + (if b0158 then 0 else 72000) + (if b0159 then 0 else 72000) + (if b0160 then 0 else 72000) + (if b0161 then 0 else 72000) + (if b0162 then 0 else 72000) + (if b0163 then 0 else 72000) + (if b0164 then 0 else 72000) + (if b0165 then 0 else 72000) + (if b0166 then 0 else 72000) + (if b0167 then 0 else 72000) + (if b0168 then 0 else 72000) + (if b0169 then 0 else 72000) + (if b0170 then 0 else 72000) + (if b0171 then 0 else 72000) + (if b0172 then 0 else 72000) + (if b0173 then 0 else 72000) + (if b0174 then 0 else 72000) + (if b0175 then 0 else 72000) + (if b0176 then 0 else 72000) + (if b0177 then 0 else 72000) + (if b0178 then 0 else 72000) + (if b0179 then 0 else 72000) < 441
}
Prover Time taken = 16.853788
Added Horn clause: 0 && 0 && 25 && 0 && 0 && 0 && 0 && 0 => 26
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/rodinia_2.4/lavaMD/_kernel.bpl.ice2.bpl
Total learner time was 00:00:00.1243960
Verifying $kernel_gpu_opencl: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool) : bool
{
  0 + (if b0000 then 0 else 72000) + (if b0001 then 0 else 72000) + (if b0003 then 0 else 72000) + (if b0005 then 0 else 72000) + (if b0006 then 0 else 72000) + (if b0007 then 0 else 72000) + (if b0008 then 0 else 72000) + (if b0009 then 0 else 72000) + (if b0011 then 0 else 72000) + (if b0013 then 0 else 72000) + (if b0015 then 0 else 72000) + (if b0016 then 0 else 72000) + (if b0017 then 0 else 72000) + (if b0018 then 0 else 72000) + (if b0019 then 0 else 72000) + (if b0020 then 0 else 72000) + (if b0021 then 0 else 72000) + (if b0022 then 0 else 72000) + (if b0023 then 0 else 72000) + (if b0024 then 0 else 72000) + (if b0025 then 0 else 72000) + (if b0026 then 0 else 72000) + (if b0028 then 0 else 72000) + (if b0030 then 0 else 72000) + (if b0031 then 0 else 72000) + (if b0032 then 0 else 72000) + (if b0033 then 0 else 72000) + (if b0034 then 0 else 72000) + (if b0035 then 0 else 72000) + (if b0036 then 0 else 72000) + (if b0037 then 0 else 72000) + (if b0038 then 0 else 72000) + (if b0040 then 0 else 72000) + (if b0042 then 0 else 72000) + (if b0043 then 0 else 72000) + (if b0044 then 0 else 72000) + (if b0045 then 0 else 72000) + (if b0046 then 0 else 72000) + (if b0047 then 0 else 72000) + (if b0048 then 0 else 72000) + (if b0049 then 0 else 72000) + (if b0050 then 0 else 72000) + (if b0051 then 0 else 72000) + (if b0053 then 0 else 72000) + (if b0055 then 0 else 72000) + (if b0057 then 0 else 72000) + (if b0059 then 0 else 72000) + (if b0060 then 0 else 72000) + (if b0061 then 0 else 72000) + (if b0062 then 0 else 72000) + (if b0063 then 0 else 72000) + (if b0064 then 0 else 72000) + (if b0065 then 0 else 72000) + (if b0066 then 0 else 72000) + (if b0067 then 0 else 72000) + (if b0068 then 0 else 72000) + (if b0069 then 0 else 72000) + (if b0071 then 0 else 72000) + (if b0074 then 0 else 72000) + (if b0077 then 0 else 72000) + (if b0078 then 0 else 72000) + (if b0080 then 0 else 72000) + (if b0081 then 0 else 72000) + (if b0146 then 0 else 72000) + (if b0147 then 0 else 72000) + (if b0148 then 0 else 72000) + (if b0149 then 0 else 72000) + (if b0150 then 0 else 72000) + (if b0151 then 0 else 72000) + (if b0152 then 0 else 72000) + (if b0153 then 0 else 72000) + (if b0154 then 0 else 72000) + (if b0155 then 0 else 72000) + (if b0156 then 0 else 72000) + (if b0157 then 0 else 72000) + (if b0158 then 0 else 72000) + (if b0159 then 0 else 72000) + (if b0160 then 0 else 72000) + (if b0161 then 0 else 72000) + (if b0162 then 0 else 72000) + (if b0163 then 0 else 72000) + (if b0164 then 0 else 72000) + (if b0165 then 0 else 72000) + (if b0166 then 0 else 72000) + (if b0167 then 0 else 72000) + (if b0168 then 0 else 72000) + (if b0169 then 0 else 72000) + (if b0170 then 0 else 72000) + (if b0171 then 0 else 72000) + (if b0172 then 0 else 72000) + (if b0173 then 0 else 72000) + (if b0174 then 0 else 72000) + (if b0175 then 0 else 72000) + (if b0176 then 0 else 72000) + (if b0177 then 0 else 72000) + (if b0178 then 0 else 72000) + (if b0179 then 0 else 72000) < 441
}
Added Horn clause: 0 && 0 && 27 && 0 && 0 && 0 && 0 && 20 && 0 && 28 => 
Prover Time taken = 7.54554
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/rodinia_2.4/lavaMD/_kernel.bpl.ice2.bpl
terminate called after throwing an instance of 'std::runtime_error'
  what():  No consistent conjunction exists
The learner seems to have run into an error!

Unhandled Exception:
Microsoft.Boogie.Houdini.MLHoudiniInternalError: The learner seems to have run into an error!
  at Microsoft.Boogie.Houdini.MLHoudini.learn (System.Collections.Generic.HashSet`1[System.String]& funcsChanged) [0x000e7] in <3034164c407e4adc8ab666e7c26ee7b8>:0 
  at Microsoft.Boogie.Houdini.MLHoudini.LearnInv (System.Collections.Generic.Dictionary`2[TKey,TValue] impl2Priority) [0x00782] in <3034164c407e4adc8ab666e7c26ee7b8>:0 
  at Microsoft.Boogie.Houdini.MLHoudini.ComputeSummaries () [0x0019c] in <3034164c407e4adc8ab666e7c26ee7b8>:0 
  at Microsoft.Boogie.ExecutionEngine.RunMLHoudini (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, Microsoft.Boogie.ErrorReporterDelegate er, System.String filename) [0x00055] in <392c81a181e742f795ac4613c6efd8ce>:0 
  at Microsoft.Boogie.ExecutionEngine.RunHoudini (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, Microsoft.Boogie.ErrorReporterDelegate er, System.String filename) [0x00021] in <392c81a181e742f795ac4613c6efd8ce>:0 
  at Microsoft.Boogie.ExecutionEngine.InferAndVerify (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, System.String filename, Microsoft.Boogie.ErrorReporterDelegate er, System.String requestId) [0x00136] in <392c81a181e742f795ac4613c6efd8ce>:0 
  at Microsoft.Boogie.ExecutionEngine.ProcessFiles (System.Collections.Generic.List`1[T] fileNames, System.Boolean lookForSnapshots) [0x002bd] in <392c81a181e742f795ac4613c6efd8ce>:0 
  at Microsoft.Boogie.OnlyBoogie.Main (System.String[] args) [0x0029f] in <581a14d47152481e860a87838c548766>:0 
[ERROR] FATAL UNHANDLED EXCEPTION: Microsoft.Boogie.Houdini.MLHoudiniInternalError: The learner seems to have run into an error!
  at Microsoft.Boogie.Houdini.MLHoudini.learn (System.Collections.Generic.HashSet`1[System.String]& funcsChanged) [0x000e7] in <3034164c407e4adc8ab666e7c26ee7b8>:0 
  at Microsoft.Boogie.Houdini.MLHoudini.LearnInv (System.Collections.Generic.Dictionary`2[TKey,TValue] impl2Priority) [0x00782] in <3034164c407e4adc8ab666e7c26ee7b8>:0 
  at Microsoft.Boogie.Houdini.MLHoudini.ComputeSummaries () [0x0019c] in <3034164c407e4adc8ab666e7c26ee7b8>:0 
  at Microsoft.Boogie.ExecutionEngine.RunMLHoudini (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, Microsoft.Boogie.ErrorReporterDelegate er, System.String filename) [0x00055] in <392c81a181e742f795ac4613c6efd8ce>:0 
  at Microsoft.Boogie.ExecutionEngine.RunHoudini (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, Microsoft.Boogie.ErrorReporterDelegate er, System.String filename) [0x00021] in <392c81a181e742f795ac4613c6efd8ce>:0 
  at Microsoft.Boogie.ExecutionEngine.InferAndVerify (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, System.String filename, Microsoft.Boogie.ErrorReporterDelegate er, System.String requestId) [0x00136] in <392c81a181e742f795ac4613c6efd8ce>:0 
  at Microsoft.Boogie.ExecutionEngine.ProcessFiles (System.Collections.Generic.List`1[T] fileNames, System.Boolean lookForSnapshots) [0x002bd] in <392c81a181e742f795ac4613c6efd8ce>:0 
  at Microsoft.Boogie.OnlyBoogie.Main (System.String[] args) [0x0029f] in <581a14d47152481e860a87838c548766>:0 
Command exited with non-zero status 1
5.86user 3.61system 3:36.63elapsed 4%CPU (0avgtext+0avgdata 88724maxresident)k
520inputs+1248outputs (4major+153239minor)pagefaults 0swaps
FILE:rodinia_2.4/lavaMD/_kernel.bpl.ice2.bpl
#################
Wed May 12 05:54:28 UTC 2021
KEY=awinnow
OUTPUT=/root/Docker/winnow_gpu_timeout.txt
[TRACE] Using prover: /root/Docker/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/root/Docker/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a winnow
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/errorLimit:1
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/rodinia_2.4/leukocyte/IMGVF/_kernel.bpl.ice2.bpl
--------------------
Parsing /root/Docker/benchmarks/BenchmarksCompiled/awinnow/rodinia_2.4/leukocyte/IMGVF/_kernel.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /root/Docker/z3/bin/z3
#parameters: 196
Generating VC of $IMGVF_kernel
Verifying $IMGVF_kernel: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.19442
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/rodinia_2.4/leukocyte/IMGVF/_kernel.bpl.ice2.bpl
Total learner time was 00:00:00.1212010
Verifying $IMGVF_kernel: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool) : bool
{
  0 + (if b0000 then 0 else 78000) + (if b0001 then 0 else 78000) + (if b0002 then 0 else 78000) + (if b0003 then 0 else 78000) + (if b0004 then 0 else 78000) + (if b0005 then 0 else 78000) + (if b0006 then 0 else 78000) + (if b0007 then 0 else 78000) + (if b0008 then 0 else 78000) + (if b0009 then 0 else 78000) + (if b0010 then 0 else 78000) + (if b0011 then 0 else 78000) + (if b0012 then 0 else 78000) + (if b0013 then 0 else 78000) + (if b0014 then 0 else 78000) + (if b0015 then 0 else 78000) + (if b0016 then 0 else 78000) + (if b0017 then 0 else 78000) + (if b0018 then 0 else 78000) + (if b0019 then 0 else 78000) + (if b0020 then 0 else 78000) + (if b0021 then 0 else 78000) + (if b0022 then 0 else 78000) + (if b0023 then 0 else 78000) + (if b0024 then 0 else 78000) + (if b0025 then 0 else 78000) + (if b0026 then 0 else 78000) + (if b0027 then 0 else 78000) + (if b0028 then 0 else 78000) + (if b0029 then 0 else 78000) + (if b0030 then 0 else 78000) + (if b0031 then 0 else 78000) + (if b0032 then 0 else 78000) + (if b0033 then 0 else 78000) + (if b0034 then 0 else 78000) + (if b0035 then 0 else 78000) + (if b0036 then 0 else 78000) + (if b0037 then 0 else 78000) + (if b0038 then 0 else 78000) + (if b0039 then 0 else 78000) + (if b0040 then 0 else 78000) + (if b0041 then 0 else 78000) + (if b0042 then 0 else 78000) + (if b0043 then 0 else 78000) + (if b0044 then 0 else 78000) + (if b0045 then 0 else 78000) + (if b0046 then 0 else 78000) + (if b0047 then 0 else 78000) + (if b0048 then 0 else 78000) + (if b0049 then 0 else 78000) + (if b0050 then 0 else 78000) + (if b0051 then 0 else 78000) + (if b0052 then 0 else 78000) + (if b0053 then 0 else 78000) + (if b0054 then 0 else 78000) + (if b0055 then 0 else 78000) + (if b0056 then 0 else 78000) + (if b0057 then 0 else 78000) + (if b0058 then 0 else 78000) + (if b0059 then 0 else 78000) + (if b0060 then 0 else 78000) + (if b0061 then 0 else 78000) + (if b0062 then 0 else 78000) + (if b0063 then 0 else 78000) + (if b0064 then 0 else 78000) + (if b0065 then 0 else 78000) + (if b0066 then 0 else 78000) + (if b0067 then 0 else 78000) + (if b0068 then 0 else 78000) + (if b0069 then 0 else 78000) + (if b0070 then 0 else 78000) + (if b0071 then 0 else 78000) + (if b0072 then 0 else 78000) + (if b0073 then 0 else 78000) + (if b0074 then 0 else 78000) + (if b0075 then 0 else 78000) + (if b0076 then 0 else 78000) + (if b0077 then 0 else 78000) + (if b0078 then 0 else 78000) + (if b0079 then 0 else 78000) + (if b0080 then 0 else 78000) + (if b0081 then 0 else 78000) + (if b0082 then 0 else 78000) + (if b0083 then 0 else 78000) + (if b0084 then 0 else 78000) + (if b0085 then 0 else 78000) + (if b0086 then 0 else 78000) + (if b0087 then 0 else 78000) + (if b0088 then 0 else 78000) + (if b0089 then 0 else 78000) + (if b0090 then 0 else 78000) + (if b0091 then 0 else 78000) + (if b0092 then 0 else 78000) + (if b0093 then 0 else 78000) + (if b0094 then 0 else 78000) + (if b0095 then 0 else 78000) + (if b0096 then 0 else 78000) + (if b0097 then 0 else 78000) + (if b0098 then 0 else 78000) + (if b0099 then 0 else 78000) + (if b0100 then 0 else 78000) + (if b0101 then 0 else 78000) + (if b0102 then 0 else 78000) + (if b0103 then 0 else 78000) + (if b0104 then 0 else 78000) + (if b0105 then 0 else 78000) + (if b0106 then 0 else 78000) + (if b0107 then 0 else 78000) + (if b0108 then 0 else 78000) + (if b0109 then 0 else 78000) + (if b0110 then 0 else 78000) + (if b0111 then 0 else 78000) + (if b0112 then 0 else 78000) + (if b0113 then 0 else 78000) + (if b0114 then 0 else 78000) + (if b0115 then 0 else 78000) + (if b0116 then 0 else 78000) + (if b0117 then 0 else 78000) + (if b0118 then 0 else 78000) + (if b0119 then 0 else 78000) + (if b0120 then 0 else 78000) + (if b0121 then 0 else 78000) + (if b0122 then 0 else 78000) + (if b0123 then 0 else 78000) + (if b0124 then 0 else 78000) + (if b0125 then 0 else 78000) + (if b0126 then 0 else 78000) + (if b0127 then 0 else 78000) + (if b0128 then 0 else 78000) + (if b0129 then 0 else 78000) + (if b0130 then 0 else 78000) + (if b0131 then 0 else 78000) + (if b0132 then 0 else 78000) + (if b0133 then 0 else 78000) + (if b0134 then 0 else 78000) + (if b0135 then 0 else 78000) + (if b0136 then 0 else 78000) + (if b0137 then 0 else 78000) + (if b0138 then 0 else 78000) + (if b0139 then 0 else 78000) + (if b0140 then 0 else 78000) + (if b0141 then 0 else 78000) + (if b0142 then 0 else 78000) + (if b0143 then 0 else 78000) + (if b0144 then 0 else 78000) + (if b0145 then 0 else 78000) + (if b0146 then 0 else 78000) + (if b0147 then 0 else 78000) + (if b0148 then 0 else 78000) + (if b0149 then 0 else 78000) + (if b0150 then 0 else 78000) + (if b0151 then 0 else 78000) + (if b0152 then 0 else 78000) + (if b0153 then 0 else 78000) + (if b0154 then 0 else 78000) + (if b0155 then 0 else 78000) + (if b0156 then 0 else 78000) + (if b0157 then 0 else 78000) + (if b0158 then 0 else 78000) + (if b0159 then 0 else 78000) + (if b0160 then 0 else 78000) + (if b0161 then 0 else 78000) + (if b0162 then 0 else 78000) + (if b0163 then 0 else 78000) + (if b0164 then 0 else 78000) + (if b0165 then 0 else 78000) + (if b0166 then 0 else 78000) + (if b0167 then 0 else 78000) + (if b0168 then 0 else 78000) + (if b0169 then 0 else 78000) + (if b0170 then 0 else 78000) + (if b0171 then 0 else 78000) + (if b0172 then 0 else 78000) + (if b0173 then 0 else 78000) + (if b0174 then 0 else 78000) + (if b0175 then 0 else 78000) + (if b0176 then 0 else 78000) + (if b0177 then 0 else 78000) + (if b0178 then 0 else 78000) + (if b0179 then 0 else 78000) + (if b0180 then 0 else 78000) + (if b0181 then 0 else 78000) + (if b0182 then 0 else 78000) + (if b0183 then 0 else 78000) + (if b0184 then 0 else 78000) + (if b0185 then 0 else 78000) + (if b0186 then 0 else 78000) + (if b0187 then 0 else 78000) + (if b0188 then 0 else 78000) + (if b0189 then 0 else 78000) + (if b0190 then 0 else 78000) + (if b0191 then 0 else 78000) + (if b0192 then 0 else 78000) + (if b0193 then 0 else 78000) + (if b0194 then 0 else 78000) + (if b0195 then 0 else 78000) < 441
}
Prover Time taken = 22.560569
Added Horn clause: 0 => 1
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/rodinia_2.4/leukocyte/IMGVF/_kernel.bpl.ice2.bpl
Total learner time was 00:00:00.1253160
Verifying $IMGVF_kernel: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool) : bool
{
  0 + (if b0000 then 0 else 78000) + (if b0002 then 0 else 78000) + (if b0004 then 0 else 78000) + (if b0005 then 0 else 78000) + (if b0006 then 0 else 78000) + (if b0007 then 0 else 78000) + (if b0008 then 0 else 78000) + (if b0009 then 0 else 78000) + (if b0010 then 0 else 78000) + (if b0011 then 0 else 78000) + (if b0012 then 0 else 78000) + (if b0013 then 0 else 78000) + (if b0014 then 0 else 78000) + (if b0015 then 0 else 78000) + (if b0016 then 0 else 78000) + (if b0017 then 0 else 78000) + (if b0018 then 0 else 78000) + (if b0019 then 0 else 78000) + (if b0020 then 0 else 78000) + (if b0021 then 0 else 78000) + (if b0022 then 0 else 78000) + (if b0023 then 0 else 78000) + (if b0024 then 0 else 78000) + (if b0025 then 0 else 78000) + (if b0026 then 0 else 78000) + (if b0027 then 0 else 78000) + (if b0028 then 0 else 78000) + (if b0029 then 0 else 78000) + (if b0030 then 0 else 78000) + (if b0031 then 0 else 78000) + (if b0032 then 0 else 78000) + (if b0033 then 0 else 78000) + (if b0034 then 0 else 78000) + (if b0035 then 0 else 78000) + (if b0036 then 0 else 78000) + (if b0037 then 0 else 78000) + (if b0038 then 0 else 78000) + (if b0039 then 0 else 78000) + (if b0040 then 0 else 78000) + (if b0041 then 0 else 78000) + (if b0042 then 0 else 78000) + (if b0043 then 0 else 78000) + (if b0044 then 0 else 78000) + (if b0045 then 0 else 78000) + (if b0046 then 0 else 78000) + (if b0047 then 0 else 78000) + (if b0048 then 0 else 78000) + (if b0049 then 0 else 78000) + (if b0050 then 0 else 78000) + (if b0051 then 0 else 78000) + (if b0052 then 0 else 78000) + (if b0053 then 0 else 78000) + (if b0054 then 0 else 78000) + (if b0055 then 0 else 78000) + (if b0056 then 0 else 78000) + (if b0057 then 0 else 78000) + (if b0058 then 0 else 78000) + (if b0059 then 0 else 78000) + (if b0060 then 0 else 78000) + (if b0061 then 0 else 78000) + (if b0062 then 0 else 78000) + (if b0063 then 0 else 78000) + (if b0064 then 0 else 78000) + (if b0065 then 0 else 78000) + (if b0066 then 0 else 78000) + (if b0067 then 0 else 78000) + (if b0068 then 0 else 78000) + (if b0069 then 0 else 78000) + (if b0070 then 0 else 78000) + (if b0071 then 0 else 78000) + (if b0072 then 0 else 78000) + (if b0073 then 0 else 78000) + (if b0074 then 0 else 78000) + (if b0075 then 0 else 78000) + (if b0076 then 0 else 78000) + (if b0077 then 0 else 78000) + (if b0078 then 0 else 78000) + (if b0079 then 0 else 78000) + (if b0080 then 0 else 78000) + (if b0081 then 0 else 78000) + (if b0082 then 0 else 78000) + (if b0083 then 0 else 78000) + (if b0084 then 0 else 78000) + (if b0085 then 0 else 78000) + (if b0086 then 0 else 78000) + (if b0087 then 0 else 78000) + (if b0088 then 0 else 78000) + (if b0089 then 0 else 78000) + (if b0090 then 0 else 78000) + (if b0091 then 0 else 78000) + (if b0092 then 0 else 78000) + (if b0093 then 0 else 78000) + (if b0094 then 0 else 78000) + (if b0095 then 0 else 78000) + (if b0096 then 0 else 78000) + (if b0097 then 0 else 78000) + (if b0098 then 0 else 78000) + (if b0099 then 0 else 78000) + (if b0100 then 0 else 78000) + (if b0101 then 0 else 78000) + (if b0102 then 0 else 78000) + (if b0103 then 0 else 78000) + (if b0104 then 0 else 78000) + (if b0105 then 0 else 78000) + (if b0106 then 0 else 78000) + (if b0107 then 0 else 78000) + (if b0108 then 0 else 78000) + (if b0109 then 0 else 78000) + (if b0110 then 0 else 78000) + (if b0111 then 0 else 78000) + (if b0112 then 0 else 78000) + (if b0113 then 0 else 78000) + (if b0114 then 0 else 78000) + (if b0115 then 0 else 78000) + (if b0116 then 0 else 78000) + (if b0117 then 0 else 78000) + (if b0118 then 0 else 78000) + (if b0119 then 0 else 78000) + (if b0120 then 0 else 78000) + (if b0121 then 0 else 78000) + (if b0122 then 0 else 78000) + (if b0123 then 0 else 78000) + (if b0124 then 0 else 78000) + (if b0125 then 0 else 78000) + (if b0126 then 0 else 78000) + (if b0127 then 0 else 78000) + (if b0128 then 0 else 78000) + (if b0129 then 0 else 78000) + (if b0130 then 0 else 78000) + (if b0131 then 0 else 78000) + (if b0132 then 0 else 78000) + (if b0133 then 0 else 78000) + (if b0134 then 0 else 78000) + (if b0135 then 0 else 78000) + (if b0136 then 0 else 78000) + (if b0137 then 0 else 78000) + (if b0138 then 0 else 78000) + (if b0139 then 0 else 78000) + (if b0140 then 0 else 78000) + (if b0141 then 0 else 78000) + (if b0142 then 0 else 78000) + (if b0143 then 0 else 78000) + (if b0144 then 0 else 78000) + (if b0145 then 0 else 78000) + (if b0146 then 0 else 78000) + (if b0147 then 0 else 78000) + (if b0148 then 0 else 78000) + (if b0149 then 0 else 78000) + (if b0150 then 0 else 78000) + (if b0151 then 0 else 78000) + (if b0152 then 0 else 78000) + (if b0153 then 0 else 78000) + (if b0154 then 0 else 78000) + (if b0155 then 0 else 78000) + (if b0156 then 0 else 78000) + (if b0157 then 0 else 78000) + (if b0158 then 0 else 78000) + (if b0159 then 0 else 78000) + (if b0160 then 0 else 78000) + (if b0161 then 0 else 78000) + (if b0162 then 0 else 78000) + (if b0163 then 0 else 78000) + (if b0164 then 0 else 78000) + (if b0165 then 0 else 78000) + (if b0166 then 0 else 78000) + (if b0167 then 0 else 78000) + (if b0168 then 0 else 78000) + (if b0169 then 0 else 78000) + (if b0170 then 0 else 78000) + (if b0171 then 0 else 78000) + (if b0172 then 0 else 78000) + (if b0173 then 0 else 78000) + (if b0174 then 0 else 78000) + (if b0175 then 0 else 78000) + (if b0176 then 0 else 78000) + (if b0177 then 0 else 78000) + (if b0178 then 0 else 78000) + (if b0179 then 0 else 78000) + (if b0180 then 0 else 78000) + (if b0181 then 0 else 78000) + (if b0182 then 0 else 78000) + (if b0183 then 0 else 78000) + (if b0184 then 0 else 78000) + (if b0185 then 0 else 78000) + (if b0186 then 0 else 78000) + (if b0187 then 0 else 78000) + (if b0188 then 0 else 78000) + (if b0189 then 0 else 78000) + (if b0190 then 0 else 78000) + (if b0191 then 0 else 78000) + (if b0192 then 0 else 78000) + (if b0193 then 0 else 78000) + (if b0194 then 0 else 78000) + (if b0195 then 0 else 78000) < 441
}
Prover Time taken = 23.16425
Added Horn clause: 0 => 2
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/rodinia_2.4/leukocyte/IMGVF/_kernel.bpl.ice2.bpl
Total learner time was 00:00:00.1220170
Verifying $IMGVF_kernel: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool) : bool
{
  0 + (if b0000 then 0 else 78000) + (if b0002 then 0 else 78000) + (if b0004 then 0 else 78000) + (if b0005 then 0 else 78000) + (if b0006 then 0 else 78000) + (if b0007 then 0 else 78000) + (if b0008 then 0 else 78000) + (if b0009 then 0 else 78000) + (if b0010 then 0 else 78000) + (if b0011 then 0 else 78000) + (if b0012 then 0 else 78000) + (if b0013 then 0 else 78000) + (if b0014 then 0 else 78000) + (if b0015 then 0 else 78000) + (if b0016 then 0 else 78000) + (if b0017 then 0 else 78000) + (if b0018 then 0 else 78000) + (if b0019 then 0 else 78000) + (if b0020 then 0 else 78000) + (if b0021 then 0 else 78000) + (if b0022 then 0 else 78000) + (if b0023 then 0 else 78000) + (if b0024 then 0 else 78000) + (if b0025 then 0 else 78000) + (if b0026 then 0 else 78000) + (if b0027 then 0 else 78000) + (if b0028 then 0 else 78000) + (if b0029 then 0 else 78000) + (if b0030 then 0 else 78000) + (if b0031 then 0 else 78000) + (if b0032 then 0 else 78000) + (if b0033 then 0 else 78000) + (if b0034 then 0 else 78000) + (if b0035 then 0 else 78000) + (if b0036 then 0 else 78000) + (if b0037 then 0 else 78000) + (if b0038 then 0 else 78000) + (if b0039 then 0 else 78000) + (if b0040 then 0 else 78000) + (if b0041 then 0 else 78000) + (if b0042 then 0 else 78000) + (if b0043 then 0 else 78000) + (if b0044 then 0 else 78000) + (if b0046 then 0 else 78000) + (if b0048 then 0 else 78000) + (if b0049 then 0 else 78000) + (if b0050 then 0 else 78000) + (if b0052 then 0 else 78000) + (if b0054 then 0 else 78000) + (if b0056 then 0 else 78000) + (if b0057 then 0 else 78000) + (if b0058 then 0 else 78000) + (if b0059 then 0 else 78000) + (if b0060 then 0 else 78000) + (if b0061 then 0 else 78000) + (if b0063 then 0 else 78000) + (if b0065 then 0 else 78000) + (if b0069 then 0 else 78000) + (if b0070 then 0 else 78000) + (if b0071 then 0 else 78000) + (if b0072 then 0 else 78000) + (if b0075 then 0 else 78000) + (if b0077 then 0 else 78000) + (if b0084 then 0 else 78000) + (if b0086 then 0 else 78000) + (if b0089 then 0 else 78000) + (if b0092 then 0 else 78000) + (if b0093 then 0 else 78000) + (if b0094 then 0 else 78000) + (if b0095 then 0 else 78000) + (if b0096 then 0 else 78000) + (if b0103 then 0 else 78000) + (if b0105 then 0 else 78000) + (if b0106 then 0 else 78000) + (if b0111 then 0 else 78000) + (if b0113 then 0 else 78000) + (if b0114 then 0 else 78000) + (if b0115 then 0 else 78000) + (if b0116 then 0 else 78000) + (if b0117 then 0 else 78000) + (if b0118 then 0 else 78000) + (if b0119 then 0 else 78000) + (if b0120 then 0 else 78000) + (if b0121 then 0 else 78000) + (if b0122 then 0 else 78000) + (if b0123 then 0 else 78000) + (if b0124 then 0 else 78000) + (if b0125 then 0 else 78000) + (if b0126 then 0 else 78000) + (if b0127 then 0 else 78000) + (if b0128 then 0 else 78000) + (if b0129 then 0 else 78000) + (if b0130 then 0 else 78000) + (if b0131 then 0 else 78000) + (if b0132 then 0 else 78000) + (if b0133 then 0 else 78000) + (if b0134 then 0 else 78000) + (if b0135 then 0 else 78000) + (if b0136 then 0 else 78000) + (if b0137 then 0 else 78000) + (if b0138 then 0 else 78000) + (if b0139 then 0 else 78000) + (if b0140 then 0 else 78000) + (if b0141 then 0 else 78000) + (if b0142 then 0 else 78000) + (if b0143 then 0 else 78000) + (if b0144 then 0 else 78000) + (if b0145 then 0 else 78000) + (if b0146 then 0 else 78000) + (if b0147 then 0 else 78000) + (if b0148 then 0 else 78000) + (if b0149 then 0 else 78000) + (if b0150 then 0 else 78000) + (if b0151 then 0 else 78000) + (if b0152 then 0 else 78000) + (if b0153 then 0 else 78000) + (if b0154 then 0 else 78000) + (if b0155 then 0 else 78000) + (if b0156 then 0 else 78000) + (if b0157 then 0 else 78000) + (if b0158 then 0 else 78000) + (if b0159 then 0 else 78000) + (if b0160 then 0 else 78000) + (if b0161 then 0 else 78000) + (if b0162 then 0 else 78000) + (if b0163 then 0 else 78000) + (if b0164 then 0 else 78000) + (if b0165 then 0 else 78000) + (if b0166 then 0 else 78000) + (if b0167 then 0 else 78000) + (if b0168 then 0 else 78000) + (if b0169 then 0 else 78000) + (if b0170 then 0 else 78000) + (if b0171 then 0 else 78000) + (if b0172 then 0 else 78000) + (if b0173 then 0 else 78000) + (if b0174 then 0 else 78000) + (if b0175 then 0 else 78000) + (if b0176 then 0 else 78000) + (if b0177 then 0 else 78000) + (if b0178 then 0 else 78000) + (if b0179 then 0 else 78000) + (if b0180 then 0 else 78000) + (if b0181 then 0 else 78000) + (if b0182 then 0 else 78000) + (if b0183 then 0 else 78000) + (if b0184 then 0 else 78000) + (if b0185 then 0 else 78000) + (if b0186 then 0 else 78000) + (if b0187 then 0 else 78000) + (if b0188 then 0 else 78000) + (if b0189 then 0 else 78000) + (if b0190 then 0 else 78000) + (if b0191 then 0 else 78000) + (if b0192 then 0 else 78000) + (if b0193 then 0 else 78000) + (if b0194 then 0 else 78000) + (if b0195 then 0 else 78000) < 441
}
Overwrote: my_inv:1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: negative
Prover Time taken = 28.850347
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/rodinia_2.4/leukocyte/IMGVF/_kernel.bpl.ice2.bpl
[0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1] -> 0 Predicated Label: 1 True Label 0 not consistent!
sorcar: sorcar.cpp:229: int main(int, char* const*): Assertion `sorcar::is_consistent(X, datapoints, horn_constraints)' failed.
The learner seems to have run into an error!

Unhandled Exception:
Microsoft.Boogie.Houdini.MLHoudiniInternalError: The learner seems to have run into an error!
  at Microsoft.Boogie.Houdini.MLHoudini.learn (System.Collections.Generic.HashSet`1[System.String]& funcsChanged) [0x000e7] in <3034164c407e4adc8ab666e7c26ee7b8>:0 
  at Microsoft.Boogie.Houdini.MLHoudini.LearnInv (System.Collections.Generic.Dictionary`2[TKey,TValue] impl2Priority) [0x00782] in <3034164c407e4adc8ab666e7c26ee7b8>:0 
  at Microsoft.Boogie.Houdini.MLHoudini.ComputeSummaries () [0x0019c] in <3034164c407e4adc8ab666e7c26ee7b8>:0 
  at Microsoft.Boogie.ExecutionEngine.RunMLHoudini (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, Microsoft.Boogie.ErrorReporterDelegate er, System.String filename) [0x00055] in <392c81a181e742f795ac4613c6efd8ce>:0 
  at Microsoft.Boogie.ExecutionEngine.RunHoudini (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, Microsoft.Boogie.ErrorReporterDelegate er, System.String filename) [0x00021] in <392c81a181e742f795ac4613c6efd8ce>:0 
  at Microsoft.Boogie.ExecutionEngine.InferAndVerify (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, System.String filename, Microsoft.Boogie.ErrorReporterDelegate er, System.String requestId) [0x00136] in <392c81a181e742f795ac4613c6efd8ce>:0 
  at Microsoft.Boogie.ExecutionEngine.ProcessFiles (System.Collections.Generic.List`1[T] fileNames, System.Boolean lookForSnapshots) [0x002bd] in <392c81a181e742f795ac4613c6efd8ce>:0 
  at Microsoft.Boogie.OnlyBoogie.Main (System.String[] args) [0x0029f] in <581a14d47152481e860a87838c548766>:0 
[ERROR] FATAL UNHANDLED EXCEPTION: Microsoft.Boogie.Houdini.MLHoudiniInternalError: The learner seems to have run into an error!
  at Microsoft.Boogie.Houdini.MLHoudini.learn (System.Collections.Generic.HashSet`1[System.String]& funcsChanged) [0x000e7] in <3034164c407e4adc8ab666e7c26ee7b8>:0 
  at Microsoft.Boogie.Houdini.MLHoudini.LearnInv (System.Collections.Generic.Dictionary`2[TKey,TValue] impl2Priority) [0x00782] in <3034164c407e4adc8ab666e7c26ee7b8>:0 
  at Microsoft.Boogie.Houdini.MLHoudini.ComputeSummaries () [0x0019c] in <3034164c407e4adc8ab666e7c26ee7b8>:0 
  at Microsoft.Boogie.ExecutionEngine.RunMLHoudini (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, Microsoft.Boogie.ErrorReporterDelegate er, System.String filename) [0x00055] in <392c81a181e742f795ac4613c6efd8ce>:0 
  at Microsoft.Boogie.ExecutionEngine.RunHoudini (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, Microsoft.Boogie.ErrorReporterDelegate er, System.String filename) [0x00021] in <392c81a181e742f795ac4613c6efd8ce>:0 
  at Microsoft.Boogie.ExecutionEngine.InferAndVerify (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, System.String filename, Microsoft.Boogie.ErrorReporterDelegate er, System.String requestId) [0x00136] in <392c81a181e742f795ac4613c6efd8ce>:0 
  at Microsoft.Boogie.ExecutionEngine.ProcessFiles (System.Collections.Generic.List`1[T] fileNames, System.Boolean lookForSnapshots) [0x002bd] in <392c81a181e742f795ac4613c6efd8ce>:0 
  at Microsoft.Boogie.OnlyBoogie.Main (System.String[] args) [0x0029f] in <581a14d47152481e860a87838c548766>:0 
Command exited with non-zero status 1
1.50user 1.42system 1:17.04elapsed 3%CPU (0avgtext+0avgdata 74404maxresident)k
320inputs+208outputs (1major+32086minor)pagefaults 0swaps
FILE:rodinia_2.4/leukocyte/IMGVF/_kernel.bpl.ice2.bpl
#################
Wed May 12 05:55:45 UTC 2021
KEY=awinnow
OUTPUT=/root/Docker/winnow_gpu_timeout.txt
[TRACE] Using prover: /root/Docker/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/root/Docker/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a winnow
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/errorLimit:1
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/rodinia_2.4/particlefilter/likelihood_single/kernel.bpl.ice2.bpl
--------------------
Parsing /root/Docker/benchmarks/BenchmarksCompiled/awinnow/rodinia_2.4/particlefilter/likelihood_single/kernel.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /root/Docker/z3/bin/z3
#parameters: 48
Generating VC of $likelihood_kernel
Verifying $likelihood_kernel: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.336478
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/rodinia_2.4/particlefilter/likelihood_single/kernel.bpl.ice2.bpl
Total learner time was 00:00:00.1237850
Verifying $likelihood_kernel: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool) : bool
{
  0 + (if b0000 then 0 else 19000) + (if b0001 then 0 else 19000) + (if b0002 then 0 else 19000) + (if b0003 then 0 else 19000) + (if b0004 then 0 else 19000) + (if b0005 then 0 else 19000) + (if b0006 then 0 else 19000) + (if b0007 then 0 else 19000) + (if b0008 then 0 else 19000) + (if b0009 then 0 else 19000) + (if b0010 then 0 else 19000) + (if b0011 then 0 else 19000) + (if b0012 then 0 else 19000) + (if b0013 then 0 else 19000) + (if b0014 then 0 else 19000) + (if b0015 then 0 else 19000) + (if b0016 then 0 else 19000) + (if b0017 then 0 else 19000) + (if b0018 then 0 else 19000) + (if b0019 then 0 else 19000) + (if b0020 then 0 else 19000) + (if b0021 then 0 else 19000) + (if b0022 then 0 else 19000) + (if b0023 then 0 else 19000) + (if b0024 then 0 else 19000) + (if b0025 then 0 else 19000) + (if b0026 then 0 else 19000) + (if b0027 then 0 else 19000) + (if b0028 then 0 else 19000) + (if b0029 then 0 else 19000) + (if b0030 then 0 else 19000) + (if b0031 then 0 else 19000) + (if b0032 then 0 else 19000) + (if b0033 then 0 else 19000) + (if b0034 then 0 else 19000) + (if b0035 then 0 else 19000) + (if b0036 then 0 else 19000) + (if b0037 then 0 else 19000) + (if b0038 then 0 else 19000) + (if b0039 then 0 else 19000) + (if b0040 then 0 else 19000) + (if b0041 then 0 else 19000) + (if b0042 then 0 else 19000) + (if b0043 then 0 else 19000) + (if b0044 then 0 else 19000) + (if b0045 then 0 else 19000) + (if b0046 then 0 else 19000) + (if b0047 then 0 else 19000) < 441
}
Prover Time taken = 2.878592
Added Horn clause: 0 && 0 => 1
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/rodinia_2.4/particlefilter/likelihood_single/kernel.bpl.ice2.bpl
Total learner time was 00:00:00.1221780
Verifying $likelihood_kernel: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool) : bool
{
  0 + (if b0000 then 0 else 19000) + (if b0001 then 0 else 19000) + (if b0002 then 0 else 19000) + (if b0003 then 0 else 19000) + (if b0004 then 0 else 19000) + (if b0006 then 0 else 19000) + (if b0008 then 0 else 19000) + (if b0009 then 0 else 19000) + (if b0010 then 0 else 19000) + (if b0011 then 0 else 19000) + (if b0012 then 0 else 19000) + (if b0013 then 0 else 19000) + (if b0014 then 0 else 19000) + (if b0015 then 0 else 19000) + (if b0016 then 0 else 19000) + (if b0017 then 0 else 19000) + (if b0018 then 0 else 19000) + (if b0019 then 0 else 19000) + (if b0020 then 0 else 19000) + (if b0021 then 0 else 19000) + (if b0022 then 0 else 19000) + (if b0023 then 0 else 19000) + (if b0024 then 0 else 19000) + (if b0025 then 0 else 19000) + (if b0026 then 0 else 19000) + (if b0027 then 0 else 19000) + (if b0028 then 0 else 19000) + (if b0029 then 0 else 19000) + (if b0030 then 0 else 19000) + (if b0031 then 0 else 19000) + (if b0032 then 0 else 19000) + (if b0033 then 0 else 19000) + (if b0034 then 0 else 19000) + (if b0035 then 0 else 19000) + (if b0036 then 0 else 19000) + (if b0037 then 0 else 19000) + (if b0038 then 0 else 19000) + (if b0039 then 0 else 19000) + (if b0040 then 0 else 19000) + (if b0041 then 0 else 19000) + (if b0042 then 0 else 19000) + (if b0043 then 0 else 19000) + (if b0044 then 0 else 19000) + (if b0045 then 0 else 19000) + (if b0046 then 0 else 19000) + (if b0047 then 0 else 19000) < 441
}
Prover Time taken = 2.109592
Added Horn clause: 0 && 0 && 0 && 0 => 2
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/rodinia_2.4/particlefilter/likelihood_single/kernel.bpl.ice2.bpl
Total learner time was 00:00:00.1238730
Verifying $likelihood_kernel: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool) : bool
{
  0 + (if b0000 then 0 else 19000) + (if b0001 then 0 else 19000) + (if b0002 then 0 else 19000) + (if b0003 then 0 else 19000) + (if b0004 then 0 else 19000) + (if b0006 then 0 else 19000) + (if b0008 then 0 else 19000) + (if b0009 then 0 else 19000) + (if b0010 then 0 else 19000) + (if b0011 then 0 else 19000) + (if b0012 then 0 else 19000) + (if b0013 then 0 else 19000) + (if b0014 then 0 else 19000) + (if b0015 then 0 else 19000) + (if b0017 then 0 else 19000) + (if b0019 then 0 else 19000) + (if b0020 then 0 else 19000) + (if b0021 then 0 else 19000) + (if b0022 then 0 else 19000) + (if b0023 then 0 else 19000) + (if b0024 then 0 else 19000) + (if b0025 then 0 else 19000) + (if b0026 then 0 else 19000) + (if b0027 then 0 else 19000) + (if b0028 then 0 else 19000) + (if b0029 then 0 else 19000) + (if b0030 then 0 else 19000) + (if b0031 then 0 else 19000) + (if b0032 then 0 else 19000) + (if b0033 then 0 else 19000) + (if b0034 then 0 else 19000) + (if b0035 then 0 else 19000) + (if b0036 then 0 else 19000) + (if b0037 then 0 else 19000) + (if b0038 then 0 else 19000) + (if b0039 then 0 else 19000) + (if b0040 then 0 else 19000) + (if b0041 then 0 else 19000) + (if b0042 then 0 else 19000) + (if b0043 then 0 else 19000) + (if b0044 then 0 else 19000) + (if b0045 then 0 else 19000) + (if b0046 then 0 else 19000) + (if b0047 then 0 else 19000) < 441
}
Prover Time taken = 2.033601
Added Horn clause: 0 && 0 && 0 && 0 && 0 => 3
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/rodinia_2.4/particlefilter/likelihood_single/kernel.bpl.ice2.bpl
Total learner time was 00:00:00.1185000
Verifying $likelihood_kernel: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool) : bool
{
  0 + (if b0000 then 0 else 19000) + (if b0002 then 0 else 19000) + (if b0004 then 0 else 19000) + (if b0006 then 0 else 19000) + (if b0008 then 0 else 19000) + (if b0009 then 0 else 19000) + (if b0010 then 0 else 19000) + (if b0011 then 0 else 19000) + (if b0012 then 0 else 19000) + (if b0013 then 0 else 19000) + (if b0014 then 0 else 19000) + (if b0015 then 0 else 19000) + (if b0017 then 0 else 19000) + (if b0019 then 0 else 19000) + (if b0020 then 0 else 19000) + (if b0021 then 0 else 19000) + (if b0022 then 0 else 19000) + (if b0023 then 0 else 19000) + (if b0024 then 0 else 19000) + (if b0025 then 0 else 19000) + (if b0026 then 0 else 19000) + (if b0027 then 0 else 19000) + (if b0028 then 0 else 19000) + (if b0029 then 0 else 19000) + (if b0030 then 0 else 19000) + (if b0031 then 0 else 19000) + (if b0032 then 0 else 19000) + (if b0033 then 0 else 19000) + (if b0034 then 0 else 19000) + (if b0035 then 0 else 19000) + (if b0036 then 0 else 19000) + (if b0037 then 0 else 19000) + (if b0038 then 0 else 19000) + (if b0039 then 0 else 19000) + (if b0040 then 0 else 19000) + (if b0041 then 0 else 19000) + (if b0042 then 0 else 19000) + (if b0043 then 0 else 19000) + (if b0044 then 0 else 19000) + (if b0045 then 0 else 19000) + (if b0046 then 0 else 19000) + (if b0047 then 0 else 19000) < 441
}
Prover Time taken = 1.612282
Added Horn clause: 0 && 0 && 0 && 0 && 3 => 4
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/rodinia_2.4/particlefilter/likelihood_single/kernel.bpl.ice2.bpl
Total learner time was 00:00:00.1201910
Verifying $likelihood_kernel: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool) : bool
{
  0 + (if b0000 then 0 else 19000) + (if b0002 then 0 else 19000) + (if b0004 then 0 else 19000) + (if b0006 then 0 else 19000) + (if b0008 then 0 else 19000) + (if b0009 then 0 else 19000) + (if b0010 then 0 else 19000) + (if b0011 then 0 else 19000) + (if b0012 then 0 else 19000) + (if b0013 then 0 else 19000) + (if b0014 then 0 else 19000) + (if b0015 then 0 else 19000) + (if b0017 then 0 else 19000) + (if b0019 then 0 else 19000) + (if b0020 then 0 else 19000) + (if b0021 then 0 else 19000) + (if b0022 then 0 else 19000) + (if b0023 then 0 else 19000) + (if b0024 then 0 else 19000) + (if b0025 then 0 else 19000) + (if b0026 then 0 else 19000) + (if b0027 then 0 else 19000) + (if b0028 then 0 else 19000) + (if b0029 then 0 else 19000) + (if b0030 then 0 else 19000) + (if b0031 then 0 else 19000) + (if b0032 then 0 else 19000) + (if b0033 then 0 else 19000) + (if b0034 then 0 else 19000) + (if b0035 then 0 else 19000) + (if b0036 then 0 else 19000) + (if b0037 then 0 else 19000) + (if b0038 then 0 else 19000) + (if b0039 then 0 else 19000) + (if b0040 then 0 else 19000) + (if b0041 then 0 else 19000) + (if b0042 then 0 else 19000) + (if b0044 then 0 else 19000) + (if b0045 then 0 else 19000) + (if b0046 then 0 else 19000) + (if b0047 then 0 else 19000) < 441
}
Command exited with non-zero status 124
2.58user 3.04system 19:58.62elapsed 0%CPU (0avgtext+0avgdata 61872maxresident)k
296inputs+176outputs (1major+29092minor)pagefaults 0swaps
FILE:rodinia_2.4/particlefilter/likelihood_single/kernel.bpl.ice2.bpl
#################
Wed May 12 06:15:44 UTC 2021
KEY=awinnow
OUTPUT=/root/Docker/winnow_gpu_timeout.txt
[TRACE] Using prover: /root/Docker/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/root/Docker/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a winnow
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/errorLimit:1
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/rodinia_2.4/pathfinder/dynproc/_kernel.bpl.ice2.bpl
--------------------
Parsing /root/Docker/benchmarks/BenchmarksCompiled/awinnow/rodinia_2.4/pathfinder/dynproc/_kernel.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /root/Docker/z3/bin/z3
#parameters: 14
Generating VC of $dynproc_kernel
Verifying $dynproc_kernel: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.203758
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/rodinia_2.4/pathfinder/dynproc/_kernel.bpl.ice2.bpl
Total learner time was 00:00:00.1207260
Verifying $dynproc_kernel: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool) : bool
{
  0 + (if b0000 then 0 else 5000) + (if b0001 then 0 else 5000) + (if b0002 then 0 else 5000) + (if b0003 then 0 else 5000) + (if b0004 then 0 else 5000) + (if b0005 then 0 else 5000) + (if b0006 then 0 else 5000) + (if b0007 then 0 else 5000) + (if b0008 then 0 else 5000) + (if b0009 then 0 else 5000) + (if b0010 then 0 else 5000) + (if b0011 then 0 else 5000) + (if b0012 then 0 else 5000) + (if b0013 then 0 else 5000) < 441
}
Overwrote: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1: negative
Prover Time taken = 0.209241
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/rodinia_2.4/pathfinder/dynproc/_kernel.bpl.ice2.bpl
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1] -> 0 Predicated Label: 1 True Label 0 not consistent!
sorcar: sorcar.cpp:229: int main(int, char* const*): Assertion `sorcar::is_consistent(X, datapoints, horn_constraints)' failed.
The learner seems to have run into an error!

Unhandled Exception:
Microsoft.Boogie.Houdini.MLHoudiniInternalError: The learner seems to have run into an error!
  at Microsoft.Boogie.Houdini.MLHoudini.learn (System.Collections.Generic.HashSet`1[System.String]& funcsChanged) [0x000e7] in <3034164c407e4adc8ab666e7c26ee7b8>:0 
  at Microsoft.Boogie.Houdini.MLHoudini.LearnInv (System.Collections.Generic.Dictionary`2[TKey,TValue] impl2Priority) [0x00782] in <3034164c407e4adc8ab666e7c26ee7b8>:0 
  at Microsoft.Boogie.Houdini.MLHoudini.ComputeSummaries () [0x0019c] in <3034164c407e4adc8ab666e7c26ee7b8>:0 
  at Microsoft.Boogie.ExecutionEngine.RunMLHoudini (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, Microsoft.Boogie.ErrorReporterDelegate er, System.String filename) [0x00055] in <392c81a181e742f795ac4613c6efd8ce>:0 
  at Microsoft.Boogie.ExecutionEngine.RunHoudini (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, Microsoft.Boogie.ErrorReporterDelegate er, System.String filename) [0x00021] in <392c81a181e742f795ac4613c6efd8ce>:0 
  at Microsoft.Boogie.ExecutionEngine.InferAndVerify (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, System.String filename, Microsoft.Boogie.ErrorReporterDelegate er, System.String requestId) [0x00136] in <392c81a181e742f795ac4613c6efd8ce>:0 
  at Microsoft.Boogie.ExecutionEngine.ProcessFiles (System.Collections.Generic.List`1[T] fileNames, System.Boolean lookForSnapshots) [0x002bd] in <392c81a181e742f795ac4613c6efd8ce>:0 
  at Microsoft.Boogie.OnlyBoogie.Main (System.String[] args) [0x0029f] in <581a14d47152481e860a87838c548766>:0 
[ERROR] FATAL UNHANDLED EXCEPTION: Microsoft.Boogie.Houdini.MLHoudiniInternalError: The learner seems to have run into an error!
  at Microsoft.Boogie.Houdini.MLHoudini.learn (System.Collections.Generic.HashSet`1[System.String]& funcsChanged) [0x000e7] in <3034164c407e4adc8ab666e7c26ee7b8>:0 
  at Microsoft.Boogie.Houdini.MLHoudini.LearnInv (System.Collections.Generic.Dictionary`2[TKey,TValue] impl2Priority) [0x00782] in <3034164c407e4adc8ab666e7c26ee7b8>:0 
  at Microsoft.Boogie.Houdini.MLHoudini.ComputeSummaries () [0x0019c] in <3034164c407e4adc8ab666e7c26ee7b8>:0 
  at Microsoft.Boogie.ExecutionEngine.RunMLHoudini (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, Microsoft.Boogie.ErrorReporterDelegate er, System.String filename) [0x00055] in <392c81a181e742f795ac4613c6efd8ce>:0 
  at Microsoft.Boogie.ExecutionEngine.RunHoudini (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, Microsoft.Boogie.ErrorReporterDelegate er, System.String filename) [0x00021] in <392c81a181e742f795ac4613c6efd8ce>:0 
  at Microsoft.Boogie.ExecutionEngine.InferAndVerify (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, System.String filename, Microsoft.Boogie.ErrorReporterDelegate er, System.String requestId) [0x00136] in <392c81a181e742f795ac4613c6efd8ce>:0 
  at Microsoft.Boogie.ExecutionEngine.ProcessFiles (System.Collections.Generic.List`1[T] fileNames, System.Boolean lookForSnapshots) [0x002bd] in <392c81a181e742f795ac4613c6efd8ce>:0 
  at Microsoft.Boogie.OnlyBoogie.Main (System.String[] args) [0x0029f] in <581a14d47152481e860a87838c548766>:0 
Command exited with non-zero status 1
0.80user 1.09system 0:02.10elapsed 90%CPU (0avgtext+0avgdata 46580maxresident)k
144inputs+64outputs (1major+13746minor)pagefaults 0swaps
FILE:rodinia_2.4/pathfinder/dynproc/_kernel.bpl.ice2.bpl
#################
Wed May 12 06:15:46 UTC 2021
KEY=awinnow
OUTPUT=/root/Docker/winnow_gpu_timeout.txt
[TRACE] Using prover: /root/Docker/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/root/Docker/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a winnow
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/errorLimit:1
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/shoc/bfs/iiit/_kernel.bpl.ice2.bpl
--------------------
Parsing /root/Docker/benchmarks/BenchmarksCompiled/awinnow/shoc/bfs/iiit/_kernel.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /root/Docker/z3/bin/z3
#parameters: 65
Generating VC of $BFS_kernel_warp
Verifying $BFS_kernel_warp: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.195195
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/shoc/bfs/iiit/_kernel.bpl.ice2.bpl
Total learner time was 00:00:00.1278250
Verifying $BFS_kernel_warp: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool) : bool
{
  0 + (if b0000 then 0 else 26000) + (if b0001 then 0 else 26000) + (if b0002 then 0 else 26000) + (if b0003 then 0 else 26000) + (if b0004 then 0 else 26000) + (if b0005 then 0 else 26000) + (if b0006 then 0 else 26000) + (if b0007 then 0 else 26000) + (if b0008 then 0 else 26000) + (if b0009 then 0 else 26000) + (if b0010 then 0 else 26000) + (if b0011 then 0 else 26000) + (if b0012 then 0 else 26000) + (if b0013 then 0 else 26000) + (if b0014 then 0 else 26000) + (if b0015 then 0 else 26000) + (if b0016 then 0 else 26000) + (if b0017 then 0 else 26000) + (if b0018 then 0 else 26000) + (if b0019 then 0 else 26000) + (if b0020 then 0 else 26000) + (if b0021 then 0 else 26000) + (if b0022 then 0 else 26000) + (if b0023 then 0 else 26000) + (if b0024 then 0 else 26000) + (if b0025 then 0 else 26000) + (if b0026 then 0 else 26000) + (if b0027 then 0 else 26000) + (if b0028 then 0 else 26000) + (if b0029 then 0 else 26000) + (if b0030 then 0 else 26000) + (if b0031 then 0 else 26000) + (if b0032 then 0 else 26000) + (if b0033 then 0 else 26000) + (if b0034 then 0 else 26000) + (if b0035 then 0 else 26000) + (if b0036 then 0 else 26000) + (if b0037 then 0 else 26000) + (if b0038 then 0 else 26000) + (if b0039 then 0 else 26000) + (if b0040 then 0 else 26000) + (if b0041 then 0 else 26000) + (if b0042 then 0 else 26000) + (if b0043 then 0 else 26000) + (if b0044 then 0 else 26000) + (if b0045 then 0 else 26000) + (if b0046 then 0 else 26000) + (if b0047 then 0 else 26000) + (if b0048 then 0 else 26000) + (if b0049 then 0 else 26000) + (if b0050 then 0 else 26000) + (if b0051 then 0 else 26000) + (if b0052 then 0 else 26000) + (if b0053 then 0 else 26000) + (if b0054 then 0 else 26000) + (if b0055 then 0 else 26000) + (if b0056 then 0 else 26000) + (if b0057 then 0 else 26000) + (if b0058 then 0 else 26000) + (if b0059 then 0 else 26000) + (if b0060 then 0 else 26000) + (if b0061 then 0 else 26000) + (if b0062 then 0 else 26000) + (if b0063 then 0 else 26000) + (if b0064 then 0 else 26000) < 441
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,1,1,0,1,0,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.352879
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/shoc/bfs/iiit/_kernel.bpl.ice2.bpl
Total learner time was 00:00:00.1230930
Verifying $BFS_kernel_warp: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool) : bool
{
  0 + (if b0000 then 0 else 26000) + (if b0001 then 0 else 26000) + (if b0002 then 0 else 26000) + (if b0003 then 0 else 26000) + (if b0004 then 0 else 26000) + (if b0005 then 0 else 26000) + (if b0006 then 0 else 26000) + (if b0007 then 0 else 26000) + (if b0008 then 0 else 26000) + (if b0009 then 0 else 26000) + (if b0010 then 0 else 26000) + (if b0011 then 0 else 26000) + (if b0012 then 0 else 26000) + (if b0013 then 0 else 26000) + (if b0014 then 0 else 26000) + (if b0015 then 0 else 26000) + (if b0016 then 0 else 26000) + (if b0017 then 0 else 26000) + (if b0018 then 0 else 26000) + (if b0019 then 0 else 26000) + (if b0020 then 0 else 26000) + (if b0021 then 0 else 26000) + (if b0022 then 0 else 26000) + (if b0023 then 0 else 26000) + (if b0024 then 0 else 26000) + (if b0029 then 0 else 26000) + (if b0030 then 0 else 26000) + (if b0032 then 0 else 26000) + (if b0035 then 0 else 26000) + (if b0037 then 0 else 26000) + (if b0038 then 0 else 26000) + (if b0039 then 0 else 26000) + (if b0040 then 0 else 26000) + (if b0041 then 0 else 26000) + (if b0042 then 0 else 26000) + (if b0043 then 0 else 26000) + (if b0044 then 0 else 26000) + (if b0045 then 0 else 26000) + (if b0046 then 0 else 26000) + (if b0047 then 0 else 26000) + (if b0048 then 0 else 26000) + (if b0049 then 0 else 26000) + (if b0050 then 0 else 26000) + (if b0051 then 0 else 26000) + (if b0052 then 0 else 26000) + (if b0053 then 0 else 26000) + (if b0054 then 0 else 26000) + (if b0055 then 0 else 26000) + (if b0056 then 0 else 26000) + (if b0057 then 0 else 26000) + (if b0058 then 0 else 26000) + (if b0059 then 0 else 26000) + (if b0060 then 0 else 26000) + (if b0061 then 0 else 26000) + (if b0062 then 0 else 26000) + (if b0063 then 0 else 26000) + (if b0064 then 0 else 26000) < 441
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.36444
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/shoc/bfs/iiit/_kernel.bpl.ice2.bpl
Total learner time was 00:00:00.1190260
Verifying $BFS_kernel_warp: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool) : bool
{
  0 + (if b0000 then 0 else 26000) + (if b0001 then 0 else 26000) + (if b0002 then 0 else 26000) + (if b0003 then 0 else 26000) + (if b0004 then 0 else 26000) + (if b0005 then 0 else 26000) + (if b0006 then 0 else 26000) + (if b0007 then 0 else 26000) + (if b0008 then 0 else 26000) + (if b0009 then 0 else 26000) + (if b0010 then 0 else 26000) + (if b0011 then 0 else 26000) + (if b0012 then 0 else 26000) + (if b0013 then 0 else 26000) + (if b0014 then 0 else 26000) + (if b0015 then 0 else 26000) + (if b0016 then 0 else 26000) + (if b0017 then 0 else 26000) + (if b0018 then 0 else 26000) + (if b0019 then 0 else 26000) + (if b0020 then 0 else 26000) + (if b0021 then 0 else 26000) + (if b0022 then 0 else 26000) + (if b0023 then 0 else 26000) + (if b0024 then 0 else 26000) + (if b0032 then 0 else 26000) + (if b0037 then 0 else 26000) + (if b0038 then 0 else 26000) + (if b0039 then 0 else 26000) + (if b0040 then 0 else 26000) + (if b0041 then 0 else 26000) + (if b0042 then 0 else 26000) + (if b0043 then 0 else 26000) + (if b0044 then 0 else 26000) + (if b0045 then 0 else 26000) + (if b0046 then 0 else 26000) + (if b0047 then 0 else 26000) + (if b0048 then 0 else 26000) + (if b0049 then 0 else 26000) + (if b0050 then 0 else 26000) + (if b0051 then 0 else 26000) + (if b0052 then 0 else 26000) + (if b0053 then 0 else 26000) + (if b0054 then 0 else 26000) + (if b0055 then 0 else 26000) + (if b0056 then 0 else 26000) + (if b0057 then 0 else 26000) + (if b0058 then 0 else 26000) + (if b0059 then 0 else 26000) + (if b0060 then 0 else 26000) + (if b0061 then 0 else 26000) + (if b0062 then 0 else 26000) + (if b0063 then 0 else 26000) + (if b0064 then 0 else 26000) < 441
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.332669
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/shoc/bfs/iiit/_kernel.bpl.ice2.bpl
Total learner time was 00:00:00.1203520
Verifying $BFS_kernel_warp: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool) : bool
{
  0 + (if b0000 then 0 else 26000) + (if b0001 then 0 else 26000) + (if b0002 then 0 else 26000) + (if b0003 then 0 else 26000) + (if b0004 then 0 else 26000) + (if b0005 then 0 else 26000) + (if b0006 then 0 else 26000) + (if b0007 then 0 else 26000) + (if b0008 then 0 else 26000) + (if b0009 then 0 else 26000) + (if b0010 then 0 else 26000) + (if b0011 then 0 else 26000) + (if b0012 then 0 else 26000) + (if b0013 then 0 else 26000) + (if b0014 then 0 else 26000) + (if b0015 then 0 else 26000) + (if b0016 then 0 else 26000) + (if b0017 then 0 else 26000) + (if b0018 then 0 else 26000) + (if b0019 then 0 else 26000) + (if b0020 then 0 else 26000) + (if b0021 then 0 else 26000) + (if b0022 then 0 else 26000) + (if b0023 then 0 else 26000) + (if b0024 then 0 else 26000) + (if b0037 then 0 else 26000) + (if b0038 then 0 else 26000) + (if b0039 then 0 else 26000) + (if b0040 then 0 else 26000) + (if b0041 then 0 else 26000) + (if b0042 then 0 else 26000) + (if b0043 then 0 else 26000) + (if b0044 then 0 else 26000) + (if b0045 then 0 else 26000) + (if b0046 then 0 else 26000) + (if b0047 then 0 else 26000) + (if b0048 then 0 else 26000) + (if b0049 then 0 else 26000) + (if b0050 then 0 else 26000) + (if b0051 then 0 else 26000) + (if b0052 then 0 else 26000) + (if b0053 then 0 else 26000) + (if b0054 then 0 else 26000) + (if b0055 then 0 else 26000) + (if b0056 then 0 else 26000) + (if b0057 then 0 else 26000) + (if b0058 then 0 else 26000) + (if b0059 then 0 else 26000) + (if b0060 then 0 else 26000) + (if b0061 then 0 else 26000) + (if b0062 then 0 else 26000) + (if b0063 then 0 else 26000) + (if b0064 then 0 else 26000) < 441
}
Prover Time taken = 0.268716
Added Horn clause: 0 => 4
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/shoc/bfs/iiit/_kernel.bpl.ice2.bpl
Total learner time was 00:00:00.1202600
Verifying $BFS_kernel_warp: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool) : bool
{
  0 + (if b0000 then 0 else 26000) + (if b0001 then 0 else 26000) + (if b0002 then 0 else 26000) + (if b0003 then 0 else 26000) + (if b0004 then 0 else 26000) + (if b0005 then 0 else 26000) + (if b0006 then 0 else 26000) + (if b0007 then 0 else 26000) + (if b0008 then 0 else 26000) + (if b0009 then 0 else 26000) + (if b0010 then 0 else 26000) + (if b0011 then 0 else 26000) + (if b0012 then 0 else 26000) + (if b0013 then 0 else 26000) + (if b0014 then 0 else 26000) + (if b0015 then 0 else 26000) + (if b0016 then 0 else 26000) + (if b0017 then 0 else 26000) + (if b0018 then 0 else 26000) + (if b0021 then 0 else 26000) + (if b0022 then 0 else 26000) + (if b0023 then 0 else 26000) + (if b0024 then 0 else 26000) + (if b0037 then 0 else 26000) + (if b0038 then 0 else 26000) + (if b0039 then 0 else 26000) + (if b0040 then 0 else 26000) + (if b0041 then 0 else 26000) + (if b0042 then 0 else 26000) + (if b0043 then 0 else 26000) + (if b0044 then 0 else 26000) + (if b0045 then 0 else 26000) + (if b0046 then 0 else 26000) + (if b0047 then 0 else 26000) + (if b0048 then 0 else 26000) + (if b0049 then 0 else 26000) + (if b0050 then 0 else 26000) + (if b0051 then 0 else 26000) + (if b0052 then 0 else 26000) + (if b0053 then 0 else 26000) + (if b0054 then 0 else 26000) + (if b0055 then 0 else 26000) + (if b0056 then 0 else 26000) + (if b0057 then 0 else 26000) + (if b0058 then 0 else 26000) + (if b0059 then 0 else 26000) + (if b0060 then 0 else 26000) + (if b0061 then 0 else 26000) + (if b0062 then 0 else 26000) + (if b0063 then 0 else 26000) + (if b0064 then 0 else 26000) < 441
}
Prover Time taken = 0.294767
Added Horn clause: 0 => 5
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/shoc/bfs/iiit/_kernel.bpl.ice2.bpl
Total learner time was 00:00:00.1205170
Verifying $BFS_kernel_warp: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool) : bool
{
  0 + (if b0000 then 0 else 26000) + (if b0001 then 0 else 26000) + (if b0002 then 0 else 26000) + (if b0003 then 0 else 26000) + (if b0004 then 0 else 26000) + (if b0005 then 0 else 26000) + (if b0006 then 0 else 26000) + (if b0007 then 0 else 26000) + (if b0008 then 0 else 26000) + (if b0009 then 0 else 26000) + (if b0010 then 0 else 26000) + (if b0011 then 0 else 26000) + (if b0012 then 0 else 26000) + (if b0013 then 0 else 26000) + (if b0014 then 0 else 26000) + (if b0015 then 0 else 26000) + (if b0016 then 0 else 26000) + (if b0017 then 0 else 26000) + (if b0018 then 0 else 26000) + (if b0022 then 0 else 26000) + (if b0023 then 0 else 26000) + (if b0024 then 0 else 26000) + (if b0037 then 0 else 26000) + (if b0038 then 0 else 26000) + (if b0039 then 0 else 26000) + (if b0040 then 0 else 26000) + (if b0041 then 0 else 26000) + (if b0042 then 0 else 26000) + (if b0043 then 0 else 26000) + (if b0044 then 0 else 26000) + (if b0045 then 0 else 26000) + (if b0046 then 0 else 26000) + (if b0047 then 0 else 26000) + (if b0048 then 0 else 26000) + (if b0049 then 0 else 26000) + (if b0050 then 0 else 26000) + (if b0051 then 0 else 26000) + (if b0052 then 0 else 26000) + (if b0053 then 0 else 26000) + (if b0054 then 0 else 26000) + (if b0055 then 0 else 26000) + (if b0056 then 0 else 26000) + (if b0057 then 0 else 26000) + (if b0058 then 0 else 26000) + (if b0059 then 0 else 26000) + (if b0060 then 0 else 26000) + (if b0061 then 0 else 26000) + (if b0062 then 0 else 26000) + (if b0063 then 0 else 26000) + (if b0064 then 0 else 26000) < 441
}
Prover Time taken = 0.29031
Added Horn clause: 0 => 6
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/shoc/bfs/iiit/_kernel.bpl.ice2.bpl
Total learner time was 00:00:00.1204000
Verifying $BFS_kernel_warp: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool) : bool
{
  0 + (if b0000 then 0 else 26000) + (if b0001 then 0 else 26000) + (if b0002 then 0 else 26000) + (if b0003 then 0 else 26000) + (if b0004 then 0 else 26000) + (if b0005 then 0 else 26000) + (if b0006 then 0 else 26000) + (if b0007 then 0 else 26000) + (if b0008 then 0 else 26000) + (if b0009 then 0 else 26000) + (if b0010 then 0 else 26000) + (if b0011 then 0 else 26000) + (if b0012 then 0 else 26000) + (if b0013 then 0 else 26000) + (if b0014 then 0 else 26000) + (if b0015 then 0 else 26000) + (if b0016 then 0 else 26000) + (if b0023 then 0 else 26000) + (if b0024 then 0 else 26000) + (if b0037 then 0 else 26000) + (if b0038 then 0 else 26000) + (if b0039 then 0 else 26000) + (if b0040 then 0 else 26000) + (if b0041 then 0 else 26000) + (if b0042 then 0 else 26000) + (if b0043 then 0 else 26000) + (if b0044 then 0 else 26000) + (if b0045 then 0 else 26000) + (if b0046 then 0 else 26000) + (if b0047 then 0 else 26000) + (if b0048 then 0 else 26000) + (if b0049 then 0 else 26000) + (if b0050 then 0 else 26000) + (if b0051 then 0 else 26000) + (if b0052 then 0 else 26000) + (if b0053 then 0 else 26000) + (if b0054 then 0 else 26000) + (if b0055 then 0 else 26000) + (if b0056 then 0 else 26000) + (if b0057 then 0 else 26000) + (if b0058 then 0 else 26000) + (if b0059 then 0 else 26000) + (if b0060 then 0 else 26000) + (if b0061 then 0 else 26000) + (if b0062 then 0 else 26000) + (if b0063 then 0 else 26000) + (if b0064 then 0 else 26000) < 441
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,0,1,0,1,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: negative
Prover Time taken = 0.33819
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/shoc/bfs/iiit/_kernel.bpl.ice2.bpl
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1] -> 0 Predicated Label: 1 True Label 0 not consistent!
sorcar: sorcar.cpp:229: int main(int, char* const*): Assertion `sorcar::is_consistent(X, datapoints, horn_constraints)' failed.
The learner seems to have run into an error!

Unhandled Exception:
Microsoft.Boogie.Houdini.MLHoudiniInternalError: The learner seems to have run into an error!
  at Microsoft.Boogie.Houdini.MLHoudini.learn (System.Collections.Generic.HashSet`1[System.String]& funcsChanged) [0x000e7] in <3034164c407e4adc8ab666e7c26ee7b8>:0 
  at Microsoft.Boogie.Houdini.MLHoudini.LearnInv (System.Collections.Generic.Dictionary`2[TKey,TValue] impl2Priority) [0x00782] in <3034164c407e4adc8ab666e7c26ee7b8>:0 
  at Microsoft.Boogie.Houdini.MLHoudini.ComputeSummaries () [0x0019c] in <3034164c407e4adc8ab666e7c26ee7b8>:0 
  at Microsoft.Boogie.ExecutionEngine.RunMLHoudini (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, Microsoft.Boogie.ErrorReporterDelegate er, System.String filename) [0x00055] in <392c81a181e742f795ac4613c6efd8ce>:0 
  at Microsoft.Boogie.ExecutionEngine.RunHoudini (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, Microsoft.Boogie.ErrorReporterDelegate er, System.String filename) [0x00021] in <392c81a181e742f795ac4613c6efd8ce>:0 
  at Microsoft.Boogie.ExecutionEngine.InferAndVerify (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, System.String filename, Microsoft.Boogie.ErrorReporterDelegate er, System.String requestId) [0x00136] in <392c81a181e742f795ac4613c6efd8ce>:0 
  at Microsoft.Boogie.ExecutionEngine.ProcessFiles (System.Collections.Generic.List`1[T] fileNames, System.Boolean lookForSnapshots) [0x002bd] in <392c81a181e742f795ac4613c6efd8ce>:0 
  at Microsoft.Boogie.OnlyBoogie.Main (System.String[] args) [0x0029f] in <581a14d47152481e860a87838c548766>:0 
[ERROR] FATAL UNHANDLED EXCEPTION: Microsoft.Boogie.Houdini.MLHoudiniInternalError: The learner seems to have run into an error!
  at Microsoft.Boogie.Houdini.MLHoudini.learn (System.Collections.Generic.HashSet`1[System.String]& funcsChanged) [0x000e7] in <3034164c407e4adc8ab666e7c26ee7b8>:0 
  at Microsoft.Boogie.Houdini.MLHoudini.LearnInv (System.Collections.Generic.Dictionary`2[TKey,TValue] impl2Priority) [0x00782] in <3034164c407e4adc8ab666e7c26ee7b8>:0 
  at Microsoft.Boogie.Houdini.MLHoudini.ComputeSummaries () [0x0019c] in <3034164c407e4adc8ab666e7c26ee7b8>:0 
  at Microsoft.Boogie.ExecutionEngine.RunMLHoudini (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, Microsoft.Boogie.ErrorReporterDelegate er, System.String filename) [0x00055] in <392c81a181e742f795ac4613c6efd8ce>:0 
  at Microsoft.Boogie.ExecutionEngine.RunHoudini (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, Microsoft.Boogie.ErrorReporterDelegate er, System.String filename) [0x00021] in <392c81a181e742f795ac4613c6efd8ce>:0 
  at Microsoft.Boogie.ExecutionEngine.InferAndVerify (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, System.String filename, Microsoft.Boogie.ErrorReporterDelegate er, System.String requestId) [0x00136] in <392c81a181e742f795ac4613c6efd8ce>:0 
  at Microsoft.Boogie.ExecutionEngine.ProcessFiles (System.Collections.Generic.List`1[T] fileNames, System.Boolean lookForSnapshots) [0x002bd] in <392c81a181e742f795ac4613c6efd8ce>:0 
  at Microsoft.Boogie.OnlyBoogie.Main (System.String[] args) [0x0029f] in <581a14d47152481e860a87838c548766>:0 
Command exited with non-zero status 1
1.30user 1.64system 0:04.93elapsed 59%CPU (0avgtext+0avgdata 58148maxresident)k
136inputs+288outputs (1major+30512minor)pagefaults 0swaps
FILE:shoc/bfs/iiit/_kernel.bpl.ice2.bpl
#################
Wed May 12 06:15:51 UTC 2021
KEY=awinnow
OUTPUT=/root/Docker/winnow_gpu_timeout.txt
[TRACE] Using prover: /root/Docker/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/root/Docker/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a winnow
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/errorLimit:1
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/shoc/bfs/uiuc_spill/BFS_kernel_one_block/_kernel.bpl.ice2.bpl
--------------------
Parsing /root/Docker/benchmarks/BenchmarksCompiled/awinnow/shoc/bfs/uiuc_spill/BFS_kernel_one_block/_kernel.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /root/Docker/z3/bin/z3
#parameters: 95
Generating VC of $BFS_kernel_one_block
Verifying $BFS_kernel_one_block: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.196795
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/shoc/bfs/uiuc_spill/BFS_kernel_one_block/_kernel.bpl.ice2.bpl
Total learner time was 00:00:00.1205090
Verifying $BFS_kernel_one_block: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool) : bool
{
  0 + (if b0000 then 0 else 38000) + (if b0001 then 0 else 38000) + (if b0002 then 0 else 38000) + (if b0003 then 0 else 38000) + (if b0004 then 0 else 38000) + (if b0005 then 0 else 38000) + (if b0006 then 0 else 38000) + (if b0007 then 0 else 38000) + (if b0008 then 0 else 38000) + (if b0009 then 0 else 38000) + (if b0010 then 0 else 38000) + (if b0011 then 0 else 38000) + (if b0012 then 0 else 38000) + (if b0013 then 0 else 38000) + (if b0014 then 0 else 38000) + (if b0015 then 0 else 38000) + (if b0016 then 0 else 38000) + (if b0017 then 0 else 38000) + (if b0018 then 0 else 38000) + (if b0019 then 0 else 38000) + (if b0020 then 0 else 38000) + (if b0021 then 0 else 38000) + (if b0022 then 0 else 38000) + (if b0023 then 0 else 38000) + (if b0024 then 0 else 38000) + (if b0025 then 0 else 38000) + (if b0026 then 0 else 38000) + (if b0027 then 0 else 38000) + (if b0028 then 0 else 38000) + (if b0029 then 0 else 38000) + (if b0030 then 0 else 38000) + (if b0031 then 0 else 38000) + (if b0032 then 0 else 38000) + (if b0033 then 0 else 38000) + (if b0034 then 0 else 38000) + (if b0035 then 0 else 38000) + (if b0036 then 0 else 38000) + (if b0037 then 0 else 38000) + (if b0038 then 0 else 38000) + (if b0039 then 0 else 38000) + (if b0040 then 0 else 38000) + (if b0041 then 0 else 38000) + (if b0042 then 0 else 38000) + (if b0043 then 0 else 38000) + (if b0044 then 0 else 38000) + (if b0045 then 0 else 38000) + (if b0046 then 0 else 38000) + (if b0047 then 0 else 38000) + (if b0048 then 0 else 38000) + (if b0049 then 0 else 38000) + (if b0050 then 0 else 38000) + (if b0051 then 0 else 38000) + (if b0052 then 0 else 38000) + (if b0053 then 0 else 38000) + (if b0054 then 0 else 38000) + (if b0055 then 0 else 38000) + (if b0056 then 0 else 38000) + (if b0057 then 0 else 38000) + (if b0058 then 0 else 38000) + (if b0059 then 0 else 38000) + (if b0060 then 0 else 38000) + (if b0061 then 0 else 38000) + (if b0062 then 0 else 38000) + (if b0063 then 0 else 38000) + (if b0064 then 0 else 38000) + (if b0065 then 0 else 38000) + (if b0066 then 0 else 38000) + (if b0067 then 0 else 38000) + (if b0068 then 0 else 38000) + (if b0069 then 0 else 38000) + (if b0070 then 0 else 38000) + (if b0071 then 0 else 38000) + (if b0072 then 0 else 38000) + (if b0073 then 0 else 38000) + (if b0074 then 0 else 38000) + (if b0075 then 0 else 38000) + (if b0076 then 0 else 38000) + (if b0077 then 0 else 38000) + (if b0078 then 0 else 38000) + (if b0079 then 0 else 38000) + (if b0080 then 0 else 38000) + (if b0081 then 0 else 38000) + (if b0082 then 0 else 38000) + (if b0083 then 0 else 38000) + (if b0084 then 0 else 38000) + (if b0085 then 0 else 38000) + (if b0086 then 0 else 38000) + (if b0087 then 0 else 38000) + (if b0088 then 0 else 38000) + (if b0089 then 0 else 38000) + (if b0090 then 0 else 38000) + (if b0091 then 0 else 38000) + (if b0092 then 0 else 38000) + (if b0093 then 0 else 38000) + (if b0094 then 0 else 38000) < 441
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,1,1,0,1,0,1,0,0,0,1,1,1,1,1,1,1,0,1,0,0,1,0,1,0,1,0,1,1,1,1,0,0,0,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 1.046367
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/shoc/bfs/uiuc_spill/BFS_kernel_one_block/_kernel.bpl.ice2.bpl
Total learner time was 00:00:00.1206360
Verifying $BFS_kernel_one_block: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool) : bool
{
  0 + (if b0000 then 0 else 38000) + (if b0001 then 0 else 38000) + (if b0002 then 0 else 38000) + (if b0003 then 0 else 38000) + (if b0004 then 0 else 38000) + (if b0005 then 0 else 38000) + (if b0006 then 0 else 38000) + (if b0007 then 0 else 38000) + (if b0008 then 0 else 38000) + (if b0009 then 0 else 38000) + (if b0010 then 0 else 38000) + (if b0011 then 0 else 38000) + (if b0012 then 0 else 38000) + (if b0013 then 0 else 38000) + (if b0014 then 0 else 38000) + (if b0015 then 0 else 38000) + (if b0016 then 0 else 38000) + (if b0017 then 0 else 38000) + (if b0018 then 0 else 38000) + (if b0019 then 0 else 38000) + (if b0024 then 0 else 38000) + (if b0025 then 0 else 38000) + (if b0027 then 0 else 38000) + (if b0029 then 0 else 38000) + (if b0033 then 0 else 38000) + (if b0034 then 0 else 38000) + (if b0035 then 0 else 38000) + (if b0036 then 0 else 38000) + (if b0037 then 0 else 38000) + (if b0038 then 0 else 38000) + (if b0039 then 0 else 38000) + (if b0041 then 0 else 38000) + (if b0044 then 0 else 38000) + (if b0046 then 0 else 38000) + (if b0048 then 0 else 38000) + (if b0050 then 0 else 38000) + (if b0051 then 0 else 38000) + (if b0052 then 0 else 38000) + (if b0053 then 0 else 38000) + (if b0057 then 0 else 38000) + (if b0060 then 0 else 38000) + (if b0061 then 0 else 38000) + (if b0062 then 0 else 38000) + (if b0063 then 0 else 38000) + (if b0064 then 0 else 38000) + (if b0065 then 0 else 38000) + (if b0066 then 0 else 38000) + (if b0067 then 0 else 38000) + (if b0068 then 0 else 38000) + (if b0069 then 0 else 38000) + (if b0070 then 0 else 38000) + (if b0071 then 0 else 38000) + (if b0072 then 0 else 38000) + (if b0073 then 0 else 38000) + (if b0074 then 0 else 38000) + (if b0075 then 0 else 38000) + (if b0076 then 0 else 38000) + (if b0077 then 0 else 38000) + (if b0078 then 0 else 38000) + (if b0079 then 0 else 38000) + (if b0080 then 0 else 38000) + (if b0081 then 0 else 38000) + (if b0082 then 0 else 38000) + (if b0083 then 0 else 38000) + (if b0084 then 0 else 38000) + (if b0085 then 0 else 38000) + (if b0086 then 0 else 38000) + (if b0087 then 0 else 38000) + (if b0088 then 0 else 38000) + (if b0089 then 0 else 38000) + (if b0090 then 0 else 38000) + (if b0091 then 0 else 38000) + (if b0092 then 0 else 38000) + (if b0093 then 0 else 38000) + (if b0094 then 0 else 38000) < 441
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,0,0,1,0,1,0,1,1,1,1,0,1,0,0,1,1,1,0,1,1,0,1,0,1,1,1,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 1.27592
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/shoc/bfs/uiuc_spill/BFS_kernel_one_block/_kernel.bpl.ice2.bpl
Total learner time was 00:00:00.1217360
Verifying $BFS_kernel_one_block: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool) : bool
{
  0 + (if b0000 then 0 else 38000) + (if b0001 then 0 else 38000) + (if b0002 then 0 else 38000) + (if b0003 then 0 else 38000) + (if b0004 then 0 else 38000) + (if b0005 then 0 else 38000) + (if b0006 then 0 else 38000) + (if b0007 then 0 else 38000) + (if b0008 then 0 else 38000) + (if b0009 then 0 else 38000) + (if b0010 then 0 else 38000) + (if b0011 then 0 else 38000) + (if b0012 then 0 else 38000) + (if b0013 then 0 else 38000) + (if b0014 then 0 else 38000) + (if b0015 then 0 else 38000) + (if b0016 then 0 else 38000) + (if b0017 then 0 else 38000) + (if b0018 then 0 else 38000) + (if b0019 then 0 else 38000) + (if b0033 then 0 else 38000) + (if b0035 then 0 else 38000) + (if b0038 then 0 else 38000) + (if b0039 then 0 else 38000) + (if b0048 then 0 else 38000) + (if b0057 then 0 else 38000) + (if b0060 then 0 else 38000) + (if b0061 then 0 else 38000) + (if b0062 then 0 else 38000) + (if b0063 then 0 else 38000) + (if b0064 then 0 else 38000) + (if b0065 then 0 else 38000) + (if b0066 then 0 else 38000) + (if b0067 then 0 else 38000) + (if b0068 then 0 else 38000) + (if b0069 then 0 else 38000) + (if b0070 then 0 else 38000) + (if b0071 then 0 else 38000) + (if b0072 then 0 else 38000) + (if b0073 then 0 else 38000) + (if b0074 then 0 else 38000) + (if b0075 then 0 else 38000) + (if b0076 then 0 else 38000) + (if b0077 then 0 else 38000) + (if b0078 then 0 else 38000) + (if b0079 then 0 else 38000) + (if b0080 then 0 else 38000) + (if b0081 then 0 else 38000) + (if b0082 then 0 else 38000) + (if b0083 then 0 else 38000) + (if b0084 then 0 else 38000) + (if b0085 then 0 else 38000) + (if b0086 then 0 else 38000) + (if b0087 then 0 else 38000) + (if b0088 then 0 else 38000) + (if b0089 then 0 else 38000) + (if b0090 then 0 else 38000) + (if b0091 then 0 else 38000) + (if b0092 then 0 else 38000) + (if b0093 then 0 else 38000) + (if b0094 then 0 else 38000) < 441
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,0,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.854277
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/shoc/bfs/uiuc_spill/BFS_kernel_one_block/_kernel.bpl.ice2.bpl
Total learner time was 00:00:00.1218250
Verifying $BFS_kernel_one_block: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool) : bool
{
  0 + (if b0000 then 0 else 38000) + (if b0001 then 0 else 38000) + (if b0002 then 0 else 38000) + (if b0003 then 0 else 38000) + (if b0004 then 0 else 38000) + (if b0005 then 0 else 38000) + (if b0006 then 0 else 38000) + (if b0007 then 0 else 38000) + (if b0008 then 0 else 38000) + (if b0009 then 0 else 38000) + (if b0010 then 0 else 38000) + (if b0011 then 0 else 38000) + (if b0012 then 0 else 38000) + (if b0013 then 0 else 38000) + (if b0014 then 0 else 38000) + (if b0015 then 0 else 38000) + (if b0016 then 0 else 38000) + (if b0017 then 0 else 38000) + (if b0018 then 0 else 38000) + (if b0019 then 0 else 38000) + (if b0033 then 0 else 38000) + (if b0039 then 0 else 38000) + (if b0060 then 0 else 38000) + (if b0061 then 0 else 38000) + (if b0062 then 0 else 38000) + (if b0063 then 0 else 38000) + (if b0064 then 0 else 38000) + (if b0065 then 0 else 38000) + (if b0066 then 0 else 38000) + (if b0067 then 0 else 38000) + (if b0068 then 0 else 38000) + (if b0069 then 0 else 38000) + (if b0070 then 0 else 38000) + (if b0071 then 0 else 38000) + (if b0072 then 0 else 38000) + (if b0073 then 0 else 38000) + (if b0074 then 0 else 38000) + (if b0075 then 0 else 38000) + (if b0076 then 0 else 38000) + (if b0077 then 0 else 38000) + (if b0078 then 0 else 38000) + (if b0079 then 0 else 38000) + (if b0080 then 0 else 38000) + (if b0081 then 0 else 38000) + (if b0082 then 0 else 38000) + (if b0083 then 0 else 38000) + (if b0084 then 0 else 38000) + (if b0085 then 0 else 38000) + (if b0086 then 0 else 38000) + (if b0087 then 0 else 38000) + (if b0088 then 0 else 38000) + (if b0089 then 0 else 38000) + (if b0090 then 0 else 38000) + (if b0091 then 0 else 38000) + (if b0092 then 0 else 38000) + (if b0093 then 0 else 38000) + (if b0094 then 0 else 38000) < 441
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.947573
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/shoc/bfs/uiuc_spill/BFS_kernel_one_block/_kernel.bpl.ice2.bpl
Total learner time was 00:00:00.1201550
Verifying $BFS_kernel_one_block: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool) : bool
{
  0 + (if b0000 then 0 else 38000) + (if b0001 then 0 else 38000) + (if b0002 then 0 else 38000) + (if b0003 then 0 else 38000) + (if b0004 then 0 else 38000) + (if b0005 then 0 else 38000) + (if b0006 then 0 else 38000) + (if b0007 then 0 else 38000) + (if b0008 then 0 else 38000) + (if b0009 then 0 else 38000) + (if b0010 then 0 else 38000) + (if b0011 then 0 else 38000) + (if b0012 then 0 else 38000) + (if b0013 then 0 else 38000) + (if b0014 then 0 else 38000) + (if b0015 then 0 else 38000) + (if b0016 then 0 else 38000) + (if b0017 then 0 else 38000) + (if b0018 then 0 else 38000) + (if b0019 then 0 else 38000) + (if b0033 then 0 else 38000) + (if b0060 then 0 else 38000) + (if b0061 then 0 else 38000) + (if b0062 then 0 else 38000) + (if b0063 then 0 else 38000) + (if b0064 then 0 else 38000) + (if b0065 then 0 else 38000) + (if b0066 then 0 else 38000) + (if b0067 then 0 else 38000) + (if b0068 then 0 else 38000) + (if b0069 then 0 else 38000) + (if b0070 then 0 else 38000) + (if b0071 then 0 else 38000) + (if b0072 then 0 else 38000) + (if b0073 then 0 else 38000) + (if b0074 then 0 else 38000) + (if b0075 then 0 else 38000) + (if b0076 then 0 else 38000) + (if b0077 then 0 else 38000) + (if b0078 then 0 else 38000) + (if b0079 then 0 else 38000) + (if b0080 then 0 else 38000) + (if b0081 then 0 else 38000) + (if b0082 then 0 else 38000) + (if b0083 then 0 else 38000) + (if b0084 then 0 else 38000) + (if b0085 then 0 else 38000) + (if b0086 then 0 else 38000) + (if b0087 then 0 else 38000) + (if b0088 then 0 else 38000) + (if b0089 then 0 else 38000) + (if b0090 then 0 else 38000) + (if b0091 then 0 else 38000) + (if b0092 then 0 else 38000) + (if b0093 then 0 else 38000) + (if b0094 then 0 else 38000) < 441
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 1.337371
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/shoc/bfs/uiuc_spill/BFS_kernel_one_block/_kernel.bpl.ice2.bpl
Total learner time was 00:00:00.1215240
Verifying $BFS_kernel_one_block: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool) : bool
{
  0 + (if b0000 then 0 else 38000) + (if b0001 then 0 else 38000) + (if b0002 then 0 else 38000) + (if b0003 then 0 else 38000) + (if b0004 then 0 else 38000) + (if b0005 then 0 else 38000) + (if b0006 then 0 else 38000) + (if b0007 then 0 else 38000) + (if b0008 then 0 else 38000) + (if b0009 then 0 else 38000) + (if b0010 then 0 else 38000) + (if b0011 then 0 else 38000) + (if b0012 then 0 else 38000) + (if b0013 then 0 else 38000) + (if b0014 then 0 else 38000) + (if b0015 then 0 else 38000) + (if b0016 then 0 else 38000) + (if b0017 then 0 else 38000) + (if b0018 then 0 else 38000) + (if b0019 then 0 else 38000) + (if b0060 then 0 else 38000) + (if b0061 then 0 else 38000) + (if b0062 then 0 else 38000) + (if b0063 then 0 else 38000) + (if b0064 then 0 else 38000) + (if b0065 then 0 else 38000) + (if b0066 then 0 else 38000) + (if b0067 then 0 else 38000) + (if b0068 then 0 else 38000) + (if b0069 then 0 else 38000) + (if b0070 then 0 else 38000) + (if b0071 then 0 else 38000) + (if b0072 then 0 else 38000) + (if b0073 then 0 else 38000) + (if b0074 then 0 else 38000) + (if b0075 then 0 else 38000) + (if b0076 then 0 else 38000) + (if b0077 then 0 else 38000) + (if b0078 then 0 else 38000) + (if b0079 then 0 else 38000) + (if b0080 then 0 else 38000) + (if b0081 then 0 else 38000) + (if b0082 then 0 else 38000) + (if b0083 then 0 else 38000) + (if b0084 then 0 else 38000) + (if b0085 then 0 else 38000) + (if b0086 then 0 else 38000) + (if b0087 then 0 else 38000) + (if b0088 then 0 else 38000) + (if b0089 then 0 else 38000) + (if b0090 then 0 else 38000) + (if b0091 then 0 else 38000) + (if b0092 then 0 else 38000) + (if b0093 then 0 else 38000) + (if b0094 then 0 else 38000) < 441
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.696184
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/shoc/bfs/uiuc_spill/BFS_kernel_one_block/_kernel.bpl.ice2.bpl
Total learner time was 00:00:00.1209750
Verifying $BFS_kernel_one_block: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool) : bool
{
  0 + (if b0000 then 0 else 38000) + (if b0001 then 0 else 38000) + (if b0002 then 0 else 38000) + (if b0003 then 0 else 38000) + (if b0004 then 0 else 38000) + (if b0005 then 0 else 38000) + (if b0006 then 0 else 38000) + (if b0007 then 0 else 38000) + (if b0008 then 0 else 38000) + (if b0009 then 0 else 38000) + (if b0010 then 0 else 38000) + (if b0011 then 0 else 38000) + (if b0012 then 0 else 38000) + (if b0013 then 0 else 38000) + (if b0014 then 0 else 38000) + (if b0015 then 0 else 38000) + (if b0016 then 0 else 38000) + (if b0017 then 0 else 38000) + (if b0018 then 0 else 38000) + (if b0060 then 0 else 38000) + (if b0061 then 0 else 38000) + (if b0062 then 0 else 38000) + (if b0063 then 0 else 38000) + (if b0064 then 0 else 38000) + (if b0065 then 0 else 38000) + (if b0066 then 0 else 38000) + (if b0067 then 0 else 38000) + (if b0068 then 0 else 38000) + (if b0069 then 0 else 38000) + (if b0070 then 0 else 38000) + (if b0071 then 0 else 38000) + (if b0072 then 0 else 38000) + (if b0073 then 0 else 38000) + (if b0074 then 0 else 38000) + (if b0075 then 0 else 38000) + (if b0076 then 0 else 38000) + (if b0077 then 0 else 38000) + (if b0078 then 0 else 38000) + (if b0079 then 0 else 38000) + (if b0080 then 0 else 38000) + (if b0081 then 0 else 38000) + (if b0082 then 0 else 38000) + (if b0083 then 0 else 38000) + (if b0084 then 0 else 38000) + (if b0085 then 0 else 38000) + (if b0086 then 0 else 38000) + (if b0087 then 0 else 38000) + (if b0088 then 0 else 38000) + (if b0089 then 0 else 38000) + (if b0090 then 0 else 38000) + (if b0091 then 0 else 38000) + (if b0092 then 0 else 38000) + (if b0093 then 0 else 38000) + (if b0094 then 0 else 38000) < 441
}
Prover Time taken = 1.013431
Added Horn clause: 0 => 7
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/shoc/bfs/uiuc_spill/BFS_kernel_one_block/_kernel.bpl.ice2.bpl
Total learner time was 00:00:00.1270760
Verifying $BFS_kernel_one_block: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool) : bool
{
  0 + (if b0000 then 0 else 38000) + (if b0001 then 0 else 38000) + (if b0002 then 0 else 38000) + (if b0003 then 0 else 38000) + (if b0004 then 0 else 38000) + (if b0005 then 0 else 38000) + (if b0006 then 0 else 38000) + (if b0007 then 0 else 38000) + (if b0008 then 0 else 38000) + (if b0009 then 0 else 38000) + (if b0010 then 0 else 38000) + (if b0011 then 0 else 38000) + (if b0013 then 0 else 38000) + (if b0014 then 0 else 38000) + (if b0015 then 0 else 38000) + (if b0016 then 0 else 38000) + (if b0017 then 0 else 38000) + (if b0018 then 0 else 38000) + (if b0060 then 0 else 38000) + (if b0061 then 0 else 38000) + (if b0062 then 0 else 38000) + (if b0063 then 0 else 38000) + (if b0064 then 0 else 38000) + (if b0065 then 0 else 38000) + (if b0066 then 0 else 38000) + (if b0067 then 0 else 38000) + (if b0068 then 0 else 38000) + (if b0069 then 0 else 38000) + (if b0070 then 0 else 38000) + (if b0071 then 0 else 38000) + (if b0072 then 0 else 38000) + (if b0073 then 0 else 38000) + (if b0074 then 0 else 38000) + (if b0075 then 0 else 38000) + (if b0076 then 0 else 38000) + (if b0077 then 0 else 38000) + (if b0078 then 0 else 38000) + (if b0079 then 0 else 38000) + (if b0080 then 0 else 38000) + (if b0081 then 0 else 38000) + (if b0082 then 0 else 38000) + (if b0083 then 0 else 38000) + (if b0084 then 0 else 38000) + (if b0085 then 0 else 38000) + (if b0086 then 0 else 38000) + (if b0087 then 0 else 38000) + (if b0088 then 0 else 38000) + (if b0089 then 0 else 38000) + (if b0090 then 0 else 38000) + (if b0091 then 0 else 38000) + (if b0092 then 0 else 38000) + (if b0093 then 0 else 38000) + (if b0094 then 0 else 38000) < 441
}
Added Horn clause: 8 && 0 && 0 => 
Prover Time taken = 1.273722
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/shoc/bfs/uiuc_spill/BFS_kernel_one_block/_kernel.bpl.ice2.bpl
terminate called after throwing an instance of 'std::runtime_error'
  what():  No consistent conjunction exists
The learner seems to have run into an error!

Unhandled Exception:
Microsoft.Boogie.Houdini.MLHoudiniInternalError: The learner seems to have run into an error!
  at Microsoft.Boogie.Houdini.MLHoudini.learn (System.Collections.Generic.HashSet`1[System.String]& funcsChanged) [0x000e7] in <3034164c407e4adc8ab666e7c26ee7b8>:0 
  at Microsoft.Boogie.Houdini.MLHoudini.LearnInv (System.Collections.Generic.Dictionary`2[TKey,TValue] impl2Priority) [0x00782] in <3034164c407e4adc8ab666e7c26ee7b8>:0 
  at Microsoft.Boogie.Houdini.MLHoudini.ComputeSummaries () [0x0019c] in <3034164c407e4adc8ab666e7c26ee7b8>:0 
  at Microsoft.Boogie.ExecutionEngine.RunMLHoudini (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, Microsoft.Boogie.ErrorReporterDelegate er, System.String filename) [0x00055] in <392c81a181e742f795ac4613c6efd8ce>:0 
  at Microsoft.Boogie.ExecutionEngine.RunHoudini (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, Microsoft.Boogie.ErrorReporterDelegate er, System.String filename) [0x00021] in <392c81a181e742f795ac4613c6efd8ce>:0 
  at Microsoft.Boogie.ExecutionEngine.InferAndVerify (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, System.String filename, Microsoft.Boogie.ErrorReporterDelegate er, System.String requestId) [0x00136] in <392c81a181e742f795ac4613c6efd8ce>:0 
  at Microsoft.Boogie.ExecutionEngine.ProcessFiles (System.Collections.Generic.List`1[T] fileNames, System.Boolean lookForSnapshots) [0x002bd] in <392c81a181e742f795ac4613c6efd8ce>:0 
  at Microsoft.Boogie.OnlyBoogie.Main (System.String[] args) [0x0029f] in <581a14d47152481e860a87838c548766>:0 
[ERROR] FATAL UNHANDLED EXCEPTION: Microsoft.Boogie.Houdini.MLHoudiniInternalError: The learner seems to have run into an error!
  at Microsoft.Boogie.Houdini.MLHoudini.learn (System.Collections.Generic.HashSet`1[System.String]& funcsChanged) [0x000e7] in <3034164c407e4adc8ab666e7c26ee7b8>:0 
  at Microsoft.Boogie.Houdini.MLHoudini.LearnInv (System.Collections.Generic.Dictionary`2[TKey,TValue] impl2Priority) [0x00782] in <3034164c407e4adc8ab666e7c26ee7b8>:0 
  at Microsoft.Boogie.Houdini.MLHoudini.ComputeSummaries () [0x0019c] in <3034164c407e4adc8ab666e7c26ee7b8>:0 
  at Microsoft.Boogie.ExecutionEngine.RunMLHoudini (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, Microsoft.Boogie.ErrorReporterDelegate er, System.String filename) [0x00055] in <392c81a181e742f795ac4613c6efd8ce>:0 
  at Microsoft.Boogie.ExecutionEngine.RunHoudini (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, Microsoft.Boogie.ErrorReporterDelegate er, System.String filename) [0x00021] in <392c81a181e742f795ac4613c6efd8ce>:0 
  at Microsoft.Boogie.ExecutionEngine.InferAndVerify (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, System.String filename, Microsoft.Boogie.ErrorReporterDelegate er, System.String requestId) [0x00136] in <392c81a181e742f795ac4613c6efd8ce>:0 
  at Microsoft.Boogie.ExecutionEngine.ProcessFiles (System.Collections.Generic.List`1[T] fileNames, System.Boolean lookForSnapshots) [0x002bd] in <392c81a181e742f795ac4613c6efd8ce>:0 
  at Microsoft.Boogie.OnlyBoogie.Main (System.String[] args) [0x0029f] in <581a14d47152481e860a87838c548766>:0 
Command exited with non-zero status 1
1.62user 1.88system 0:11.50elapsed 30%CPU (0avgtext+0avgdata 67760maxresident)k
288inputs+304outputs (1major+36846minor)pagefaults 0swaps
FILE:shoc/bfs/uiuc_spill/BFS_kernel_one_block/_kernel.bpl.ice2.bpl
#################
Wed May 12 06:16:03 UTC 2021
KEY=awinnow
OUTPUT=/root/Docker/winnow_gpu_timeout.txt
[TRACE] Using prover: /root/Docker/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/root/Docker/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a winnow
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/errorLimit:1
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/shoc/bfs/uiuc_spill/BFS_kernel_SM_block/_kernel.bpl.ice2.bpl
--------------------
Parsing /root/Docker/benchmarks/BenchmarksCompiled/awinnow/shoc/bfs/uiuc_spill/BFS_kernel_SM_block/_kernel.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /root/Docker/z3/bin/z3
#parameters: 180
Generating VC of $BFS_kernel_SM_block
Verifying $BFS_kernel_SM_block: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.207561
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/shoc/bfs/uiuc_spill/BFS_kernel_SM_block/_kernel.bpl.ice2.bpl
Total learner time was 00:00:00.1190830
Verifying $BFS_kernel_SM_block: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool) : bool
{
  0 + (if b0000 then 0 else 72000) + (if b0001 then 0 else 72000) + (if b0002 then 0 else 72000) + (if b0003 then 0 else 72000) + (if b0004 then 0 else 72000) + (if b0005 then 0 else 72000) + (if b0006 then 0 else 72000) + (if b0007 then 0 else 72000) + (if b0008 then 0 else 72000) + (if b0009 then 0 else 72000) + (if b0010 then 0 else 72000) + (if b0011 then 0 else 72000) + (if b0012 then 0 else 72000) + (if b0013 then 0 else 72000) + (if b0014 then 0 else 72000) + (if b0015 then 0 else 72000) + (if b0016 then 0 else 72000) + (if b0017 then 0 else 72000) + (if b0018 then 0 else 72000) + (if b0019 then 0 else 72000) + (if b0020 then 0 else 72000) + (if b0021 then 0 else 72000) + (if b0022 then 0 else 72000) + (if b0023 then 0 else 72000) + (if b0024 then 0 else 72000) + (if b0025 then 0 else 72000) + (if b0026 then 0 else 72000) + (if b0027 then 0 else 72000) + (if b0028 then 0 else 72000) + (if b0029 then 0 else 72000) + (if b0030 then 0 else 72000) + (if b0031 then 0 else 72000) + (if b0032 then 0 else 72000) + (if b0033 then 0 else 72000) + (if b0034 then 0 else 72000) + (if b0035 then 0 else 72000) + (if b0036 then 0 else 72000) + (if b0037 then 0 else 72000) + (if b0038 then 0 else 72000) + (if b0039 then 0 else 72000) + (if b0040 then 0 else 72000) + (if b0041 then 0 else 72000) + (if b0042 then 0 else 72000) + (if b0043 then 0 else 72000) + (if b0044 then 0 else 72000) + (if b0045 then 0 else 72000) + (if b0046 then 0 else 72000) + (if b0047 then 0 else 72000) + (if b0048 then 0 else 72000) + (if b0049 then 0 else 72000) + (if b0050 then 0 else 72000) + (if b0051 then 0 else 72000) + (if b0052 then 0 else 72000) + (if b0053 then 0 else 72000) + (if b0054 then 0 else 72000) + (if b0055 then 0 else 72000) + (if b0056 then 0 else 72000) + (if b0057 then 0 else 72000) + (if b0058 then 0 else 72000) + (if b0059 then 0 else 72000) + (if b0060 then 0 else 72000) + (if b0061 then 0 else 72000) + (if b0062 then 0 else 72000) + (if b0063 then 0 else 72000) + (if b0064 then 0 else 72000) + (if b0065 then 0 else 72000) + (if b0066 then 0 else 72000) + (if b0067 then 0 else 72000) + (if b0068 then 0 else 72000) + (if b0069 then 0 else 72000) + (if b0070 then 0 else 72000) + (if b0071 then 0 else 72000) + (if b0072 then 0 else 72000) + (if b0073 then 0 else 72000) + (if b0074 then 0 else 72000) + (if b0075 then 0 else 72000) + (if b0076 then 0 else 72000) + (if b0077 then 0 else 72000) + (if b0078 then 0 else 72000) + (if b0079 then 0 else 72000) + (if b0080 then 0 else 72000) + (if b0081 then 0 else 72000) + (if b0082 then 0 else 72000) + (if b0083 then 0 else 72000) + (if b0084 then 0 else 72000) + (if b0085 then 0 else 72000) + (if b0086 then 0 else 72000) + (if b0087 then 0 else 72000) + (if b0088 then 0 else 72000) + (if b0089 then 0 else 72000) + (if b0090 then 0 else 72000) + (if b0091 then 0 else 72000) + (if b0092 then 0 else 72000) + (if b0093 then 0 else 72000) + (if b0094 then 0 else 72000) + (if b0095 then 0 else 72000) + (if b0096 then 0 else 72000) + (if b0097 then 0 else 72000) + (if b0098 then 0 else 72000) + (if b0099 then 0 else 72000) + (if b0100 then 0 else 72000) + (if b0101 then 0 else 72000) + (if b0102 then 0 else 72000) + (if b0103 then 0 else 72000) + (if b0104 then 0 else 72000) + (if b0105 then 0 else 72000) + (if b0106 then 0 else 72000) + (if b0107 then 0 else 72000) + (if b0108 then 0 else 72000) + (if b0109 then 0 else 72000) + (if b0110 then 0 else 72000) + (if b0111 then 0 else 72000) + (if b0112 then 0 else 72000) + (if b0113 then 0 else 72000) + (if b0114 then 0 else 72000) + (if b0115 then 0 else 72000) + (if b0116 then 0 else 72000) + (if b0117 then 0 else 72000) + (if b0118 then 0 else 72000) + (if b0119 then 0 else 72000) + (if b0120 then 0 else 72000) + (if b0121 then 0 else 72000) + (if b0122 then 0 else 72000) + (if b0123 then 0 else 72000) + (if b0124 then 0 else 72000) + (if b0125 then 0 else 72000) + (if b0126 then 0 else 72000) + (if b0127 then 0 else 72000) + (if b0128 then 0 else 72000) + (if b0129 then 0 else 72000) + (if b0130 then 0 else 72000) + (if b0131 then 0 else 72000) + (if b0132 then 0 else 72000) + (if b0133 then 0 else 72000) + (if b0134 then 0 else 72000) + (if b0135 then 0 else 72000) + (if b0136 then 0 else 72000) + (if b0137 then 0 else 72000) + (if b0138 then 0 else 72000) + (if b0139 then 0 else 72000) + (if b0140 then 0 else 72000) + (if b0141 then 0 else 72000) + (if b0142 then 0 else 72000) + (if b0143 then 0 else 72000) + (if b0144 then 0 else 72000) + (if b0145 then 0 else 72000) + (if b0146 then 0 else 72000) + (if b0147 then 0 else 72000) + (if b0148 then 0 else 72000) + (if b0149 then 0 else 72000) + (if b0150 then 0 else 72000) + (if b0151 then 0 else 72000) + (if b0152 then 0 else 72000) + (if b0153 then 0 else 72000) + (if b0154 then 0 else 72000) + (if b0155 then 0 else 72000) + (if b0156 then 0 else 72000) + (if b0157 then 0 else 72000) + (if b0158 then 0 else 72000) + (if b0159 then 0 else 72000) + (if b0160 then 0 else 72000) + (if b0161 then 0 else 72000) + (if b0162 then 0 else 72000) + (if b0163 then 0 else 72000) + (if b0164 then 0 else 72000) + (if b0165 then 0 else 72000) + (if b0166 then 0 else 72000) + (if b0167 then 0 else 72000) + (if b0168 then 0 else 72000) + (if b0169 then 0 else 72000) + (if b0170 then 0 else 72000) + (if b0171 then 0 else 72000) + (if b0172 then 0 else 72000) + (if b0173 then 0 else 72000) + (if b0174 then 0 else 72000) + (if b0175 then 0 else 72000) + (if b0176 then 0 else 72000) + (if b0177 then 0 else 72000) + (if b0178 then 0 else 72000) + (if b0179 then 0 else 72000) < 441
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,1,1,0,0,1,1,1,1,0,1,0,0,1,1,0,1,1,1,0,1,1,1,1,0,0,0,1,0,0,0,0,1,1,0,1,1,0,0,0,0,1,1,0,0,1,0,0,1,0,0,0,1,0,1,0,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 1.7102
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/shoc/bfs/uiuc_spill/BFS_kernel_SM_block/_kernel.bpl.ice2.bpl
Total learner time was 00:00:00.1208600
Verifying $BFS_kernel_SM_block: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool) : bool
{
  0 + (if b0000 then 0 else 72000) + (if b0001 then 0 else 72000) + (if b0002 then 0 else 72000) + (if b0003 then 0 else 72000) + (if b0004 then 0 else 72000) + (if b0005 then 0 else 72000) + (if b0006 then 0 else 72000) + (if b0007 then 0 else 72000) + (if b0008 then 0 else 72000) + (if b0009 then 0 else 72000) + (if b0010 then 0 else 72000) + (if b0011 then 0 else 72000) + (if b0012 then 0 else 72000) + (if b0013 then 0 else 72000) + (if b0014 then 0 else 72000) + (if b0015 then 0 else 72000) + (if b0016 then 0 else 72000) + (if b0017 then 0 else 72000) + (if b0018 then 0 else 72000) + (if b0019 then 0 else 72000) + (if b0020 then 0 else 72000) + (if b0021 then 0 else 72000) + (if b0022 then 0 else 72000) + (if b0023 then 0 else 72000) + (if b0024 then 0 else 72000) + (if b0025 then 0 else 72000) + (if b0026 then 0 else 72000) + (if b0027 then 0 else 72000) + (if b0028 then 0 else 72000) + (if b0029 then 0 else 72000) + (if b0030 then 0 else 72000) + (if b0031 then 0 else 72000) + (if b0032 then 0 else 72000) + (if b0033 then 0 else 72000) + (if b0034 then 0 else 72000) + (if b0035 then 0 else 72000) + (if b0036 then 0 else 72000) + (if b0037 then 0 else 72000) + (if b0038 then 0 else 72000) + (if b0039 then 0 else 72000) + (if b0040 then 0 else 72000) + (if b0041 then 0 else 72000) + (if b0042 then 0 else 72000) + (if b0043 then 0 else 72000) + (if b0044 then 0 else 72000) + (if b0045 then 0 else 72000) + (if b0046 then 0 else 72000) + (if b0047 then 0 else 72000) + (if b0048 then 0 else 72000) + (if b0049 then 0 else 72000) + (if b0056 then 0 else 72000) + (if b0057 then 0 else 72000) + (if b0060 then 0 else 72000) + (if b0061 then 0 else 72000) + (if b0062 then 0 else 72000) + (if b0063 then 0 else 72000) + (if b0065 then 0 else 72000) + (if b0068 then 0 else 72000) + (if b0069 then 0 else 72000) + (if b0071 then 0 else 72000) + (if b0072 then 0 else 72000) + (if b0073 then 0 else 72000) + (if b0075 then 0 else 72000) + (if b0076 then 0 else 72000) + (if b0077 then 0 else 72000) + (if b0078 then 0 else 72000) + (if b0082 then 0 else 72000) + (if b0087 then 0 else 72000) + (if b0088 then 0 else 72000) + (if b0090 then 0 else 72000) + (if b0091 then 0 else 72000) + (if b0096 then 0 else 72000) + (if b0097 then 0 else 72000) + (if b0100 then 0 else 72000) + (if b0103 then 0 else 72000) + (if b0107 then 0 else 72000) + (if b0109 then 0 else 72000) + (if b0111 then 0 else 72000) + (if b0112 then 0 else 72000) + (if b0113 then 0 else 72000) + (if b0114 then 0 else 72000) + (if b0117 then 0 else 72000) + (if b0118 then 0 else 72000) + (if b0119 then 0 else 72000) + (if b0120 then 0 else 72000) + (if b0121 then 0 else 72000) + (if b0122 then 0 else 72000) + (if b0123 then 0 else 72000) + (if b0124 then 0 else 72000) + (if b0125 then 0 else 72000) + (if b0126 then 0 else 72000) + (if b0127 then 0 else 72000) + (if b0128 then 0 else 72000) + (if b0129 then 0 else 72000) + (if b0130 then 0 else 72000) + (if b0131 then 0 else 72000) + (if b0132 then 0 else 72000) + (if b0133 then 0 else 72000) + (if b0134 then 0 else 72000) + (if b0135 then 0 else 72000) + (if b0136 then 0 else 72000) + (if b0137 then 0 else 72000) + (if b0138 then 0 else 72000) + (if b0139 then 0 else 72000) + (if b0140 then 0 else 72000) + (if b0141 then 0 else 72000) + (if b0142 then 0 else 72000) + (if b0143 then 0 else 72000) + (if b0144 then 0 else 72000) + (if b0145 then 0 else 72000) + (if b0146 then 0 else 72000) + (if b0147 then 0 else 72000) + (if b0148 then 0 else 72000) + (if b0149 then 0 else 72000) + (if b0150 then 0 else 72000) + (if b0151 then 0 else 72000) + (if b0152 then 0 else 72000) + (if b0153 then 0 else 72000) + (if b0154 then 0 else 72000) + (if b0155 then 0 else 72000) + (if b0156 then 0 else 72000) + (if b0157 then 0 else 72000) + (if b0158 then 0 else 72000) + (if b0159 then 0 else 72000) + (if b0160 then 0 else 72000) + (if b0161 then 0 else 72000) + (if b0162 then 0 else 72000) + (if b0163 then 0 else 72000) + (if b0164 then 0 else 72000) + (if b0165 then 0 else 72000) + (if b0166 then 0 else 72000) + (if b0167 then 0 else 72000) + (if b0168 then 0 else 72000) + (if b0169 then 0 else 72000) + (if b0170 then 0 else 72000) + (if b0171 then 0 else 72000) + (if b0172 then 0 else 72000) + (if b0173 then 0 else 72000) + (if b0174 then 0 else 72000) + (if b0175 then 0 else 72000) + (if b0176 then 0 else 72000) + (if b0177 then 0 else 72000) + (if b0178 then 0 else 72000) + (if b0179 then 0 else 72000) < 441
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,0,1,1,0,1,0,0,1,1,1,1,0,1,1,0,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,0,0,1,1,1,1,1,0,1,1,1,0,1,1,1,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 2.469985
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/shoc/bfs/uiuc_spill/BFS_kernel_SM_block/_kernel.bpl.ice2.bpl
Total learner time was 00:00:00.1208210
Verifying $BFS_kernel_SM_block: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool) : bool
{
  0 + (if b0000 then 0 else 72000) + (if b0001 then 0 else 72000) + (if b0002 then 0 else 72000) + (if b0003 then 0 else 72000) + (if b0004 then 0 else 72000) + (if b0005 then 0 else 72000) + (if b0006 then 0 else 72000) + (if b0007 then 0 else 72000) + (if b0008 then 0 else 72000) + (if b0009 then 0 else 72000) + (if b0010 then 0 else 72000) + (if b0011 then 0 else 72000) + (if b0012 then 0 else 72000) + (if b0013 then 0 else 72000) + (if b0014 then 0 else 72000) + (if b0015 then 0 else 72000) + (if b0016 then 0 else 72000) + (if b0017 then 0 else 72000) + (if b0018 then 0 else 72000) + (if b0019 then 0 else 72000) + (if b0020 then 0 else 72000) + (if b0021 then 0 else 72000) + (if b0022 then 0 else 72000) + (if b0023 then 0 else 72000) + (if b0024 then 0 else 72000) + (if b0025 then 0 else 72000) + (if b0026 then 0 else 72000) + (if b0027 then 0 else 72000) + (if b0028 then 0 else 72000) + (if b0029 then 0 else 72000) + (if b0030 then 0 else 72000) + (if b0031 then 0 else 72000) + (if b0032 then 0 else 72000) + (if b0033 then 0 else 72000) + (if b0034 then 0 else 72000) + (if b0035 then 0 else 72000) + (if b0036 then 0 else 72000) + (if b0037 then 0 else 72000) + (if b0038 then 0 else 72000) + (if b0039 then 0 else 72000) + (if b0040 then 0 else 72000) + (if b0041 then 0 else 72000) + (if b0042 then 0 else 72000) + (if b0043 then 0 else 72000) + (if b0044 then 0 else 72000) + (if b0045 then 0 else 72000) + (if b0046 then 0 else 72000) + (if b0047 then 0 else 72000) + (if b0049 then 0 else 72000) + (if b0056 then 0 else 72000) + (if b0061 then 0 else 72000) + (if b0065 then 0 else 72000) + (if b0069 then 0 else 72000) + (if b0072 then 0 else 72000) + (if b0073 then 0 else 72000) + (if b0075 then 0 else 72000) + (if b0078 then 0 else 72000) + (if b0082 then 0 else 72000) + (if b0087 then 0 else 72000) + (if b0088 then 0 else 72000) + (if b0091 then 0 else 72000) + (if b0100 then 0 else 72000) + (if b0109 then 0 else 72000) + (if b0117 then 0 else 72000) + (if b0118 then 0 else 72000) + (if b0119 then 0 else 72000) + (if b0120 then 0 else 72000) + (if b0121 then 0 else 72000) + (if b0122 then 0 else 72000) + (if b0123 then 0 else 72000) + (if b0124 then 0 else 72000) + (if b0125 then 0 else 72000) + (if b0126 then 0 else 72000) + (if b0127 then 0 else 72000) + (if b0128 then 0 else 72000) + (if b0129 then 0 else 72000) + (if b0130 then 0 else 72000) + (if b0131 then 0 else 72000) + (if b0132 then 0 else 72000) + (if b0133 then 0 else 72000) + (if b0134 then 0 else 72000) + (if b0135 then 0 else 72000) + (if b0136 then 0 else 72000) + (if b0137 then 0 else 72000) + (if b0138 then 0 else 72000) + (if b0139 then 0 else 72000) + (if b0140 then 0 else 72000) + (if b0141 then 0 else 72000) + (if b0142 then 0 else 72000) + (if b0143 then 0 else 72000) + (if b0144 then 0 else 72000) + (if b0145 then 0 else 72000) + (if b0146 then 0 else 72000) + (if b0147 then 0 else 72000) + (if b0148 then 0 else 72000) + (if b0149 then 0 else 72000) + (if b0150 then 0 else 72000) + (if b0151 then 0 else 72000) + (if b0152 then 0 else 72000) + (if b0153 then 0 else 72000) + (if b0154 then 0 else 72000) + (if b0155 then 0 else 72000) + (if b0156 then 0 else 72000) + (if b0157 then 0 else 72000) + (if b0158 then 0 else 72000) + (if b0159 then 0 else 72000) + (if b0160 then 0 else 72000) + (if b0161 then 0 else 72000) + (if b0162 then 0 else 72000) + (if b0163 then 0 else 72000) + (if b0164 then 0 else 72000) + (if b0165 then 0 else 72000) + (if b0166 then 0 else 72000) + (if b0167 then 0 else 72000) + (if b0168 then 0 else 72000) + (if b0169 then 0 else 72000) + (if b0170 then 0 else 72000) + (if b0171 then 0 else 72000) + (if b0172 then 0 else 72000) + (if b0173 then 0 else 72000) + (if b0174 then 0 else 72000) + (if b0175 then 0 else 72000) + (if b0176 then 0 else 72000) + (if b0177 then 0 else 72000) + (if b0178 then 0 else 72000) + (if b0179 then 0 else 72000) < 441
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,0,1,1,1,0,1,1,1,0,1,1,0,0,1,0,1,1,0,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 2.542466
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/shoc/bfs/uiuc_spill/BFS_kernel_SM_block/_kernel.bpl.ice2.bpl
Total learner time was 00:00:00.1205660
Verifying $BFS_kernel_SM_block: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool) : bool
{
  0 + (if b0000 then 0 else 72000) + (if b0001 then 0 else 72000) + (if b0002 then 0 else 72000) + (if b0003 then 0 else 72000) + (if b0004 then 0 else 72000) + (if b0005 then 0 else 72000) + (if b0006 then 0 else 72000) + (if b0007 then 0 else 72000) + (if b0008 then 0 else 72000) + (if b0009 then 0 else 72000) + (if b0010 then 0 else 72000) + (if b0011 then 0 else 72000) + (if b0012 then 0 else 72000) + (if b0013 then 0 else 72000) + (if b0014 then 0 else 72000) + (if b0015 then 0 else 72000) + (if b0016 then 0 else 72000) + (if b0017 then 0 else 72000) + (if b0018 then 0 else 72000) + (if b0019 then 0 else 72000) + (if b0020 then 0 else 72000) + (if b0021 then 0 else 72000) + (if b0022 then 0 else 72000) + (if b0023 then 0 else 72000) + (if b0024 then 0 else 72000) + (if b0025 then 0 else 72000) + (if b0026 then 0 else 72000) + (if b0027 then 0 else 72000) + (if b0028 then 0 else 72000) + (if b0029 then 0 else 72000) + (if b0030 then 0 else 72000) + (if b0031 then 0 else 72000) + (if b0032 then 0 else 72000) + (if b0033 then 0 else 72000) + (if b0034 then 0 else 72000) + (if b0035 then 0 else 72000) + (if b0036 then 0 else 72000) + (if b0037 then 0 else 72000) + (if b0038 then 0 else 72000) + (if b0039 then 0 else 72000) + (if b0040 then 0 else 72000) + (if b0041 then 0 else 72000) + (if b0042 then 0 else 72000) + (if b0043 then 0 else 72000) + (if b0044 then 0 else 72000) + (if b0045 then 0 else 72000) + (if b0046 then 0 else 72000) + (if b0047 then 0 else 72000) + (if b0049 then 0 else 72000) + (if b0082 then 0 else 72000) + (if b0087 then 0 else 72000) + (if b0091 then 0 else 72000) + (if b0117 then 0 else 72000) + (if b0118 then 0 else 72000) + (if b0119 then 0 else 72000) + (if b0120 then 0 else 72000) + (if b0121 then 0 else 72000) + (if b0122 then 0 else 72000) + (if b0123 then 0 else 72000) + (if b0124 then 0 else 72000) + (if b0125 then 0 else 72000) + (if b0126 then 0 else 72000) + (if b0127 then 0 else 72000) + (if b0128 then 0 else 72000) + (if b0129 then 0 else 72000) + (if b0130 then 0 else 72000) + (if b0131 then 0 else 72000) + (if b0132 then 0 else 72000) + (if b0133 then 0 else 72000) + (if b0134 then 0 else 72000) + (if b0135 then 0 else 72000) + (if b0136 then 0 else 72000) + (if b0137 then 0 else 72000) + (if b0138 then 0 else 72000) + (if b0139 then 0 else 72000) + (if b0140 then 0 else 72000) + (if b0141 then 0 else 72000) + (if b0142 then 0 else 72000) + (if b0143 then 0 else 72000) + (if b0144 then 0 else 72000) + (if b0145 then 0 else 72000) + (if b0146 then 0 else 72000) + (if b0147 then 0 else 72000) + (if b0148 then 0 else 72000) + (if b0149 then 0 else 72000) + (if b0150 then 0 else 72000) + (if b0151 then 0 else 72000) + (if b0152 then 0 else 72000) + (if b0153 then 0 else 72000) + (if b0154 then 0 else 72000) + (if b0155 then 0 else 72000) + (if b0156 then 0 else 72000) + (if b0157 then 0 else 72000) + (if b0158 then 0 else 72000) + (if b0159 then 0 else 72000) + (if b0160 then 0 else 72000) + (if b0161 then 0 else 72000) + (if b0162 then 0 else 72000) + (if b0163 then 0 else 72000) + (if b0164 then 0 else 72000) + (if b0165 then 0 else 72000) + (if b0166 then 0 else 72000) + (if b0167 then 0 else 72000) + (if b0168 then 0 else 72000) + (if b0169 then 0 else 72000) + (if b0170 then 0 else 72000) + (if b0171 then 0 else 72000) + (if b0172 then 0 else 72000) + (if b0173 then 0 else 72000) + (if b0174 then 0 else 72000) + (if b0175 then 0 else 72000) + (if b0176 then 0 else 72000) + (if b0177 then 0 else 72000) + (if b0178 then 0 else 72000) + (if b0179 then 0 else 72000) < 441
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 1.79242
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/shoc/bfs/uiuc_spill/BFS_kernel_SM_block/_kernel.bpl.ice2.bpl
Total learner time was 00:00:00.1210270
Verifying $BFS_kernel_SM_block: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool) : bool
{
  0 + (if b0000 then 0 else 72000) + (if b0001 then 0 else 72000) + (if b0002 then 0 else 72000) + (if b0003 then 0 else 72000) + (if b0004 then 0 else 72000) + (if b0005 then 0 else 72000) + (if b0006 then 0 else 72000) + (if b0007 then 0 else 72000) + (if b0008 then 0 else 72000) + (if b0009 then 0 else 72000) + (if b0010 then 0 else 72000) + (if b0011 then 0 else 72000) + (if b0012 then 0 else 72000) + (if b0013 then 0 else 72000) + (if b0014 then 0 else 72000) + (if b0015 then 0 else 72000) + (if b0016 then 0 else 72000) + (if b0017 then 0 else 72000) + (if b0018 then 0 else 72000) + (if b0019 then 0 else 72000) + (if b0020 then 0 else 72000) + (if b0021 then 0 else 72000) + (if b0022 then 0 else 72000) + (if b0023 then 0 else 72000) + (if b0024 then 0 else 72000) + (if b0025 then 0 else 72000) + (if b0026 then 0 else 72000) + (if b0027 then 0 else 72000) + (if b0028 then 0 else 72000) + (if b0029 then 0 else 72000) + (if b0030 then 0 else 72000) + (if b0031 then 0 else 72000) + (if b0032 then 0 else 72000) + (if b0033 then 0 else 72000) + (if b0034 then 0 else 72000) + (if b0035 then 0 else 72000) + (if b0036 then 0 else 72000) + (if b0037 then 0 else 72000) + (if b0038 then 0 else 72000) + (if b0039 then 0 else 72000) + (if b0040 then 0 else 72000) + (if b0041 then 0 else 72000) + (if b0042 then 0 else 72000) + (if b0043 then 0 else 72000) + (if b0044 then 0 else 72000) + (if b0045 then 0 else 72000) + (if b0046 then 0 else 72000) + (if b0087 then 0 else 72000) + (if b0091 then 0 else 72000) + (if b0117 then 0 else 72000) + (if b0118 then 0 else 72000) + (if b0119 then 0 else 72000) + (if b0120 then 0 else 72000) + (if b0121 then 0 else 72000) + (if b0122 then 0 else 72000) + (if b0123 then 0 else 72000) + (if b0124 then 0 else 72000) + (if b0125 then 0 else 72000) + (if b0126 then 0 else 72000) + (if b0127 then 0 else 72000) + (if b0128 then 0 else 72000) + (if b0129 then 0 else 72000) + (if b0130 then 0 else 72000) + (if b0131 then 0 else 72000) + (if b0132 then 0 else 72000) + (if b0133 then 0 else 72000) + (if b0134 then 0 else 72000) + (if b0135 then 0 else 72000) + (if b0136 then 0 else 72000) + (if b0137 then 0 else 72000) + (if b0138 then 0 else 72000) + (if b0139 then 0 else 72000) + (if b0140 then 0 else 72000) + (if b0141 then 0 else 72000) + (if b0142 then 0 else 72000) + (if b0143 then 0 else 72000) + (if b0144 then 0 else 72000) + (if b0145 then 0 else 72000) + (if b0146 then 0 else 72000) + (if b0147 then 0 else 72000) + (if b0148 then 0 else 72000) + (if b0149 then 0 else 72000) + (if b0150 then 0 else 72000) + (if b0151 then 0 else 72000) + (if b0152 then 0 else 72000) + (if b0153 then 0 else 72000) + (if b0154 then 0 else 72000) + (if b0155 then 0 else 72000) + (if b0156 then 0 else 72000) + (if b0157 then 0 else 72000) + (if b0158 then 0 else 72000) + (if b0159 then 0 else 72000) + (if b0160 then 0 else 72000) + (if b0161 then 0 else 72000) + (if b0162 then 0 else 72000) + (if b0163 then 0 else 72000) + (if b0164 then 0 else 72000) + (if b0165 then 0 else 72000) + (if b0166 then 0 else 72000) + (if b0167 then 0 else 72000) + (if b0168 then 0 else 72000) + (if b0169 then 0 else 72000) + (if b0170 then 0 else 72000) + (if b0171 then 0 else 72000) + (if b0172 then 0 else 72000) + (if b0173 then 0 else 72000) + (if b0174 then 0 else 72000) + (if b0175 then 0 else 72000) + (if b0176 then 0 else 72000) + (if b0177 then 0 else 72000) + (if b0178 then 0 else 72000) + (if b0179 then 0 else 72000) < 441
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 1.91943
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/shoc/bfs/uiuc_spill/BFS_kernel_SM_block/_kernel.bpl.ice2.bpl
Total learner time was 00:00:00.1217710
Verifying $BFS_kernel_SM_block: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool) : bool
{
  0 + (if b0000 then 0 else 72000) + (if b0001 then 0 else 72000) + (if b0002 then 0 else 72000) + (if b0003 then 0 else 72000) + (if b0004 then 0 else 72000) + (if b0005 then 0 else 72000) + (if b0006 then 0 else 72000) + (if b0007 then 0 else 72000) + (if b0008 then 0 else 72000) + (if b0009 then 0 else 72000) + (if b0010 then 0 else 72000) + (if b0011 then 0 else 72000) + (if b0012 then 0 else 72000) + (if b0013 then 0 else 72000) + (if b0014 then 0 else 72000) + (if b0015 then 0 else 72000) + (if b0016 then 0 else 72000) + (if b0017 then 0 else 72000) + (if b0018 then 0 else 72000) + (if b0019 then 0 else 72000) + (if b0020 then 0 else 72000) + (if b0021 then 0 else 72000) + (if b0022 then 0 else 72000) + (if b0023 then 0 else 72000) + (if b0024 then 0 else 72000) + (if b0025 then 0 else 72000) + (if b0026 then 0 else 72000) + (if b0027 then 0 else 72000) + (if b0028 then 0 else 72000) + (if b0029 then 0 else 72000) + (if b0030 then 0 else 72000) + (if b0031 then 0 else 72000) + (if b0032 then 0 else 72000) + (if b0033 then 0 else 72000) + (if b0034 then 0 else 72000) + (if b0035 then 0 else 72000) + (if b0036 then 0 else 72000) + (if b0037 then 0 else 72000) + (if b0038 then 0 else 72000) + (if b0039 then 0 else 72000) + (if b0040 then 0 else 72000) + (if b0041 then 0 else 72000) + (if b0042 then 0 else 72000) + (if b0043 then 0 else 72000) + (if b0044 then 0 else 72000) + (if b0045 then 0 else 72000) + (if b0046 then 0 else 72000) + (if b0117 then 0 else 72000) + (if b0118 then 0 else 72000) + (if b0119 then 0 else 72000) + (if b0120 then 0 else 72000) + (if b0121 then 0 else 72000) + (if b0122 then 0 else 72000) + (if b0123 then 0 else 72000) + (if b0124 then 0 else 72000) + (if b0125 then 0 else 72000) + (if b0126 then 0 else 72000) + (if b0127 then 0 else 72000) + (if b0128 then 0 else 72000) + (if b0129 then 0 else 72000) + (if b0130 then 0 else 72000) + (if b0131 then 0 else 72000) + (if b0132 then 0 else 72000) + (if b0133 then 0 else 72000) + (if b0134 then 0 else 72000) + (if b0135 then 0 else 72000) + (if b0136 then 0 else 72000) + (if b0137 then 0 else 72000) + (if b0138 then 0 else 72000) + (if b0139 then 0 else 72000) + (if b0140 then 0 else 72000) + (if b0141 then 0 else 72000) + (if b0142 then 0 else 72000) + (if b0143 then 0 else 72000) + (if b0144 then 0 else 72000) + (if b0145 then 0 else 72000) + (if b0146 then 0 else 72000) + (if b0147 then 0 else 72000) + (if b0148 then 0 else 72000) + (if b0149 then 0 else 72000) + (if b0150 then 0 else 72000) + (if b0151 then 0 else 72000) + (if b0152 then 0 else 72000) + (if b0153 then 0 else 72000) + (if b0154 then 0 else 72000) + (if b0155 then 0 else 72000) + (if b0156 then 0 else 72000) + (if b0157 then 0 else 72000) + (if b0158 then 0 else 72000) + (if b0159 then 0 else 72000) + (if b0160 then 0 else 72000) + (if b0161 then 0 else 72000) + (if b0162 then 0 else 72000) + (if b0163 then 0 else 72000) + (if b0164 then 0 else 72000) + (if b0165 then 0 else 72000) + (if b0166 then 0 else 72000) + (if b0167 then 0 else 72000) + (if b0168 then 0 else 72000) + (if b0169 then 0 else 72000) + (if b0170 then 0 else 72000) + (if b0171 then 0 else 72000) + (if b0172 then 0 else 72000) + (if b0173 then 0 else 72000) + (if b0174 then 0 else 72000) + (if b0175 then 0 else 72000) + (if b0176 then 0 else 72000) + (if b0177 then 0 else 72000) + (if b0178 then 0 else 72000) + (if b0179 then 0 else 72000) < 441
}
Prover Time taken = 3.053863
Added Horn clause: 0 => 6
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/shoc/bfs/uiuc_spill/BFS_kernel_SM_block/_kernel.bpl.ice2.bpl
Total learner time was 00:00:00.1212940
Verifying $BFS_kernel_SM_block: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool) : bool
{
  0 + (if b0000 then 0 else 72000) + (if b0001 then 0 else 72000) + (if b0002 then 0 else 72000) + (if b0003 then 0 else 72000) + (if b0004 then 0 else 72000) + (if b0005 then 0 else 72000) + (if b0006 then 0 else 72000) + (if b0007 then 0 else 72000) + (if b0008 then 0 else 72000) + (if b0009 then 0 else 72000) + (if b0010 then 0 else 72000) + (if b0011 then 0 else 72000) + (if b0012 then 0 else 72000) + (if b0013 then 0 else 72000) + (if b0014 then 0 else 72000) + (if b0015 then 0 else 72000) + (if b0016 then 0 else 72000) + (if b0017 then 0 else 72000) + (if b0018 then 0 else 72000) + (if b0019 then 0 else 72000) + (if b0020 then 0 else 72000) + (if b0021 then 0 else 72000) + (if b0022 then 0 else 72000) + (if b0023 then 0 else 72000) + (if b0024 then 0 else 72000) + (if b0025 then 0 else 72000) + (if b0026 then 0 else 72000) + (if b0027 then 0 else 72000) + (if b0028 then 0 else 72000) + (if b0029 then 0 else 72000) + (if b0030 then 0 else 72000) + (if b0031 then 0 else 72000) + (if b0032 then 0 else 72000) + (if b0033 then 0 else 72000) + (if b0034 then 0 else 72000) + (if b0035 then 0 else 72000) + (if b0036 then 0 else 72000) + (if b0038 then 0 else 72000) + (if b0039 then 0 else 72000) + (if b0040 then 0 else 72000) + (if b0041 then 0 else 72000) + (if b0042 then 0 else 72000) + (if b0043 then 0 else 72000) + (if b0044 then 0 else 72000) + (if b0045 then 0 else 72000) + (if b0046 then 0 else 72000) + (if b0117 then 0 else 72000) + (if b0118 then 0 else 72000) + (if b0119 then 0 else 72000) + (if b0120 then 0 else 72000) + (if b0121 then 0 else 72000) + (if b0122 then 0 else 72000) + (if b0123 then 0 else 72000) + (if b0124 then 0 else 72000) + (if b0125 then 0 else 72000) + (if b0126 then 0 else 72000) + (if b0127 then 0 else 72000) + (if b0128 then 0 else 72000) + (if b0129 then 0 else 72000) + (if b0130 then 0 else 72000) + (if b0131 then 0 else 72000) + (if b0132 then 0 else 72000) + (if b0133 then 0 else 72000) + (if b0134 then 0 else 72000) + (if b0135 then 0 else 72000) + (if b0136 then 0 else 72000) + (if b0137 then 0 else 72000) + (if b0138 then 0 else 72000) + (if b0139 then 0 else 72000) + (if b0140 then 0 else 72000) + (if b0141 then 0 else 72000) + (if b0142 then 0 else 72000) + (if b0143 then 0 else 72000) + (if b0144 then 0 else 72000) + (if b0145 then 0 else 72000) + (if b0146 then 0 else 72000) + (if b0147 then 0 else 72000) + (if b0148 then 0 else 72000) + (if b0149 then 0 else 72000) + (if b0150 then 0 else 72000) + (if b0151 then 0 else 72000) + (if b0152 then 0 else 72000) + (if b0153 then 0 else 72000) + (if b0154 then 0 else 72000) + (if b0155 then 0 else 72000) + (if b0156 then 0 else 72000) + (if b0157 then 0 else 72000) + (if b0158 then 0 else 72000) + (if b0159 then 0 else 72000) + (if b0160 then 0 else 72000) + (if b0161 then 0 else 72000) + (if b0162 then 0 else 72000) + (if b0163 then 0 else 72000) + (if b0164 then 0 else 72000) + (if b0165 then 0 else 72000) + (if b0166 then 0 else 72000) + (if b0167 then 0 else 72000) + (if b0168 then 0 else 72000) + (if b0169 then 0 else 72000) + (if b0170 then 0 else 72000) + (if b0171 then 0 else 72000) + (if b0172 then 0 else 72000) + (if b0173 then 0 else 72000) + (if b0174 then 0 else 72000) + (if b0175 then 0 else 72000) + (if b0176 then 0 else 72000) + (if b0177 then 0 else 72000) + (if b0178 then 0 else 72000) + (if b0179 then 0 else 72000) < 441
}
Prover Time taken = 4.181308
Added Horn clause: 7 && 0 && 0 => 8
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/shoc/bfs/uiuc_spill/BFS_kernel_SM_block/_kernel.bpl.ice2.bpl
Total learner time was 00:00:00.1214780
Verifying $BFS_kernel_SM_block: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool) : bool
{
  0 + (if b0000 then 0 else 72000) + (if b0001 then 0 else 72000) + (if b0002 then 0 else 72000) + (if b0003 then 0 else 72000) + (if b0004 then 0 else 72000) + (if b0005 then 0 else 72000) + (if b0006 then 0 else 72000) + (if b0007 then 0 else 72000) + (if b0008 then 0 else 72000) + (if b0009 then 0 else 72000) + (if b0010 then 0 else 72000) + (if b0011 then 0 else 72000) + (if b0012 then 0 else 72000) + (if b0013 then 0 else 72000) + (if b0014 then 0 else 72000) + (if b0015 then 0 else 72000) + (if b0016 then 0 else 72000) + (if b0017 then 0 else 72000) + (if b0018 then 0 else 72000) + (if b0019 then 0 else 72000) + (if b0020 then 0 else 72000) + (if b0021 then 0 else 72000) + (if b0022 then 0 else 72000) + (if b0023 then 0 else 72000) + (if b0024 then 0 else 72000) + (if b0025 then 0 else 72000) + (if b0026 then 0 else 72000) + (if b0027 then 0 else 72000) + (if b0028 then 0 else 72000) + (if b0029 then 0 else 72000) + (if b0030 then 0 else 72000) + (if b0031 then 0 else 72000) + (if b0033 then 0 else 72000) + (if b0035 then 0 else 72000) + (if b0036 then 0 else 72000) + (if b0038 then 0 else 72000) + (if b0039 then 0 else 72000) + (if b0040 then 0 else 72000) + (if b0041 then 0 else 72000) + (if b0042 then 0 else 72000) + (if b0043 then 0 else 72000) + (if b0044 then 0 else 72000) + (if b0045 then 0 else 72000) + (if b0046 then 0 else 72000) + (if b0117 then 0 else 72000) + (if b0118 then 0 else 72000) + (if b0119 then 0 else 72000) + (if b0120 then 0 else 72000) + (if b0121 then 0 else 72000) + (if b0122 then 0 else 72000) + (if b0123 then 0 else 72000) + (if b0124 then 0 else 72000) + (if b0125 then 0 else 72000) + (if b0126 then 0 else 72000) + (if b0127 then 0 else 72000) + (if b0128 then 0 else 72000) + (if b0129 then 0 else 72000) + (if b0130 then 0 else 72000) + (if b0131 then 0 else 72000) + (if b0132 then 0 else 72000) + (if b0133 then 0 else 72000) + (if b0134 then 0 else 72000) + (if b0135 then 0 else 72000) + (if b0136 then 0 else 72000) + (if b0137 then 0 else 72000) + (if b0138 then 0 else 72000) + (if b0139 then 0 else 72000) + (if b0140 then 0 else 72000) + (if b0141 then 0 else 72000) + (if b0142 then 0 else 72000) + (if b0143 then 0 else 72000) + (if b0144 then 0 else 72000) + (if b0145 then 0 else 72000) + (if b0146 then 0 else 72000) + (if b0147 then 0 else 72000) + (if b0148 then 0 else 72000) + (if b0149 then 0 else 72000) + (if b0150 then 0 else 72000) + (if b0151 then 0 else 72000) + (if b0152 then 0 else 72000) + (if b0153 then 0 else 72000) + (if b0154 then 0 else 72000) + (if b0155 then 0 else 72000) + (if b0156 then 0 else 72000) + (if b0157 then 0 else 72000) + (if b0158 then 0 else 72000) + (if b0159 then 0 else 72000) + (if b0160 then 0 else 72000) + (if b0161 then 0 else 72000) + (if b0162 then 0 else 72000) + (if b0163 then 0 else 72000) + (if b0164 then 0 else 72000) + (if b0165 then 0 else 72000) + (if b0166 then 0 else 72000) + (if b0167 then 0 else 72000) + (if b0168 then 0 else 72000) + (if b0169 then 0 else 72000) + (if b0170 then 0 else 72000) + (if b0171 then 0 else 72000) + (if b0172 then 0 else 72000) + (if b0173 then 0 else 72000) + (if b0174 then 0 else 72000) + (if b0175 then 0 else 72000) + (if b0176 then 0 else 72000) + (if b0177 then 0 else 72000) + (if b0178 then 0 else 72000) + (if b0179 then 0 else 72000) < 441
}
Prover Time taken = 6.941085
Added Horn clause: 0 && 0 && 6 && 0 && 0 => 9
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/shoc/bfs/uiuc_spill/BFS_kernel_SM_block/_kernel.bpl.ice2.bpl
Total learner time was 00:00:00.1215390
Verifying $BFS_kernel_SM_block: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool) : bool
{
  0 + (if b0000 then 0 else 72000) + (if b0001 then 0 else 72000) + (if b0002 then 0 else 72000) + (if b0003 then 0 else 72000) + (if b0004 then 0 else 72000) + (if b0005 then 0 else 72000) + (if b0006 then 0 else 72000) + (if b0007 then 0 else 72000) + (if b0008 then 0 else 72000) + (if b0009 then 0 else 72000) + (if b0010 then 0 else 72000) + (if b0011 then 0 else 72000) + (if b0012 then 0 else 72000) + (if b0013 then 0 else 72000) + (if b0014 then 0 else 72000) + (if b0015 then 0 else 72000) + (if b0016 then 0 else 72000) + (if b0017 then 0 else 72000) + (if b0018 then 0 else 72000) + (if b0019 then 0 else 72000) + (if b0020 then 0 else 72000) + (if b0021 then 0 else 72000) + (if b0022 then 0 else 72000) + (if b0023 then 0 else 72000) + (if b0024 then 0 else 72000) + (if b0025 then 0 else 72000) + (if b0026 then 0 else 72000) + (if b0028 then 0 else 72000) + (if b0029 then 0 else 72000) + (if b0030 then 0 else 72000) + (if b0031 then 0 else 72000) + (if b0033 then 0 else 72000) + (if b0035 then 0 else 72000) + (if b0036 then 0 else 72000) + (if b0038 then 0 else 72000) + (if b0039 then 0 else 72000) + (if b0040 then 0 else 72000) + (if b0041 then 0 else 72000) + (if b0042 then 0 else 72000) + (if b0043 then 0 else 72000) + (if b0044 then 0 else 72000) + (if b0045 then 0 else 72000) + (if b0046 then 0 else 72000) + (if b0117 then 0 else 72000) + (if b0118 then 0 else 72000) + (if b0119 then 0 else 72000) + (if b0120 then 0 else 72000) + (if b0121 then 0 else 72000) + (if b0122 then 0 else 72000) + (if b0123 then 0 else 72000) + (if b0124 then 0 else 72000) + (if b0125 then 0 else 72000) + (if b0126 then 0 else 72000) + (if b0127 then 0 else 72000) + (if b0128 then 0 else 72000) + (if b0129 then 0 else 72000) + (if b0130 then 0 else 72000) + (if b0131 then 0 else 72000) + (if b0132 then 0 else 72000) + (if b0133 then 0 else 72000) + (if b0134 then 0 else 72000) + (if b0135 then 0 else 72000) + (if b0136 then 0 else 72000) + (if b0137 then 0 else 72000) + (if b0138 then 0 else 72000) + (if b0139 then 0 else 72000) + (if b0140 then 0 else 72000) + (if b0141 then 0 else 72000) + (if b0142 then 0 else 72000) + (if b0143 then 0 else 72000) + (if b0144 then 0 else 72000) + (if b0145 then 0 else 72000) + (if b0146 then 0 else 72000) + (if b0147 then 0 else 72000) + (if b0148 then 0 else 72000) + (if b0149 then 0 else 72000) + (if b0150 then 0 else 72000) + (if b0151 then 0 else 72000) + (if b0152 then 0 else 72000) + (if b0153 then 0 else 72000) + (if b0154 then 0 else 72000) + (if b0155 then 0 else 72000) + (if b0156 then 0 else 72000) + (if b0157 then 0 else 72000) + (if b0158 then 0 else 72000) + (if b0159 then 0 else 72000) + (if b0160 then 0 else 72000) + (if b0161 then 0 else 72000) + (if b0162 then 0 else 72000) + (if b0163 then 0 else 72000) + (if b0164 then 0 else 72000) + (if b0165 then 0 else 72000) + (if b0166 then 0 else 72000) + (if b0167 then 0 else 72000) + (if b0168 then 0 else 72000) + (if b0169 then 0 else 72000) + (if b0170 then 0 else 72000) + (if b0171 then 0 else 72000) + (if b0172 then 0 else 72000) + (if b0173 then 0 else 72000) + (if b0174 then 0 else 72000) + (if b0175 then 0 else 72000) + (if b0176 then 0 else 72000) + (if b0177 then 0 else 72000) + (if b0178 then 0 else 72000) + (if b0179 then 0 else 72000) < 441
}
Prover Time taken = 4.406533
Added Horn clause: 0 && 0 && 6 => 10
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/shoc/bfs/uiuc_spill/BFS_kernel_SM_block/_kernel.bpl.ice2.bpl
Total learner time was 00:00:00.1210270
Verifying $BFS_kernel_SM_block: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool) : bool
{
  0 + (if b0000 then 0 else 72000) + (if b0001 then 0 else 72000) + (if b0002 then 0 else 72000) + (if b0003 then 0 else 72000) + (if b0004 then 0 else 72000) + (if b0005 then 0 else 72000) + (if b0006 then 0 else 72000) + (if b0007 then 0 else 72000) + (if b0008 then 0 else 72000) + (if b0009 then 0 else 72000) + (if b0010 then 0 else 72000) + (if b0011 then 0 else 72000) + (if b0012 then 0 else 72000) + (if b0013 then 0 else 72000) + (if b0014 then 0 else 72000) + (if b0015 then 0 else 72000) + (if b0016 then 0 else 72000) + (if b0017 then 0 else 72000) + (if b0018 then 0 else 72000) + (if b0019 then 0 else 72000) + (if b0020 then 0 else 72000) + (if b0021 then 0 else 72000) + (if b0022 then 0 else 72000) + (if b0023 then 0 else 72000) + (if b0024 then 0 else 72000) + (if b0025 then 0 else 72000) + (if b0026 then 0 else 72000) + (if b0028 then 0 else 72000) + (if b0029 then 0 else 72000) + (if b0031 then 0 else 72000) + (if b0033 then 0 else 72000) + (if b0035 then 0 else 72000) + (if b0036 then 0 else 72000) + (if b0038 then 0 else 72000) + (if b0039 then 0 else 72000) + (if b0040 then 0 else 72000) + (if b0041 then 0 else 72000) + (if b0042 then 0 else 72000) + (if b0043 then 0 else 72000) + (if b0044 then 0 else 72000) + (if b0045 then 0 else 72000) + (if b0046 then 0 else 72000) + (if b0117 then 0 else 72000) + (if b0118 then 0 else 72000) + (if b0119 then 0 else 72000) + (if b0120 then 0 else 72000) + (if b0121 then 0 else 72000) + (if b0122 then 0 else 72000) + (if b0123 then 0 else 72000) + (if b0124 then 0 else 72000) + (if b0125 then 0 else 72000) + (if b0126 then 0 else 72000) + (if b0127 then 0 else 72000) + (if b0128 then 0 else 72000) + (if b0129 then 0 else 72000) + (if b0130 then 0 else 72000) + (if b0131 then 0 else 72000) + (if b0132 then 0 else 72000) + (if b0133 then 0 else 72000) + (if b0134 then 0 else 72000) + (if b0135 then 0 else 72000) + (if b0136 then 0 else 72000) + (if b0137 then 0 else 72000) + (if b0138 then 0 else 72000) + (if b0139 then 0 else 72000) + (if b0140 then 0 else 72000) + (if b0141 then 0 else 72000) + (if b0142 then 0 else 72000) + (if b0143 then 0 else 72000) + (if b0144 then 0 else 72000) + (if b0145 then 0 else 72000) + (if b0146 then 0 else 72000) + (if b0147 then 0 else 72000) + (if b0148 then 0 else 72000) + (if b0149 then 0 else 72000) + (if b0150 then 0 else 72000) + (if b0151 then 0 else 72000) + (if b0152 then 0 else 72000) + (if b0153 then 0 else 72000) + (if b0154 then 0 else 72000) + (if b0155 then 0 else 72000) + (if b0156 then 0 else 72000) + (if b0157 then 0 else 72000) + (if b0158 then 0 else 72000) + (if b0159 then 0 else 72000) + (if b0160 then 0 else 72000) + (if b0161 then 0 else 72000) + (if b0162 then 0 else 72000) + (if b0163 then 0 else 72000) + (if b0164 then 0 else 72000) + (if b0165 then 0 else 72000) + (if b0166 then 0 else 72000) + (if b0167 then 0 else 72000) + (if b0168 then 0 else 72000) + (if b0169 then 0 else 72000) + (if b0170 then 0 else 72000) + (if b0171 then 0 else 72000) + (if b0172 then 0 else 72000) + (if b0173 then 0 else 72000) + (if b0174 then 0 else 72000) + (if b0175 then 0 else 72000) + (if b0176 then 0 else 72000) + (if b0177 then 0 else 72000) + (if b0178 then 0 else 72000) + (if b0179 then 0 else 72000) < 441
}
Added Horn clause: 11 && 0 && 12 => 
Prover Time taken = 5.635266
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/shoc/bfs/uiuc_spill/BFS_kernel_SM_block/_kernel.bpl.ice2.bpl
terminate called after throwing an instance of 'std::runtime_error'
  what():  No consistent conjunction exists
The learner seems to have run into an error!

Unhandled Exception:
Microsoft.Boogie.Houdini.MLHoudiniInternalError: The learner seems to have run into an error!
  at Microsoft.Boogie.Houdini.MLHoudini.learn (System.Collections.Generic.HashSet`1[System.String]& funcsChanged) [0x000e7] in <3034164c407e4adc8ab666e7c26ee7b8>:0 
  at Microsoft.Boogie.Houdini.MLHoudini.LearnInv (System.Collections.Generic.Dictionary`2[TKey,TValue] impl2Priority) [0x00782] in <3034164c407e4adc8ab666e7c26ee7b8>:0 
  at Microsoft.Boogie.Houdini.MLHoudini.ComputeSummaries () [0x0019c] in <3034164c407e4adc8ab666e7c26ee7b8>:0 
  at Microsoft.Boogie.ExecutionEngine.RunMLHoudini (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, Microsoft.Boogie.ErrorReporterDelegate er, System.String filename) [0x00055] in <392c81a181e742f795ac4613c6efd8ce>:0 
  at Microsoft.Boogie.ExecutionEngine.RunHoudini (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, Microsoft.Boogie.ErrorReporterDelegate er, System.String filename) [0x00021] in <392c81a181e742f795ac4613c6efd8ce>:0 
  at Microsoft.Boogie.ExecutionEngine.InferAndVerify (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, System.String filename, Microsoft.Boogie.ErrorReporterDelegate er, System.String requestId) [0x00136] in <392c81a181e742f795ac4613c6efd8ce>:0 
  at Microsoft.Boogie.ExecutionEngine.ProcessFiles (System.Collections.Generic.List`1[T] fileNames, System.Boolean lookForSnapshots) [0x002bd] in <392c81a181e742f795ac4613c6efd8ce>:0 
  at Microsoft.Boogie.OnlyBoogie.Main (System.String[] args) [0x0029f] in <581a14d47152481e860a87838c548766>:0 
[ERROR] FATAL UNHANDLED EXCEPTION: Microsoft.Boogie.Houdini.MLHoudiniInternalError: The learner seems to have run into an error!
  at Microsoft.Boogie.Houdini.MLHoudini.learn (System.Collections.Generic.HashSet`1[System.String]& funcsChanged) [0x000e7] in <3034164c407e4adc8ab666e7c26ee7b8>:0 
  at Microsoft.Boogie.Houdini.MLHoudini.LearnInv (System.Collections.Generic.Dictionary`2[TKey,TValue] impl2Priority) [0x00782] in <3034164c407e4adc8ab666e7c26ee7b8>:0 
  at Microsoft.Boogie.Houdini.MLHoudini.ComputeSummaries () [0x0019c] in <3034164c407e4adc8ab666e7c26ee7b8>:0 
  at Microsoft.Boogie.ExecutionEngine.RunMLHoudini (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, Microsoft.Boogie.ErrorReporterDelegate er, System.String filename) [0x00055] in <392c81a181e742f795ac4613c6efd8ce>:0 
  at Microsoft.Boogie.ExecutionEngine.RunHoudini (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, Microsoft.Boogie.ErrorReporterDelegate er, System.String filename) [0x00021] in <392c81a181e742f795ac4613c6efd8ce>:0 
  at Microsoft.Boogie.ExecutionEngine.InferAndVerify (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, System.String filename, Microsoft.Boogie.ErrorReporterDelegate er, System.String requestId) [0x00136] in <392c81a181e742f795ac4613c6efd8ce>:0 
  at Microsoft.Boogie.ExecutionEngine.ProcessFiles (System.Collections.Generic.List`1[T] fileNames, System.Boolean lookForSnapshots) [0x002bd] in <392c81a181e742f795ac4613c6efd8ce>:0 
  at Microsoft.Boogie.OnlyBoogie.Main (System.String[] args) [0x0029f] in <581a14d47152481e860a87838c548766>:0 
Command exited with non-zero status 1
2.77user 2.30system 0:38.36elapsed 13%CPU (0avgtext+0avgdata 84544maxresident)k
448inputs+568outputs (1major+71838minor)pagefaults 0swaps
FILE:shoc/bfs/uiuc_spill/BFS_kernel_SM_block/_kernel.bpl.ice2.bpl
#################
Wed May 12 06:16:41 UTC 2021
KEY=awinnow
OUTPUT=/root/Docker/winnow_gpu_timeout.txt
[TRACE] Using prover: /root/Docker/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/root/Docker/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a winnow
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/errorLimit:1
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/shoc/devicememory/writeGlobalMemoryCoalesced/kernel.bpl.ice2.bpl
--------------------
Parsing /root/Docker/benchmarks/BenchmarksCompiled/awinnow/shoc/devicememory/writeGlobalMemoryCoalesced/kernel.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /root/Docker/z3/bin/z3
#parameters: 5
Generating VC of $writeGlobalMemoryCoalesced
Verifying $writeGlobalMemoryCoalesced: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1: positive
Prover Time taken = 0.16692
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/shoc/devicememory/writeGlobalMemoryCoalesced/kernel.bpl.ice2.bpl
Total learner time was 00:00:00.1186600
Verifying $writeGlobalMemoryCoalesced: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool) : bool
{
  0 + (if b0000 then 0 else 2000) + (if b0001 then 0 else 2000) + (if b0002 then 0 else 2000) + (if b0003 then 0 else 2000) + (if b0004 then 0 else 2000) < 441
}
Prover Time taken = 0.733865
Added Horn clause: 0 => 1
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/shoc/devicememory/writeGlobalMemoryCoalesced/kernel.bpl.ice2.bpl
Total learner time was 00:00:00.1193780
Verifying $writeGlobalMemoryCoalesced: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool) : bool
{
  0 + (if b0000 then 0 else 2000) + (if b0002 then 0 else 2000) + (if b0004 then 0 else 2000) < 441
}
Overwrote: my_inv:1,1,1,1,1: negative
Prover Time taken = 12.651737
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/shoc/devicememory/writeGlobalMemoryCoalesced/kernel.bpl.ice2.bpl
[0, 1, 1, 1, 1, 1] -> 0 Predicated Label: 1 True Label 0 not consistent!
sorcar: sorcar.cpp:229: int main(int, char* const*): Assertion `sorcar::is_consistent(X, datapoints, horn_constraints)' failed.
The learner seems to have run into an error!

Unhandled Exception:
Microsoft.Boogie.Houdini.MLHoudiniInternalError: The learner seems to have run into an error!
  at Microsoft.Boogie.Houdini.MLHoudini.learn (System.Collections.Generic.HashSet`1[System.String]& funcsChanged) [0x000e7] in <3034164c407e4adc8ab666e7c26ee7b8>:0 
  at Microsoft.Boogie.Houdini.MLHoudini.LearnInv (System.Collections.Generic.Dictionary`2[TKey,TValue] impl2Priority) [0x00782] in <3034164c407e4adc8ab666e7c26ee7b8>:0 
  at Microsoft.Boogie.Houdini.MLHoudini.ComputeSummaries () [0x0019c] in <3034164c407e4adc8ab666e7c26ee7b8>:0 
  at Microsoft.Boogie.ExecutionEngine.RunMLHoudini (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, Microsoft.Boogie.ErrorReporterDelegate er, System.String filename) [0x00055] in <392c81a181e742f795ac4613c6efd8ce>:0 
  at Microsoft.Boogie.ExecutionEngine.RunHoudini (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, Microsoft.Boogie.ErrorReporterDelegate er, System.String filename) [0x00021] in <392c81a181e742f795ac4613c6efd8ce>:0 
  at Microsoft.Boogie.ExecutionEngine.InferAndVerify (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, System.String filename, Microsoft.Boogie.ErrorReporterDelegate er, System.String requestId) [0x00136] in <392c81a181e742f795ac4613c6efd8ce>:0 
  at Microsoft.Boogie.ExecutionEngine.ProcessFiles (System.Collections.Generic.List`1[T] fileNames, System.Boolean lookForSnapshots) [0x002bd] in <392c81a181e742f795ac4613c6efd8ce>:0 
  at Microsoft.Boogie.OnlyBoogie.Main (System.String[] args) [0x0029f] in <581a14d47152481e860a87838c548766>:0 
[ERROR] FATAL UNHANDLED EXCEPTION: Microsoft.Boogie.Houdini.MLHoudiniInternalError: The learner seems to have run into an error!
  at Microsoft.Boogie.Houdini.MLHoudini.learn (System.Collections.Generic.HashSet`1[System.String]& funcsChanged) [0x000e7] in <3034164c407e4adc8ab666e7c26ee7b8>:0 
  at Microsoft.Boogie.Houdini.MLHoudini.LearnInv (System.Collections.Generic.Dictionary`2[TKey,TValue] impl2Priority) [0x00782] in <3034164c407e4adc8ab666e7c26ee7b8>:0 
  at Microsoft.Boogie.Houdini.MLHoudini.ComputeSummaries () [0x0019c] in <3034164c407e4adc8ab666e7c26ee7b8>:0 
  at Microsoft.Boogie.ExecutionEngine.RunMLHoudini (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, Microsoft.Boogie.ErrorReporterDelegate er, System.String filename) [0x00055] in <392c81a181e742f795ac4613c6efd8ce>:0 
  at Microsoft.Boogie.ExecutionEngine.RunHoudini (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, Microsoft.Boogie.ErrorReporterDelegate er, System.String filename) [0x00021] in <392c81a181e742f795ac4613c6efd8ce>:0 
  at Microsoft.Boogie.ExecutionEngine.InferAndVerify (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, System.String filename, Microsoft.Boogie.ErrorReporterDelegate er, System.String requestId) [0x00136] in <392c81a181e742f795ac4613c6efd8ce>:0 
  at Microsoft.Boogie.ExecutionEngine.ProcessFiles (System.Collections.Generic.List`1[T] fileNames, System.Boolean lookForSnapshots) [0x002bd] in <392c81a181e742f795ac4613c6efd8ce>:0 
  at Microsoft.Boogie.OnlyBoogie.Main (System.String[] args) [0x0029f] in <581a14d47152481e860a87838c548766>:0 
Command exited with non-zero status 1
0.87user 1.17system 0:15.31elapsed 13%CPU (0avgtext+0avgdata 46196maxresident)k
72inputs+96outputs (1major+14948minor)pagefaults 0swaps
FILE:shoc/devicememory/writeGlobalMemoryCoalesced/kernel.bpl.ice2.bpl
#################
Wed May 12 06:16:56 UTC 2021
KEY=awinnow
OUTPUT=/root/Docker/winnow_gpu_timeout.txt
[TRACE] Using prover: /root/Docker/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/root/Docker/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a winnow
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/errorLimit:1
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/shoc/devicememory/writeGlobalMemoryUnit/kernel.bpl.ice2.bpl
--------------------
Parsing /root/Docker/benchmarks/BenchmarksCompiled/awinnow/shoc/devicememory/writeGlobalMemoryUnit/kernel.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /root/Docker/z3/bin/z3
#parameters: 5
Generating VC of $writeGlobalMemoryUnit
Verifying $writeGlobalMemoryUnit: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1: positive
Prover Time taken = 0.165544
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/shoc/devicememory/writeGlobalMemoryUnit/kernel.bpl.ice2.bpl
Total learner time was 00:00:00.1193000
Verifying $writeGlobalMemoryUnit: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool) : bool
{
  0 + (if b0000 then 0 else 2000) + (if b0001 then 0 else 2000) + (if b0002 then 0 else 2000) + (if b0003 then 0 else 2000) + (if b0004 then 0 else 2000) < 441
}
Prover Time taken = 0.598221
Added Horn clause: 0 => 1
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/shoc/devicememory/writeGlobalMemoryUnit/kernel.bpl.ice2.bpl
Total learner time was 00:00:00.1191970
Verifying $writeGlobalMemoryUnit: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool) : bool
{
  0 + (if b0000 then 0 else 2000) + (if b0002 then 0 else 2000) + (if b0004 then 0 else 2000) < 441
}
Overwrote: my_inv:1,1,1,1,1: negative
Prover Time taken = 2.020171
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/shoc/devicememory/writeGlobalMemoryUnit/kernel.bpl.ice2.bpl
[0, 1, 1, 1, 1, 1] -> 0 Predicated Label: 1 True Label 0 not consistent!
sorcar: sorcar.cpp:229: int main(int, char* const*): Assertion `sorcar::is_consistent(X, datapoints, horn_constraints)' failed.
The learner seems to have run into an error!

Unhandled Exception:
Microsoft.Boogie.Houdini.MLHoudiniInternalError: The learner seems to have run into an error!
  at Microsoft.Boogie.Houdini.MLHoudini.learn (System.Collections.Generic.HashSet`1[System.String]& funcsChanged) [0x000e7] in <3034164c407e4adc8ab666e7c26ee7b8>:0 
  at Microsoft.Boogie.Houdini.MLHoudini.LearnInv (System.Collections.Generic.Dictionary`2[TKey,TValue] impl2Priority) [0x00782] in <3034164c407e4adc8ab666e7c26ee7b8>:0 
  at Microsoft.Boogie.Houdini.MLHoudini.ComputeSummaries () [0x0019c] in <3034164c407e4adc8ab666e7c26ee7b8>:0 
  at Microsoft.Boogie.ExecutionEngine.RunMLHoudini (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, Microsoft.Boogie.ErrorReporterDelegate er, System.String filename) [0x00055] in <392c81a181e742f795ac4613c6efd8ce>:0 
  at Microsoft.Boogie.ExecutionEngine.RunHoudini (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, Microsoft.Boogie.ErrorReporterDelegate er, System.String filename) [0x00021] in <392c81a181e742f795ac4613c6efd8ce>:0 
  at Microsoft.Boogie.ExecutionEngine.InferAndVerify (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, System.String filename, Microsoft.Boogie.ErrorReporterDelegate er, System.String requestId) [0x00136] in <392c81a181e742f795ac4613c6efd8ce>:0 
  at Microsoft.Boogie.ExecutionEngine.ProcessFiles (System.Collections.Generic.List`1[T] fileNames, System.Boolean lookForSnapshots) [0x002bd] in <392c81a181e742f795ac4613c6efd8ce>:0 
  at Microsoft.Boogie.OnlyBoogie.Main (System.String[] args) [0x0029f] in <581a14d47152481e860a87838c548766>:0 
[ERROR] FATAL UNHANDLED EXCEPTION: Microsoft.Boogie.Houdini.MLHoudiniInternalError: The learner seems to have run into an error!
  at Microsoft.Boogie.Houdini.MLHoudini.learn (System.Collections.Generic.HashSet`1[System.String]& funcsChanged) [0x000e7] in <3034164c407e4adc8ab666e7c26ee7b8>:0 
  at Microsoft.Boogie.Houdini.MLHoudini.LearnInv (System.Collections.Generic.Dictionary`2[TKey,TValue] impl2Priority) [0x00782] in <3034164c407e4adc8ab666e7c26ee7b8>:0 
  at Microsoft.Boogie.Houdini.MLHoudini.ComputeSummaries () [0x0019c] in <3034164c407e4adc8ab666e7c26ee7b8>:0 
  at Microsoft.Boogie.ExecutionEngine.RunMLHoudini (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, Microsoft.Boogie.ErrorReporterDelegate er, System.String filename) [0x00055] in <392c81a181e742f795ac4613c6efd8ce>:0 
  at Microsoft.Boogie.ExecutionEngine.RunHoudini (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, Microsoft.Boogie.ErrorReporterDelegate er, System.String filename) [0x00021] in <392c81a181e742f795ac4613c6efd8ce>:0 
  at Microsoft.Boogie.ExecutionEngine.InferAndVerify (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, System.String filename, Microsoft.Boogie.ErrorReporterDelegate er, System.String requestId) [0x00136] in <392c81a181e742f795ac4613c6efd8ce>:0 
  at Microsoft.Boogie.ExecutionEngine.ProcessFiles (System.Collections.Generic.List`1[T] fileNames, System.Boolean lookForSnapshots) [0x002bd] in <392c81a181e742f795ac4613c6efd8ce>:0 
  at Microsoft.Boogie.OnlyBoogie.Main (System.String[] args) [0x0029f] in <581a14d47152481e860a87838c548766>:0 
Command exited with non-zero status 1
0.81user 1.22system 0:04.55elapsed 44%CPU (0avgtext+0avgdata 46128maxresident)k
64inputs+104outputs (1major+14563minor)pagefaults 0swaps
FILE:shoc/devicememory/writeGlobalMemoryUnit/kernel.bpl.ice2.bpl
#################
Wed May 12 06:17:01 UTC 2021
KEY=awinnow
OUTPUT=/root/Docker/winnow_gpu_timeout.txt
[TRACE] Using prover: /root/Docker/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/root/Docker/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a winnow
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/errorLimit:1
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/shoc/devicememory/writeLocalMemory/kernel.bpl.ice2.bpl
--------------------
Parsing /root/Docker/benchmarks/BenchmarksCompiled/awinnow/shoc/devicememory/writeLocalMemory/kernel.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /root/Docker/z3/bin/z3
#parameters: 11
Generating VC of $writeLocalMemory
Verifying $writeLocalMemory: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.167173
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/shoc/devicememory/writeLocalMemory/kernel.bpl.ice2.bpl
Total learner time was 00:00:00.1201170
Verifying $writeLocalMemory: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool) : bool
{
  0 + (if b0000 then 0 else 4000) + (if b0001 then 0 else 4000) + (if b0002 then 0 else 4000) + (if b0003 then 0 else 4000) + (if b0004 then 0 else 4000) + (if b0005 then 0 else 4000) + (if b0006 then 0 else 4000) + (if b0007 then 0 else 4000) + (if b0008 then 0 else 4000) + (if b0009 then 0 else 4000) + (if b0010 then 0 else 4000) < 441
}
Overwrote: my_inv:1,1,1,1,1,1,1,1,1,1,1: negative
Prover Time taken = 69.165932
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/shoc/devicememory/writeLocalMemory/kernel.bpl.ice2.bpl
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1] -> 0 Predicated Label: 1 True Label 0 not consistent!
sorcar: sorcar.cpp:229: int main(int, char* const*): Assertion `sorcar::is_consistent(X, datapoints, horn_constraints)' failed.
The learner seems to have run into an error!

Unhandled Exception:
Microsoft.Boogie.Houdini.MLHoudiniInternalError: The learner seems to have run into an error!
  at Microsoft.Boogie.Houdini.MLHoudini.learn (System.Collections.Generic.HashSet`1[System.String]& funcsChanged) [0x000e7] in <3034164c407e4adc8ab666e7c26ee7b8>:0 
  at Microsoft.Boogie.Houdini.MLHoudini.LearnInv (System.Collections.Generic.Dictionary`2[TKey,TValue] impl2Priority) [0x00782] in <3034164c407e4adc8ab666e7c26ee7b8>:0 
  at Microsoft.Boogie.Houdini.MLHoudini.ComputeSummaries () [0x0019c] in <3034164c407e4adc8ab666e7c26ee7b8>:0 
  at Microsoft.Boogie.ExecutionEngine.RunMLHoudini (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, Microsoft.Boogie.ErrorReporterDelegate er, System.String filename) [0x00055] in <392c81a181e742f795ac4613c6efd8ce>:0 
  at Microsoft.Boogie.ExecutionEngine.RunHoudini (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, Microsoft.Boogie.ErrorReporterDelegate er, System.String filename) [0x00021] in <392c81a181e742f795ac4613c6efd8ce>:0 
  at Microsoft.Boogie.ExecutionEngine.InferAndVerify (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, System.String filename, Microsoft.Boogie.ErrorReporterDelegate er, System.String requestId) [0x00136] in <392c81a181e742f795ac4613c6efd8ce>:0 
  at Microsoft.Boogie.ExecutionEngine.ProcessFiles (System.Collections.Generic.List`1[T] fileNames, System.Boolean lookForSnapshots) [0x002bd] in <392c81a181e742f795ac4613c6efd8ce>:0 
  at Microsoft.Boogie.OnlyBoogie.Main (System.String[] args) [0x0029f] in <581a14d47152481e860a87838c548766>:0 
[ERROR] FATAL UNHANDLED EXCEPTION: Microsoft.Boogie.Houdini.MLHoudiniInternalError: The learner seems to have run into an error!
  at Microsoft.Boogie.Houdini.MLHoudini.learn (System.Collections.Generic.HashSet`1[System.String]& funcsChanged) [0x000e7] in <3034164c407e4adc8ab666e7c26ee7b8>:0 
  at Microsoft.Boogie.Houdini.MLHoudini.LearnInv (System.Collections.Generic.Dictionary`2[TKey,TValue] impl2Priority) [0x00782] in <3034164c407e4adc8ab666e7c26ee7b8>:0 
  at Microsoft.Boogie.Houdini.MLHoudini.ComputeSummaries () [0x0019c] in <3034164c407e4adc8ab666e7c26ee7b8>:0 
  at Microsoft.Boogie.ExecutionEngine.RunMLHoudini (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, Microsoft.Boogie.ErrorReporterDelegate er, System.String filename) [0x00055] in <392c81a181e742f795ac4613c6efd8ce>:0 
  at Microsoft.Boogie.ExecutionEngine.RunHoudini (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, Microsoft.Boogie.ErrorReporterDelegate er, System.String filename) [0x00021] in <392c81a181e742f795ac4613c6efd8ce>:0 
  at Microsoft.Boogie.ExecutionEngine.InferAndVerify (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, System.String filename, Microsoft.Boogie.ErrorReporterDelegate er, System.String requestId) [0x00136] in <392c81a181e742f795ac4613c6efd8ce>:0 
  at Microsoft.Boogie.ExecutionEngine.ProcessFiles (System.Collections.Generic.List`1[T] fileNames, System.Boolean lookForSnapshots) [0x002bd] in <392c81a181e742f795ac4613c6efd8ce>:0 
  at Microsoft.Boogie.OnlyBoogie.Main (System.String[] args) [0x0029f] in <581a14d47152481e860a87838c548766>:0 
Command exited with non-zero status 1
0.89user 1.17system 1:10.97elapsed 2%CPU (0avgtext+0avgdata 47988maxresident)k
88inputs+56outputs (1major+14532minor)pagefaults 0swaps
FILE:shoc/devicememory/writeLocalMemory/kernel.bpl.ice2.bpl
#################
Wed May 12 06:18:12 UTC 2021
KEY=awinnow
OUTPUT=/root/Docker/winnow_gpu_timeout.txt
[TRACE] Using prover: /root/Docker/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/root/Docker/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a winnow
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/errorLimit:1
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/shoc/fft/chk1D_512/kernel.bpl.ice2.bpl
--------------------
Parsing /root/Docker/benchmarks/BenchmarksCompiled/awinnow/shoc/fft/chk1D_512/kernel.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /root/Docker/z3/bin/z3
#parameters: 6
Generating VC of $chk1D_512
Verifying $chk1D_512: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1: positive
Prover Time taken = 0.170968
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/shoc/fft/chk1D_512/kernel.bpl.ice2.bpl
Total learner time was 00:00:00.1185200
Verifying $chk1D_512: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool) : bool
{
  0 + (if b0000 then 0 else 2000) + (if b0001 then 0 else 2000) + (if b0002 then 0 else 2000) + (if b0003 then 0 else 2000) + (if b0004 then 0 else 2000) + (if b0005 then 0 else 2000) < 441
}
Prover Time taken = 0.023886
Added Horn clause: 0 => 1
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/shoc/fft/chk1D_512/kernel.bpl.ice2.bpl
Total learner time was 00:00:00.1231900
Verifying $chk1D_512: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool) : bool
{
  0 + (if b0000 then 0 else 2000) + (if b0002 then 0 else 2000) + (if b0004 then 0 else 2000) + (if b0005 then 0 else 2000) < 441
}
Overwrote: my_inv:1,1,1,1,1,1: negative
Prover Time taken = 0.022047
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/shoc/fft/chk1D_512/kernel.bpl.ice2.bpl
[0, 1, 1, 1, 1, 1, 1] -> 0 Predicated Label: 1 True Label 0 not consistent!
sorcar: sorcar.cpp:229: int main(int, char* const*): Assertion `sorcar::is_consistent(X, datapoints, horn_constraints)' failed.
The learner seems to have run into an error!

Unhandled Exception:
Microsoft.Boogie.Houdini.MLHoudiniInternalError: The learner seems to have run into an error!
  at Microsoft.Boogie.Houdini.MLHoudini.learn (System.Collections.Generic.HashSet`1[System.String]& funcsChanged) [0x000e7] in <3034164c407e4adc8ab666e7c26ee7b8>:0 
  at Microsoft.Boogie.Houdini.MLHoudini.LearnInv (System.Collections.Generic.Dictionary`2[TKey,TValue] impl2Priority) [0x00782] in <3034164c407e4adc8ab666e7c26ee7b8>:0 
  at Microsoft.Boogie.Houdini.MLHoudini.ComputeSummaries () [0x0019c] in <3034164c407e4adc8ab666e7c26ee7b8>:0 
  at Microsoft.Boogie.ExecutionEngine.RunMLHoudini (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, Microsoft.Boogie.ErrorReporterDelegate er, System.String filename) [0x00055] in <392c81a181e742f795ac4613c6efd8ce>:0 
  at Microsoft.Boogie.ExecutionEngine.RunHoudini (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, Microsoft.Boogie.ErrorReporterDelegate er, System.String filename) [0x00021] in <392c81a181e742f795ac4613c6efd8ce>:0 
  at Microsoft.Boogie.ExecutionEngine.InferAndVerify (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, System.String filename, Microsoft.Boogie.ErrorReporterDelegate er, System.String requestId) [0x00136] in <392c81a181e742f795ac4613c6efd8ce>:0 
  at Microsoft.Boogie.ExecutionEngine.ProcessFiles (System.Collections.Generic.List`1[T] fileNames, System.Boolean lookForSnapshots) [0x002bd] in <392c81a181e742f795ac4613c6efd8ce>:0 
  at Microsoft.Boogie.OnlyBoogie.Main (System.String[] args) [0x0029f] in <581a14d47152481e860a87838c548766>:0 
[ERROR] FATAL UNHANDLED EXCEPTION: Microsoft.Boogie.Houdini.MLHoudiniInternalError: The learner seems to have run into an error!
  at Microsoft.Boogie.Houdini.MLHoudini.learn (System.Collections.Generic.HashSet`1[System.String]& funcsChanged) [0x000e7] in <3034164c407e4adc8ab666e7c26ee7b8>:0 
  at Microsoft.Boogie.Houdini.MLHoudini.LearnInv (System.Collections.Generic.Dictionary`2[TKey,TValue] impl2Priority) [0x00782] in <3034164c407e4adc8ab666e7c26ee7b8>:0 
  at Microsoft.Boogie.Houdini.MLHoudini.ComputeSummaries () [0x0019c] in <3034164c407e4adc8ab666e7c26ee7b8>:0 
  at Microsoft.Boogie.ExecutionEngine.RunMLHoudini (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, Microsoft.Boogie.ErrorReporterDelegate er, System.String filename) [0x00055] in <392c81a181e742f795ac4613c6efd8ce>:0 
  at Microsoft.Boogie.ExecutionEngine.RunHoudini (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, Microsoft.Boogie.ErrorReporterDelegate er, System.String filename) [0x00021] in <392c81a181e742f795ac4613c6efd8ce>:0 
  at Microsoft.Boogie.ExecutionEngine.InferAndVerify (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, System.String filename, Microsoft.Boogie.ErrorReporterDelegate er, System.String requestId) [0x00136] in <392c81a181e742f795ac4613c6efd8ce>:0 
  at Microsoft.Boogie.ExecutionEngine.ProcessFiles (System.Collections.Generic.List`1[T] fileNames, System.Boolean lookForSnapshots) [0x002bd] in <392c81a181e742f795ac4613c6efd8ce>:0 
  at Microsoft.Boogie.OnlyBoogie.Main (System.String[] args) [0x0029f] in <581a14d47152481e860a87838c548766>:0 
Command exited with non-zero status 1
0.84user 1.11system 0:01.98elapsed 98%CPU (0avgtext+0avgdata 43068maxresident)k
56inputs+104outputs (1major+12446minor)pagefaults 0swaps
FILE:shoc/fft/chk1D_512/kernel.bpl.ice2.bpl
#################
Wed May 12 06:18:14 UTC 2021
KEY=awinnow
OUTPUT=/root/Docker/winnow_gpu_timeout.txt
[TRACE] Using prover: /root/Docker/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/root/Docker/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a winnow
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/errorLimit:1
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/shoc/fft/fft1D_512/kernel.bpl.ice2.bpl
--------------------
Parsing /root/Docker/benchmarks/BenchmarksCompiled/awinnow/shoc/fft/fft1D_512/kernel.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /root/Docker/z3/bin/z3
#parameters: 56
Generating VC of $fft1D_512
Verifying $fft1D_512: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.175532
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/shoc/fft/fft1D_512/kernel.bpl.ice2.bpl
Total learner time was 00:00:00.1191690
Verifying $fft1D_512: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool) : bool
{
  0 + (if b0000 then 0 else 22000) + (if b0001 then 0 else 22000) + (if b0002 then 0 else 22000) + (if b0003 then 0 else 22000) + (if b0004 then 0 else 22000) + (if b0005 then 0 else 22000) + (if b0006 then 0 else 22000) + (if b0007 then 0 else 22000) + (if b0008 then 0 else 22000) + (if b0009 then 0 else 22000) + (if b0010 then 0 else 22000) + (if b0011 then 0 else 22000) + (if b0012 then 0 else 22000) + (if b0013 then 0 else 22000) + (if b0014 then 0 else 22000) + (if b0015 then 0 else 22000) + (if b0016 then 0 else 22000) + (if b0017 then 0 else 22000) + (if b0018 then 0 else 22000) + (if b0019 then 0 else 22000) + (if b0020 then 0 else 22000) + (if b0021 then 0 else 22000) + (if b0022 then 0 else 22000) + (if b0023 then 0 else 22000) + (if b0024 then 0 else 22000) + (if b0025 then 0 else 22000) + (if b0026 then 0 else 22000) + (if b0027 then 0 else 22000) + (if b0028 then 0 else 22000) + (if b0029 then 0 else 22000) + (if b0030 then 0 else 22000) + (if b0031 then 0 else 22000) + (if b0032 then 0 else 22000) + (if b0033 then 0 else 22000) + (if b0034 then 0 else 22000) + (if b0035 then 0 else 22000) + (if b0036 then 0 else 22000) + (if b0037 then 0 else 22000) + (if b0038 then 0 else 22000) + (if b0039 then 0 else 22000) + (if b0040 then 0 else 22000) + (if b0041 then 0 else 22000) + (if b0042 then 0 else 22000) + (if b0043 then 0 else 22000) + (if b0044 then 0 else 22000) + (if b0045 then 0 else 22000) + (if b0046 then 0 else 22000) + (if b0047 then 0 else 22000) + (if b0048 then 0 else 22000) + (if b0049 then 0 else 22000) + (if b0050 then 0 else 22000) + (if b0051 then 0 else 22000) + (if b0052 then 0 else 22000) + (if b0053 then 0 else 22000) + (if b0054 then 0 else 22000) + (if b0055 then 0 else 22000) < 441
}
Prover Time taken = 151.975583
Added Horn clause: 0 => 1
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/shoc/fft/fft1D_512/kernel.bpl.ice2.bpl
Total learner time was 00:00:00.1195240
Verifying $fft1D_512: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool) : bool
{
  0 + (if b0000 then 0 else 22000) + (if b0002 then 0 else 22000) + (if b0004 then 0 else 22000) + (if b0005 then 0 else 22000) + (if b0006 then 0 else 22000) + (if b0007 then 0 else 22000) + (if b0008 then 0 else 22000) + (if b0009 then 0 else 22000) + (if b0010 then 0 else 22000) + (if b0011 then 0 else 22000) + (if b0012 then 0 else 22000) + (if b0013 then 0 else 22000) + (if b0014 then 0 else 22000) + (if b0015 then 0 else 22000) + (if b0016 then 0 else 22000) + (if b0017 then 0 else 22000) + (if b0018 then 0 else 22000) + (if b0019 then 0 else 22000) + (if b0020 then 0 else 22000) + (if b0021 then 0 else 22000) + (if b0022 then 0 else 22000) + (if b0023 then 0 else 22000) + (if b0024 then 0 else 22000) + (if b0025 then 0 else 22000) + (if b0026 then 0 else 22000) + (if b0027 then 0 else 22000) + (if b0028 then 0 else 22000) + (if b0029 then 0 else 22000) + (if b0030 then 0 else 22000) + (if b0031 then 0 else 22000) + (if b0032 then 0 else 22000) + (if b0033 then 0 else 22000) + (if b0034 then 0 else 22000) + (if b0035 then 0 else 22000) + (if b0036 then 0 else 22000) + (if b0037 then 0 else 22000) + (if b0038 then 0 else 22000) + (if b0039 then 0 else 22000) + (if b0040 then 0 else 22000) + (if b0041 then 0 else 22000) + (if b0042 then 0 else 22000) + (if b0043 then 0 else 22000) + (if b0044 then 0 else 22000) + (if b0045 then 0 else 22000) + (if b0046 then 0 else 22000) + (if b0047 then 0 else 22000) + (if b0048 then 0 else 22000) + (if b0049 then 0 else 22000) + (if b0050 then 0 else 22000) + (if b0051 then 0 else 22000) + (if b0052 then 0 else 22000) + (if b0053 then 0 else 22000) + (if b0054 then 0 else 22000) + (if b0055 then 0 else 22000) < 441
}
Prover Time taken = 115.436303
Added Horn clause: 1 && 0 => 2
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/shoc/fft/fft1D_512/kernel.bpl.ice2.bpl
Total learner time was 00:00:00.1201970
Verifying $fft1D_512: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool) : bool
{
  0 + (if b0000 then 0 else 22000) + (if b0002 then 0 else 22000) + (if b0004 then 0 else 22000) + (if b0005 then 0 else 22000) + (if b0007 then 0 else 22000) + (if b0009 then 0 else 22000) + (if b0010 then 0 else 22000) + (if b0011 then 0 else 22000) + (if b0012 then 0 else 22000) + (if b0013 then 0 else 22000) + (if b0014 then 0 else 22000) + (if b0015 then 0 else 22000) + (if b0016 then 0 else 22000) + (if b0017 then 0 else 22000) + (if b0018 then 0 else 22000) + (if b0019 then 0 else 22000) + (if b0020 then 0 else 22000) + (if b0021 then 0 else 22000) + (if b0022 then 0 else 22000) + (if b0023 then 0 else 22000) + (if b0024 then 0 else 22000) + (if b0025 then 0 else 22000) + (if b0026 then 0 else 22000) + (if b0027 then 0 else 22000) + (if b0028 then 0 else 22000) + (if b0029 then 0 else 22000) + (if b0030 then 0 else 22000) + (if b0031 then 0 else 22000) + (if b0032 then 0 else 22000) + (if b0033 then 0 else 22000) + (if b0034 then 0 else 22000) + (if b0035 then 0 else 22000) + (if b0036 then 0 else 22000) + (if b0037 then 0 else 22000) + (if b0038 then 0 else 22000) + (if b0039 then 0 else 22000) + (if b0040 then 0 else 22000) + (if b0041 then 0 else 22000) + (if b0042 then 0 else 22000) + (if b0043 then 0 else 22000) + (if b0044 then 0 else 22000) + (if b0045 then 0 else 22000) + (if b0046 then 0 else 22000) + (if b0047 then 0 else 22000) + (if b0048 then 0 else 22000) + (if b0049 then 0 else 22000) + (if b0050 then 0 else 22000) + (if b0051 then 0 else 22000) + (if b0052 then 0 else 22000) + (if b0053 then 0 else 22000) + (if b0054 then 0 else 22000) + (if b0055 then 0 else 22000) < 441
}
Prover Time taken = 473.380085
Added Horn clause: 1 && 2 && 0 => 3
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/shoc/fft/fft1D_512/kernel.bpl.ice2.bpl
Total learner time was 00:00:00.1257630
Verifying $fft1D_512: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool) : bool
{
  0 + (if b0000 then 0 else 22000) + (if b0002 then 0 else 22000) + (if b0004 then 0 else 22000) + (if b0005 then 0 else 22000) + (if b0007 then 0 else 22000) + (if b0009 then 0 else 22000) + (if b0010 then 0 else 22000) + (if b0012 then 0 else 22000) + (if b0014 then 0 else 22000) + (if b0015 then 0 else 22000) + (if b0016 then 0 else 22000) + (if b0017 then 0 else 22000) + (if b0018 then 0 else 22000) + (if b0019 then 0 else 22000) + (if b0020 then 0 else 22000) + (if b0021 then 0 else 22000) + (if b0022 then 0 else 22000) + (if b0023 then 0 else 22000) + (if b0024 then 0 else 22000) + (if b0025 then 0 else 22000) + (if b0026 then 0 else 22000) + (if b0027 then 0 else 22000) + (if b0028 then 0 else 22000) + (if b0029 then 0 else 22000) + (if b0030 then 0 else 22000) + (if b0031 then 0 else 22000) + (if b0032 then 0 else 22000) + (if b0033 then 0 else 22000) + (if b0034 then 0 else 22000) + (if b0035 then 0 else 22000) + (if b0036 then 0 else 22000) + (if b0037 then 0 else 22000) + (if b0038 then 0 else 22000) + (if b0039 then 0 else 22000) + (if b0040 then 0 else 22000) + (if b0041 then 0 else 22000) + (if b0042 then 0 else 22000) + (if b0043 then 0 else 22000) + (if b0044 then 0 else 22000) + (if b0045 then 0 else 22000) + (if b0046 then 0 else 22000) + (if b0047 then 0 else 22000) + (if b0048 then 0 else 22000) + (if b0049 then 0 else 22000) + (if b0050 then 0 else 22000) + (if b0051 then 0 else 22000) + (if b0052 then 0 else 22000) + (if b0053 then 0 else 22000) + (if b0054 then 0 else 22000) + (if b0055 then 0 else 22000) < 441
}
Prover Time taken = 216.023826
Added Horn clause: 1 && 2 && 3 && 0 => 4
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/shoc/fft/fft1D_512/kernel.bpl.ice2.bpl
Total learner time was 00:00:00.1201860
Verifying $fft1D_512: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool) : bool
{
  0 + (if b0000 then 0 else 22000) + (if b0002 then 0 else 22000) + (if b0004 then 0 else 22000) + (if b0005 then 0 else 22000) + (if b0007 then 0 else 22000) + (if b0009 then 0 else 22000) + (if b0010 then 0 else 22000) + (if b0012 then 0 else 22000) + (if b0014 then 0 else 22000) + (if b0015 then 0 else 22000) + (if b0017 then 0 else 22000) + (if b0019 then 0 else 22000) + (if b0020 then 0 else 22000) + (if b0021 then 0 else 22000) + (if b0022 then 0 else 22000) + (if b0023 then 0 else 22000) + (if b0024 then 0 else 22000) + (if b0025 then 0 else 22000) + (if b0026 then 0 else 22000) + (if b0027 then 0 else 22000) + (if b0028 then 0 else 22000) + (if b0029 then 0 else 22000) + (if b0030 then 0 else 22000) + (if b0031 then 0 else 22000) + (if b0032 then 0 else 22000) + (if b0033 then 0 else 22000) + (if b0034 then 0 else 22000) + (if b0035 then 0 else 22000) + (if b0036 then 0 else 22000) + (if b0037 then 0 else 22000) + (if b0038 then 0 else 22000) + (if b0039 then 0 else 22000) + (if b0040 then 0 else 22000) + (if b0041 then 0 else 22000) + (if b0042 then 0 else 22000) + (if b0043 then 0 else 22000) + (if b0044 then 0 else 22000) + (if b0045 then 0 else 22000) + (if b0046 then 0 else 22000) + (if b0047 then 0 else 22000) + (if b0048 then 0 else 22000) + (if b0049 then 0 else 22000) + (if b0050 then 0 else 22000) + (if b0051 then 0 else 22000) + (if b0052 then 0 else 22000) + (if b0053 then 0 else 22000) + (if b0054 then 0 else 22000) + (if b0055 then 0 else 22000) < 441
}
Prover Time taken = 134.354952
Added Horn clause: 1 && 2 && 3 && 4 && 0 => 5
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/shoc/fft/fft1D_512/kernel.bpl.ice2.bpl
Total learner time was 00:00:00.1201850
Verifying $fft1D_512: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool) : bool
{
  0 + (if b0000 then 0 else 22000) + (if b0002 then 0 else 22000) + (if b0004 then 0 else 22000) + (if b0005 then 0 else 22000) + (if b0007 then 0 else 22000) + (if b0009 then 0 else 22000) + (if b0010 then 0 else 22000) + (if b0012 then 0 else 22000) + (if b0014 then 0 else 22000) + (if b0015 then 0 else 22000) + (if b0017 then 0 else 22000) + (if b0019 then 0 else 22000) + (if b0020 then 0 else 22000) + (if b0022 then 0 else 22000) + (if b0024 then 0 else 22000) + (if b0025 then 0 else 22000) + (if b0026 then 0 else 22000) + (if b0027 then 0 else 22000) + (if b0028 then 0 else 22000) + (if b0029 then 0 else 22000) + (if b0030 then 0 else 22000) + (if b0031 then 0 else 22000) + (if b0032 then 0 else 22000) + (if b0033 then 0 else 22000) + (if b0034 then 0 else 22000) + (if b0035 then 0 else 22000) + (if b0036 then 0 else 22000) + (if b0037 then 0 else 22000) + (if b0038 then 0 else 22000) + (if b0039 then 0 else 22000) + (if b0040 then 0 else 22000) + (if b0041 then 0 else 22000) + (if b0042 then 0 else 22000) + (if b0043 then 0 else 22000) + (if b0044 then 0 else 22000) + (if b0045 then 0 else 22000) + (if b0046 then 0 else 22000) + (if b0047 then 0 else 22000) + (if b0048 then 0 else 22000) + (if b0049 then 0 else 22000) + (if b0050 then 0 else 22000) + (if b0051 then 0 else 22000) + (if b0052 then 0 else 22000) + (if b0053 then 0 else 22000) + (if b0054 then 0 else 22000) + (if b0055 then 0 else 22000) < 441
}
Command exited with non-zero status 124
3.19user 2.91system 19:58.62elapsed 0%CPU (0avgtext+0avgdata 73252maxresident)k
288inputs+288outputs (1major+38035minor)pagefaults 0swaps
FILE:shoc/fft/fft1D_512/kernel.bpl.ice2.bpl
#################
Wed May 12 06:38:12 UTC 2021
KEY=awinnow
OUTPUT=/root/Docker/winnow_gpu_timeout.txt
[TRACE] Using prover: /root/Docker/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/root/Docker/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a winnow
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/errorLimit:1
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/shoc/fft/ifft1D_512/kernel.bpl.ice2.bpl
--------------------
Parsing /root/Docker/benchmarks/BenchmarksCompiled/awinnow/shoc/fft/ifft1D_512/kernel.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /root/Docker/z3/bin/z3
#parameters: 56
Generating VC of $ifft1D_512
Verifying $ifft1D_512: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.172498
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/shoc/fft/ifft1D_512/kernel.bpl.ice2.bpl
Total learner time was 00:00:00.1187980
Verifying $ifft1D_512: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool) : bool
{
  0 + (if b0000 then 0 else 22000) + (if b0001 then 0 else 22000) + (if b0002 then 0 else 22000) + (if b0003 then 0 else 22000) + (if b0004 then 0 else 22000) + (if b0005 then 0 else 22000) + (if b0006 then 0 else 22000) + (if b0007 then 0 else 22000) + (if b0008 then 0 else 22000) + (if b0009 then 0 else 22000) + (if b0010 then 0 else 22000) + (if b0011 then 0 else 22000) + (if b0012 then 0 else 22000) + (if b0013 then 0 else 22000) + (if b0014 then 0 else 22000) + (if b0015 then 0 else 22000) + (if b0016 then 0 else 22000) + (if b0017 then 0 else 22000) + (if b0018 then 0 else 22000) + (if b0019 then 0 else 22000) + (if b0020 then 0 else 22000) + (if b0021 then 0 else 22000) + (if b0022 then 0 else 22000) + (if b0023 then 0 else 22000) + (if b0024 then 0 else 22000) + (if b0025 then 0 else 22000) + (if b0026 then 0 else 22000) + (if b0027 then 0 else 22000) + (if b0028 then 0 else 22000) + (if b0029 then 0 else 22000) + (if b0030 then 0 else 22000) + (if b0031 then 0 else 22000) + (if b0032 then 0 else 22000) + (if b0033 then 0 else 22000) + (if b0034 then 0 else 22000) + (if b0035 then 0 else 22000) + (if b0036 then 0 else 22000) + (if b0037 then 0 else 22000) + (if b0038 then 0 else 22000) + (if b0039 then 0 else 22000) + (if b0040 then 0 else 22000) + (if b0041 then 0 else 22000) + (if b0042 then 0 else 22000) + (if b0043 then 0 else 22000) + (if b0044 then 0 else 22000) + (if b0045 then 0 else 22000) + (if b0046 then 0 else 22000) + (if b0047 then 0 else 22000) + (if b0048 then 0 else 22000) + (if b0049 then 0 else 22000) + (if b0050 then 0 else 22000) + (if b0051 then 0 else 22000) + (if b0052 then 0 else 22000) + (if b0053 then 0 else 22000) + (if b0054 then 0 else 22000) + (if b0055 then 0 else 22000) < 441
}
Prover Time taken = 481.555052
Added Horn clause: 0 => 1
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/shoc/fft/ifft1D_512/kernel.bpl.ice2.bpl
Total learner time was 00:00:00.1195990
Verifying $ifft1D_512: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool) : bool
{
  0 + (if b0000 then 0 else 22000) + (if b0002 then 0 else 22000) + (if b0004 then 0 else 22000) + (if b0005 then 0 else 22000) + (if b0006 then 0 else 22000) + (if b0007 then 0 else 22000) + (if b0008 then 0 else 22000) + (if b0009 then 0 else 22000) + (if b0010 then 0 else 22000) + (if b0011 then 0 else 22000) + (if b0012 then 0 else 22000) + (if b0013 then 0 else 22000) + (if b0014 then 0 else 22000) + (if b0015 then 0 else 22000) + (if b0016 then 0 else 22000) + (if b0017 then 0 else 22000) + (if b0018 then 0 else 22000) + (if b0019 then 0 else 22000) + (if b0020 then 0 else 22000) + (if b0021 then 0 else 22000) + (if b0022 then 0 else 22000) + (if b0023 then 0 else 22000) + (if b0024 then 0 else 22000) + (if b0025 then 0 else 22000) + (if b0026 then 0 else 22000) + (if b0027 then 0 else 22000) + (if b0028 then 0 else 22000) + (if b0029 then 0 else 22000) + (if b0030 then 0 else 22000) + (if b0031 then 0 else 22000) + (if b0032 then 0 else 22000) + (if b0033 then 0 else 22000) + (if b0034 then 0 else 22000) + (if b0035 then 0 else 22000) + (if b0036 then 0 else 22000) + (if b0037 then 0 else 22000) + (if b0038 then 0 else 22000) + (if b0039 then 0 else 22000) + (if b0040 then 0 else 22000) + (if b0041 then 0 else 22000) + (if b0042 then 0 else 22000) + (if b0043 then 0 else 22000) + (if b0044 then 0 else 22000) + (if b0045 then 0 else 22000) + (if b0046 then 0 else 22000) + (if b0047 then 0 else 22000) + (if b0048 then 0 else 22000) + (if b0049 then 0 else 22000) + (if b0050 then 0 else 22000) + (if b0051 then 0 else 22000) + (if b0052 then 0 else 22000) + (if b0053 then 0 else 22000) + (if b0054 then 0 else 22000) + (if b0055 then 0 else 22000) < 441
}
Prover Time taken = 169.536345
Added Horn clause: 1 && 0 => 2
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/shoc/fft/ifft1D_512/kernel.bpl.ice2.bpl
Total learner time was 00:00:00.1228390
Verifying $ifft1D_512: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool) : bool
{
  0 + (if b0000 then 0 else 22000) + (if b0002 then 0 else 22000) + (if b0004 then 0 else 22000) + (if b0005 then 0 else 22000) + (if b0007 then 0 else 22000) + (if b0009 then 0 else 22000) + (if b0010 then 0 else 22000) + (if b0011 then 0 else 22000) + (if b0012 then 0 else 22000) + (if b0013 then 0 else 22000) + (if b0014 then 0 else 22000) + (if b0015 then 0 else 22000) + (if b0016 then 0 else 22000) + (if b0017 then 0 else 22000) + (if b0018 then 0 else 22000) + (if b0019 then 0 else 22000) + (if b0020 then 0 else 22000) + (if b0021 then 0 else 22000) + (if b0022 then 0 else 22000) + (if b0023 then 0 else 22000) + (if b0024 then 0 else 22000) + (if b0025 then 0 else 22000) + (if b0026 then 0 else 22000) + (if b0027 then 0 else 22000) + (if b0028 then 0 else 22000) + (if b0029 then 0 else 22000) + (if b0030 then 0 else 22000) + (if b0031 then 0 else 22000) + (if b0032 then 0 else 22000) + (if b0033 then 0 else 22000) + (if b0034 then 0 else 22000) + (if b0035 then 0 else 22000) + (if b0036 then 0 else 22000) + (if b0037 then 0 else 22000) + (if b0038 then 0 else 22000) + (if b0039 then 0 else 22000) + (if b0040 then 0 else 22000) + (if b0041 then 0 else 22000) + (if b0042 then 0 else 22000) + (if b0043 then 0 else 22000) + (if b0044 then 0 else 22000) + (if b0045 then 0 else 22000) + (if b0046 then 0 else 22000) + (if b0047 then 0 else 22000) + (if b0048 then 0 else 22000) + (if b0049 then 0 else 22000) + (if b0050 then 0 else 22000) + (if b0051 then 0 else 22000) + (if b0052 then 0 else 22000) + (if b0053 then 0 else 22000) + (if b0054 then 0 else 22000) + (if b0055 then 0 else 22000) < 441
}
Prover Time taken = 153.532555
Added Horn clause: 1 && 2 && 0 => 3
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/shoc/fft/ifft1D_512/kernel.bpl.ice2.bpl
Total learner time was 00:00:00.1208140
Verifying $ifft1D_512: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool) : bool
{
  0 + (if b0000 then 0 else 22000) + (if b0002 then 0 else 22000) + (if b0004 then 0 else 22000) + (if b0005 then 0 else 22000) + (if b0007 then 0 else 22000) + (if b0009 then 0 else 22000) + (if b0010 then 0 else 22000) + (if b0012 then 0 else 22000) + (if b0014 then 0 else 22000) + (if b0015 then 0 else 22000) + (if b0016 then 0 else 22000) + (if b0017 then 0 else 22000) + (if b0018 then 0 else 22000) + (if b0019 then 0 else 22000) + (if b0020 then 0 else 22000) + (if b0021 then 0 else 22000) + (if b0022 then 0 else 22000) + (if b0023 then 0 else 22000) + (if b0024 then 0 else 22000) + (if b0025 then 0 else 22000) + (if b0026 then 0 else 22000) + (if b0027 then 0 else 22000) + (if b0028 then 0 else 22000) + (if b0029 then 0 else 22000) + (if b0030 then 0 else 22000) + (if b0031 then 0 else 22000) + (if b0032 then 0 else 22000) + (if b0033 then 0 else 22000) + (if b0034 then 0 else 22000) + (if b0035 then 0 else 22000) + (if b0036 then 0 else 22000) + (if b0037 then 0 else 22000) + (if b0038 then 0 else 22000) + (if b0039 then 0 else 22000) + (if b0040 then 0 else 22000) + (if b0041 then 0 else 22000) + (if b0042 then 0 else 22000) + (if b0043 then 0 else 22000) + (if b0044 then 0 else 22000) + (if b0045 then 0 else 22000) + (if b0046 then 0 else 22000) + (if b0047 then 0 else 22000) + (if b0048 then 0 else 22000) + (if b0049 then 0 else 22000) + (if b0050 then 0 else 22000) + (if b0051 then 0 else 22000) + (if b0052 then 0 else 22000) + (if b0053 then 0 else 22000) + (if b0054 then 0 else 22000) + (if b0055 then 0 else 22000) < 441
}
Prover Time taken = 256.111898
Added Horn clause: 1 && 2 && 3 && 0 => 4
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/shoc/fft/ifft1D_512/kernel.bpl.ice2.bpl
Total learner time was 00:00:00.1197560
Verifying $ifft1D_512: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool) : bool
{
  0 + (if b0000 then 0 else 22000) + (if b0002 then 0 else 22000) + (if b0004 then 0 else 22000) + (if b0005 then 0 else 22000) + (if b0007 then 0 else 22000) + (if b0009 then 0 else 22000) + (if b0010 then 0 else 22000) + (if b0012 then 0 else 22000) + (if b0014 then 0 else 22000) + (if b0015 then 0 else 22000) + (if b0017 then 0 else 22000) + (if b0019 then 0 else 22000) + (if b0020 then 0 else 22000) + (if b0021 then 0 else 22000) + (if b0022 then 0 else 22000) + (if b0023 then 0 else 22000) + (if b0024 then 0 else 22000) + (if b0025 then 0 else 22000) + (if b0026 then 0 else 22000) + (if b0027 then 0 else 22000) + (if b0028 then 0 else 22000) + (if b0029 then 0 else 22000) + (if b0030 then 0 else 22000) + (if b0031 then 0 else 22000) + (if b0032 then 0 else 22000) + (if b0033 then 0 else 22000) + (if b0034 then 0 else 22000) + (if b0035 then 0 else 22000) + (if b0036 then 0 else 22000) + (if b0037 then 0 else 22000) + (if b0038 then 0 else 22000) + (if b0039 then 0 else 22000) + (if b0040 then 0 else 22000) + (if b0041 then 0 else 22000) + (if b0042 then 0 else 22000) + (if b0043 then 0 else 22000) + (if b0044 then 0 else 22000) + (if b0045 then 0 else 22000) + (if b0046 then 0 else 22000) + (if b0047 then 0 else 22000) + (if b0048 then 0 else 22000) + (if b0049 then 0 else 22000) + (if b0050 then 0 else 22000) + (if b0051 then 0 else 22000) + (if b0052 then 0 else 22000) + (if b0053 then 0 else 22000) + (if b0054 then 0 else 22000) + (if b0055 then 0 else 22000) < 441
}
Command exited with non-zero status 124
3.10user 2.71system 19:58.62elapsed 0%CPU (0avgtext+0avgdata 71888maxresident)k
296inputs+248outputs (1major+34449minor)pagefaults 0swaps
FILE:shoc/fft/ifft1D_512/kernel.bpl.ice2.bpl
#################
Wed May 12 06:58:11 UTC 2021
KEY=awinnow
OUTPUT=/root/Docker/winnow_gpu_timeout.txt
[TRACE] Using prover: /root/Docker/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/root/Docker/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a winnow
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/errorLimit:1
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/shoc/gemm/sgemmNN/kernel.bpl.ice2.bpl
--------------------
Parsing /root/Docker/benchmarks/BenchmarksCompiled/awinnow/shoc/gemm/sgemmNN/kernel.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /root/Docker/z3/bin/z3
#parameters: 17
Generating VC of $sgemmNN
Verifying $sgemmNN: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.180381
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/shoc/gemm/sgemmNN/kernel.bpl.ice2.bpl
Total learner time was 00:00:00.1258710
Verifying $sgemmNN: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool) : bool
{
  0 + (if b0000 then 0 else 6000) + (if b0001 then 0 else 6000) + (if b0002 then 0 else 6000) + (if b0003 then 0 else 6000) + (if b0004 then 0 else 6000) + (if b0005 then 0 else 6000) + (if b0006 then 0 else 6000) + (if b0007 then 0 else 6000) + (if b0008 then 0 else 6000) + (if b0009 then 0 else 6000) + (if b0010 then 0 else 6000) + (if b0011 then 0 else 6000) + (if b0012 then 0 else 6000) + (if b0013 then 0 else 6000) + (if b0014 then 0 else 6000) + (if b0015 then 0 else 6000) + (if b0016 then 0 else 6000) < 441
}
Prover Time taken = 804.985452
Added Horn clause: 0 => 1
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/shoc/gemm/sgemmNN/kernel.bpl.ice2.bpl
Total learner time was 00:00:00.1191760
Verifying $sgemmNN: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool) : bool
{
  0 + (if b0000 then 0 else 6000) + (if b0002 then 0 else 6000) + (if b0004 then 0 else 6000) + (if b0006 then 0 else 6000) + (if b0007 then 0 else 6000) + (if b0008 then 0 else 6000) + (if b0009 then 0 else 6000) + (if b0010 then 0 else 6000) + (if b0011 then 0 else 6000) + (if b0012 then 0 else 6000) + (if b0013 then 0 else 6000) + (if b0014 then 0 else 6000) + (if b0015 then 0 else 6000) + (if b0016 then 0 else 6000) < 441
}
Prover Time taken = 255.353967
Added Horn clause: 1 => 2
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/shoc/gemm/sgemmNN/kernel.bpl.ice2.bpl
Total learner time was 00:00:00.1212350
Verifying $sgemmNN: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool) : bool
{
  0 + (if b0000 then 0 else 6000) + (if b0002 then 0 else 6000) + (if b0006 then 0 else 6000) + (if b0007 then 0 else 6000) + (if b0008 then 0 else 6000) + (if b0009 then 0 else 6000) + (if b0010 then 0 else 6000) + (if b0011 then 0 else 6000) + (if b0012 then 0 else 6000) + (if b0013 then 0 else 6000) + (if b0014 then 0 else 6000) + (if b0015 then 0 else 6000) + (if b0016 then 0 else 6000) < 441
}
Command exited with non-zero status 124
2.90user 2.65system 19:58.62elapsed 0%CPU (0avgtext+0avgdata 87616maxresident)k
456inputs+136outputs (1major+29167minor)pagefaults 0swaps
FILE:shoc/gemm/sgemmNN/kernel.bpl.ice2.bpl
#################
Wed May 12 07:18:10 UTC 2021
KEY=awinnow
OUTPUT=/root/Docker/winnow_gpu_timeout.txt
[TRACE] Using prover: /root/Docker/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/root/Docker/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a winnow
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/errorLimit:1
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/shoc/gemm/sgemmNT/kernel.bpl.ice2.bpl
--------------------
Parsing /root/Docker/benchmarks/BenchmarksCompiled/awinnow/shoc/gemm/sgemmNT/kernel.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /root/Docker/z3/bin/z3
#parameters: 17
Generating VC of $sgemmNT
Verifying $sgemmNT: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.185419
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/shoc/gemm/sgemmNT/kernel.bpl.ice2.bpl
Total learner time was 00:00:00.1169590
Verifying $sgemmNT: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool) : bool
{
  0 + (if b0000 then 0 else 6000) + (if b0001 then 0 else 6000) + (if b0002 then 0 else 6000) + (if b0003 then 0 else 6000) + (if b0004 then 0 else 6000) + (if b0005 then 0 else 6000) + (if b0006 then 0 else 6000) + (if b0007 then 0 else 6000) + (if b0008 then 0 else 6000) + (if b0009 then 0 else 6000) + (if b0010 then 0 else 6000) + (if b0011 then 0 else 6000) + (if b0012 then 0 else 6000) + (if b0013 then 0 else 6000) + (if b0014 then 0 else 6000) + (if b0015 then 0 else 6000) + (if b0016 then 0 else 6000) < 441
}
Prover Time taken = 123.053205
Added Horn clause: 0 => 1
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/shoc/gemm/sgemmNT/kernel.bpl.ice2.bpl
Total learner time was 00:00:00.1169910
Verifying $sgemmNT: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool) : bool
{
  0 + (if b0000 then 0 else 6000) + (if b0001 then 0 else 6000) + (if b0002 then 0 else 6000) + (if b0004 then 0 else 6000) + (if b0006 then 0 else 6000) + (if b0007 then 0 else 6000) + (if b0008 then 0 else 6000) + (if b0009 then 0 else 6000) + (if b0010 then 0 else 6000) + (if b0011 then 0 else 6000) + (if b0012 then 0 else 6000) + (if b0013 then 0 else 6000) + (if b0014 then 0 else 6000) + (if b0015 then 0 else 6000) + (if b0016 then 0 else 6000) < 441
}
Prover Time taken = 90.361016
Added Horn clause: 1 => 2
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/shoc/gemm/sgemmNT/kernel.bpl.ice2.bpl
Total learner time was 00:00:00.1200690
Verifying $sgemmNT: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool) : bool
{
  0 + (if b0006 then 0 else 6000) + (if b0007 then 0 else 6000) + (if b0008 then 0 else 6000) + (if b0009 then 0 else 6000) + (if b0010 then 0 else 6000) + (if b0011 then 0 else 6000) + (if b0012 then 0 else 6000) + (if b0013 then 0 else 6000) + (if b0014 then 0 else 6000) + (if b0015 then 0 else 6000) + (if b0016 then 0 else 6000) < 441
}
Prover Time taken = 106.470304
Added Horn clause: 3 => 4
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/shoc/gemm/sgemmNT/kernel.bpl.ice2.bpl
Total learner time was 00:00:00.1168300
Verifying $sgemmNT: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool) : bool
{
  0 + (if b0007 then 0 else 6000) + (if b0008 then 0 else 6000) + (if b0009 then 0 else 6000) + (if b0010 then 0 else 6000) + (if b0011 then 0 else 6000) + (if b0012 then 0 else 6000) + (if b0013 then 0 else 6000) + (if b0014 then 0 else 6000) + (if b0015 then 0 else 6000) + (if b0016 then 0 else 6000) < 441
}
Prover Time taken = 126.577825
Added Horn clause: 3 && 0 => 5
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/shoc/gemm/sgemmNT/kernel.bpl.ice2.bpl
Total learner time was 00:00:00.1183600
Verifying $sgemmNT: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool) : bool
{
  0 + (if b0007 then 0 else 6000) + (if b0008 then 0 else 6000) + (if b0010 then 0 else 6000) + (if b0012 then 0 else 6000) + (if b0013 then 0 else 6000) + (if b0014 then 0 else 6000) + (if b0015 then 0 else 6000) + (if b0016 then 0 else 6000) < 441
}
Prover Time taken = 28.132596
Prover time = 474.78
Number of prover queries = 6
Learner time = 0.59
Number of learner queries = 5
Total time: 475.49
Number of positive examples:1
Number of negative examples:0
Number of Horn clauses:4
verified

Boogie program verifier finished with 1 verified, 0 errors
1.90user 1.99system 7:56.95elapsed 0%CPU (0avgtext+0avgdata 64928maxresident)k
272inputs+216outputs (1major+32968minor)pagefaults 0swaps
FILE:shoc/gemm/sgemmNT/kernel.bpl.ice2.bpl
#################
Wed May 12 07:26:07 UTC 2021
KEY=awinnow
OUTPUT=/root/Docker/winnow_gpu_timeout.txt
[TRACE] Using prover: /root/Docker/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/root/Docker/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a winnow
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/errorLimit:1
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/shoc/s3d/gr_base/kernel.bpl.ice2.bpl
--------------------
Parsing /root/Docker/benchmarks/BenchmarksCompiled/awinnow/shoc/s3d/gr_base/kernel.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /root/Docker/z3/bin/z3
#parameters: 10
Generating VC of $gr_base
Verifying $gr_base: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 114.017459
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/shoc/s3d/gr_base/kernel.bpl.ice2.bpl
Total learner time was 00:00:00.1168670
Verifying $gr_base: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool) : bool
{
  0 + (if b0000 then 0 else 4000) + (if b0001 then 0 else 4000) + (if b0002 then 0 else 4000) + (if b0003 then 0 else 4000) + (if b0004 then 0 else 4000) + (if b0005 then 0 else 4000) + (if b0006 then 0 else 4000) + (if b0007 then 0 else 4000) + (if b0008 then 0 else 4000) + (if b0009 then 0 else 4000) < 441
}
Prover Time taken = 118.29458
Added Horn clause: 0 => 1
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/shoc/s3d/gr_base/kernel.bpl.ice2.bpl
Total learner time was 00:00:00.1273760
Verifying $gr_base: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool) : bool
{
  0 + (if b0001 then 0 else 4000) + (if b0003 then 0 else 4000) + (if b0004 then 0 else 4000) + (if b0005 then 0 else 4000) + (if b0006 then 0 else 4000) + (if b0007 then 0 else 4000) + (if b0008 then 0 else 4000) + (if b0009 then 0 else 4000) < 441
}
Prover Time taken = 115.503658
Added Horn clause: 1 => 2
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/shoc/s3d/gr_base/kernel.bpl.ice2.bpl
Total learner time was 00:00:00.1188230
Verifying $gr_base: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool) : bool
{
  0 + (if b0001 then 0 else 4000) + (if b0003 then 0 else 4000) + (if b0004 then 0 else 4000) + (if b0006 then 0 else 4000) < 441
}
Prover Time taken = 52.603411
Prover time = 400.42
Number of prover queries = 4
Learner time = 0.36
Number of learner queries = 3
Total time: 400.87
Number of positive examples:1
Number of negative examples:0
Number of Horn clauses:2
verified

Boogie program verifier finished with 1 verified, 0 errors
1.35user 1.77system 6:42.23elapsed 0%CPU (0avgtext+0avgdata 51008maxresident)k
120inputs+136outputs (1major+20993minor)pagefaults 0swaps
FILE:shoc/s3d/gr_base/kernel.bpl.ice2.bpl
#################
Wed May 12 07:32:49 UTC 2021
KEY=awinnow
OUTPUT=/root/Docker/winnow_gpu_timeout.txt
[TRACE] Using prover: /root/Docker/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/root/Docker/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a winnow
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/errorLimit:1
/root/Docker/benchmarks/BenchmarksCompiled/awinnow/shoc/scan/bottom_scan/kernel.bpl.ice2.bpl
--------------------
Parsing /root/Docker/benchmarks/BenchmarksCompiled/awinnow/shoc/scan/bottom_scan/kernel.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /root/Docker/z3/bin/z3
#parameters: 86
Generating VC of $bottom_scan
Verifying $bottom_scan: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,0,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.18356
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/shoc/scan/bottom_scan/kernel.bpl.ice2.bpl
Total learner time was 00:00:00.1179430
Verifying $bottom_scan: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool) : bool
{
  0 + (if b0000 then 0 else 34000) + (if b0001 then 0 else 34000) + (if b0002 then 0 else 34000) + (if b0003 then 0 else 34000) + (if b0004 then 0 else 34000) + (if b0005 then 0 else 34000) + (if b0006 then 0 else 34000) + (if b0007 then 0 else 34000) + (if b0008 then 0 else 34000) + (if b0009 then 0 else 34000) + (if b0010 then 0 else 34000) + (if b0011 then 0 else 34000) + (if b0012 then 0 else 34000) + (if b0013 then 0 else 34000) + (if b0014 then 0 else 34000) + (if b0015 then 0 else 34000) + (if b0016 then 0 else 34000) + (if b0017 then 0 else 34000) + (if b0018 then 0 else 34000) + (if b0019 then 0 else 34000) + (if b0020 then 0 else 34000) + (if b0021 then 0 else 34000) + (if b0022 then 0 else 34000) + (if b0023 then 0 else 34000) + (if b0024 then 0 else 34000) + (if b0026 then 0 else 34000) + (if b0028 then 0 else 34000) + (if b0029 then 0 else 34000) + (if b0031 then 0 else 34000) + (if b0032 then 0 else 34000) + (if b0033 then 0 else 34000) + (if b0034 then 0 else 34000) + (if b0035 then 0 else 34000) + (if b0036 then 0 else 34000) + (if b0037 then 0 else 34000) + (if b0038 then 0 else 34000) + (if b0039 then 0 else 34000) + (if b0040 then 0 else 34000) + (if b0041 then 0 else 34000) + (if b0042 then 0 else 34000) + (if b0043 then 0 else 34000) + (if b0044 then 0 else 34000) + (if b0045 then 0 else 34000) + (if b0046 then 0 else 34000) + (if b0047 then 0 else 34000) + (if b0048 then 0 else 34000) + (if b0049 then 0 else 34000) + (if b0050 then 0 else 34000) + (if b0051 then 0 else 34000) + (if b0052 then 0 else 34000) + (if b0053 then 0 else 34000) + (if b0054 then 0 else 34000) + (if b0055 then 0 else 34000) + (if b0056 then 0 else 34000) + (if b0057 then 0 else 34000) + (if b0058 then 0 else 34000) + (if b0059 then 0 else 34000) + (if b0060 then 0 else 34000) + (if b0061 then 0 else 34000) + (if b0062 then 0 else 34000) + (if b0063 then 0 else 34000) + (if b0064 then 0 else 34000) + (if b0065 then 0 else 34000) + (if b0066 then 0 else 34000) + (if b0067 then 0 else 34000) + (if b0068 then 0 else 34000) + (if b0069 then 0 else 34000) + (if b0070 then 0 else 34000) + (if b0071 then 0 else 34000) + (if b0072 then 0 else 34000) + (if b0073 then 0 else 34000) + (if b0074 then 0 else 34000) + (if b0075 then 0 else 34000) + (if b0076 then 0 else 34000) + (if b0077 then 0 else 34000) + (if b0078 then 0 else 34000) + (if b0079 then 0 else 34000) + (if b0080 then 0 else 34000) + (if b0081 then 0 else 34000) + (if b0082 then 0 else 34000) + (if b0083 then 0 else 34000) + (if b0084 then 0 else 34000) + (if b0085 then 0 else 34000) < 441
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,0,1,1,0,0,0,1,0,0,0,0,0,0,1,0,1,0,1,0,1,0,0,0,0,1,1,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 1.420017
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/shoc/scan/bottom_scan/kernel.bpl.ice2.bpl
Total learner time was 00:00:00.1189390
Verifying $bottom_scan: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool) : bool
{
  0 + (if b0000 then 0 else 34000) + (if b0001 then 0 else 34000) + (if b0002 then 0 else 34000) + (if b0003 then 0 else 34000) + (if b0004 then 0 else 34000) + (if b0005 then 0 else 34000) + (if b0006 then 0 else 34000) + (if b0007 then 0 else 34000) + (if b0008 then 0 else 34000) + (if b0009 then 0 else 34000) + (if b0010 then 0 else 34000) + (if b0011 then 0 else 34000) + (if b0012 then 0 else 34000) + (if b0013 then 0 else 34000) + (if b0014 then 0 else 34000) + (if b0015 then 0 else 34000) + (if b0016 then 0 else 34000) + (if b0017 then 0 else 34000) + (if b0018 then 0 else 34000) + (if b0019 then 0 else 34000) + (if b0020 then 0 else 34000) + (if b0021 then 0 else 34000) + (if b0022 then 0 else 34000) + (if b0023 then 0 else 34000) + (if b0026 then 0 else 34000) + (if b0028 then 0 else 34000) + (if b0029 then 0 else 34000) + (if b0031 then 0 else 34000) + (if b0032 then 0 else 34000) + (if b0036 then 0 else 34000) + (if b0043 then 0 else 34000) + (if b0045 then 0 else 34000) + (if b0047 then 0 else 34000) + (if b0049 then 0 else 34000) + (if b0054 then 0 else 34000) + (if b0055 then 0 else 34000) + (if b0059 then 0 else 34000) + (if b0060 then 0 else 34000) + (if b0061 then 0 else 34000) + (if b0062 then 0 else 34000) + (if b0063 then 0 else 34000) + (if b0064 then 0 else 34000) + (if b0065 then 0 else 34000) + (if b0066 then 0 else 34000) + (if b0067 then 0 else 34000) + (if b0068 then 0 else 34000) + (if b0069 then 0 else 34000) + (if b0070 then 0 else 34000) + (if b0071 then 0 else 34000) + (if b0072 then 0 else 34000) + (if b0073 then 0 else 34000) + (if b0074 then 0 else 34000) + (if b0075 then 0 else 34000) + (if b0076 then 0 else 34000) + (if b0077 then 0 else 34000) + (if b0078 then 0 else 34000) + (if b0079 then 0 else 34000) + (if b0080 then 0 else 34000) + (if b0081 then 0 else 34000) + (if b0082 then 0 else 34000) + (if b0083 then 0 else 34000) + (if b0084 then 0 else 34000) + (if b0085 then 0 else 34000) < 441
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,0,1,1,0,0,0,1,1,1,0,1,1,1,1,1,1,0,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 1.205556
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/shoc/scan/bottom_scan/kernel.bpl.ice2.bpl
Total learner time was 00:00:00.1186240
Verifying $bottom_scan: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool) : bool
{
  0 + (if b0000 then 0 else 34000) + (if b0001 then 0 else 34000) + (if b0002 then 0 else 34000) + (if b0003 then 0 else 34000) + (if b0004 then 0 else 34000) + (if b0005 then 0 else 34000) + (if b0006 then 0 else 34000) + (if b0007 then 0 else 34000) + (if b0008 then 0 else 34000) + (if b0009 then 0 else 34000) + (if b0010 then 0 else 34000) + (if b0011 then 0 else 34000) + (if b0012 then 0 else 34000) + (if b0013 then 0 else 34000) + (if b0014 then 0 else 34000) + (if b0015 then 0 else 34000) + (if b0016 then 0 else 34000) + (if b0017 then 0 else 34000) + (if b0018 then 0 else 34000) + (if b0019 then 0 else 34000) + (if b0020 then 0 else 34000) + (if b0021 then 0 else 34000) + (if b0022 then 0 else 34000) + (if b0023 then 0 else 34000) + (if b0026 then 0 else 34000) + (if b0028 then 0 else 34000) + (if b0029 then 0 else 34000) + (if b0045 then 0 else 34000) + (if b0049 then 0 else 34000) + (if b0054 then 0 else 34000) + (if b0055 then 0 else 34000) + (if b0060 then 0 else 34000) + (if b0061 then 0 else 34000) + (if b0062 then 0 else 34000) + (if b0063 then 0 else 34000) + (if b0064 then 0 else 34000) + (if b0065 then 0 else 34000) + (if b0066 then 0 else 34000) + (if b0067 then 0 else 34000) + (if b0068 then 0 else 34000) + (if b0069 then 0 else 34000) + (if b0070 then 0 else 34000) + (if b0071 then 0 else 34000) + (if b0072 then 0 else 34000) + (if b0073 then 0 else 34000) + (if b0074 then 0 else 34000) + (if b0075 then 0 else 34000) + (if b0076 then 0 else 34000) + (if b0077 then 0 else 34000) + (if b0078 then 0 else 34000) + (if b0079 then 0 else 34000) + (if b0080 then 0 else 34000) + (if b0081 then 0 else 34000) + (if b0082 then 0 else 34000) + (if b0083 then 0 else 34000) + (if b0084 then 0 else 34000) + (if b0085 then 0 else 34000) < 441
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,0,1,1,1,1,0,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.999152
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/shoc/scan/bottom_scan/kernel.bpl.ice2.bpl
Total learner time was 00:00:00.1182630
Verifying $bottom_scan: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool) : bool
{
  0 + (if b0000 then 0 else 34000) + (if b0001 then 0 else 34000) + (if b0002 then 0 else 34000) + (if b0003 then 0 else 34000) + (if b0004 then 0 else 34000) + (if b0005 then 0 else 34000) + (if b0006 then 0 else 34000) + (if b0007 then 0 else 34000) + (if b0008 then 0 else 34000) + (if b0009 then 0 else 34000) + (if b0010 then 0 else 34000) + (if b0011 then 0 else 34000) + (if b0012 then 0 else 34000) + (if b0013 then 0 else 34000) + (if b0014 then 0 else 34000) + (if b0015 then 0 else 34000) + (if b0016 then 0 else 34000) + (if b0017 then 0 else 34000) + (if b0018 then 0 else 34000) + (if b0019 then 0 else 34000) + (if b0020 then 0 else 34000) + (if b0021 then 0 else 34000) + (if b0022 then 0 else 34000) + (if b0023 then 0 else 34000) + (if b0028 then 0 else 34000) + (if b0029 then 0 else 34000) + (if b0049 then 0 else 34000) + (if b0054 then 0 else 34000) + (if b0060 then 0 else 34000) + (if b0061 then 0 else 34000) + (if b0062 then 0 else 34000) + (if b0063 then 0 else 34000) + (if b0064 then 0 else 34000) + (if b0065 then 0 else 34000) + (if b0066 then 0 else 34000) + (if b0067 then 0 else 34000) + (if b0068 then 0 else 34000) + (if b0069 then 0 else 34000) + (if b0070 then 0 else 34000) + (if b0071 then 0 else 34000) + (if b0072 then 0 else 34000) + (if b0073 then 0 else 34000) + (if b0074 then 0 else 34000) + (if b0075 then 0 else 34000) + (if b0076 then 0 else 34000) + (if b0077 then 0 else 34000) + (if b0078 then 0 else 34000) + (if b0079 then 0 else 34000) + (if b0080 then 0 else 34000) + (if b0081 then 0 else 34000) + (if b0082 then 0 else 34000) + (if b0083 then 0 else 34000) + (if b0084 then 0 else 34000) + (if b0085 then 0 else 34000) < 441
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,0,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 1.436023
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/shoc/scan/bottom_scan/kernel.bpl.ice2.bpl
Total learner time was 00:00:00.1181110
Verifying $bottom_scan: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool) : bool
{
  0 + (if b0000 then 0 else 34000) + (if b0001 then 0 else 34000) + (if b0002 then 0 else 34000) + (if b0003 then 0 else 34000) + (if b0004 then 0 else 34000) + (if b0005 then 0 else 34000) + (if b0006 then 0 else 34000) + (if b0007 then 0 else 34000) + (if b0008 then 0 else 34000) + (if b0009 then 0 else 34000) + (if b0010 then 0 else 34000) + (if b0011 then 0 else 34000) + (if b0012 then 0 else 34000) + (if b0013 then 0 else 34000) + (if b0014 then 0 else 34000) + (if b0015 then 0 else 34000) + (if b0016 then 0 else 34000) + (if b0017 then 0 else 34000) + (if b0018 then 0 else 34000) + (if b0019 then 0 else 34000) + (if b0020 then 0 else 34000) + (if b0021 then 0 else 34000) + (if b0022 then 0 else 34000) + (if b0023 then 0 else 34000) + (if b0028 then 0 else 34000) + (if b0029 then 0 else 34000) + (if b0060 then 0 else 34000) + (if b0061 then 0 else 34000) + (if b0062 then 0 else 34000) + (if b0063 then 0 else 34000) + (if b0064 then 0 else 34000) + (if b0065 then 0 else 34000) + (if b0066 then 0 else 34000) + (if b0067 then 0 else 34000) + (if b0068 then 0 else 34000) + (if b0069 then 0 else 34000) + (if b0070 then 0 else 34000) + (if b0071 then 0 else 34000) + (if b0072 then 0 else 34000) + (if b0073 then 0 else 34000) + (if b0074 then 0 else 34000) + (if b0075 then 0 else 34000) + (if b0076 then 0 else 34000) + (if b0077 then 0 else 34000) + (if b0078 then 0 else 34000) + (if b0079 then 0 else 34000) + (if b0080 then 0 else 34000) + (if b0081 then 0 else 34000) + (if b0082 then 0 else 34000) + (if b0083 then 0 else 34000) + (if b0084 then 0 else 34000) + (if b0085 then 0 else 34000) < 441
}
Prover Time taken = 1.19685
Added Horn clause: 5 => 6
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/shoc/scan/bottom_scan/kernel.bpl.ice2.bpl
Total learner time was 00:00:00.1195280
Verifying $bottom_scan: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool) : bool
{
  0 + (if b0000 then 0 else 34000) + (if b0001 then 0 else 34000) + (if b0002 then 0 else 34000) + (if b0003 then 0 else 34000) + (if b0004 then 0 else 34000) + (if b0005 then 0 else 34000) + (if b0006 then 0 else 34000) + (if b0007 then 0 else 34000) + (if b0008 then 0 else 34000) + (if b0009 then 0 else 34000) + (if b0010 then 0 else 34000) + (if b0011 then 0 else 34000) + (if b0012 then 0 else 34000) + (if b0013 then 0 else 34000) + (if b0014 then 0 else 34000) + (if b0015 then 0 else 34000) + (if b0016 then 0 else 34000) + (if b0017 then 0 else 34000) + (if b0018 then 0 else 34000) + (if b0019 then 0 else 34000) + (if b0020 then 0 else 34000) + (if b0021 then 0 else 34000) + (if b0022 then 0 else 34000) + (if b0023 then 0 else 34000) + (if b0028 then 0 else 34000) + (if b0029 then 0 else 34000) + (if b0060 then 0 else 34000) + (if b0061 then 0 else 34000) + (if b0062 then 0 else 34000) + (if b0063 then 0 else 34000) + (if b0064 then 0 else 34000) + (if b0065 then 0 else 34000) + (if b0066 then 0 else 34000) + (if b0067 then 0 else 34000) + (if b0068 then 0 else 34000) + (if b0069 then 0 else 34000) + (if b0070 then 0 else 34000) + (if b0071 then 0 else 34000) + (if b0073 then 0 else 34000) + (if b0074 then 0 else 34000) + (if b0075 then 0 else 34000) + (if b0076 then 0 else 34000) + (if b0077 then 0 else 34000) + (if b0078 then 0 else 34000) + (if b0079 then 0 else 34000) + (if b0080 then 0 else 34000) + (if b0081 then 0 else 34000) + (if b0082 then 0 else 34000) + (if b0083 then 0 else 34000) + (if b0084 then 0 else 34000) + (if b0085 then 0 else 34000) < 441
}
Prover Time taken = 1.003299
Added Horn clause: 7 => 8
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/shoc/scan/bottom_scan/kernel.bpl.ice2.bpl
Total learner time was 00:00:00.1186910
Verifying $bottom_scan: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool) : bool
{
  0 + (if b0000 then 0 else 34000) + (if b0001 then 0 else 34000) + (if b0002 then 0 else 34000) + (if b0003 then 0 else 34000) + (if b0004 then 0 else 34000) + (if b0005 then 0 else 34000) + (if b0006 then 0 else 34000) + (if b0007 then 0 else 34000) + (if b0008 then 0 else 34000) + (if b0009 then 0 else 34000) + (if b0010 then 0 else 34000) + (if b0011 then 0 else 34000) + (if b0012 then 0 else 34000) + (if b0013 then 0 else 34000) + (if b0014 then 0 else 34000) + (if b0015 then 0 else 34000) + (if b0016 then 0 else 34000) + (if b0017 then 0 else 34000) + (if b0018 then 0 else 34000) + (if b0019 then 0 else 34000) + (if b0020 then 0 else 34000) + (if b0021 then 0 else 34000) + (if b0022 then 0 else 34000) + (if b0023 then 0 else 34000) + (if b0028 then 0 else 34000) + (if b0029 then 0 else 34000) + (if b0060 then 0 else 34000) + (if b0061 then 0 else 34000) + (if b0062 then 0 else 34000) + (if b0063 then 0 else 34000) + (if b0064 then 0 else 34000) + (if b0065 then 0 else 34000) + (if b0066 then 0 else 34000) + (if b0067 then 0 else 34000) + (if b0068 then 0 else 34000) + (if b0069 then 0 else 34000) + (if b0070 then 0 else 34000) + (if b0071 then 0 else 34000) + (if b0074 then 0 else 34000) + (if b0075 then 0 else 34000) + (if b0076 then 0 else 34000) + (if b0077 then 0 else 34000) + (if b0078 then 0 else 34000) + (if b0079 then 0 else 34000) + (if b0080 then 0 else 34000) + (if b0081 then 0 else 34000) + (if b0082 then 0 else 34000) + (if b0083 then 0 else 34000) + (if b0084 then 0 else 34000) + (if b0085 then 0 else 34000) < 441
}
Prover Time taken = 1.242577
Added Horn clause: 9 => 10
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/shoc/scan/bottom_scan/kernel.bpl.ice2.bpl
Total learner time was 00:00:00.1205400
Verifying $bottom_scan: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool) : bool
{
  0 + (if b0000 then 0 else 34000) + (if b0001 then 0 else 34000) + (if b0002 then 0 else 34000) + (if b0003 then 0 else 34000) + (if b0004 then 0 else 34000) + (if b0005 then 0 else 34000) + (if b0006 then 0 else 34000) + (if b0007 then 0 else 34000) + (if b0008 then 0 else 34000) + (if b0009 then 0 else 34000) + (if b0010 then 0 else 34000) + (if b0011 then 0 else 34000) + (if b0012 then 0 else 34000) + (if b0013 then 0 else 34000) + (if b0014 then 0 else 34000) + (if b0015 then 0 else 34000) + (if b0016 then 0 else 34000) + (if b0017 then 0 else 34000) + (if b0018 then 0 else 34000) + (if b0019 then 0 else 34000) + (if b0020 then 0 else 34000) + (if b0021 then 0 else 34000) + (if b0022 then 0 else 34000) + (if b0023 then 0 else 34000) + (if b0028 then 0 else 34000) + (if b0029 then 0 else 34000) + (if b0060 then 0 else 34000) + (if b0061 then 0 else 34000) + (if b0062 then 0 else 34000) + (if b0063 then 0 else 34000) + (if b0064 then 0 else 34000) + (if b0065 then 0 else 34000) + (if b0066 then 0 else 34000) + (if b0067 then 0 else 34000) + (if b0068 then 0 else 34000) + (if b0069 then 0 else 34000) + (if b0070 then 0 else 34000) + (if b0074 then 0 else 34000) + (if b0075 then 0 else 34000) + (if b0076 then 0 else 34000) + (if b0077 then 0 else 34000) + (if b0078 then 0 else 34000) + (if b0079 then 0 else 34000) + (if b0080 then 0 else 34000) + (if b0081 then 0 else 34000) + (if b0082 then 0 else 34000) + (if b0083 then 0 else 34000) + (if b0084 then 0 else 34000) + (if b0085 then 0 else 34000) < 441
}
Prover Time taken = 0.90585
Added Horn clause: 11 => 12
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/shoc/scan/bottom_scan/kernel.bpl.ice2.bpl
Total learner time was 00:00:00.1191680
Verifying $bottom_scan: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool) : bool
{
  0 + (if b0000 then 0 else 34000) + (if b0001 then 0 else 34000) + (if b0002 then 0 else 34000) + (if b0003 then 0 else 34000) + (if b0004 then 0 else 34000) + (if b0005 then 0 else 34000) + (if b0006 then 0 else 34000) + (if b0007 then 0 else 34000) + (if b0008 then 0 else 34000) + (if b0009 then 0 else 34000) + (if b0010 then 0 else 34000) + (if b0011 then 0 else 34000) + (if b0012 then 0 else 34000) + (if b0013 then 0 else 34000) + (if b0014 then 0 else 34000) + (if b0015 then 0 else 34000) + (if b0016 then 0 else 34000) + (if b0017 then 0 else 34000) + (if b0018 then 0 else 34000) + (if b0019 then 0 else 34000) + (if b0020 then 0 else 34000) + (if b0021 then 0 else 34000) + (if b0022 then 0 else 34000) + (if b0023 then 0 else 34000) + (if b0028 then 0 else 34000) + (if b0029 then 0 else 34000) + (if b0060 then 0 else 34000) + (if b0061 then 0 else 34000) + (if b0062 then 0 else 34000) + (if b0063 then 0 else 34000) + (if b0064 then 0 else 34000) + (if b0065 then 0 else 34000) + (if b0066 then 0 else 34000) + (if b0067 then 0 else 34000) + (if b0068 then 0 else 34000) + (if b0069 then 0 else 34000) + (if b0070 then 0 else 34000) + (if b0074 then 0 else 34000) + (if b0075 then 0 else 34000) + (if b0076 then 0 else 34000) + (if b0077 then 0 else 34000) + (if b0078 then 0 else 34000) + (if b0080 then 0 else 34000) + (if b0081 then 0 else 34000) + (if b0082 then 0 else 34000) + (if b0083 then 0 else 34000) + (if b0084 then 0 else 34000) + (if b0085 then 0 else 34000) < 441
}
Prover Time taken = 1.135343
Added Horn clause: 13 => 14
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/shoc/scan/bottom_scan/kernel.bpl.ice2.bpl
Total learner time was 00:00:00.1209290
Verifying $bottom_scan: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool) : bool
{
  0 + (if b0000 then 0 else 34000) + (if b0001 then 0 else 34000) + (if b0002 then 0 else 34000) + (if b0003 then 0 else 34000) + (if b0004 then 0 else 34000) + (if b0005 then 0 else 34000) + (if b0006 then 0 else 34000) + (if b0007 then 0 else 34000) + (if b0008 then 0 else 34000) + (if b0009 then 0 else 34000) + (if b0010 then 0 else 34000) + (if b0011 then 0 else 34000) + (if b0012 then 0 else 34000) + (if b0013 then 0 else 34000) + (if b0014 then 0 else 34000) + (if b0015 then 0 else 34000) + (if b0016 then 0 else 34000) + (if b0017 then 0 else 34000) + (if b0018 then 0 else 34000) + (if b0019 then 0 else 34000) + (if b0020 then 0 else 34000) + (if b0021 then 0 else 34000) + (if b0022 then 0 else 34000) + (if b0023 then 0 else 34000) + (if b0028 then 0 else 34000) + (if b0029 then 0 else 34000) + (if b0060 then 0 else 34000) + (if b0061 then 0 else 34000) + (if b0062 then 0 else 34000) + (if b0063 then 0 else 34000) + (if b0064 then 0 else 34000) + (if b0065 then 0 else 34000) + (if b0066 then 0 else 34000) + (if b0067 then 0 else 34000) + (if b0068 then 0 else 34000) + (if b0069 then 0 else 34000) + (if b0074 then 0 else 34000) + (if b0075 then 0 else 34000) + (if b0076 then 0 else 34000) + (if b0077 then 0 else 34000) + (if b0078 then 0 else 34000) + (if b0080 then 0 else 34000) + (if b0081 then 0 else 34000) + (if b0082 then 0 else 34000) + (if b0083 then 0 else 34000) + (if b0084 then 0 else 34000) + (if b0085 then 0 else 34000) < 441
}
Prover Time taken = 1.737479
Added Horn clause: 15 => 16
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/shoc/scan/bottom_scan/kernel.bpl.ice2.bpl
Total learner time was 00:00:00.1246660
Verifying $bottom_scan: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool) : bool
{
  0 + (if b0000 then 0 else 34000) + (if b0001 then 0 else 34000) + (if b0002 then 0 else 34000) + (if b0003 then 0 else 34000) + (if b0004 then 0 else 34000) + (if b0005 then 0 else 34000) + (if b0006 then 0 else 34000) + (if b0007 then 0 else 34000) + (if b0008 then 0 else 34000) + (if b0009 then 0 else 34000) + (if b0010 then 0 else 34000) + (if b0011 then 0 else 34000) + (if b0012 then 0 else 34000) + (if b0013 then 0 else 34000) + (if b0014 then 0 else 34000) + (if b0015 then 0 else 34000) + (if b0016 then 0 else 34000) + (if b0017 then 0 else 34000) + (if b0018 then 0 else 34000) + (if b0019 then 0 else 34000) + (if b0020 then 0 else 34000) + (if b0021 then 0 else 34000) + (if b0022 then 0 else 34000) + (if b0023 then 0 else 34000) + (if b0028 then 0 else 34000) + (if b0029 then 0 else 34000) + (if b0060 then 0 else 34000) + (if b0061 then 0 else 34000) + (if b0062 then 0 else 34000) + (if b0063 then 0 else 34000) + (if b0064 then 0 else 34000) + (if b0065 then 0 else 34000) + (if b0066 then 0 else 34000) + (if b0067 then 0 else 34000) + (if b0068 then 0 else 34000) + (if b0069 then 0 else 34000) + (if b0074 then 0 else 34000) + (if b0075 then 0 else 34000) + (if b0076 then 0 else 34000) + (if b0080 then 0 else 34000) + (if b0081 then 0 else 34000) + (if b0082 then 0 else 34000) + (if b0083 then 0 else 34000) + (if b0084 then 0 else 34000) + (if b0085 then 0 else 34000) < 441
}
Prover Time taken = 1.474329
Added Horn clause: 17 && 18 && 19 => 20
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/shoc/scan/bottom_scan/kernel.bpl.ice2.bpl
Total learner time was 00:00:00.1196020
Verifying $bottom_scan: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool) : bool
{
  0 + (if b0000 then 0 else 34000) + (if b0001 then 0 else 34000) + (if b0002 then 0 else 34000) + (if b0003 then 0 else 34000) + (if b0004 then 0 else 34000) + (if b0006 then 0 else 34000) + (if b0008 then 0 else 34000) + (if b0010 then 0 else 34000) + (if b0012 then 0 else 34000) + (if b0013 then 0 else 34000) + (if b0014 then 0 else 34000) + (if b0015 then 0 else 34000) + (if b0016 then 0 else 34000) + (if b0017 then 0 else 34000) + (if b0018 then 0 else 34000) + (if b0019 then 0 else 34000) + (if b0020 then 0 else 34000) + (if b0021 then 0 else 34000) + (if b0022 then 0 else 34000) + (if b0023 then 0 else 34000) + (if b0028 then 0 else 34000) + (if b0029 then 0 else 34000) + (if b0060 then 0 else 34000) + (if b0061 then 0 else 34000) + (if b0062 then 0 else 34000) + (if b0063 then 0 else 34000) + (if b0064 then 0 else 34000) + (if b0065 then 0 else 34000) + (if b0066 then 0 else 34000) + (if b0067 then 0 else 34000) + (if b0068 then 0 else 34000) + (if b0069 then 0 else 34000) + (if b0074 then 0 else 34000) + (if b0075 then 0 else 34000) + (if b0076 then 0 else 34000) + (if b0080 then 0 else 34000) + (if b0081 then 0 else 34000) + (if b0082 then 0 else 34000) + (if b0083 then 0 else 34000) + (if b0084 then 0 else 34000) + (if b0085 then 0 else 34000) < 441
}
Prover Time taken = 1.367319
Added Horn clause: 21 && 22 && 19 => 23
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/shoc/scan/bottom_scan/kernel.bpl.ice2.bpl
Total learner time was 00:00:00.1209410
Verifying $bottom_scan: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool) : bool
{
  0 + (if b0000 then 0 else 34000) + (if b0001 then 0 else 34000) + (if b0002 then 0 else 34000) + (if b0003 then 0 else 34000) + (if b0004 then 0 else 34000) + (if b0006 then 0 else 34000) + (if b0008 then 0 else 34000) + (if b0010 then 0 else 34000) + (if b0012 then 0 else 34000) + (if b0013 then 0 else 34000) + (if b0014 then 0 else 34000) + (if b0015 then 0 else 34000) + (if b0017 then 0 else 34000) + (if b0019 then 0 else 34000) + (if b0020 then 0 else 34000) + (if b0021 then 0 else 34000) + (if b0022 then 0 else 34000) + (if b0023 then 0 else 34000) + (if b0028 then 0 else 34000) + (if b0029 then 0 else 34000) + (if b0060 then 0 else 34000) + (if b0061 then 0 else 34000) + (if b0062 then 0 else 34000) + (if b0063 then 0 else 34000) + (if b0064 then 0 else 34000) + (if b0065 then 0 else 34000) + (if b0066 then 0 else 34000) + (if b0067 then 0 else 34000) + (if b0068 then 0 else 34000) + (if b0069 then 0 else 34000) + (if b0074 then 0 else 34000) + (if b0075 then 0 else 34000) + (if b0076 then 0 else 34000) + (if b0080 then 0 else 34000) + (if b0081 then 0 else 34000) + (if b0082 then 0 else 34000) + (if b0083 then 0 else 34000) + (if b0084 then 0 else 34000) + (if b0085 then 0 else 34000) < 441
}
Prover Time taken = 1.697628
Added Horn clause: 24 && 14 && 19 => 25
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/shoc/scan/bottom_scan/kernel.bpl.ice2.bpl
Total learner time was 00:00:00.1194700
Verifying $bottom_scan: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool) : bool
{
  0 + (if b0000 then 0 else 34000) + (if b0001 then 0 else 34000) + (if b0002 then 0 else 34000) + (if b0003 then 0 else 34000) + (if b0004 then 0 else 34000) + (if b0006 then 0 else 34000) + (if b0008 then 0 else 34000) + (if b0010 then 0 else 34000) + (if b0012 then 0 else 34000) + (if b0013 then 0 else 34000) + (if b0014 then 0 else 34000) + (if b0015 then 0 else 34000) + (if b0017 then 0 else 34000) + (if b0019 then 0 else 34000) + (if b0020 then 0 else 34000) + (if b0021 then 0 else 34000) + (if b0022 then 0 else 34000) + (if b0023 then 0 else 34000) + (if b0028 then 0 else 34000) + (if b0029 then 0 else 34000) + (if b0060 then 0 else 34000) + (if b0061 then 0 else 34000) + (if b0062 then 0 else 34000) + (if b0063 then 0 else 34000) + (if b0064 then 0 else 34000) + (if b0065 then 0 else 34000) + (if b0067 then 0 else 34000) + (if b0068 then 0 else 34000) + (if b0069 then 0 else 34000) + (if b0074 then 0 else 34000) + (if b0075 then 0 else 34000) + (if b0076 then 0 else 34000) + (if b0080 then 0 else 34000) + (if b0081 then 0 else 34000) + (if b0082 then 0 else 34000) + (if b0083 then 0 else 34000) + (if b0084 then 0 else 34000) + (if b0085 then 0 else 34000) < 441
}
Prover Time taken = 1.601067
Added Horn clause: 26 && 18 && 19 => 27
Calling sorcar -a winnow /root/Docker/benchmarks/BenchmarksCompiled/awinnow/shoc/scan/bottom_scan/kernel.bpl.ice2.bpl
Total learner time was 00:00:00.1206200
Verifying $bottom_scan: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool) : bool
{
  0 + (if b0000 then 0 else 34000) + (if b0001 then 0 else 34000) + (if b0002 then 0 else 34000) + (if b0003 then 0 else 34000) + (if b0004 then 0 else 34000) + (if b0006 then 0 else 34000) + (if b0008 then 0 else 34000) + (if b0010 then 0 else 34000) + (if b0012 then 0 else 34000) + (if b0013 then 0 else 34000) + (if b0014 then 0 else 34000) + (if b0015 then 0 else 34000) + (if b0017 then 0 else 34000) + (if b0019 then 0 else 34000) + (if b0020 then 0 else 34000) + (if b0021 then 0 else 34000) + (if b0022 then 0 else 34000) + (if b0023 then 0 else 34000) + (if b0028 then 0 else 34000) + (if b0029 then 0 else 34000) + (if b0061 then 0 else 34000) + (if b0062 then 0 else 34000) + (if b0063 then 0 else 34000) + (if b0064 then 0 else 34000) + (if b0065 then 0 else 34000) + (if b0067 then 0 else 34000) + (if b0068 then 0 else 34000) + (if b0069 then 0 else 34000) + (if b0074 then 0 else 34000) + (if b0075 then 0 else 34000) + (if b0076 then 0 else 34000) + (if b0080 then 0 else 34000) + (if b0081 then 0 else 34000) + (if b0082 then 0 else 34000) + (if b0083 then 0 else 34000) + (if b0084 then 0 else 34000) + (if b0085 then 0 else 34000) < 441
}
Prover Time taken = 1.698466
Prover time = 20.30
Number of prover queries = 16
Learner time = 1.80
Number of learner queries = 15
Total time: 22.43
Number of positive examples:5
Number of negative examples:0
Number of Horn clauses:10
verified

Boogie program verifier finished with 1 verified, 0 errors
2.09user 2.47system 0:23.87elapsed 19%CPU (0avgtext+0avgdata 65120maxresident)k
168inputs+616outputs (1major+53656minor)pagefaults 0swaps
FILE:shoc/scan/bottom_scan/kernel.bpl.ice2.bpl
